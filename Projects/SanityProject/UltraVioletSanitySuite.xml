<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Sanity_Testing" resourceRoot="" soapui-version="4.6.1" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" id="db517f4b-b689-42f9-b953-a182986fd8c7" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Dynamic LASP Test Cases"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="D:\StreamCreate - Dynamic LASP Test Cases"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Sanity_TestSuite"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="End_To_End"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\reports"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="E2E" type="rest" basePath="" definitionUrl="" id="a60a9e2e-e3ba-41b7-ac00-0880bb232d63" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" id="c5384778-fa15-492e-98d2-cd38b37bca87"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="4236cf89-badd-4da3-be41-212ecb32cd9f"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=ISO-8859-1</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>502</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="fbf0a345-7ac3-439c-a9eb-0973ad3dae25" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="a4cc87d9-ae80-4e46-a00f-712a23d6055a"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>NodeAccountId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>NodeUserId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>PolicyClass</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="PolicyCreateUser" method="POST" id="f0f2e4f0-1ce8-4cfb-afbb-ede68bf7f618"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="${#Project#Coordinator_schema}">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="${#Project#Coordinator_schema}">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="${#Project#Coordinator_schema}">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="cc17343d-c656-4b2b-8269-776e6ce4386d" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateAccount" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="46f65468-d068-470e-8552-c4ff2859c054"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="PolicyCreateAccount" method="POST" id="70eaefb7-c66a-4aa5-9b72-73c018dae09d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="${#Project#Coordinator_schema}">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="${#Project#Coordinator_schema}">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="a1e642f5-0ad4-4209-8c68-d797fc86575a" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Account" type="rest" basePath="" definitionUrl="" id="2b3704da-bbbb-4106-b88e-5756034fd704" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="AccountCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" id="7c15b9b1-5d7e-4f2a-8325-6e517c302aba"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="a076e7ed-3e15-4998-996d-25eadf6f6e2a"><con:settings/><con:parameters/><con:request name="Request 1" id="4116984e-845f-4cdc-b327-bf28be8e19eb" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="AccountUpdate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" id="dc22c6a4-a34f-4837-891b-f49d7ab127d3"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#Node_Account}</con:default></con:parameter></con:parameters><con:method name="AccountUpdate" method="PUT" id="a1265a96-58b0-47f6-af66-9c9b95ba6618"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_schema}">proj:Account</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:proj="${#Project#Coordinator_schema}">proj:Account</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="${#Project#Coordinator_schema}">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="758d0cd6-9d3d-42d8-a6b1-a3d503080e09" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="AccountGet" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" id="2a3710c4-68f5-44bf-bdf8-5e1aae0a0de6"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#Node_Account}</con:default></con:parameter></con:parameters><con:method name="AccountGet" method="GET" id="e0eb8689-ff9d-4c60-b0d5-91cd129613c3"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:Account</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="3767015c-0965-42b5-8558-47b953d33641"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="AccountDelete" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" id="a327844e-455e-4718-b50a-a2fd9da779a7"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#Node_Account}</con:default></con:parameter></con:parameters><con:method name="AccountDelete" method="DELETE" id="d7b218ba-01f0-47ba-9b2c-bb6ae96a700f"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="0fdb6c42-d0d5-4eec-aff1-840b09bc8b20"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="User" type="rest" basePath="" definitionUrl="" id="2e682464-d1f4-46fc-9da4-0ccccde46bad" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.rest.actions.service.Wadl2JavaAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Java Args" value=""/>
  <con:entry key="Output Directory" value=""/>
  <con:entry key="Package" value=""/>
  <con:entry key="JAXB Customization File(s)" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Automatic Package Names" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#HostName}</con:endpoint><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="User_API" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" id="0c8174b5-3220-4153-95b8-e0573d7c904c"><con:description/><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>QUERY</con:style></con:parameter></con:parameters><con:resource name="UserGet" path="{UserID}" id="bdef12d4-97ec-43aa-8944-3c88e649824c"><con:settings/><con:parameters><con:parameter required="true" disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter><con:parameter required="true" disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="UserGet" method="GET" id="fe6ed9dc-45bb-4044-98b5-da432363b947"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:User</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>304</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>502</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="999901_concat.pem" id="0d647a5c-fada-4b07-b0fd-ab836b95fb74"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:900105"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:101500"/>
</con:parameters></con:request><con:request name="UserGet_BasicAuth" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="999901.pem" id="4553a6ad-ed9c-479c-bdba-8c19d8a65aee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Device_HostName}</con:endpoint><con:request/><con:credentials><con:username>shikha_account_get_user1</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:AB1D1CBC814D4D11E0401F0A07997B60"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:AB1D1CBC81524D11E0401F0A07997B60"/>
</con:parameters></con:request></con:method><con:method name="UserGet_POST" method="POST" id="2a75f86c-9ff5-45ff-84b7-a90995a7d9dc"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="999901.pem" id="2763722f-c825-4357-bf2c-e51d24d0c702"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:900105"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:101500"/>
</con:parameters></con:request></con:method><con:method name="UserGet_OPT" method="OPTIONS" id="b4329d9b-1b13-45c7-ae21-f41e414a12c6"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="bd315131-0490-434b-a772-ffe73481d151"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:3823102"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:1005"/>
</con:parameters></con:request></con:method><con:method name="UserGet_HEAD" method="HEAD" id="c1897df5-c4db-4c07-b621-a15652594a4d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="cbc1da50-d46c-41ad-ae90-1e81d73552cf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="UserID" value="${#Project#Node_User}"/>
</con:parameters></con:request></con:method><con:method name="UserGet_DEL" method="DELETE" id="23016557-501a-48f8-b51e-7148ff32ac5d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="5dda1da8-abca-4de4-a94f-fca684152959"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="UserID" value="${#Project#Node_User}"/>
</con:parameters></con:request></con:method><con:method name="UserGet_PUT" method="PUT" id="f1acf72d-2bb6-4052-bed0-2526c15ee49b"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="14870ecb-83d2-4746-b865-b03922902454"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZd6rKEn73V7jYj1mGQYnDSjyrGUVFBQGHN4QWUAalQdBff1qNbpOdPd17H+5DVuyihq+qvu6ufv2njMLqAaYoSOI3gn6miCqMncQNYu+NMA2p1iL+6VZekR2FTAcgBNMMa1YV4Y1Yr1auy1BMzWk4dq0B2WZtVWfsWpOiaIomqgpCOVRilNlx9kYwWFijmjW6bdAvHabVoahnlmaXRNW6RWfO0TGeGHUu8d6IPI07iY0C1IntCKJO5nSmQB12sGbHvoEhuu/wLgFTsvvqos408GI7y1P47tBFb4SfZbsOSRZF8VzUn5PUIxmKokiqTWIdFwXeNwKn+m4MXSVeJ9c1b8dJHDh2GJzsc0QVZn7iVkHoJWmQ+dFPXNMkTZ1d12Dp1By6EX8jyO8BLuj+0NMHkCmya8i36ZszHa5hipsGq6auvBHfftOXq5GR2jFaJ2mEPq3/DguMDzBMdtCtoVtKN1h/7vGLOnVfodNRYifMUXCAo3Pzd7YDUXWSwnVQDgOEKeWi6qXx1RLdeAOdv+nFK/mIE8Mmv6iMEHgQZf9Jox6bdPVi2WEOu/2tldXJzQAV7GkszTc9xu+jSI57tPJ2gfCofAV17/H7+jND74R6N+IzercX3VNjqWlLk3Jh7NpHhxO3XCq6M7NhbXsN8QC8Ax/k4/leGDAnQI0Kd7Ln5h61d5psXzCbVHK08rASLdvrMd92mqhlhpbHs8yYPkrrZBcY/HhVvtQ1uGfqHmzv9lmasclh569tb8qyJRy8jObLCKQ9OhIZL6eTStgbyosna5oc6FgHHgOk1tv3nB5zOOc1gMdLkuffc5ZqC3Zm3xf8ef+v8b7MYFdVFCE/8Tw4Tj1QKBzw8N8GjDhvu/e3gdwuKA5omgQEngs34lAFWxnQpsj5Km9ZasmfQJ/zRhY2NCogXHKqLhZCsRAsTeuJhW+4snVcyWG+PIkjFaCLMe+roi5agm6IqgqSq6xUhZVcbtSpWijaQqhgB4JY7k6u3M6gXAYOo7DqlGUWUzZfzi0sl47DaHRYGWKo8qrMT/fyVFnVBU3sA30xcxgpx7anYbRLKguTezDq7+AGQKmgcExwUo1toRomMxJ0+yIzPspURe6rGip47ZKVXBGLvmWevteC51TejcRSNMDkWgvH4KURtZz3kT1jY1UHheBdjAdi4Y5vQFSNKir8tVZDsdBF3RxJqq4UIrjIBLEI0YoZ+SvZPzh1rewbYPPYGF4TZ1KMv8f6wTmy+4otS2AVWbRT130nYAN7nhTeslUI2qI/SJYKdjMCmshxGsCAKHBODdefA0POYse7oM0EcLiWkgj6aUWlk8H2cCqpVlAfe5PRjBXW2+ZEDiZ12/VJJXSYTX0LFAW6A9rXbFdfkLoQB6eX8cCcwyBdnLIRq9EvQYut6LPcnAtJ2HR784U5eCoXjmaMJ1NzNjmV5Wi/aZ3CrDfmeum0rwreeAThBDlPJGVLnNESWH7R22A+rXUKshXgqRwA8sbzxAATmOttriTs6aqIyQtUvpD5GS9PgSw/iQonaNpa8umJI1u5SY9URXRDXKbjYq6HlSXPCbhTlD1b7haMRC0N4F6caQ1R8jSTferP4VIbhYaVgWJnrWOapuSd1lurheeoZwa4SjHl8C7iKrkCTHu861PlwHqh6L3mhv1pG5j1cspsy7HvLY9bb7nFTVk8bJ2FAULLeOCYgik2q2iGqKugdd1vpaqYdT10onK3ipxSMHDPLsaJwYm6pFFmKQhgcJUhAzAlWpzEjcqLF/sKKFUb0+KwmvtoEY+CsSHmmLT5A102K4b6LcfOFKt85NieBxr4zDHxyjERrPdPSkugEfvC79Cs8DhZ3GtNa9hv7yhtPtxWuCeJ9LIgbIzjVmEMnmb0sWj6G202ayuCzz/F64VfX2UcZZ8cDfa3TTnQt0L80giP6lDVWDMgwyO1gfsCDSsjhY7FenaSyHaaP3HRMohOp3qDMaPJND8opj1A9NFf7WftYjPpvZBkKh/ZU3N50KR54iyu98jnQ/IuvB6j5OMB++EEvk1U03y1gU52W57vYUWoSvhytLOfT2f0M32RBG5tfVHt5DHaQQfDgC7RXafQTV7JR5ef4vFJvA7OhudR83rz/noWdKLOCtopTIlfeDonXVViHY8SSYygkbwRCJ8QeRzsc4zVxxcsUR0l2Tgep2CdwfQytNJfD606TmcXwPNk+zAIwNKOdiF8dpKItB0nyeMM4R/oMmv8FNjnb7ccsI4bnBXQGRYHcTHh50GapjvMDdMfYr+5B7kbnEcKXJAsDZwrko+fuu+5ocyFzt4+2Dv6+WA/xzDHU316SfOG/W7yWfDBPfk5s3tE9xA4d97dHxqKgCefLuB4Qbz7/fjtswWegc/iM3CEkWPc8I53FZzI+7MB/YMfMfbKceEPnt993OUfseWZH08zvJ8i3P7qZfn7V84Ha5x+BsvsKxkfYoDn4L98+jgd56yHxRP8r0hS93vVv/D11cePwns+d0wZbtoqz+DPv1TPe/eNeOd54BIXwe1weNgVj+UXRF4kwdVEEYgfnF5mv/dhvvzZm40m5+pw6vgwsom7bvB75Vpw6ZOD9znW72THHcZf4tcmDh57RJdm6g32XpcPkLo/iH+U/BdFTG/z/d+UURel/7sSAkngeFxHfFXVG/+TUn7enN1/AQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}:444</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" ?> 
<User UserID="urn:dece:userid:org:dece:76474" UserClass="urn:dece:role:user:class:full" 
    xmlns="http://www.decellc.org/schema/2010/10/dece"
    xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
    xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
    xmlns:md="http://www.movielabs.com/md"
    xmlns:dece="http://www.decellc.org/schema/2010/10/dece"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.decellc.org/schema dece.xsd">
   <Name>
      <GivenName>Jessica11</GivenName>
      <SurName>Harbor</SurName>
   </Name>
   <ContactInfo>
      <PrimaryEmail>
         <Value>jessieharbor@abc.com</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
      </PrimaryEmail>
      <AlternateEmail>
         <Value>jessie_harbor@yahoo.com</Value>
         <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
      </AlternateEmail>
   <Address>
	<PostalAddress>301 Copperfield St</PostalAddress>
      <PostalCode>08810</PostalCode>
      <Locality>Dayton</Locality>
      <StateOrProvince>CT</StateOrProvince>
	<Country>US</Country>		
  </Address>
   </ContactInfo>
   <Languages>
      <Language primary="false">de</Language>
  </Languages>
<Policies>
<!--Policy Status="urn:dece:type:status:active">
        <PolicyClass>urn:dece:policy:MinorUser</PolicyClass>
        <Resource>urn:dece:agreement:coppa:900</Resource>
       <RequestingEntity>urn:dece:userid:org:dece:76488</RequestingEntity> 
        <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
        <PolicyCreator>urn:dece:userid:org:dece:76488</PolicyCreator>
</Policy-->
<Policy Status="urn:dece:type:status:active">
        <PolicyClass>urn:dece:type:policy:EndUserLicenseAgreement</PolicyClass>
        <Resource>urn:dece:agreement:enduserlicenseagreement:84737262</Resource>
        <RequestingEntity>urn:dece:userid:org:dece:76488</RequestingEntity> 
        <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
        <PolicyCreator>urn:dece:userid:org:dece:76488</PolicyCreator>
    </Policy>
</Policies>
   <DateOfBirth>2010-07-01Z</DateOfBirth>
   <Credentials>
      <Username>jessi1002</Username>
   </Credentials>
   <UserRecoveryTokens>
      <RecoveryItem>
         <QuestionID>1200</QuestionID>
         <QuestionResponse>Turner</QuestionResponse>
      </RecoveryItem>
      <RecoveryItem>
         <QuestionID>1650</QuestionID>
         <QuestionResponse>Phoenix</QuestionResponse>
      </RecoveryItem>
   </UserRecoveryTokens>
   <UserStatus>
      <CurrentStatus>
         <Status>urn:dece:type:status:active</Status>
         <StatusDate>2010-08-04T00:00:00.000Z</StatusDate>
         <StatusModifiedBy>urn:dece:org:org:dece:10</StatusModifiedBy>
         <StatusDescription>User Updated</StatusDescription>
      </CurrentStatus>
    <StatusHistory/>
   </UserStatus>
</User>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:900101"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:76488"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="UserGet_List" path="List" id="28fb67ae-8817-48f6-9746-d830a4043891"><con:settings/><con:parameters><con:parameter required="true" disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="UserGet" method="GET" id="b272c040-3db5-4c30-8b5e-31f7d4b2505d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="2c6efed1-a2fd-4567-bc03-5922f8dd548b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="UserGet_Filters" method="GET" id="9edb7a4d-69a4-4336-b16e-9afcc853786e"><con:settings/><con:parameters><con:parameter><con:name>offset</con:name><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>class</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:option>urn:dece:type:viewfilter:displayname</con:option><con:option>urn:dece:type:viewfilter:surname</con:option><con:option/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>chunk</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="b57067a9-22e8-474b-9e82-7edd62c63c5f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:3823102"/>
  <con:entry key="class" value="urn:dece:type:viewfilter:displayname"/>
</con:parameters></con:request></con:method><con:method name="UserGet_POST" method="POST" id="0c9d65be-36b5-4127-85b4-5fe08d2bb8fc"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="30324bb9-0e99-48cb-a816-97e93b74a610"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:3823102" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="UserGet_OPT" method="OPTIONS" id="57430238-553a-4edd-87a2-8dc2395ece1d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="ad3ad536-a1ed-4e18-841d-a602f0334a31"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:3823102" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="UserGet_HEAD" method="HEAD" id="c2dce4ce-3228-4b71-b8ed-65b1bfc671ea"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="825e86c3-a6cb-479f-bdef-9ba37e535249"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:3823102" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="UserGet_DEL" method="DELETE" id="625ec8f8-4bdb-4e05-9b60-aa4831181acb"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="49b49428-b176-4437-9a8b-01cacba6310b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:3823102" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method><con:method name="UserGet_PUT" method="PUT" id="0df5d29d-eab1-4935-a695-21a618dabfa6"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="8cbc0252-d808-4f30-80f1-cb2392dea466"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:3823102" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="UserUpdate" path="{UserID}" id="d09813ab-8c3f-484f-824e-eb60098a0f8c"><con:settings/><con:parameters><con:parameter required="true" disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter><con:parameter required="true" disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="UserUpdate_PUT" method="PUT" id="bb1b7125-520e-424b-921e-72a6781d8c6f"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="UserUpdate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="999901.pem" id="7911d39c-d7fa-4537-abd8-4fa853f207cb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=nVdpc6pME/3ur7C8Hy3DorhVkqphkaCigrh+YxkWRVAGBPn174DRmNzk3vu8qUol03T3nO4+DGeekX7w6T5ACEaxFwZViX+pmRTTsckm2dCtDtlotaluo8eQrUanTRqM2TIhNJhaVUIogVKAYj2IX2o0SVENim5QbY3q9FvNPtV6Inutba26hBHCmbHLE1mrZgc/QP1y15daEgX9UEce6gf6AaJ+bPbnQB73sWdfv0GqvT5fQZYbRq9uHB/7BGE+WdCEvm8+meGBeCY++TxbqD/3nECPkwi+72mhl9p7bJqmT2nzKYwcgiZJkiB7BPaxkOf8qr1WbsHQkgI7vK45PQgDz9R9L9cLUDKM3dCqAt8JIy92Dz+kpgiKLFI3YGY2TKoV/KoRHxuU6P4x0yeQEdIbyNWpWzIV2jCCgQmrC1V6qf36pwFeQ7VID5AdRgf0Zf3fEMHgDP3wCK0GuhV2A/fvGb/p1uszNPtSYPoJ8s5wUrDkqJsQVWcRtL1s7CHMPQtVy+lXM3QjGDT/y0SeiUecGDbxTWd4z4Eo/n/G9Tiqa5al7ifwNRed0ylRsjab9FYLKj0rCnfxxJXQa72UEB6dr6Duk35ff+XpnVbvQXxreBAM2KG3u9yO6+vDzoWCltN1vW5Y/sQdDw35ZGcRJHjaYtY9bRC5USLL6oritBZvp0b61vVs0t1TrYq3HvfUybarjZJ8fTESK3e3rbO5tptDop5SBttSszAZM8Ndk1opGz+36YnEs7MxoRldqR4aekSc9xeyO5LaFTRbnLe7kZK741QfN9mOs3n5qOmxhqKuEbyURRb/rxmyx+uxfl9wxUFh47czhq+yJPFJznHgMndAKrHAwb87MGGd/cnde2IvJVmgKAPAc6y/E8Yy2IuAWgisK3PLpZxxORiyzmSJA7UK8LesrAopn274paK8CamrWeLyYoh+ss2FiQxQGcy5sqAKS17VBFkG4dWWybwhZjt5LqeSsuErOAEvZMfcEnsxFDPPpCVGnjP0Zs4k2/US2weX8WFyNjTBlzlZ5OYncS4ZTV4RhkDdrEx6kODYfHw4hpXNgn0IGh7hDsBBSuI9QS5r+1TWFvSEV/XSpn22yZI4lBWUckpZlVgR0uFykX/0gmNlzjoImaCB2bUXpsYNJuR2PUT6iglkFaS8UwaPhNSa3oDICplWuGuvxkKqCupiMpBVKRVAaeOF1EcGPXEN0T2bTSUbamD3OBhOEVaDAD8P1LN5YU4VXRwA47CkzKbqmh7j6eswdbbdlFc2w1G4lXCaCVAEllUABkSCojTcfxaM2SUzPXo92oNjexAeoBtVZCoc7c95Rna95tSZTVYMb+87M9GbNXXLJSTfpHfNPZAkaI0oV9EtdUOofODl7elosYZetMnjCaNQba/LVNRVsljzod+x3tabxaiebUxFm87mi9Usz7LJadfN/fhtyr5F86HMO9MJhDNk1glSH7Bal2e4zdsO88lWSchUgCOzAIg7xxE8TGD2bXcl4ZsqC5i8QOZSkVtx4hyIYl2QWF5R7IFLzUxxmSyoiSwJlo/bdNmsVb+y5VgeT4rUV9vjhh6QWw1YZTKlJQwcZcHUh2u4VSa+toxBelzaAUWR4lF5s+XUMeWCAZaUzln8FrGVRAILfXocktlo2Sapk2L5w3kPLJrZnN5nU9fZXvbOdo+Hsnl4dTYa8JfaA8ckTLFVRdEEVQbd6/uWydKiqfrmITsaBzPjNTyzMjjUWEEdKOQi43kwutqQBugMbXJhJ3NCGV8BmaxjWpyNtYs2wcSbakKCSZs80GVn0ORfOVZQrPKZYycOKOArx4QrxwRgn+pSl6cQ0+aOaJU6rCiclM5yPOwdSWU93lfY+oBwYs9vTYNuqo3qK+qSdtydslr1JN7l6oG9cZtGzJJ6bipwuO+Inrrng3bLv8hjWWEWHuFfyB08pWhcmUhUIDTjfED0oqTOHrbeIc+bLXpxmM2Ts7TQR4i6uMZp1Ut3s7c2QUTihck727MyWIfm5vod+XpI3o3XY5R4PGA/ncA36TVPjB0049uy+A5LfHWAP456/GcZV1g8q2GXrv1joQVRDIO49lpEFRKun2Ch51l9/OW8rimSYkjypuiue30BwoWB7RUZC8l6/ST/GYZ56BtQj2BU+0OmohtVKVCxxggDBLXwpdYkWYGnB226CWj8XgmdFjvgBy2u3RZaPbrXqlUnYTwNphGwYxg9yODOVxmsQtM7erDQyu+KAcW43JN+TmKfejrrTwFMsJiOCj3bp1tdhkDe4ejDAi5xCK3Eh09H91i2hUDXv3RDN1Fp7eEfkiq1zI/1fX12awX2sbzCARXVsBAPC36j6MlbKb+VTH+r/G/pQWJ5hWTBfY0jz7wi+fzogwwFC+5MuBZ1Q313/mr4lJj4WtN9L+vsmXdG3288WDFjUVXeKhAeykl/Oj0l53NSjqFTCMYIpycogqSJOTQTrPouWriHAXFPQfyL3r6D/rLx3f4ZXhK7wTzGL+sBU6ZaLv9+1/oUjTsQwyz+zsb5+HZVbP7HC5jZNws/bJ7hP2kYWR+N/ybXwz4YcnHQeIFTrAqhfPlhwmaI03r4sAmjx+TfJfhu88/Ge7/uWGLMCyOJ4c9PqsX58lLTTTNMgljia6Xh8WQrccaXI+x/OP2WppSq73ePDP1491jL47npwoNeu/t6f3dueOXkTYijkFdieall+BaNNw+ch5P0HeDjYdrDmcgP8n3C+/qb+XfLQ+e+Evj1fw=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" UserID="urn:dece:userid:org:dece:101500" xmlns="http://www.decellc.org/schema/2011/08/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Name>
      <GivenName>Shikha_get_user</GivenName>
      <SurName>Gupta</SurName>
   </Name>
   <ContactInfo>
      <PrimaryEmail verificationEntity="urn:dece:org:org:dece:10" verificationDateTime="2012-09-28T20:26:07.440Z" VerificationStatus="urn:dece:type:status:success" verified="true" ID="Coordinator-Confirmed">
         <Value>update@vijay.com</Value>
         <ConfirmationEndpoint>Coordinator-Confirmed</ConfirmationEndpoint>
      </PrimaryEmail>
      <AlternateEmail>
         <Value>shikha82@gmail.com</Value>
      </AlternateEmail>
      <TelephoneNumber>
         <Value>+1.7033453434</Value>
      </TelephoneNumber>
      <MobileTelephoneNumber>
         <Value>+1.7033453434</Value>
      </MobileTelephoneNumber>      
   </ContactInfo>
   <Languages>
      <Language primary="true">en-gb</Language>
   </Languages>
   <DateOfBirth MeetsAgeOfMajority="true">1993-09-28</DateOfBirth>
   <Credentials>
      <Username>Fshikha_user_get_user</Username>
   </Credentials>
   <UserRecoveryTokens>
      <RecoveryItem>
         <QuestionID>1200</QuestionID>
         <Question>What is the name of your favorite movie?</Question>
         <QuestionResponse>Turner</QuestionResponse>
      </RecoveryItem>
      <RecoveryItem>
         <QuestionID>1650</QuestionID>
         <Question>What is the name of your favorite song?</Question>
         <QuestionResponse>Phoenix</QuestionResponse>
      </RecoveryItem>
   </UserRecoveryTokens>
</User>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:900105"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:101500"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="UserGet_List_Response" path="List" id="e59b674e-8b21-46ec-9559-e9c1ebc6e569"><con:settings/><con:parameters><con:parameter required="true" disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter><con:parameter required="true" disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="UserGet" method="GET" id="f0984126-a94d-4ccd-adaa-6a806cce3583"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="de229466-db62-466d-b04e-85282fe63675"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:1005"/>
</con:parameters></con:request></con:method><con:method name="UserGet_Filters" method="GET" id="4dc0c6e3-63ad-4d52-b0d8-1e72acad3d5c"><con:settings/><con:parameters><con:parameter><con:name>offset</con:name><con:style>QUERY</con:style></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>class</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:option>urn:dece:type:viewfilter:displayname</con:option><con:option>urn:dece:type:viewfilter:surname</con:option><con:option/><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>chunk</con:name><con:value/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="2a4c221d-2446-4ab6-977d-09aa63bd43a4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:3823102"/>
  <con:entry key="class" value="urn:dece:type:viewfilter:displayname"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:1005"/>
</con:parameters></con:request></con:method><con:method name="UserGet_POST" method="POST" id="d3996373-48ae-4a67-86c5-a8e04b6fd163"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="bbc1b4c8-f974-48f6-bd0c-276d48e53a48"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:3823102"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:1005"/>
</con:parameters></con:request></con:method><con:method name="UserGet_OPT" method="OPTIONS" id="927ad179-fd51-410c-af6b-33bab9bf1fc3"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="0938e6f2-c97b-4b85-807e-1d98c099a472"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:3823102"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:1005"/>
</con:parameters></con:request></con:method><con:method name="UserGet_HEAD" method="HEAD" id="460ac525-0bce-410b-9b15-e39ec0984b42"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="7c7b2faf-5501-404c-a662-e6803723ca3f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:3823102"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:1005"/>
</con:parameters></con:request></con:method><con:method name="UserGet_DEL" method="DELETE" id="90461862-9ba4-489a-a9c7-2aa6bf16f4f3"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="86eed746-71a2-41fa-a4ef-c2a7af1e13ff"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:3823102"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:1005"/>
</con:parameters></con:request></con:method><con:method name="UserGet_PUT" method="PUT" id="c97c5da9-6530-4b10-bcbb-72b3d7d8f077"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" accept="" id="1de69198-58cf-48dc-8d9c-83605190515a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=zVdZl6q6En73V7jcj71sBsVWV7dnhbFRUUEc3xjCoAhKQNBffwK2bu3de7r3PtwHl6RSVfmq6ktSef0n3wXVI4yRH4VvNeqZrFVhaEW2H7pvtZku1tu1f3qVV2TsAroLEIJxgjWrMv9Wc0zTtmmSrltNy6g3IfNSNxu0UW+0zBZlNJxmo9GpVWWEUiiHKDHC5K1GkxRZJ1t1itRpskuSXYZ8Jjutda06v2KgCwwYVYi65apvtTQOu5GBfNQNjR1E3cTqToEy7GLNrnGFVOt9gCwXjIneq426U98NjSSN4YdDG73VvCTZdwkiy7LnrPEcxS5BkyRJkB0C69jId7/VcMAfxtCWQye6jDkjjELfMgL/bBQrKjDxIrsKAjeK/cTb/cQ1RVBk4boOc6tuUc3wW434vkCJ7g89PYCMkVFHnkFdnWnQgTEuHazONPmt9u2PqnMx1WMjRE4U79Cn8d8hguERBtEe2nV0DewK7s89fpGt3iu0unJoBSnyj3BUUGBvWBBVJzF0/HzoI0wsG1XL8ldzdGUPtP6mIq/EPU4Mm/giM7zvQpT8J+W6L9XFy9wIUtjLdkAzpba4eJnJyVKe5v2X5fjADo6p+1ZCuFe+gLpV+mP8mac3Wn0YCZMD3Va209Nq781Fx1rAZDhvqJTeNhbIGVpzo69HQ26oODxgB6PxPDOyPKUWo/14K62azK49YoOBl/dFd1VRjEQCQUwvstNAWB7sGIGnd3LCTc+LhrZuCVuw5fud0JSYDe2zLzM9Pa5J1RLDc8w3E0ZvefLekejtbgDtSpQ2Dfu04QIXNsXBU+765Nv3mO5jKOIawFMZZPG9ZMgObyTGbcAVp4CDd2cCe4os8+mZ48Bp6oJMZoGLfxswYt3twdv6UicjWaCqIuA5NtgIQwVsJUDNBNZTuPlcybkz6LPuaI4N9QoI1qyiCRmfrfi5qr4Lmafb0vxkSkG6PgsjBaDSmPMUQRPmvKYLigKiiyxXeFPKN8pUyWR1xVewA17I92db6iRQyn2LlhllytCrKZOul3MsF0/D3eho6kKgcIrETQ/SVDYbvCr0gbZaWLSYYtvzcLePKqsZe2fU38MNgGJG4jXBWdG3maLP6BGvGaVMf5QpstRXVJRxahmVVBGy/nx2/p4LjlU4eyfkgg4ml1xYOieOyPWyj4wFEyoayHi3NB4ImT2+AlFUMqtwl1wNhUwTtNlIVDQ5E0Ap44UsQCY98kzJO1oNNe/rYHNfGE4VFmKI50PtaJ2YQ8WQRGDu5pTV0DzLZ3xjGWXuup3x6qo/iNYydjMCqsCyKsCASFCEhvPPgiE7Z8Z7v0P7cOiI0Q56cUWhosH2eM7Jtt8Yu5PRguGd7ctE8icNw/YIObDoTWMLZBnaA8pTDVtbERof+ufWeDBbQj9enZMRo1Itv81UtEU6W/JR8GK/L1czzN+VperjyXS2mJzzfHTYtM9B8j5m3+NpX+Hd8QjCCbKeCNIQWb3NM9zqfYP55GgkZCrAVVgApI3rCj4mMPu+uZDwXVMETF6gcJnELThpCiTpSZBZXlUd0aMmljRPZ9RIkQU7wGk6rZZaUFlzLI8rRRqL9X5Fi+RaB3bpTG0KoqvOmKf+Eq7VUaDPE5Dt505IUaS0V98dJXMtpWCALWdTFu8itpLKYGaM930yH8xbJHVQ7aA/7YBZI5/S23zsuevT1l1vcVFWd1tnpYNgrt9xTMYUW1RUXdAU0L7st1yRZw0tsHb53txZOa/jmpXGkc4KmqiSs5znweAiQzqgc7Q6CxuFE0r7CsgVA9PiaC49tApH/lgXUkza9I4uG5Mmf8uxgmKVR44dOKCCzxwTLhwTgHN4kts8hZgWt0eLzGUl4aC+zIf9zp5Ul8NthX0SCTfxg+Y4bGf64GlBnbIXb6MuFh2Z97in0Fl5DTNhSeNsqbC/fZF8bcuHrWZwUoaKysx8IjiRG3jI0LAykqlQaCRnkejE6RO7W/u787nRpGe7yTQ9yjNjgKiTZx4WnWwzeW8RRCydmPPL+qiKy8haXe6Rz4fkTXg5Ron7A/bhBL72VdPU3EAruQ6Le1jmqyK+HI3k5z0a9UyVEt+uO6VqNw3RHloYBrRrPSeGdvRK3Lv8tB4XhY5fGBZt5+Xm/XVHaO26JjRiGNd+4akIuiqHGm4lohBBPXqrIXxCpKF/SDFWD1+wteooSsbhOAZOAuOydaW+bl01HM7eh0V/e9cIwNzY7QP4bEU7wrCsKA0ThD9Q2Wv8FNjnuWsMWMf2CwVUwGIhTiZ8aKepTrfZ7FJXTH+I/eoepLZftBQ4IUnsWxckj1O9j9hQYkPrYByNPfV8NJ5DmOLePi7DvGK/mXwWPLgnPkd2W9E++taNd7dHh8zjzqcHWI4Xbn4f5z5b4E64EBfAEUaOccMbXtM/E7fHA/oHP2gM07LhD54/fNzkj9jSxAunCd5PO1z+ajn8/VvnwRqHn8A8+UrGBRhgsfgvH0BW1yr0sHiC/7Iotr9n/QtfX00+Cm/x3DAluGhmmsCfz1SLvftW++C5b9dKwfVwuNsV9+nnBU4gwMVE5ms/OC17v49mPv/Zy40ilspwanlwZ9Ruuv7vlet+WScL73Os301Oe4w/x29OvHjo1noU3Wgyt7w8QOr9IP5R8l8kMb7293+TRk0Q/+9SCESe5XAe8VXVaP5PUvl5c/b+BQ=="/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="urn:dece:accountid:org:dece:3823102"/>
  <con:entry key="UserID" value="urn:dece:userid:org:dece:1005"/>
</con:parameters></con:request></con:method></con:resource><con:resource name="User_Create" path="" id="63f9d907-13af-4cba-8258-58e315b3b39d"><con:settings/><con:parameters><con:parameter required="true" disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="User_Create" method="POST" id="a417ebbe-60ce-4371-8838-710b567555cc"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema/2010/10/dece">sch:UserCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="UserCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_CS_1_concat.pem" id="e0b80965-5d28-444f-bd86-fb60556b82b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="urn:dece:accountid:org:dece:900105" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource><con:resource name="User_Delete" path="{UserID}" id="486c92d7-a98e-444e-8e82-c6ecc3ad417e"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="User_Delete" method="DELETE" id="870564ec-f7fa-4fcc-8e13-5ee7c1163c6c"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="02c312e5-b2c3-4b3e-9dfb-e112b93e81cb"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserValidationTokenCreate" path="{UserID}/VerificationToken/{TokenType}" id="396646fc-d131-4fd4-812b-5b3884a88678"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>UserID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>TokenType</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserValidationTokenCreate" method="POST" id="92775302-608e-407b-b87a-fca981758aab"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="df8bf6f7-ae8b-492e-8caf-0e350e539908"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="UserValidationTokenCreate_PrimaryEmail" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/VerificationToken/{TokenType}?subject={UserIdentifier}" id="0be8f475-6599-4d70-acb2-c75900e7818e"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>UserIdentifier</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>TokenType</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserValidationTokenCreate_POST" method="POST" id="33315a9b-9d83-4176-b745-9f7833055fb4"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="8cfc76a7-43fc-48d2-9c30-5240de986a7d"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="RPQ" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Info" id="0028f031-7f76-44e4-905a-77c7a7c751e9"><con:settings/><con:parameters><con:parameter><con:name>Major</con:name><con:value>Major</con:value><con:style>TEMPLATE</con:style><con:default>Major</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>Minor</con:name><con:value>Minor</con:value><con:style>TEMPLATE</con:style><con:default>Minor</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Post - RPQ" method="POST" id="bbda9790-5fed-4e41-9165-d77058c12a98"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>302 300</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="50895913-262f-4336-a1ea-21b8010540e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Major" value="${#Project#versionMajor}"/>
  <con:entry key="Minor" value="${#Project#versionMinor}"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="UserValidationTokenCreate" type="rest" id="db11767a-1de5-4d95-b111-3d217afcc944" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#HostName}</con:endpoint></con:endpoints><con:resource name="UserValidationTokenCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" id="c8cce4c5-03f9-47fd-bea3-892c6112e920"><con:settings/><con:parameters><con:parameter required="true" disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter required="true" disableUrlEncoding="true"><con:name>UserID</con:name><con:value>UserID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>UserID</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>TokenType</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="UserValidationTokenCreate" method="POST" id="d86e6aae-9a31-47b9-8e81-8de93ff54434"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 400 401</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="a671b1af-26b7-4002-8fba-1b58561225a2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_AccountID}"/>
  <con:entry key="UserID" value="${#Project#NodeUserID_BAU}"/>
  <con:entry key="TokenType" value="${#Project#TokenType2}"/>
</con:parameters></con:request></con:method><con:method name="HEAD" method="HEAD" id="4a5e1f58-0b91-4237-ba00-b5d89bb3b2ff"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="HEAD_UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="d2c3ca55-6a7e-4e1c-a4f0-c36e12f53e76"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_AccountID}"/>
  <con:entry key="UserID" value="${#Project#Node_UserID}"/>
  <con:entry key="TokenType" value="${#Project#TokenType3}"/>
</con:parameters></con:request></con:method><con:method name="PUT" method="PUT" id="ccd3781a-0b9e-4416-812d-6acffe914724"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="PUT_UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="513b1446-5d72-452e-bb97-167718b017cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_AccountID}"/>
  <con:entry key="TokenType" value="${#Project#TokenType3}"/>
  <con:entry key="UserID" value="${#Project#Node_UserID}"/>
</con:parameters></con:request></con:method><con:method name="GET" method="GET" id="31dff3ef-ab6c-4f84-a548-c8dfa3b6e9c9"><con:settings/><con:parameters/><con:request name="GET_UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="6c665086-f840-48ee-9fa6-94a5d30092b3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_AccountID}"/>
  <con:entry key="UserID" value="${#Project#Node_UserID}"/>
  <con:entry key="TokenType" value="${#Project#TokenType1}"/>
</con:parameters></con:request></con:method><con:method name="DELETE" method="DELETE" id="e72ae186-bd57-4d53-91ad-30d58662f50a"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="DELETE_UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="af0f828b-27eb-4fd3-a7b4-ab69bc038f3c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_AccountID}"/>
  <con:entry key="UserID" value="${#Project#Node_UserID}"/>
  <con:entry key="TokenType" value="${#Project#TokenType2}"/>
</con:parameters></con:request></con:method><con:method name="OPTIONS" method="OPTIONS" id="7ca05bbe-94c6-4b68-8592-736ecd20f718"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:request name="OPTIONS_UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="999901.pem" id="2c171642-5b04-4402-a210-e8c39fdcad85"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding/><con:endpoint>${#Project#HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_AccountID}"/>
  <con:entry key="TokenType" value="${#Project#TokenType1}"/>
  <con:entry key="UserID" value="${#Project#Node_UserID}"/>
</con:parameters></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenCreate" type="rest" id="ecf0ed80-9de3-4326-87c5-30f5c1e7c042" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken" id="bb6d6c41-78e6-44de-bc24-bd342c63266a"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="RightsTokenCreate" method="POST" id="6b7b5a11-4056-4fad-a6eb-4e01db7c2654"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:RightsTokenData</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="67be72ff-4d9c-4fa1-9e7b-54286c21bf9e"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsLockerDataGet_DownLoad_Query" type="rest" id="31893b61-5384-4f43-8590-922e290806ad" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>https://qa.d.uvvu.com:7001</con:endpoint></con:endpoints><con:resource name="RightsLockerDataGet_byDWQ" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=download" id="660d1281-7ffd-41a3-8736-83f170b5d99f"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="cab52527-c430-4dd7-9be3-0513986692f2"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:RightsTokenList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="f4b7b858-e88c-4a9c-834a-011c7733ebb5"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsLockerDataGet_Metadata_Query" type="rest" id="b1d69d38-5d10-4e10-bec4-ebb6db3626ff" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsLockerDataGet_byMD" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=metadata" id="c272f2f3-fd23-4212-b334-9cf2123cb505"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="RightsLockerDataGet_MD" method="GET" id="5d1def24-9705-4d8c-bf0f-3186e6dc19a5"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:RightsTokenList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="01de8162-b598-494e-97f1-7135c52333bb"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsLockerDataGet_Reference_Query" type="rest" id="eb2ae163-8591-4e29-8b91-1d359b2716a4" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsLockerDataGet_byRF" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=reference" id="84544deb-9985-4b63-812e-367e960f95af"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="a64b220c-5f59-4534-b4bf-80fea1e33d45"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:RightsTokenList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="6e867d1d-b0ad-4633-ad82-a15cf937f563"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsLockerDataGet_byRightsToken" type="rest" id="ffd8a46b-c226-4822-a9da-a334ed280641" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsLockerDataGet_byRightTokenID" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List" id="b1d00c3a-6f36-4b19-902a-1af163ba0f7b"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="ed3604cc-e6fc-4eb8-ae30-aaf42bee17e4"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:RightsTokenList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="9506bf73-6f1c-4f80-ad5b-7a38e72b1f89"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="RightsLockerDataGet_byRightTokenID1" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List" id="087da085-25c5-4724-8de5-039342a3d456"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="RightsLockerDataGet_byRightTokenID" method="GET" id="ed1a8a42-3859-4382-9318-56d739c3dbe2"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:RightsTokenList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="0f894601-5b08-4c5e-a189-be01ce4f7700"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenDataGet_ByALID" type="rest" id="5d92e815-47ad-4187-a453-11631cb61b7b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenDataGet_ByALID" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/ByMedia/{ALID}" id="641dbd11-0403-43ce-8bb2-59af56e650c5"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ALID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="d496c5fc-e0e9-4b8d-be41-113e04763114"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:RightsTokenList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="e4a42fc6-c52a-4a25-b192-bd782b44743e"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenDataGet_byAPID" type="rest" id="ecccda4e-9742-4b4d-b8d6-c6b69371e220" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenDataGet_byAPID" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/ByMedia/{APID}" id="7962a226-1a2a-4142-bf40-956d2521a912"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>APID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="2dac5836-b3f9-4979-9606-5be4d0eeef5d"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:RightsTokenList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="e3b3c346-d855-4f42-b6f4-f97050abefde"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenDataGet_byAPID_DRM" type="rest" id="76d7ad15-d6f0-4c02-bc35-920f61150aad" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenDataGet_byAPID_DRM" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/DRM/{NativeDRMID}/RightsToken/{APID}" id="c4732147-1f43-4796-a17f-30ae61ced8a2"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>APID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>NativeDRMID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="54423873-16af-4837-aa05-d15357f82072"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="b2d9bacc-b2b5-4f0a-83a4-b1493b93ef23"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenGet" type="rest" id="252a198d-dc7d-498c-9e37-53d4bcc9fcd8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenGet[ByTokenId]" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" id="fe98a820-7ea2-4730-954e-db187152790e"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="d489f8ab-ca8b-4b98-bc0e-0ad61d1734c0"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:RightsToken</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="d51a71c0-a6da-438a-8c31-faf305926023"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="RightsTokenGet_without_DST" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" id="43fc2b81-0528-47f0-8311-46f1a88c8ffa"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="dc56e2be-12c5-4b6c-b109-65e9b1c51fa3"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="3cadc2ae-b94a-43fe-b391-522f29e41b48"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenUpdate" type="rest" id="fa958b0f-ef5e-4043-bd7b-975b847d19ab" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenUpdate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" id="8f193ae9-6450-4d00-906b-de52b13f0c4d"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="RightsTokenUpdate" method="PUT" id="5164dbf9-cbbf-427e-8a3b-cea144fc6ffa"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="063f0b83-8ad1-4dbe-9112-5728a783eba0"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenDelete" type="rest" id="f2299b97-46cc-4c28-8ed9-3b84f1330fbd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenDelete" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" id="f36ffb28-98f2-4381-9b19-d4ea48d8d5e2"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="RightsTokenDelete" method="DELETE" id="7ded602f-3d0a-4208-bde4-3c8abbd21d8f"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="56a8fc1d-310a-4706-a9bf-a002acad6349"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Streams" type="rest" basePath="" definitionUrl="" id="f2f823f6-04a0-4fa9-a023-4442551c14e6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="StreamCreate" path="rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream" id="c536fe1a-4ba1-4604-871b-ff5da2bcdfe5"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#versionMajor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#versionMinor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMinor}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="b1ddb01e-d631-4268-8bd4-dee1d6937942"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404 409 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>0 200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>0 201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:StreamCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html</con:mediaType><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="c6bed5e0-5738-425c-85dc-fa3acf21af41"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="POST-1" method="POST" id="65e41198-a2df-4e0e-af86-03b15017a25c"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404 409 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>0 200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>0 201</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:StreamCreate-resp</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html</con:mediaType><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="7d02aa96-f671-468f-88b8-81d570c9e5f0" mediaType="application/xml"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="RightsTokenCreate" path="rest/{MAJOR}/{MINOR}/Account/{ACCT}/RightsToken" id="f5d92bbf-f2b1-4372-b3be-166bfebe4c59"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#versionMajor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#versionMinor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMinor}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ACCT</con:name><con:value>${#testCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#testCase#assertionAccountIdFULL}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="604ccc65-7a08-4eec-a17c-4cdfcdf8bdb2"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>0 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="8c395011-f318-41e2-941a-9392672e391a"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamView" path="rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" id="e46fc8a3-9e1e-430e-940c-6c5cb5498ed2"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#versionMajor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#versionMinor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMinor}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>STREAM</con:name><con:value>${#TestCase#streamhandleFULL}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="029ad557-22a4-4d97-852b-34a148dad305"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>0 200</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Stream</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="bedb4965-2eee-42a7-8409-37ed0984e920" mediaType="application/json"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamListView" path="rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" id="cf0ada0a-70b4-4028-b448-b00cfa299472"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#versionMajor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#versionMinor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMinor}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="9f884079-443c-4f02-8b1d-fd5120e0f372"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 413 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:html</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 500</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>0 200</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Account</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="8fba20b8-88ae-40af-aa13-8ecb02761e91" mediaType="application/json"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="RightsToken Delete" path="rest/{MAJOR}/{MINOR}/Account/{ACCT}/RightsToken/{RT}" id="df5ab061-8d2b-44ba-a9ca-96070cd80630"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>ACCT</con:name><con:value>${#Project#urnacct}${#TestCase#rtrnodeaccountid}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#urnacct}${#TestCase#rtrnodeaccountid}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RT</con:name><con:value>${#Project#urnrightstoken}${#TestCase#rightstokenid}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#urnrightstoken}${#TestCase#rightstokenid}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#versionMajor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#versionMinor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMinor}</con:default></con:parameter></con:parameters><con:method name="DELETE" method="DELETE" id="6ad17e4e-5c63-43ba-95d1-2ec206734a50"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="e39f84b3-6aa6-49ff-862f-a697fe618a51" mediaType="application/json"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamDelete" path="rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAMHANDLE}" id="b52c0f88-8b3a-4fdf-9f6f-7b923ca6959e"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>STREAMHANDLE</con:name><con:value>${#TestCase#streamhandleFULL}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#versionMajor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#versionMinor}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#versionMinor}</con:default></con:parameter></con:parameters><con:method name="Delete" method="DELETE" id="280096de-8c4d-4070-82aa-a12e0af8a1de"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>0 200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" id="4c44e8eb-ec74-4743-a725-58cfab41f542" mediaType="application/json"><con:settings/><con:endpoint>https://${</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamRenew" path="rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" id="5698b9e6-ae6a-4e19-8769-08ee5388131a"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>MINOR</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ACCT</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>STREAM</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="StreamRenew" method="PUT" id="17ca17c4-17d2-4e76-a013-3ecef0460ddd"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:Stream</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="5062a81c-c63b-4263-9ffc-ec0b029c4ae0"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamRenew_06" path="rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}/Renew" id="5698b9e6-ae6a-4e19-8769-08ee5388131a"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>MINOR</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ACCT</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>STREAM</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="StreamRenew" method="GET" id="17ca17c4-17d2-4e76-a013-3ecef0460ddd"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="5062a81c-c63b-4263-9ffc-ec0b029c4ae0"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="DMR" type="rest" basePath="" definitionUrl="" id="034f1d03-6a29-4ae9-af89-f6bb906498bd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="DMRCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/DiscreteMediaRight" id="7fd5db1b-cc01-4820-a0d4-f2735db5445c"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>NodeAccountId</con:name><con:value>${#TestCase#NodeAccountID}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#NodeAccountID}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenId</con:name><con:value>RightsTokenId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RightsTokenId</con:default></con:parameter><con:parameter><con:name>SchemaVersion</con:name><con:value>${#Project#SchemaVersion}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#SchemaVersion}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>${#Project#SchemaVersion}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#SchemaVersion}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="d883bed1-8511-4b1c-907f-79f756b29de9"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#SchemaNameSpace}">proj:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:proj="${#Project#SchemaNameSpace}">proj:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="83906d79-e822-42e1-92bd-19de1a01c71f" mediaType="application/xml"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="DMRLeaseCreate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/{ContentProfile}/DiscreteMediaRight/{DiscreteMediaTokenID}/{DiscreteMediaFulfillmentMethod}/Lease" id="2aa2d6c0-6e8d-4e2a-b165-00849962eb3e"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenId</con:name><con:value>RightsTokenId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RightsTokenId</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ContentProfile</con:name><con:value>ContentProfile</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>ContentProfile</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>DiscreteMediaTokenID</con:name><con:value>DiscreteMediaTokenID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>DiscreteMediaTokenID</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>DiscreteMediaFulfillmentMethod</con:name><con:value>DiscreteMediaFulfillmentMethod</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>DiscreteMediaFulfillmentMethod</con:default></con:parameter><con:parameter><con:name>SchemaVersion</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="POST" method="POST" id="2650dcd4-05a8-4896-8f21-72c84fcaa104"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="bb7d7492-2af2-427e-8925-32ad81b07fe4" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="DMRGET_Update_Delete_107" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/DiscreteMediaRight/{DiscreteMediaTokenId}" id="d4a58c0f-0cc1-45e9-be0d-cc41d8b0b807"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenId</con:name><con:value>RightsTokenId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RightsTokenId</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>DiscreteMediaTokenId</con:name><con:value>DiscreteMediaTokenId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>DiscreteMediaTokenId</con:default></con:parameter><con:parameter><con:name>SchemaVersion</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="GET" method="GET" id="4be3c910-3abf-4478-9545-6c59f63c9195"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="7207ed6c-7627-4ae6-a9be-c9327c79eb53" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD" method="HEAD" id="440f98cd-5a59-4de1-8a75-99dafa01a59b"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="1d9490f3-038d-45f7-a8d4-fa699393f59a" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DMRDelete_107" method="DELETE" id="594f1de8-6742-436a-a594-28a2dc478222"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="39a3e237-5b1c-4ded-bb65-39772ad9b9ab" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DMRUpdate_107" method="PUT" id="7531290b-72cf-4716-8854-f2bd3c9bb9f2"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#SchemaNameSpace}">proj:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:proj="${#Project#SchemaNameSpace}">proj:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="1cc77fce-abf1-4bb3-9fee-2d071682d3d4" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="DMRList" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/DiscreteMediaRight/List" id="20ed13da-69de-404c-b312-895e1d797d98"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenId</con:name><con:value>RightsTokenId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RightsTokenId</con:default></con:parameter><con:parameter><con:name>SchemaVersion</con:name><con:value>${#Project#SchemaVersion}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#SchemaVersion}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="GET" method="GET" id="62db426d-3923-4a0f-84e5-88bf9bc3ca4b"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:DiscreteMediaTokenList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="7afa9051-66c3-4363-b93a-279a3fdb72bf" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD" method="HEAD" id="6fd4c821-ba1a-4852-9207-f22baa139b62"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:DiscreteMediaTokenList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="277b6350-8984-4717-9f9d-90a00e35c3a4" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="DMRConsume" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/{ContentProfile}/DiscreteMediaRight/{DiscreteMediaFulfillmentMethod}/Consume" id="21abd17d-1bc8-460a-8e45-b6e6d42dd8fc"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>NodeAccountId</con:name><con:value>${#TestCase#NodeAccountId}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#NodeAccountId}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenId</con:name><con:value>${#TestCase#rightsTokenId}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#rightsTokenId}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>ContentProfile</con:name><con:value>${#TestCase#mediaProfile}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#mediaProfile}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>DiscreteMediaFulfillmentMethod</con:name><con:value>${#TestCase#fulfillmentMethod}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#fulfillmentMethod}</con:default></con:parameter><con:parameter><con:name>SchemaVersion</con:name><con:value>${#Project#SchemaVersion}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#SchemaVersion}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="POST" method="POST" id="56cdf2bc-5300-4d6a-869f-085cf17e595a"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="44a5ae19-0906-49a7-9d15-3801da7b78db" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="DMRLease_Update_Delete_06" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/DiscreteMediaRight/{DiscreteMediaRightID}" id="790021bf-3cec-46f8-9a12-b5b2fdf21d7a"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>NodeAccountID</con:name><con:value>${#TestCase#NodeAccountId}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#NodeAccountId}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>DiscreteMediaRightID</con:name><con:value>${#TestCase#discreteMediaRightId}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#discreteMediaRightId}</con:default></con:parameter><con:parameter><con:name>SchemaVersion</con:name><con:value>${#Project#SchemaVersion}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#Project#SchemaVersion}</con:default></con:parameter><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:resource name="Consume_106" path="Consume" id="eb2f76cc-d53c-4a9b-9cb1-7bd8c3a96400"><con:settings/><con:parameters/><con:method name="POST" method="POST" id="ad3ba3a8-2227-405e-94f9-35c6424ef574"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="7b65de43-31fc-49bf-b67a-8411525d0843" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="Release" path="Lease/Release" id="3c22ceb2-4954-479a-922f-7037e2cbf2e6"><con:settings/><con:parameters/><con:method name="POST" method="POST" id="361266ff-f6e3-4400-a33b-8f22489ff619"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="e76552d7-84e1-496e-9b3f-5d524e9ed6ae" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="Renew" path="Lease/Renew" id="5cdf3c37-196c-4713-8750-eb280338c410"><con:settings/><con:parameters/><con:method name="PUT" method="PUT" id="e4804a5a-d7da-402d-b6e9-bd952d35262d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:DiscreteMediaToken</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="f84ab259-5593-4433-950f-e37a607743c3" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="Consume_107" path="Lease/Consume" id="c322058c-ddea-4aae-b705-aa0c50813fa4"><con:settings/><con:parameters/><con:method name="POST" method="POST" id="6ff3030f-a89a-4e42-8675-e319868a524b"><con:settings/><con:parameters/><con:request name="Request 1" id="148ceaef-5b56-4a1f-a6b7-f44ab99fb618" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="DMRDelete" method="DELETE" id="b305cd84-475d-4e41-9052-8debfa7c048f"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="4d2ed310-a5f2-4195-9936-deacc8656fe4" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DMRUpdate" method="PUT" id="3a9c1d02-f0bc-4b96-b30c-e6c08a09ff49"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/03/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="82d66ba9-91e0-4ee6-9307-185016686189" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="STS" type="rest" id="df68baca-a75a-4a2d-afcf-5fc3c0dc1c3a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="STSCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" id="cc56e816-fa44-46c0-9658-d53d428713a7"><con:settings/><con:parameters><con:parameter><con:name>audience</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>tokentype</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="POST" method="POST" id="f1c065c2-973b-4cb8-8a2a-17d0bfb5695e"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:Credentials</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="2f3be90a-6feb-4f2b-931e-c5de7169c503"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{ASSERTION}" id="ac7742f2-69b8-46a3-b053-ccf2c0c12379"><con:settings/><con:parameters><con:parameter><con:name>ASSERTION</con:name><con:value>ASSERTION</con:value><con:style>TEMPLATE</con:style><con:default>ASSERTION</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="GET" id="0f8e34d6-fe4c-462b-80f6-7be7d67393fa"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:assertion">urn:Assertion</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="04f5414e-fcbe-4be9-875e-33938a3ed90e"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSCreate_SAML2" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" id="cc56e816-fa44-46c0-9658-d53d428713a7"><con:settings/><con:parameters><con:parameter><con:name>audience</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>tokentype</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:method name="POST" method="POST" id="f1c065c2-973b-4cb8-8a2a-17d0bfb5695e"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:Credentials</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="2f3be90a-6feb-4f2b-931e-c5de7169c503"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsLockerDataget_by_Token" type="rest" id="06c7edf6-d0a0-405a-9033-2a0223035867" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="RightsLockerDataget_by_Token" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=token" id="48e0e64a-8e51-41e8-bc3f-a9b914c94b17"><con:settings/><con:parameters/><con:method name="RightsLockerDataget_by_Token" method="GET" id="8ec94013-f7b1-4817-941c-5a7bdb2a123c"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" id="0f3bbb0d-7ce6-426b-9f8b-ba0c2828795a"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenUpdate_without_Account_ID" type="rest" id="9264e5a7-64a0-4d07-8234-29d2b15a6ef8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenUpdate_without_Account_ID" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/RightsToken/{RightsTokenID}" id="bf6f9c44-7a2c-4d86-ae9c-7fd56c89f4b1"><con:settings/><con:parameters><con:parameter><con:name>RightsTokenID</con:name><con:value>${#TestCase#RightsTokenID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#RightsTokenID}</con:default></con:parameter></con:parameters><con:method name="Rights_Token_Update_without_Account_ID" method="PUT" id="54edd5bc-6f34-4903-944f-c93467a0a576"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:RightsTokenFull</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="e0b41a14-2071-48e6-a187-9a48dd58f748"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenGet_without_Account_ID" type="rest" id="7d2e0dde-ff3c-4bec-96c6-1711d54c3f73" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="RightsTokenGet_without_Account_ID" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/RightsToken/{RightsTokenID}" id="1cca5f0d-550e-4e64-bb0a-b4d334ca33c8"><con:settings/><con:parameters><con:parameter><con:name>RightsTokenID</con:name><con:value>${#TestCase#RightsTokenID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#RightsTokenID}</con:default></con:parameter></con:parameters><con:method name="Rights_Token_Get_without_Account_ID" method="GET" id="f19e6cc6-724c-4df1-93f7-31fb2ef1cf12"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:RightsToken</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>503 502</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="843b24f9-77b5-4d13-abba-0780b4e5e568"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy" type="rest" id="88406568-bb3c-4742-a286-f5fc0f769d9a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="PolicyCreateSinglePolicyUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="0e9666a5-6071-4e55-991e-52e12d24d075"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyCreateSinglrPolicyUser" method="POST" id="eed70fc8-f5e8-4293-8c4d-7bddeb1aacf4"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="d1586a10-4d2e-4209-b6f1-483579d51958"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateSinglePolicyAccount" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="8026ddb8-33db-4686-853e-4cd5a13abbed"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyCreateSinglrPolicyUser" method="POST" id="eb8bee5a-f7a6-4aa0-8ec5-7facc2adfc39"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="433a4dcb-00eb-46c2-a516-260ccdf872ea"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateListUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/List" id="04598a2d-53a7-4fc2-9d80-b29a4779e363"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyCreateListUser" method="POST" id="e8b8bf74-7202-412b-b2f0-d0a509e5cb0c"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="a65ccbb8-9ff2-4453-9a21-26dca49e57f5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateListAccount" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/List" id="850c7fb9-6d44-49c5-9589-5390f8292252"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyCreateListAccount" method="POST" id="4a606b69-43cf-4df5-a077-328f294f5bd4"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="9a32a17f-c415-4ce8-bb53-5df20429e2fb"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGetSinglePolicyUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="0b4e3fd2-748d-4ad3-b0c5-e850be0b6680"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyGetSinglePolicyUser" method="GET" id="9194ec94-c1da-4e75-b14a-9d81ef8ccd95"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="1cd47c20-c425-43e7-9061-284c9d26f8f6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyUpdateSinglePolicyUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyId}" id="737a3590-e27f-454b-bfcd-587db41aa52c"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyUpdateSinglePolicyUser" method="PUT" id="3ec0f723-58d2-4fc5-92fd-6e9b9e16b735"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="ab1f75d9-f79f-4504-8553-c5d184ee3405"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
	 <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeIdRTLCS}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGetUserPolicyId" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyId}" id="c9f7049f-7036-4855-b9b5-72bfa0c3d9dd"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyGetUserPolicyId" method="GET" id="b8bb916d-0572-496e-a565-79b865cbd868"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="e0400bb5-d9fe-4d30-8b7a-f1ea97b512b3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGetAccountPolicyId" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyId}" id="bf945dfc-dd59-4124-9f01-7d5befe82225"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyGetAccountPolicyId" method="GET" id="4af5e4f9-bdd7-46ad-80be-18e3f62e4f65"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="7f08ac4d-d3a5-4c79-b961-9ed9b60c244a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGetSinglePolicyAccount" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="c1977f56-545e-415a-bbb9-9d6b0bd889ad"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyGetSinglePolicyUser" method="GET" id="50cff5c2-a450-4e7a-8992-9a3222c63e95"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="08f947d5-17f8-4446-aedf-aee0fedf02b8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGetListUserListId" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{ListId}" id="5fbf7450-4857-49cc-b61d-3b22c4f112a8"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>ListId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="PolicyGetListUserListId" method="GET" id="26553030-4315-408c-b26d-aabc7bd082ab"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="e52b56c1-4cf3-4167-92fb-a56e9f7aa316"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGetListAccountListId" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{ListId}" id="e9bfcd37-e3c1-4cea-b7f5-c94fe2ed9c65"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>ListId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="PolicyGetListAccountListId" method="GET" id="4c504501-25da-4e7c-954a-2f1dc0e8305b"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="cf620e4e-1534-471b-8bbb-0dfa71320e13"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGetAccountList" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/List" id="f4089165-74e5-45cc-ae89-e7cd8f2645f6"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyGetAccountList" method="GET" id="735e9b00-e547-4d45-b238-b67d107119dc"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="f293fe39-0dc5-401d-8e57-cc976900a45c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGetUserList" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/List" id="cfecffe8-6dd6-4aba-98c3-2de1d8657910"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyGetUserList" method="GET" id="704d45cc-6a0a-475e-90df-eed31b68b9bd"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="9e4f0868-7d65-4fc3-954b-8e26577e9290"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyDeleteListUserListId" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{ListId}" id="92b15ea7-2077-46a8-a524-c939e8ec32bb"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>ListId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="PolicyDeleteListUserListId" method="DELETE" id="a199fa6d-bcff-4679-8c87-bc70a5d479ef"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="9f49872e-0d44-47e7-b916-b5b234831990"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyDeleteListAccountListId" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{ListId}" id="9d7cfc9a-8af7-4673-b718-d43aff0e7896"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>ListId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="PolicyDeleteListAccountListId" method="DELETE" id="c9cb5356-7b7a-4f40-9c96-357b26b6b907"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="b3be8ad6-5213-4c73-851c-0e938ccc0097"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyDeleteSinglePolicyAccount" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyId}" id="3a1b679c-c9ff-41a2-ab01-eb17acd4b7d2"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyDeleteSinglePolicyAccount" method="DELETE" id="e77a03ee-7631-4528-93ce-487fa7dad14a"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="3b151cb8-46c2-4554-b366-c87485138a18"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyDeleteSinglePolicyUser" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyId}" id="6eab9d92-1890-481f-8970-faaa5d8b3548"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="PolicyDeleteSinglePolicyUser" method="DELETE" id="bdcffd5d-3f25-4177-9d6d-064cbd6c318a"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404 500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="30c7b62d-2248-43c4-a931-940517b645bb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyUpdateSinglePolicyAccount" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyId}" id="a9789acc-8ef6-47a9-b73c-7d10d12d7d12"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>PolicyId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="PolicyUpdateSinglePolicyAccount" method="PUT" id="4c56fc32-9bbe-43b3-9404-73b128ee46a2"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="b3a13a7e-c595-45b3-9621-0d6c9b1224ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
	 <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeIdRTLCS}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyUpdateListUserListId" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{ListId}" id="0c2b196a-9e2d-495b-8242-a6ed3c175199"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>ListId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="PolicyUpdateListUserListId" method="PUT" id="88ee74a6-fe2a-47a5-a888-5e3c71ea3b27"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404 500</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="99c47c2f-1e2c-4b65-9847-0905303eade8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyUpdateListAccountListId" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{ListId}" id="5ef43d5f-67cf-4769-90d0-f16be671c9bd"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>ListId</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="PolicyUpdateListAccountListId" method="PUT" id="0fc184c0-c397-41d4-a41d-7e0f727f8aa9"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404 500</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#schemaNameSpace}">proj:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" postQueryString="false" id="614e739f-a1cc-4176-bae9-57acfe62b0e2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#Project#targetHostP}:${#Project#targetPort}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AccountMerge" type="rest" basePath="" definitionUrl="" id="22824acf-3a73-41e3-8c2f-c8dc35d24d49" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountMergeTest" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" id="527d532b-593b-4005-9d80-9714fe954fb9"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>${#TestCase#SurvivingAccountID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#SurvivingAccountID}</con:default></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:value>${#TestCase#RetiredAccountID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#RetiredAccountID}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="876c3ce6-073c-4eea-95f5-acf3b183849c"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:proj="${#Project#CoordinatorSchema}">proj:AccountMerge</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#CoordinatorSchema}">proj:AccountMerge</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="d04dcd86-8cc9-419b-86d1-47d573a455b3"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="AccountMerge" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" id="9800c118-d8b3-4330-bbc4-d5697004d492"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>${#TestCase#SurvivingAccountID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#SurvivingAccountID}</con:default></con:parameter><con:parameter><con:name>RetiredAccountID</con:name><con:value>${#TestCase#RetiredAccountID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#RetiredAccountID}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="ba65fc4a-5389-41a7-a921-e5b10e6cb7de"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/><con:element xmlns:proj="${#Project#CoordinatorSchema}">proj:AccountMerge</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#CoordinatorSchema}">proj:AccountMerge</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="c20456ec-132a-43e6-8385-d3028f11d737"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="AccountMergeUndo" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" id="90d75cdd-6509-47f7-b111-49a73b6d9058"><con:settings/><con:parameters><con:parameter><con:name>SurvivingAccountID</con:name><con:value>${#TestCase#SurvivingAccountID}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#SurvivingAccountID}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="1dadfa57-0ff5-4706-84a2-d1ec42bb2a5e"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:request name="Request 1" mediaType="application/json" id="513334c0-8e8c-4948-83aa-aaf0109bdfbc"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="MetadataBasicCreate_ContentProvider" type="rest" basePath="" definitionUrl="C:\Users\minashree.sahoo\Desktop\MetadataWADL\MetadataBasicCreate_ContentProvider_1.wadl" id="ed1a9c70-43ea-46c6-9dd7-0b3ce74920bb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/minashree.sahoo/Desktop/MetadataWADL/MetadataBasicCreate_ContentProvider_1.wadl"><con:part><con:url>file:/C:/Users/minashree.sahoo/Desktop/MetadataWADL/MetadataBasicCreate_ContentProvider_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="MetadataBasicCreate_ContentProvider"/>
  <resources base="${#Project#Device_HostName}">
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Basic/" id="MetadataBasicCreate">
      <doc xml:lang="en" title="MetadataBasicCreate"/>
      <method name="POST" id="POST MetadataBasic">
        <doc xml:lang="en" title="POST MetadataBasic"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
        </request>
        <response status="400 401 403 409">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405 503">
          <representation mediaType="text/xml"/>
        </response>
        <response status="404 500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="400 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200 201 202">
          <representation mediaType="text/plain"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="201 202">
          <representation mediaType="text/plain; charset=UTF-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="202">
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="400 403 409">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="415 500">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataBasic">
        <doc xml:lang="en" title="PUT MetadataBasic"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="400 403 404 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 405 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="500">
          <representation mediaType="text/html"/>
        </response>
      </method>
      <method name="HEAD" id="Head MetadataBasicCreate">
        <doc xml:lang="en" title="Head MetadataBasicCreate"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="503">
          <representation mediaType="text/html"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
      </method>
      <method name="GET" id="GET MetadataBasicCreate">
        <doc xml:lang="en" title="GET MetadataBasicCreate"/>
        <request/>
        <response status="503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml" element="dece:BasicAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="DELETE" id="Delete MetadataBasicCreate">
        <doc xml:lang="en" title="Delete MetadataBasicCreate"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="412">
          <representation mediaType="text/html;charset=utf-8"/>
        </response>
      </method>
      <method name="OPTIONS" id="Option MetadataBasicCreate">
        <doc xml:lang="en" title="Option MetadataBasicCreate"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="401 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" id="MetadataBasicGet">
      <doc xml:lang="en" title="MetadataBasicGet"/>
      <method name="GET" id="GET MetadataBasic">
        <doc xml:lang="en" title="GET MetadataBasic"/>
        <request/>
        <response status="400 401 403 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="application/xml;charset=ISO-8859-1"/>
          <representation mediaType="application/xml;charset=iso-8859-1"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
          <representation mediaType="text/html; charset=UTF-8"/>
        </response>
        <response status="404 500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="404 405 503">
          <representation mediaType="text/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="404">
          <representation mediaType="application/xml;charset=iso-8859-1"/>
          <representation mediaType="text/xml;charset=UTF-8"/>
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
        <response status="400 403 404">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="304">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS MetadataBasic">
        <doc xml:lang="en" title="OPTIONS MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataBasic">
        <doc xml:lang="en" title="PUT MetadataBasic"/>
        <request>
          <representation mediaType="application/xml" element="coor:BasicAsset" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </request>
        <response status="400 401 403 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="coor:BasicAsset" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </response>
        <response status="202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="200">
          <representation mediaType="text/html; charset=UTF-8"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="500">
          <representation mediaType="text/html;charset=utf-8"/>
        </response>
        <response status="400 403 404 409">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="400 404">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="POST" id="POST MetadataBasic">
        <doc xml:lang="en" title="POST MetadataBasic"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MetadataBasic">
        <doc xml:lang="en" title="DELETE MetadataBasic"/>
        <request/>
        <response status="400 401 403 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
          <representation mediaType="text/html; charset=UTF-8"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="404 405 503">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="data"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200 202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="405">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MetadataBasic">
        <doc xml:lang="en" title="HEAD MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Basic/urn:dece:cid:file:greatmedia.mp4" id="MetadataBasicDelete">
      <doc xml:lang="en" title="MetadataBasicDelete"/>
      <method name="DELETE" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="400">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="412">
          <representation mediaType="text/html;charset=utf-8"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Projectl#REST_API_Version}/Asset/Metadata/Basic/${#TestCase#CID}" id="MetadataBasicDelete 2">
      <doc xml:lang="en" title="MetadataBasicDelete 2"/>
      <method name="DELETE" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
      </method>
    </resource>
    <resource path="rest/${#Projectl#REST_API_Version}/Asset/Metadata/Basic/" id="MetadataBasicCreate RTR">
      <doc xml:lang="en" title="MetadataBasicCreate RTR"/>
      <method name="POST" id="POST MetadataBasic">
        <doc xml:lang="en" title="POST MetadataBasic"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="400 401 409">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="503">
          <representation mediaType="text/html"/>
        </response>
        <response status="200">
          <representation mediaType="text/plain"/>
        </response>
        <response status="400">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataBasic">
        <doc xml:lang="en" title="PUT MetadataBasic"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="202">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="HEAD" id="Head MetadataBasicCreate">
        <doc xml:lang="en" title="Head MetadataBasicCreate"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="503">
          <representation mediaType="text/html"/>
        </response>
      </method>
      <method name="GET" id="GET MetadataBasicCreate">
        <doc xml:lang="en" title="GET MetadataBasicCreate"/>
        <request/>
        <response status="503">
          <representation mediaType="text/html"/>
        </response>
      </method>
      <method name="DELETE" id="Delete MetadataBasicCreate">
        <doc xml:lang="en" title="Delete MetadataBasicCreate"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Basic/${#TestCase#CIDDelete}" id="MetadataBasicGet for Delete">
      <doc xml:lang="en" title="MetadataBasicGet for Delete"/>
      <method name="GET" id="GET MetadataBasic">
        <doc xml:lang="en" title="GET MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404 500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="404 405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS MetadataBasic">
        <doc xml:lang="en" title="OPTIONS MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataBasic">
        <doc xml:lang="en" title="PUT MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
      <method name="POST" id="POST MetadataBasic">
        <doc xml:lang="en" title="POST MetadataBasic"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MetadataBasic">
        <doc xml:lang="en" title="DELETE MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="data"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MetadataBasic">
        <doc xml:lang="en" title="HEAD MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" id="MetadataBasicGetWithUpdateNum">
      <doc xml:lang="en" title="MetadataBasicGetWithUpdateNum"/>
      <param name="updatenum" default="1" type="xs:string" required="false" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="GET MetadataBasic">
        <doc xml:lang="en" title="GET MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="application/xml;charset=ISO-8859-1"/>
          <representation mediaType="application/xml;charset=iso-8859-1"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
          <representation mediaType="text/html; charset=UTF-8"/>
        </response>
        <response status="404 500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="404 405 503">
          <representation mediaType="text/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="404">
          <representation mediaType="application/xml;charset=iso-8859-1"/>
        </response>
        <response status="400 403 404">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS MetadataBasic">
        <doc xml:lang="en" title="OPTIONS MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataBasic">
        <doc xml:lang="en" title="PUT MetadataBasic"/>
        <request>
          <representation mediaType="application/xml" element="coor:BasicAsset" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </request>
        <response status="400 401 403 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="coor:BasicAsset" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </response>
        <response status="202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="200">
          <representation mediaType="text/html; charset=UTF-8"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
      </method>
      <method name="POST" id="POST MetadataBasic">
        <doc xml:lang="en" title="POST MetadataBasic"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MetadataBasic">
        <doc xml:lang="en" title="DELETE MetadataBasic"/>
        <request/>
        <response status="400 401 403 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
          <representation mediaType="text/html; charset=UTF-8"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="404 405 503">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="data"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200 202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="405">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MetadataBasic">
        <doc xml:lang="en" title="HEAD MetadataBasic"/>
        <request/>
        <response status="400 401 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}/ResourceStatus/Current/Update" id="ResourceUpdate">
      <doc xml:lang="en" title="ResourceUpdate"/>
      <method name="PUT" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/xml" element="coor:ResourceStatus" xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator"/>
        </request>
        <response status="303">
          <representation mediaType="application/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="coor:ResourceStatus" xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator"/>
        </response>
        <response status="400 403 409">
          <representation mediaType="application/xml" element="coor:ErrorList" xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints/><con:resource name="MetadataBasicCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic" id="955c5091-9099-4027-abeb-306431e5cab8"><con:settings/><con:parameters/><con:method name="POST MetadataBasic" method="POST" id="dd9839bc-d1fa-4606-a3af-cd8a51520c3c"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>415 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="a58df2e7-4270-44f3-9be3-26a8797973bb"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic" method="PUT" id="ed88df89-0206-40e3-90af-2787c45e3150"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="4ce1b34e-1fa3-437e-a13c-3a544514d09e"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Head MetadataBasicCreate" method="HEAD" id="a13e8348-cb76-4509-b77a-a2d0a6a98dbf"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="aaab9cb2-83a4-43ce-8212-1082fa53d55d"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET MetadataBasicCreate" method="GET" id="33ef0544-150d-4ef4-91cc-700b6cd41018"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:BasicAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="2b13ce7a-1a63-4846-9619-05e31f4fb3aa"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete MetadataBasicCreate" method="DELETE" id="3e5e79c9-fe1f-430a-9e36-d26cb68ea9d5"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="dcfb7e90-57a5-45b3-afe9-8d9bd3f037a2"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Option MetadataBasicCreate" method="OPTIONS" id="7da42fda-72cb-4333-9542-6915b51ffac6"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="af0c9547-4750-4b93-abb2-01551294ba06"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" id="3372fb0d-068a-439b-916e-8fd2391e17cb"><con:settings/><con:parameters/><con:method name="GET MetadataBasic" method="GET" id="1014b369-7f20-46d1-a9e1-ace8542e77b8"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="a8170835-4bd2-4b3b-89bf-61af4edcf30d"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataBasic" method="OPTIONS" id="120ba358-f292-40ef-85a0-f5e6973ab067"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="f451b210-4156-4279-bdbd-bd7f10642466"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic" method="PUT" id="550528ed-6fa3-41d5-9767-87ea229b6749"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="ba184912-5c5f-4574-9409-1c9b610f9289"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST MetadataBasic" method="POST" id="008150ae-ef2d-4493-be53-ae8073fa9c9f"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="be3d7e6b-1503-4998-bcaf-d7b2f4a1789c"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataBasic" method="DELETE" id="254dab82-9235-4a2f-b5a2-784f28d8dac1"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="69e008f8-c7b5-49e8-9bea-7d2c96c78eb9"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataBasic" method="HEAD" id="6c269972-5162-4fa2-a4d1-1efedaed5367"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="a410c9db-71c2-4fc8-bb3b-1f98a9b5767a"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET MetadataBasic-1" method="GET" id="f914ca45-f023-49a0-a781-1de453909707"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="859e7003-9be8-42cc-9744-2e6146aba36c"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataBasic-1" method="OPTIONS" id="bbb85429-787e-4348-afa3-a0dc79531389"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="a3daf65f-23f6-47d5-9947-ddce5ad26ab7"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic-1" method="PUT" id="7e956ee2-2d70-4a09-b702-e7a82edd6f4f"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:BasicAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="6ed32cf4-1ed7-4e9b-b03d-91952e95d688"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST MetadataBasic-1" method="POST" id="1fa1a8fc-cadc-42ab-b80a-e7a091efeea4"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="afd313bc-f83c-44be-be78-954310f5af73"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataBasic-1" method="DELETE" id="e113ed57-a45e-4557-b52f-f9d497d8be24"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="63911b44-63fc-4c39-b00c-f4989470a108"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataBasic-1" method="HEAD" id="bd86f324-e8f9-4542-bb83-695ebe04c5dd"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="bca6a038-f938-4346-a94b-89de5e2ae380"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataBasicList" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" id="3d6f8232-e268-412a-8eca-95e717861b05"><con:settings/><con:parameters/><con:method name="POST MetadataBasic" method="POST" id="dcf4363c-69b4-4b1a-bf25-03b32f562249"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>415 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="0f46d985-2891-473f-9c8d-df21d6d041d5"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasic" method="PUT" id="fdb85169-8c50-472b-a40e-c5c1fb39479a"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="f2ca03a3-48c6-4a07-9a08-00fc8afb58da"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Head MetadataBasicCreate" method="HEAD" id="8de74f9c-a9f8-444b-b880-4e6e692e89a7"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="5a8294e2-3ac7-436a-867c-fa3a8b1c5794"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET MetadataBasicCreate" method="GET" id="b6f6d346-1f54-4398-99d7-b2f60ed393dd"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:BasicAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="acf86afa-2258-4e44-b959-68c7d9dbc31d"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete MetadataBasicCreate" method="DELETE" id="2079ff8d-4d80-48bb-9700-912f61f03c48"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="37cfa70e-6ea6-4eda-a61d-12cd92ab71b4"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Option MetadataBasicCreate" method="OPTIONS" id="1584c4ca-a9ca-4d21-a2cd-8082bafdf2b0"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="e5f46f57-8a32-4f37-8dcb-02929a48fcd1"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="MetadataDigitalCreate_CTP" type="rest" basePath="" definitionUrl="C:\Users\minashree.sahoo\Desktop\MetadataWADL\MetadataDigitalCreate_CTP_1.wadl" id="d1a67b4c-2635-4bc3-9cfc-9ea40f78c2c8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/minashree.sahoo/Desktop/MetadataWADL/MetadataDigitalCreate_CTP_1.wadl"><con:part><con:url>file:/C:/Users/minashree.sahoo/Desktop/MetadataWADL/MetadataDigitalCreate_CTP_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="MetadataDigitalCreate_CTP"/>
  <resources base="${#Project#Provision_HostName}">
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Digital/" id="MetadataPhysicalCreate">
      <doc xml:lang="en" title="MetadataPhysicalCreate"/>
      <method name="POST" id="POST MetadataBasicPhysicalCreate">
        <doc xml:lang="en" title="POST MetadataBasicPhysicalCreate"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 201 202">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="400 403 404 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="404 500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="400 405 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="201 202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="400 409">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="201">
          <representation mediaType="text/plain;charset=UTF-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="404">
          <representation mediaType="text/html;charset=utf-8"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataBasicPhysicalCreate">
        <doc xml:lang="en" title="PUT MetadataBasicPhysicalCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="400 403 404 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200 202">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml" element="dece:DigitalAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MetadataBasicPhysicalCreate">
        <doc xml:lang="en" title="DELETE MetadataBasicPhysicalCreate"/>
        <request/>
        <response status="405">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MetadataBasicPhysicalCreate">
        <doc xml:lang="en" title="HEAD MetadataBasicPhysicalCreate"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="GET" id="GET MetadataBasicPhysicalCreate">
        <doc xml:lang="en" title="GET MetadataBasicPhysicalCreate"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="data"/>
        </response>
        <response status="400">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS MetadataBasicPhysicalCreate">
        <doc xml:lang="en" title="OPTIONS MetadataBasicPhysicalCreate"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Digital/${#TestCase#APID_GET_DELETE}" id="MetadataPhysicalGet">
      <doc xml:lang="en" title="MetadataPhysicalGet"/>
      <method name="POST" id="POST MetadataPhysicalGet">
        <doc xml:lang="en" title="POST MetadataPhysicalGet"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="400 405 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="202">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataPhysicalGet">
        <doc xml:lang="en" title="PUT MetadataPhysicalGet"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="400 403 404 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200 202">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="404 503">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 201">
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="403">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="412">
          <representation mediaType="text/html;charset=utf-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MetadataPhysicalGet">
        <doc xml:lang="en" title="DELETE MetadataPhysicalGet"/>
        <request/>
        <response status="405">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="400 403 404">
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="200 202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="412">
          <representation mediaType="text/html;charset=utf-8"/>
        </response>
        <response status="403">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MetadataPhysicalGet">
        <doc xml:lang="en" title="HEAD MetadataPhysicalGet"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
          <representation mediaType="application/xml" element="dece:DigitalAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS MetadataPhysicalGet">
        <doc xml:lang="en" title="OPTIONS MetadataPhysicalGet"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405 500">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="GET" id="GET MetadataPhysicalGet">
        <doc xml:lang="en" title="GET MetadataPhysicalGet"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 403 404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200">
          <representation mediaType="text/plain"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Digital/${#TestCase#APID_GET_DELETE}" id="MetadataPhysicalDelete">
      <doc xml:lang="en" title="MetadataPhysicalDelete"/>
      <method name="POST" id="POST MetadataPhysicalGet">
        <doc xml:lang="en" title="POST MetadataPhysicalGet"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="400 405 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="202">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataPhysicalGet">
        <doc xml:lang="en" title="PUT MetadataPhysicalGet"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="400 404 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400">
          <representation mediaType="text/plain"/>
        </response>
        <response status="202">
          <representation mediaType="text/plain"/>
        </response>
        <response status="201">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MetadataPhysicalGet">
        <doc xml:lang="en" title="DELETE MetadataPhysicalGet"/>
        <request/>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MetadataPhysicalGet">
        <doc xml:lang="en" title="HEAD MetadataPhysicalGet"/>
        <request/>
        <response status="405">
          <representation mediaType="text/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
          <representation mediaType="application/xml" element="dece:DigitalAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS MetadataPhysicalGet">
        <doc xml:lang="en" title="OPTIONS MetadataPhysicalGet"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="500">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="GET" id="GET MetadataPhysicalGet">
        <doc xml:lang="en" title="GET MetadataPhysicalGet"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="405 500">
          <representation mediaType="text/plain"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Digital/List" id="MetadataDigitalList">
      <doc xml:lang="en" title="MetadataDigitalList"/>
      <method name="GET" id="GET MetadataDigitalList">
        <doc xml:lang="en" title="GET MetadataDigitalList"/>
        <request/>
        <response status="404">
          <representation mediaType="text/xml;charset=UTF-8"/>
          <representation mediaType="text/html;charset=utf-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="304">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="400 403">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MetadataDigitalList">
        <doc xml:lang="en" title="HEAD MetadataDigitalList"/>
        <request/>
      </method>
      <method name="POST" id="POST MetadataDigitalList">
        <doc xml:lang="en" title="POST MetadataDigitalList"/>
        <request/>
      </method>
      <method name="DELETE" id="DELETE MetadataDigitalList">
        <doc xml:lang="en" title="DELETE MetadataDigitalList"/>
        <request/>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="PUT" id="PUT MetadataDigitalList">
        <doc xml:lang="en" title="PUT MetadataDigitalList"/>
        <request/>
      </method>
      <method name="OPTIONS" id="OPTION MetedatadigitalList">
        <doc xml:lang="en" title="OPTION MetedatadigitalList"/>
        <request/>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Digital/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}" id="OnOrAfterMetadataDigitalList">
      <doc xml:lang="en" title="OnOrAfterMetadataDigitalList"/>
      <method name="GET" id="GET_OnOrAfterMetadataDigitalList">
        <doc xml:lang="en" title="GET_OnOrAfterMetadataDigitalList"/>
        <request/>
        <response status="404">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Digital/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}" id="OffSet">
      <doc xml:lang="en" title="OffSet"/>
      <method name="GET" id="GET-Offset">
        <doc xml:lang="en" title="GET-Offset"/>
        <request/>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Digital/List?FilterClass=urn%3Adece%3Atype%3Aviewfilter%3Alastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}" id="encodedOnOrAfterMetadataDigitalList">
      <doc xml:lang="en" title="encodedOnOrAfterMetadataDigitalList"/>
      <method name="GET" id="GET_OnOrAfterMetadataDigitalList">
        <doc xml:lang="en" title="GET_OnOrAfterMetadataDigitalList"/>
        <request/>
        <response status="404">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Metadata/Digital/List?FilterClass=urn%3Adece%3Atype%3Aviewfilter%3Alastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}" id="EncodedOffSet">
      <doc xml:lang="en" title="EncodedOffSet"/>
      <method name="GET" id="GET-Offset">
        <doc xml:lang="en" title="GET-Offset"/>
        <request/>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints/><con:resource name="MetadataPhysicalCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital" id="8a8e010e-c710-421e-8a33-49e1b3de87ed"><con:settings/><con:parameters/><con:method name="POST MetadataBasicPhysicalCreate" method="POST" id="74729d40-0dd5-4ff1-b9de-7ffe7fa65581"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 404 409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="e9f6424a-9e63-4b8e-ad38-2e8e825b15cf"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataBasicPhysicalCreate" method="PUT" id="8d598a22-73ac-474d-b9f6-bbb14a52c589"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="3a635629-f306-4043-b521-e09799b64cfb"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataBasicPhysicalCreate" method="DELETE" id="b623dc54-651b-463c-9f0c-34dfcd0a7de4"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="f7baf29b-242f-478b-8f20-6ab4a8a86d2e"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataBasicPhysicalCreate" method="HEAD" id="b1072471-9cfd-44fe-b6a1-490a7b456289"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="71481bfb-4dca-4963-a80f-09d1aa8815a4"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET MetadataBasicPhysicalCreate" method="GET" id="e531e4c8-a676-4c64-81e4-38261accb037"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:ns="http://wadl.dev.java.net/2009/02">ns:data</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="11242b71-7f38-4e72-977b-4eac222a731c"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataBasicPhysicalCreate" method="OPTIONS" id="4a98d992-ca51-49a3-a43d-b5579c8ad2ff"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="a722c339-8fdf-46ae-a613-7472db8e1ac8"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataPhysicalGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital/${#TestCase#APID_GET_DELETE}" id="8c3225db-56b4-4f17-8406-7b7b4130ce76"><con:settings/><con:parameters/><con:method name="POST MetadataPhysicalGet" method="POST" id="0967089f-9577-4db7-afd5-c0881b83db7b"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="36fbae59-5801-451b-9221-abf8928319a3"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataPhysicalGet" method="PUT" id="430040b0-f7a9-40d8-a5cb-70b7a5cd6890"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="b26987ea-433a-4033-9193-4ffb6728d2c5"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataPhysicalGet" method="DELETE" id="b3a2fdf0-0a91-48b6-bdae-3c2411c46976"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="5e5d86c1-ec82-47c6-b915-6afd25c0c273"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataPhysicalGet" method="HEAD" id="c226c087-2de2-4aed-ba89-2ce216571ed9"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="9f019552-0b5d-4be6-b6e9-7dc689aa84f0"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataPhysicalGet" method="OPTIONS" id="4be12b7a-cb95-49da-8231-8e7c3c3f2aef"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="793e43ea-57a0-4c3b-8178-50bbf0844579"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET MetadataPhysicalGet" method="GET" id="745783e0-738e-4874-85f3-133962598810"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="2b13a3c7-dbc9-4231-839d-175f736fb35d"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST MetadataPhysicalGet-1" method="POST" id="7f484312-e4e6-4a7e-9b2f-2ab5acbc0624"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="5da59424-0b29-4aaa-8ec6-6a12d07093ae"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataPhysicalGet-1" method="PUT" id="ea1874b9-3076-4ee5-9de6-683e5bfed957"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="d93d46ea-e953-4a31-9b0e-94b175bda447"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataPhysicalGet-1" method="DELETE" id="1d12a2b1-3cc5-44c4-aa45-e43fc1c176fb"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="aad5f907-99a6-430c-9b5f-47879604641b"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataPhysicalGet-1" method="HEAD" id="4b71e4e6-3bfc-4eb9-b85a-ce137b5e1233"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="b2c0ad9e-be78-40ec-a84d-6c57d60d0d66"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataPhysicalGet-1" method="OPTIONS" id="eb8e553b-6f01-4ca2-b06b-ebb08428e9d1"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="e7a8462e-87f7-44c0-81df-e218a7a06cbe"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET MetadataPhysicalGet-1" method="GET" id="c941c5de-2981-47da-ad0c-2849ffc6308d"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="574bf520-bf88-4ad9-bb47-24d8d7ed82b9"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="MetadataPhysicalList" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital/List" id="5af43842-474d-4715-aaf9-c2fcd892f1ae"><con:settings/><con:parameters/><con:method name="POST MetadataPhysicalGet" method="POST" id="fb364dc7-9f96-4be7-b34f-da26f7bf73d3"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="ea983e94-8c3c-419e-a3e8-93659a0dd379"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataPhysicalGet" method="PUT" id="c3e5f7ab-be30-4ac8-a6e3-f39c872c25c2"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="c850619f-0dd5-4d3f-ba69-2e53d576ab37"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataPhysicalGet" method="DELETE" id="654b269a-6289-4f4c-aad7-29c0a9f6c073"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="b75a684f-0ffd-49b3-ad93-0849bb80c216"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataPhysicalGet" method="HEAD" id="a262b107-c8a7-4e1a-89bd-243b4b6a3c81"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="1ae048f8-a8c3-4180-b3c8-79409597c78d"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataPhysicalGet" method="OPTIONS" id="1fd79c8b-3219-42e9-b13a-50971536e502"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="2fe2f3fe-6626-4d51-90aa-3b4d80f1d898"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET MetadataPhysicalGet" method="GET" id="b7969594-a1bd-48d3-a4cc-8e953571a5e2"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/octet-stream;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="aef8d6dc-7f67-4d66-9a7a-5514c012b421"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST MetadataPhysicalGet-1" method="POST" id="cbb166ea-d63a-4914-aab6-118c369fca07"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="912a09f8-9c8d-4465-a50e-ffedba062fd4"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MetadataPhysicalGet-1" method="PUT" id="90bb9e42-3aff-4b2b-8507-93f40257461f"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="ee8a0d13-de5b-4ddd-a188-c47d960ce0fa"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MetadataPhysicalGet-1" method="DELETE" id="ac621b6e-5a0d-4da3-8800-89caa461f19e"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="38f03df5-7493-4d8e-9547-380a30566d72"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MetadataPhysicalGet-1" method="HEAD" id="de43e7a5-0cd8-4b40-b122-191b7602ffef"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="b0f0651e-702d-4074-91c8-1afc698dfacc"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS MetadataPhysicalGet-1" method="OPTIONS" id="b55f67c4-828f-4d70-913d-f4bcb565b6b2"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="88fa67fc-8bb7-4693-a3dd-9c7c691b44df"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET MetadataPhysicalGet-1" method="GET" id="7691acfe-75c1-4d86-94a2-614f3e66022d"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="b23d69c8-f341-4dcb-9527-6583fb8da353"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="BundleCreate_CTP" type="rest" basePath="" definitionUrl="C:\Users\minashree.sahoo\Desktop\MetadataWADL\BundleCreate_CTP_1.wadl" id="211d57b4-657e-4817-9518-5aa957e3d1e6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/minashree.sahoo/Desktop/MetadataWADL/BundleCreate_CTP_1.wadl"><con:part><con:url>file:/C:/Users/minashree.sahoo/Desktop/MetadataWADL/BundleCreate_CTP_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="BundleCreate_CTP"/>
  <resources base="${#Project#Provision_HostName}">
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Bundle/" id="BundleCreate">
      <doc xml:lang="en" title="BundleCreate"/>
      <method name="POST" id="POST BundleCreate">
        <doc xml:lang="en" title="POST BundleCreate"/>
        <request>
          <representation mediaType="application/xml"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="text/xml" element="coor:Bundle" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </request>
        <response status="400 404 405 415 500">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
          <representation mediaType="application/x-www-form-urlencoded"/>
          <representation mediaType="text/xml" element="coor:Bundle" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </response>
        <response status="400 401 403 404 409 500">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 201 202">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="500 503">
          <representation mediaType="text/html"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
        <response status="201 202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="201">
          <representation mediaType="text/plain;charset=UTF-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="400 403 404 409">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="text/html;charset=utf-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="500">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="GET" id="GET BundleCreate">
        <doc xml:lang="en" title="GET BundleCreate"/>
        <request/>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 403">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
      </method>
      <method name="PUT" id="PUT BundleCreate">
        <doc xml:lang="en" title="PUT BundleCreate"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="200">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD BundleCreate">
        <doc xml:lang="en" title="HEAD BundleCreate"/>
        <request/>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS BundleCreate">
        <doc xml:lang="en" title="OPTIONS BundleCreate"/>
        <request/>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE BundleCreate">
        <doc xml:lang="en" title="DELETE BundleCreate"/>
        <request/>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Bundle/${#TestCase#BID_GET_DELETE}" id="BundleGET">
      <doc xml:lang="en" title="BundleGET"/>
      <method name="POST" id="POST BundleCreate">
        <doc xml:lang="en" title="POST BundleCreate"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 500">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="202">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="GET" id="GET BundleCreate">
        <doc xml:lang="en" title="GET BundleCreate"/>
        <request/>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
          <representation mediaType="text/html; charset=UTF-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="403 404">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="PUT" id="PUT BundleCreate">
        <doc xml:lang="en" title="PUT BundleCreate"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="400 404 405 500">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 403 404">
          <representation mediaType="application/xml" element="coor:ErrorList" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="202">
          <representation mediaType="text/plain"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="200 202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="text/html; charset=UTF-8"/>
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
        <response status="200 201">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="400 403 404 500">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD BundleCreate">
        <doc xml:lang="en" title="HEAD BundleCreate"/>
        <request/>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType=""/>
        </response>
        <response status="200">
          <representation mediaType=""/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTIONS BundleCreate">
        <doc xml:lang="en" title="OPTIONS BundleCreate"/>
        <request/>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE BundleCreate">
        <doc xml:lang="en" title="DELETE BundleCreate"/>
        <request/>
        <response status="400 404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="200">
          <representation mediaType="text/plain; charset=UTF-8"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints/><con:resource name="BundleCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Bundle" id="7d4d0071-6ea9-4704-bc34-b664e9e69ecc"><con:settings/><con:parameters/><con:method name="POST BundleCreate" method="POST" id="1e9f79ca-a4aa-46d7-aa7c-a8145c4ae2ce"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>text/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:Bundle</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405 415 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:Bundle</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404 409 500</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="ae5573fe-256f-4a66-9b33-485287e00607"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET BundleCreate" method="GET" id="c752a5fd-4ad7-4c3d-bbf1-07d3cb87d756"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="e51996de-194a-41f7-b94b-18b2779b64de"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT BundleCreate" method="PUT" id="05f72d49-3496-46c3-bd4b-0ba1d55f27ca"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="9ca6de16-87a4-43a6-9206-53d4da3e8af1"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD BundleCreate" method="HEAD" id="0c56f117-6990-4fd2-b4b6-6f1eb61898e9"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="d038af39-0392-40dd-8f4b-5c907fc9f579"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS BundleCreate" method="OPTIONS" id="8e56db09-e4d8-4f98-bec8-1a699d8dc731"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="c104ac4f-6903-46f6-bd3a-c97df47c849e"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE BundleCreate" method="DELETE" id="1eb46840-b145-4e7f-9747-3040dcd462e1"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="ef666313-9b0b-41ae-8e22-b4767e21e2ce"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="BundleGET" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Bundle/${#TestCase#BID_GET_DELETE}" id="64e261ea-32c8-4cba-af1d-751f3acfdb9d"><con:settings/><con:parameters/><con:method name="POST BundleCreate" method="POST" id="166fa358-5d71-4967-a9e0-1ca2e5497e0a"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 500</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="2e3624df-d831-410a-9257-69a52d75af3b"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="GET BundleCreate" method="GET" id="7ad30983-04f9-443b-948b-cb27cec13d7c"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="b38594d7-110c-4ea6-8ce3-747e3d980fdb"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT BundleCreate" method="PUT" id="089885ec-4575-41ba-82d1-85bd4a3d73f9"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 404 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="7394ccf6-a1d8-4e98-8342-daeec2d9be20"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD BundleCreate" method="HEAD" id="4e83e738-0e83-478a-82c8-e49b8b1a0e80"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="67f013f5-6949-4110-adaf-9d1b05347a9a"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTIONS BundleCreate" method="OPTIONS" id="d4089ff6-c30c-4e02-acf9-b455a0de62c9"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="701424cd-bf04-4267-a97c-f2c90233a1d5"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE BundleCreate" method="DELETE" id="c6fcdcd3-8100-4386-b3e5-144f34cc9c69"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="4ffd8468-286c-4c64-872c-973314093920"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="MapALIDtoAPIDCreate_CTP" type="rest" basePath="" definitionUrl="C:\Users\minashree.sahoo\Desktop\MetadataWADL\MapALIDtoAPIDCreate_CTP_1.wadl" id="1a3857a6-6b62-41ea-b423-571fbaf22740" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/minashree.sahoo/Desktop/MetadataWADL/MapALIDtoAPIDCreate_CTP_1.wadl"><con:part><con:url>file:/C:/Users/minashree.sahoo/Desktop/MetadataWADL/MapALIDtoAPIDCreate_CTP_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="MapALIDtoAPIDCreate_CTP"/>
  <resources base="${#Project#Provision_HostName}">
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map" id="MapALIDtoAPIDCreate">
      <doc xml:lang="en" title="MapALIDtoAPIDCreate"/>
      <method name="GET" id="Delete MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="Delete MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml" element="dece:DigitalAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="text/xml"/>
        </response>
        <response status="404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="401 404">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="404">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="POST" id="POST MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="POST MapALIDtoAPIDCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 403 404 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 201 202">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="400 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="404 500 502">
          <representation mediaType="text/html"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="201 202">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
        <response status="403">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="201">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="PUT" id="PUT MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="PUT MapALIDtoAPIDCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="404">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="DELETE MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="HEAD MapALIDtoAPIDCreate"/>
        <request/>
        <response status="400">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType=""/>
        </response>
        <response status="404">
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTION MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="OPTION MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml" element="dece:ErrorList" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map/${#Project#Profile}/${#Project#APID_GET_DELETE}" id="MapAPIDtoALIDGet">
      <doc xml:lang="en" title="MapAPIDtoALIDGet"/>
      <method name="GET" id="Delete MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="Delete MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml" element="dece:DigitalAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="text/xml"/>
          <representation mediaType="application/xml;charset=utf-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404 405 500">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 403 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="401 404">
          <representation mediaType="text/html"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="POST" id="POST MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="POST MapALIDtoAPIDCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="500">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/html"/>
        </response>
      </method>
      <method name="PUT" id="PUT MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="PUT MapALIDtoAPIDCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="DELETE MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="HEAD MapALIDtoAPIDCreate"/>
        <request/>
      </method>
      <method name="OPTIONS" id="OPTION MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="OPTION MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map/${#Project#Profile}/${#TestCase#ALID_GET_DELETE}" id="MapALIDtoAPIDUpdate">
      <doc xml:lang="en" title="MapALIDtoAPIDUpdate"/>
      <method name="GET" id="Delete MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="Delete MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml" element="dece:DigitalAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="text/xml"/>
          <representation mediaType="text/html"/>
          <representation mediaType="text/html; charset=UTF-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="401 404">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="404">
          <representation mediaType="text/xml;charset=UTF-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
      </method>
      <method name="POST" id="POST MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="POST MapALIDtoAPIDCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 403 404 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="400 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="500">
          <representation mediaType="text/html"/>
        </response>
      </method>
      <method name="PUT" id="PUT MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="PUT MapALIDtoAPIDCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 403 404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 201 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="400">
          <representation mediaType="text/plain"/>
        </response>
        <response status="200 202">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="text/html"/>
          <representation mediaType="text/html; charset=UTF-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="400 500">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="DELETE MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="HEAD MapALIDtoAPIDCreate"/>
        <request/>
        <response status="400">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="200">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTION MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="OPTION MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map/${#TestCase#Profile}/${#TestCase#ALID_GET_DELETE}" id="MapALIDtoAPIDGet">
      <doc xml:lang="en" title="MapALIDtoAPIDGet"/>
      <method name="GET" id="Delete MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="Delete MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml" element="dece:DigitalAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="text/xml"/>
        </response>
        <response status="404 405 500">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="401 404">
          <representation mediaType="text/html"/>
        </response>
      </method>
      <method name="POST" id="POST MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="POST MapALIDtoAPIDCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="500">
          <representation mediaType="text/plain"/>
          <representation mediaType="text/html"/>
        </response>
      </method>
      <method name="PUT" id="PUT MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="PUT MapALIDtoAPIDCreate"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="DELETE MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="HEAD MapALIDtoAPIDCreate"/>
        <request/>
      </method>
      <method name="OPTIONS" id="OPTION MapALIDtoAPIDCreate">
        <doc xml:lang="en" title="OPTION MapALIDtoAPIDCreate"/>
        <request/>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map/List" id="LogicAssetList">
      <doc xml:lang="en" title="LogicAssetList"/>
      <method name="GET" id="GET LogicAssetList">
        <doc xml:lang="en" title="GET LogicAssetList"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
        </response>
        <response status="403">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
        <response status="304">
          <representation mediaType=""/>
        </response>
      </method>
      <method name="POST" id="POST LogicAssetList">
        <doc xml:lang="en" title="POST LogicAssetList"/>
        <request/>
      </method>
      <method name="PUT" id="PUT LogicAssetList">
        <doc xml:lang="en" title="PUT LogicAssetList"/>
        <request>
          <representation mediaType="application/xml" element="coor:LogicalAsset" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="coor:LogicalAsset" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
      </method>
      <method name="DELETE" id="DELETE LogicAssetList">
        <doc xml:lang="en" title="DELETE LogicAssetList"/>
        <request/>
        <response status="405">
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
      </method>
      <method name="HEAD" id="HEAD LogicAssetList">
        <doc xml:lang="en" title="HEAD LogicAssetList"/>
        <request/>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="200">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="OPTIONS" id="OPTION LogicAssetList">
        <doc xml:lang="en" title="OPTION LogicAssetList"/>
        <request/>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}" id="OnOrAfterLogicAssetList">
      <doc xml:lang="en" title="OnOrAfterLogicAssetList"/>
      <method name="GET" id="GET LogicAssetList">
        <doc xml:lang="en" title="GET LogicAssetList"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="POST" id="POST LogicAssetList">
        <doc xml:lang="en" title="POST LogicAssetList"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="405">
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
      </method>
      <method name="PUT" id="PUT LogicAssetList">
        <doc xml:lang="en" title="PUT LogicAssetList"/>
        <request/>
      </method>
      <method name="DELETE" id="DELETE LogicAssetList">
        <doc xml:lang="en" title="DELETE LogicAssetList"/>
        <request/>
      </method>
      <method name="HEAD" id="HEAD LogicAssetList">
        <doc xml:lang="en" title="HEAD LogicAssetList"/>
        <request/>
      </method>
      <method name="OPTIONS" id="OPTION LogicAssetList">
        <doc xml:lang="en" title="OPTION LogicAssetList"/>
        <request/>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map/List?FilterClass=urn:dece:type:viewfilter:lastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}" id="OnOrAfterWithOffset">
      <doc xml:lang="en" title="OnOrAfterWithOffset"/>
      <method name="GET" id="GET-Offset">
        <doc xml:lang="en" title="GET-Offset"/>
        <request/>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map/List?FilterClass=urn%3Adece%3Atype%3Aviewfilter%3Alastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}" id="encodedOnOrAfterLogicAssetList">
      <doc xml:lang="en" title="encodedOnOrAfterLogicAssetList"/>
      <method name="GET" id="GET LogicAssetList">
        <doc xml:lang="en" title="GET LogicAssetList"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
      </method>
      <method name="POST" id="POST LogicAssetList">
        <doc xml:lang="en" title="POST LogicAssetList"/>
        <request>
          <representation mediaType="application/xml"/>
        </request>
        <response status="405">
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
      </method>
      <method name="PUT" id="PUT LogicAssetList">
        <doc xml:lang="en" title="PUT LogicAssetList"/>
        <request/>
      </method>
      <method name="DELETE" id="DELETE LogicAssetList">
        <doc xml:lang="en" title="DELETE LogicAssetList"/>
        <request/>
      </method>
      <method name="HEAD" id="HEAD LogicAssetList">
        <doc xml:lang="en" title="HEAD LogicAssetList"/>
        <request/>
      </method>
      <method name="OPTIONS" id="OPTION LogicAssetList">
        <doc xml:lang="en" title="OPTION LogicAssetList"/>
        <request/>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Asset/Map/List?FilterClass=urn%3Adece%3Atype%3Aviewfilter%3Alastmodifieddate&amp;OnOrAfter=${#TestCase#onorafter}&amp;FilterOffset=${#TestCase#offset}&amp;FilterCount=${#TestCase#filtercount}" id="EncodedOnOrAfterWithOffset">
      <doc xml:lang="en" title="EncodedOnOrAfterWithOffset"/>
      <method name="GET" id="GET-Offset">
        <doc xml:lang="en" title="GET-Offset"/>
        <request/>
        <response status="400">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints/><con:resource name="MapALIDtoAPIDCreate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map" id="aa61379d-b50b-4be8-bdbe-016c51d3df8b"><con:settings/><con:parameters/><con:method name="Delete MapALIDtoAPIDCreate" method="GET" id="bcddf893-641b-4b3f-8fcd-455f8f71586f"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="1fe3b54b-9bef-4e5a-909f-42d558c9ca42"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST MapALIDtoAPIDCreate" method="POST" id="08c0943e-3e56-4d95-be3f-8edc45edfce5"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>404 500 502</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="d0955203-fe38-479a-abe8-6f75bdf104bf"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MapALIDtoAPIDCreate" method="PUT" id="b296f014-4165-4535-81dd-1d9ff56660c1"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="ff1d4b60-4cef-4bf5-b597-2b0afed29e16"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MapALIDtoAPIDCreate" method="DELETE" id="c6e54dee-998b-4283-bc21-c10da8c6b66b"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="548d9e2b-e363-493a-8203-ec8412449583"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MapALIDtoAPIDCreate" method="HEAD" id="2356b8fd-4ec8-43d7-8399-905a5d853ca5"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType/><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="f80d5d29-0b2d-4c0e-b50f-a33641352d24"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTION MapALIDtoAPIDCreate" method="OPTIONS" id="1337ee69-ebff-4614-8b43-623112df9fc7"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="18cba8ce-f960-490c-8e26-366e64db3e1f"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="MapAPIDtoALIDGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/${#Project#Profile}/${#TestCase#APID}" id="e101dad1-406b-4ae8-8942-a83b2d385372"><con:settings/><con:parameters/><con:method name="Delete MapALIDtoAPIDCreate" method="GET" id="ebef6706-861e-42dc-8e75-23d0e688f29b"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="306b8038-18e5-428d-930d-b83607954e2d"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST MapALIDtoAPIDCreate" method="POST" id="223b8cc3-ad73-4191-a9dd-93816288135b"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="d5fe2aa2-2580-4439-8a17-6e31a6c14185"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MapALIDtoAPIDCreate" method="PUT" id="e6226692-1c55-4824-90e8-a1165313b2e7"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="d072c341-3793-4c5e-8591-e6e2796e5ef5"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MapALIDtoAPIDCreate" method="DELETE" id="c51523db-a420-47ca-aed9-17b47ef61f65"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="f1bb86ba-b39d-4d99-9f8e-66c54f3cc5a3"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MapALIDtoAPIDCreate" method="HEAD" id="863aaad4-f077-4aa6-bec8-29599654d0e2"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" id="050159bd-33f2-49d6-80a7-e2fa2e0d5118"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTION MapALIDtoAPIDCreate" method="OPTIONS" id="8c98ef09-5d81-4d4e-9218-f4291aa11400"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="b78b20d3-9c45-46f1-81c5-ee1cf352c93c"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="MapALIDtoAPIDUpdate" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/${#Project#Profile}/${#TestCase#ALID_GET_DELETE}" id="0bec3904-5834-4109-8d19-b233d30db929"><con:settings/><con:parameters/><con:method name="Delete MapALIDtoAPIDCreate" method="GET" id="ef9b2f21-be88-4a92-976b-f15aa9ff6403"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="8533526f-e7c9-4880-b689-ef34b8b35336"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST MapALIDtoAPIDCreate" method="POST" id="427f3cb3-0948-49bc-b3c5-d560df12f42b"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="a3541625-c55d-4fe9-902d-3cb87079cb65"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MapALIDtoAPIDCreate" method="PUT" id="a5cd6e3c-aff9-4346-8e49-17d0159594bf"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="54f891f9-38c8-4271-8e0b-9e5158aad9f5"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MapALIDtoAPIDCreate" method="DELETE" id="b0e974d9-5da0-4e10-a768-f0982fa29d35"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="fa8f2771-33eb-48ee-b85f-63c0f1e2d690"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MapALIDtoAPIDCreate" method="HEAD" id="3b07ae8a-44d8-4c32-96be-d3fe51dc8048"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="0d013f0e-5d33-4bfd-9467-add94f2ce04a"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTION MapALIDtoAPIDCreate" method="OPTIONS" id="b3bccbda-edf3-49c5-9f2f-1fc815fce19b"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="f0052510-c9ef-4c53-8615-ae2b932c3d98"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="MapALIDtoAPIDGet" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/${#TestCase#Profile}/${#TestCase#ALID_GET_DELETE}" id="4a64a931-e8ca-4ca8-819a-e121a45a93aa"><con:settings/><con:parameters/><con:method name="Get MapALIDtoAPIDCreate" method="GET" id="092f77f3-6890-41f6-8d99-95f5e2e2d58b"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="49a85ea7-5f42-450e-b1d0-6a1c72884310"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST MapALIDtoAPIDCreate" method="POST" id="7782fcd6-bf6c-47a5-9470-dda01618faef"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="d8962ada-fc2d-4d35-8dad-f35aa02d9331"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT MapALIDtoAPIDCreate" method="PUT" id="1ccf7c58-a7a8-46fa-a77b-24fbba6b879d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="8fd271cb-140f-4c30-8be9-f95b1d190266"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE MapALIDtoAPIDCreate" method="DELETE" id="e8b1ee75-f7ea-4b5c-9720-6bdaa45192af"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="dee39b7c-1980-4792-999d-515ec9daa1b9"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD MapALIDtoAPIDCreate" method="HEAD" id="d5fc0d8a-bd40-41a6-bf9e-ce375d13d59e"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" id="b6d715d6-6031-4913-813a-7b4bd41f7883"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTION MapALIDtoAPIDCreate" method="OPTIONS" id="263a0d95-c0b2-4f6c-a746-2fbe3515d8f9"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="d30dc91b-937d-4b87-952f-84d465545e45"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="LogicAssetList" path="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/List" id="075e2986-d578-4582-81de-39e56ee09efb"><con:settings/><con:parameters/><con:method name="GET LogicAssetList" method="GET" id="d81ccdbc-3471-416b-ac87-3e66dad09634"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>304</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="ffe3e835-37f8-43c9-843b-d575d415e809"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST LogicAssetList" method="POST" id="652ae151-8d27-428b-9102-0a830bd5b44c"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" id="56fdb7d5-c7b3-4b88-a893-2abf32c51a3b"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT LogicAssetList" method="PUT" id="c78d65bf-5708-4f9e-852c-c76406c58621"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:LogicalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:LogicalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="09e19cc8-57eb-4dd6-a342-23c05c087603"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE LogicAssetList" method="DELETE" id="bf3bd2ce-c4a7-4a64-aacb-3e88973067d9"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="93a703ca-8298-4b66-8f33-a5cb4d9063c7"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="HEAD LogicAssetList" method="HEAD" id="e33acdac-f47e-4994-b690-292452a7bcea"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="fab90afa-05b7-4e6e-8c36-22feb19fb0cd"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="OPTION LogicAssetList" method="OPTIONS" id="b4763c82-2955-4e42-a52c-96c067ee0c8f"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/json" id="ade6eff3-fb9f-4890-96fa-e2d9a8fc807f"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="LegacyDeviceAdd_Retailer" type="rest" basePath="" definitionUrl="C:\Users\kalyan.ineni\Desktop\LegacyDeviceAdd_Retailer_1.wadl" id="d6d90f84-c622-44ea-afe3-3fb05d747723" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/kalyan.ineni/Desktop/LegacyDeviceAdd_Retailer_1.wadl"><con:part><con:url>file:/C:/Users/kalyan.ineni/Desktop/LegacyDeviceAdd_Retailer_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="LegacyDeviceAdd_Retailer"/>
  <resources base="">
    <resource path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/LegacyDevice" id="LegacyDeviceAdd">
      <doc xml:lang="en" title="LegacyDeviceAdd"/>
      <param name="AccountID" default="${#Project#Node_Account}" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="POST LegacyDeviceAdd">
        <doc xml:lang="en" title="POST LegacyDeviceAdd"/>
        <request>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 401 403 404 409">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200 201 202">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="400 405 500">
          <representation mediaType="text/plain"/>
        </response>
        <response status="401 404 413 500 502">
          <representation mediaType="text/html"/>
        </response>
        <response status="200">
          <representation mediaType="text/xml"/>
        </response>
        <response status="200 201">
          <representation mediaType="text/plain"/>
        </response>
        <response status="201">
          <representation mediaType="text/plain; charset=UTF-8"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="0">
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
          <representation mediaType=""/>
        </response>
        <response status="400 401 403 409">
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="500">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/${#Project#AccountID}/LegacyDevice/${#TestCase#DeviceID}" id="LegacyDeviceDelete">
      <doc xml:lang="en" title="LegacyDeviceDelete"/>
      <method name="DELETE" id="DELETE LegacyDeviceAdd">
        <doc xml:lang="en" title="DELETE LegacyDeviceAdd"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
          <representation mediaType="text/plain; charset=UTF-8"/>
          <representation mediaType="text/plain;charset=UTF-8"/>
        </response>
        <response status="400 404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="404">
          <representation mediaType="application/xml;charset=UTF-8"/>
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/Domain/{DomainID}/Device/{DeviceID}" id="LegacyDeviceGet">
      <doc xml:lang="en" title="LegacyDeviceGet"/>
      <param name="AccountID" default="${#Project#Node_Account}" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="DomainID" default="${#Project#DeviceID}" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="DeviceID" default="${#Project#DomainID}" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="GET LegacyDeviceAdd">
        <doc xml:lang="en" title="GET LegacyDeviceAdd"/>
        <request/>
        <response status="200">
          <representation mediaType="application/xml" element="dece:DigitalAsset" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="text/xml"/>
          <representation mediaType="text/plain"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="404 405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml"/>
        </response>
        <response status="400 401 403 404">
          <representation mediaType="application/xml" element="dece:Error" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="401 404 500">
          <representation mediaType="text/html"/>
        </response>
        <response status="405">
          <representation mediaType="text/plain"/>
        </response>
        <response status="404">
          <representation mediaType="text/html; charset=iso-8859-1"/>
        </response>
        <response status="500">
          <representation mediaType="text/xml;charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/LegacyDevice/{DeviceID}" id="LegacyDeviceUpdate">
      <doc xml:lang="en" title="LegacyDeviceUpdate"/>
      <param name="AccountID" type="xs:string" required="false" default="" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="DeviceID" type="xs:string" required="false" default="" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="DELETE" id="PUT LegacyDeviceAdd">
        <doc xml:lang="en" title="PUT LegacyDeviceAdd"/>
        <request/>
        <response status="">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="400 401 403 404">
          <representation mediaType="application/xml" element="dece:Errors" xmlns:dece="http://www.decellc.org/schema/2010/10/dece"/>
        </response>
        <response status="200">
          <representation mediaType="application/xml"/>
          <representation mediaType="text/plain"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
        <response status="405">
          <representation mediaType="text/xml"/>
        </response>
        <response status="400">
          <representation mediaType="text/plain"/>
          <representation mediaType="application/xml;charset=UTF-8"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints/><con:resource name="LegacyDeviceAdd" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/LegacyDevice" id="2cd70583-d285-479d-9403-331a6d8e0aa5"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#Node_Account}</con:default></con:parameter></con:parameters><con:method name="POST LegacyDeviceAdd" method="POST" id="6561333b-332f-4336-baaa-79dfd3038d8b"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404 409</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 201 202</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400 405 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 404 413 500 502</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200 201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 401 403 409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" id="d946615a-dbe3-49ed-b039-1b4a5726d34e"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="LegacyDeviceDelete" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/LegacyDevice/{DeviceID}" id="fa7936a8-aaa2-482b-9f98-e7b0c7043264"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>DeviceID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="DELETE LegacyDeviceAdd" method="DELETE" id="a16eb2d9-e032-48a7-939d-ac4d53046ce1"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>400 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="0c6313a3-7801-4469-ae5b-db5dac95e1cb"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="LegacyDeviceGet" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/Domain/{DomainID}/Device/{DeviceID}" id="6a382d51-acda-4ef6-834e-4e2bc9e97e92"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#Node_Account}</con:default></con:parameter><con:parameter><con:name>DomainID</con:name><con:value>${#Project#DeviceID}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#DeviceID}</con:default></con:parameter><con:parameter><con:name>DeviceID</con:name><con:value>${#Project#DomainID}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#DomainID}</con:default></con:parameter></con:parameters><con:method name="GET LegacyDeviceAdd" method="GET" id="9d4099f8-d8dd-489c-9def-6e833fb3c2ab"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:DigitalAsset</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404 405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Error</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 401 403 404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html</con:mediaType><con:status>401 404 500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="e0fccded-aa69-438a-8d50-06a3a661ea53"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="LegacyDeviceUpdate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/LegacyDevice/{DeviceID}" id="e70bad8a-11b2-4f3b-9199-e0581851e708"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter><con:parameter><con:name>DeviceID</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="PUT LegacyDeviceAdd" method="PUT" id="b3c32b24-bd7b-45f1-b960-67768bc70848"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 401 403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Errors</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json" id="02dd9045-97cd-4bb5-9048-515f42845a53"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="ResourceStatusUpdate" type="rest" basePath="" definitionUrl="" id="bc42c975-573f-4cd0-9bbf-3d9059026cf6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountStausUpdate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{Account}/ResourceStatus/Current/Update" id="44a61fd8-d519-4d92-87ca-2a0ba0c909a0"><con:settings/><con:parameters><con:parameter><con:name>Account</con:name><con:value>Account</con:value><con:style>TEMPLATE</con:style><con:default>Account</con:default></con:parameter></con:parameters><con:method name="AccountStatusUpdate" method="PUT" id="0f8152b7-f408-43ba-bc16-3404068c0b88"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:ResourceStatus</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>412</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="03c6d3ff-da5c-4bb3-af58-8e3041f5463c"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserStatusUpdate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{Account}/User/{User}/ResourceStatus/Current/Update" id="3d90647e-d662-483c-b8f0-731a6245363b"><con:settings/><con:parameters><con:parameter><con:name>Account</con:name><con:value>Account</con:value><con:style>TEMPLATE</con:style><con:default>Account</con:default></con:parameter><con:parameter><con:name>User</con:name><con:value>User</con:value><con:style>TEMPLATE</con:style><con:default>User</con:default></con:parameter></con:parameters><con:method name="UserStatusUpdate" method="PUT" id="31a7f71f-3fcf-4676-bb71-a9eec076be68"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:proj="${#Project#Coordinator_Schema}">proj:ResourceStatus</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>401</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="32035a23-bf3f-40a5-a688-ff3635bf6f6c"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="RightsTokenStatusUpdate" path="rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{Account}/RightsToken/{RightsTokenID}/ResourceStatus/Current/Update" id="f61e2958-94ea-41ff-b270-a87d7954f578"><con:settings/><con:parameters><con:parameter><con:name>Account</con:name><con:value>Account</con:value><con:style>TEMPLATE</con:style><con:default>Account</con:default></con:parameter><con:parameter><con:name>RightsTokenID</con:name><con:value>RightsTokenID</con:value><con:style>TEMPLATE</con:style><con:default>RightsTokenID</con:default></con:parameter></con:parameters><con:method name="RightsTokenStatusUpdate" method="PUT" id="483bfce9-1bf4-4380-9cdc-f360fddda146"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/json" id="83dc6fd0-e3a7-4534-b84c-1d99c46da2af"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="GetLatestTOU" type="rest" basePath="" definitionUrl="C:\Users\kalyan.ineni\Desktop\GetLatestTOU_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://</con:endpoint></con:endpoints><con:resource name="GetLatestTOU" path="Consent/Text/{Country}/urn:dece:type:policy:TermsOfUse/{touFormat}/Current"><con:settings/><con:parameters><con:parameter><con:name>Country</con:name><con:value>Country</con:value><con:style>TEMPLATE</con:style><con:default>Country</con:default></con:parameter><con:parameter><con:name>touFormat</con:name><con:value>TouFormat</con:value><con:style>TEMPLATE</con:style><con:default>TouFormat</con:default></con:parameter></con:parameters><con:method name="GET" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>302</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>https://</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="GetLatestTOULanguage" path="Consent/Text/{accountCountry}/{accountLang}/urn:dece:type:policy:TermsOfUse/{touFormat}/Current"><con:settings/><con:parameters><con:parameter><con:name>accountCountry</con:name><con:value>AccountCountry</con:value><con:style>TEMPLATE</con:style><con:default>AccountCountry</con:default></con:parameter><con:parameter><con:name>accountLang</con:name><con:value>AccountLanguage</con:value><con:style>TEMPLATE</con:style><con:default>AccountLanguage</con:default></con:parameter><con:parameter><con:name>touFormat</con:name><con:value>TouFormat</con:value><con:style>TEMPLATE</con:style><con:default>TouFormat</con:default></con:parameter></con:parameters><con:method name="GET" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>301 302</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>https://</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="GetLatestTOU" type="rest" basePath="" definitionUrl="C:\Users\kalyan.ineni\Desktop\GetLatestTOU_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>https://</con:endpoint></con:endpoints><con:resource name="GetLatestTOU" path="Consent/Text/{Country}/urn:dece:type:policy:TermsOfUse/{touFormat}/Current"><con:settings/><con:parameters><con:parameter><con:name>Country</con:name><con:value>Country</con:value><con:style>TEMPLATE</con:style><con:default>Country</con:default></con:parameter><con:parameter><con:name>touFormat</con:name><con:value>TouFormat</con:value><con:style>TEMPLATE</con:style><con:default>TouFormat</con:default></con:parameter></con:parameters><con:method name="GET" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>302</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType/><con:status>0</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>https://</con:endpoint><con:parameters/></con:request></con:method></con:resource><con:resource name="GetLatestTOULanguage" path="Consent/Text/{accountCountry}/{accountLang}/urn:dece:type:policy:TermsOfUse/{touFormat}/Current"><con:settings/><con:parameters><con:parameter><con:name>accountCountry</con:name><con:value>AccountCountry</con:value><con:style>TEMPLATE</con:style><con:default>AccountCountry</con:default></con:parameter><con:parameter><con:name>accountLang</con:name><con:value>AccountLanguage</con:value><con:style>TEMPLATE</con:style><con:default>AccountLanguage</con:default></con:parameter><con:parameter><con:name>touFormat</con:name><con:value>TouFormat</con:value><con:style>TEMPLATE</con:style><con:default>TouFormat</con:default></con:parameter></con:parameters><con:method name="GET" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>301 302</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/json"><con:settings/><con:endpoint>https://</con:endpoint><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="SetupScripts" id="6501bdd1-6983-4cd4-99c3-96bc1288b86c"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup" searchProperties="true" id="5013324c-55e5-4134-91b2-0bcef0f98624"><con:settings/><con:testStep type="groovy" name="Set SoapUI Global Preferences" id="389d15e8-d006-4582-b1e5-6c0031e44646"><con:settings/><con:config><script>/*
 * @Sanjeet
 * This script will set below global soap UI Preferences
 * 
 * Setting Name										Value Set
 * --------------------------------------------------------------------------
 * Http Settings > Response Compression  		 			False
 * Http Settings > Close connection after request 			TRUE
 * Http Settings > Do not URL-escape service endpoints           TRUE
 */

log.info("Setting SoapUI Global Preferences!!!!");
import com.eviware.soapui.SoapUI;
import com.eviware.soapui.settings.HttpSettings;

com.eviware.soapui.SoapUI.settings.setString(HttpSettings.RESPONSE_COMPRESSION , "FALSE");
com.eviware.soapui.SoapUI.settings.setString(HttpSettings.CLOSE_CONNECTIONS, "TRUE");
com.eviware.soapui.SoapUI.settings.setString(HttpSettings.ENCODED_URLS , "TRUE");</script></con:config></con:testStep><con:testStep type="groovy" name="Set ENV Properties" id="421757c0-8f16-41a5-9b26-c14f6f0aa0dd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info("Set Environment properties!!!");
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath
log.info("Project Path : '" + projectPath + "'");

def eNV = context.expand( '${#Project#ENV}' )
log.info("Environment: '" + eNV+ "'");

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");


def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));
log.info("Load property file : '" + propertiesPath + "/" + eNV +"project.properties"+ "'");
String line;
while ((line = reader.readLine()) != null)
	{
		if (line.trim().length()==0) continue;
		if (line.charAt(0)=='#') continue;

		int delimPosition = line.indexOf("=");
		String key = line.substring(0, delimPosition-0).trim();
		String value = line.substring(delimPosition+1).trim();
		propMap.put(key, value);
	}

propMap.each{ k, v -> tP.setPropertyValue(k,v)}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema" id="25d5c087-0af3-41de-9248-743e2d3f25ee"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "versionMinor: "+tP.getPropertyValue("versionMinor");

def v2 = context.expand( '${#Project#versionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinator_Schema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;
tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v2.1/md");
log.info "Setting the MDSchema value ---- "+"http://www.movielabs.com/schema/md/v2.1/md";</script></con:config></con:testStep><con:testStep type="datasource" name="Country" id="75a6ea91-e790-41e0-a0b2-2b42ea65ea0b"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup" id="1e23df44-2b68-49ed-b32a-bcb83c2deef7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' );
log.info("Get TOU Consent version for country : " + country);
/*
def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                
*/

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));

log.info("Call TestCase GetLatestTOU");

def TCGetLatestTOU = tP.getTestSuiteByName("End_To_End").getTestCaseByName("GetLatestTOU");

TCGetLatestTOU.setPropertyValue("accountCountry",country);
TCGetLatestTOU.setPropertyValue("touFormat","html");

TCGetLatestTOU.setPropertyValue("tName",tC.getName());
TCGetLatestTOU.setPropertyValue("sName",tS.getName());


def tempRunner = TCGetLatestTOU.run( null , false );
assert "$tempRunner.status" == "FINISHED";

log.info("Extract consent version from GetLatestTOU testcase");
def tempConsentVersion = TCGetLatestTOU.getPropertyValue("consentVersion");
log.info("Consent version extracted : " + tempConsentVersion);
tC.setPropertyValue("consentVersion", tempConsentVersion);

tP.setPropertyValue("TOU_"+country,tempConsentVersion);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" id="8b743f50-9b5b-4ebc-a59d-2699f19bbf10"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20140811</con:value></con:property><con:property><con:name>touVersion</con:name><con:value>https://qa.c.uvvu.com:7001/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/text</con:value></con:property><con:property><con:name>consentVersion</con:name><con:value>20140811</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>389d15e8-d006-4582-b1e5-6c0031e44646</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create CID-APID-ALID" searchProperties="true" id="a748d259-1e3e-42de-b396-9fb34be4c7bb"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="bbe7c6f1-f0f5-4201-84d3-1bb9f374537d"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Coordinate Schema and MD Schema_MovedToCommonTestStep" id="e95ce4d9-9c16-430c-a481-fe653099fd40" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rest_api_version=tP.getPropertyValue("versionMinor");
def eNV = context.expand( '${#Project#ENV}' )

log.info rest_api_version
if(rest_api_version=="06")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2012/12/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v1.2/md");
}
else if(rest_api_version=="07")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2013/06/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v1.2/md");
}
else if(rest_api_version=="11")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2013/10/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v2.1/md");
}
else if(rest_api_version=="21")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2013/10/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v2.1/md");
}
else if(rest_api_version=="02")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2015/03/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v2.1/md");
}</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_CID" id="6f8bb891-bbde-4ded-9cc5-40d6c88b9432"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_CID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDBasic-Create" id="44bfc0ac-d974-463f-b5f9-ecb89bfb963b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicCreate-11")}

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


//Set CID value at project level varaible 'CID'
def CID = context.expand( '${#TestCase#CID}' );
log.info("CID Created : '" + context.expand( '${#TestCase#CID}' ) + "'");
tP.setPropertyValue("CID",CID);



def cID2 = context.expand( '${#TestCase#CID}' );
	tP.setPropertyValue("CID2", cID2 );

log.info cID2;</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="6b389e60-93af-479c-b430-5ac2592b2781"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_APID" id="ad3ce085-80dc-4314-b8bc-be40aeb81805"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_APID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Create" id="5dd88ad4-c54e-42c2-a359-4cef8cc95b11"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//Set APID  value at project level varaible 'APID'
def APID = context.expand( '${#TestCase#APID}' );
log.info("APID Created : '" + context.expand( '${#TestCase#APID}' ) + "'");
tP.setPropertyValue("APID",APID);

//Added By Sanjeet
tP.setPropertyValue("APID_GET_DELETE",APID);


def aPID_AUDIO = context.expand( '${#TestCase#APID}' );
	tP.setPropertyValue("APID_AUDIO", aPID_AUDIO );</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_ReplacedAPID" id="33ed1ef8-5734-49c1-90e9-092dee1c12c6"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_ReplacedAPID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Create-Replaced" id="b217ee5e-b526-4a38-9113-c6cc49172c9e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def aPID_AUDIO = context.expand( '${#TestCase#APID}' );
tP.setPropertyValue("APID_AUDIO", aPID_AUDIO );
tP.setPropertyValue("APID_GET_DELETE_REPLACED", aPID_AUDIO );</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_RecalledAPID" id="df0a9243-ce86-439a-b5d2-303599e40525"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_RecalledAPID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Create-Recalled" id="b944a340-f5a2-40b8-87be-04ce9d4720cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def aPID_AUDIO = context.expand( '${#TestCase#APID}' );
	tP.setPropertyValue("APID_AUDIO", aPID_AUDIO );
	tP.setPropertyValue("APID_GET_DELETE_RECALLED", aPID_AUDIO );</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_ALID" id="75b1ffb3-0f1c-4dba-9a4d-b88b2f3fb98a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_ALID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDAssetMap-Create" id="3cb5eeaa-0225-4484-b8f4-973a847e6728"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MapALIDtoAPIDCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MapALIDtoAPIDCreate-11")}

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

//Set ALID  value at project level varaible 'ALID'
def ALID = context.expand( '${#TestCase#ALID}' );
log.info("ALID Created : '" + context.expand( '${#TestCase#ALID}' ) + "'");
tP.setPropertyValue("ALID",ALID);
</script></con:config></con:testStep><con:properties><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A653478442</con:value></con:property><con:property><con:name>APID_GET_DELETE_ACTIVE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A220400161</con:value></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A309286894</con:value></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A715043276</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>201</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>786957482</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="End_To_End" id="668653d9-cc6c-43e1-ae8f-68dabeddc9d0" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate" searchProperties="true" id="0bf01b26-b1c1-44d6-b979-1a82cd8bee3f"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="AccountName_Generation" id="c1ec7922-ab6b-4cfb-ad82-6d6c5453d87a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def accName= "Sanity_Acc_Create_" + new Date().format( 'yyyyMMdd_hhmms' );

tP.setPropertyValue("AccountDisplayName",accName); 

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="905ea107-ee41-4672-b71c-134f95d212c3"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;



testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
myTC.setPropertyValue("nodeid",nodeId);

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("Account_Create");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="c69faf28-a056-48be-9459-aa074143d843"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="discardResponse">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#Coordinator_Schema}"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>${#Project#Country}</Country>
</Account>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="03ecb40c-96be-49ac-b978-5200b11706c0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="be288dfb-7de8-48c7-8cab-2bd12d29ecc6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="8695b50a-8169-4297-b849-e54d49dc75af"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def nodeacc = context.expand( '${#Project#NODEACCID}' )
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
		
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

 
      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

if (tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
	{
                                
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
		int lastColon = urlStr.lastIndexOf(':');
		int lastSlash = urlStr.lastIndexOf('/');
		accountid     = urlStr.substring(lastColon + 1);
		def node_Account = urlStr.substring(lastSlash + 1);
		
		tP.setPropertyValue("Node_Account",node_Account);
		tP.setPropertyValue("Node_Account_ID",accountid);
	} 
	else 
	{
		assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
		int lastColon = urlStr.lastIndexOf('%3A');
		int lastSlash = urlStr.lastIndexOf('/');
		accountid     = urlStr.substring(lastColon + 3);
		def node_Account = urlStr.substring(lastSlash + 1);
		
		tP.setPropertyValue("Node_Account",node_Account);
		tP.setPropertyValue("Node_Account_ID",accountid);
		
	}
		def hostAddress = b.getHost();
    			 log.info " hostAddress....     " + hostAddress;   
              
                if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
                {
                                tP.setPropertyValue("targetSystem","LP3ST");
                }
                else if (hostAddress == "lp3.qa-web-vip2-s01.uvvu.com")
                {
                                tP.setPropertyValue("targetSystem","LP3CH");
                }


                
      
} else 
{
	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>nodeId</con:name><con:value>500500</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>39da0c46-7f38-4527-b6be-af58fbc91aba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf0fa3e3-b1e7-4bf9-9635-da2c55ceeed9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0696f15b-f3ce-463e-b03b-33fc4c9d061d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1ec7922-ab6b-4cfb-ad82-6d6c5453d87a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate" searchProperties="true" id="3a726ffe-919d-4575-b640-e2bc3d4f58ff"><con:settings/><con:testStep type="groovy" name="Set properties from calling test case" id="50e8ed0a-ccf4-44ac-b917-15711ffd9d9b"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="73b30c57-47ba-4c48-b7fa-85612b343456"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("User_Create");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="923d1db3-fca8-408a-9403-3cf7eae759c1"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="User_Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="e0b80965-5d28-444f-bd86-fb60556b82b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>fau</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	 	<Value>${#Project#PrimaryEmail}</Value>
        	<ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	   </PrimaryEmail>
	   <AlternateEmail verified="true" verificationEntity="urn:dece:org:org:dece:${#Project#NodeID}" VerificationStatus="urn:dece:type:status:success" verificationDateTime="2012-11-30T10:05:32">			
	 	<Value>${#Project#AlternateEmail}</Value>
        	<ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	   </AlternateEmail>  	
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address-->
	</ContactInfo>
        <!--Languages>
		<Language primary="true">en-GB</Language>	
	</Languages-->
       <DateOfBirth MeetsAgeOfMajority="true">${#Project#ADULT_DOB_XML}</DateOfBirth>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>${#TestCase#Password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="27ba4db2-f0ca-462b-a21c-ae8da6c181eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="0d948a76-1566-45db-86fb-5618f769981b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
		errorReason = "First User must be 18 years or older";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first user in a household account must be a full-access user.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
	
	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	if (tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
	{
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
		
		int lastColon = urlStr.lastIndexOf(':');
		int lastSlash = urlStr.lastIndexOf('/');
		userid     = urlStr.substring(lastColon + 1);
		def node_User = urlStr.substring(lastSlash + 1);
		
		tP.setPropertyValue("Node_User",node_User);
		     
		tP.setPropertyValue("NODE_USER_ID",userid);
	} 
	else 
	{
		assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
		int lastColon = urlStr.lastIndexOf('%3A');
		int lastSlash = urlStr.lastIndexOf('/');
		userid     = urlStr.substring(lastColon + 3);

		def node_User = urlStr.substring(lastSlash + 1);		
		tP.setPropertyValue("Node_User",node_User);		
		tP.setPropertyValue("NODE_USER_ID",userid);
	}

} else {

assert context.expand( '${#TestCase#httpLocation}') == "";
}



//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E/User/urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>UserName</con:name><con:value>SanityFAU_20150303_1425374077748</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate_Standard" searchProperties="true" id="8f0b84bc-7818-4e76-bef1-f421b62ef0ad"><con:settings/><con:testStep type="groovy" name="Set properties for User" id="04d568bc-be6a-4f65-9418-37d1f64c1266"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));
testCase.setPropertyValue("UserClass",callTC.getPropertyValue("UserClass"));
testCase.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
testCase.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));
testCase.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="f9ae2fd1-8fda-464d-85b4-aaf4f900bf91"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("User_Create");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="fc429085-b9d7-4744-8bee-c8a30703a256"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="User_Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="e0b80965-5d28-444f-bd86-fb60556b82b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="${#TestCase#UserClass}" xmlns="${#Project#Coordinator_schema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>sau</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#PrimaryEmail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmail}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>UK</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
<!--      <LegalGuardian>${#TestCase#LegalGuardian}</LegalGuardian>-->
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>${#TestCase#Password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="752a07bc-b8aa-4027-89d0-1709ea2a0010"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="2d3e50d8-055c-48b5-9967-c9725fd97d12"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
	
	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	if (tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
	{
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
		
		int lastColon = urlStr.lastIndexOf(':');
		int lastSlash = urlStr.lastIndexOf('/');
		userid     = urlStr.substring(lastColon + 1);
		def node_User = urlStr.substring(lastSlash + 1);
		
		tP.setPropertyValue("Node_User",node_User);		     
		tP.setPropertyValue("NODE_USER_ID",userid);
	} 
	else 
	{
		assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
		int lastColon = urlStr.lastIndexOf('%3A');
		int lastSlash = urlStr.lastIndexOf('/');
		userid     = urlStr.substring(lastColon + 3);

		def node_User = urlStr.substring(lastSlash + 1);		
		tP.setPropertyValue("Node_User",node_User);		
		tP.setPropertyValue("NODE_USER_ID",userid);
	}

} else {

assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806/User/urn:dece:userid:org:dece:0A408ECEC6AA7E08E05307991F0A8F5E</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>UserName</con:name><con:value>SanitySAU1_20141215_1418643074315</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB93D9108325E854E0401F0A0799736D</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:standard</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2000-06-01</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:E26585227E5512DDE0401F0A059975D4</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>urn:dece:userid:org:dece:0A407A4B80EB25F1E05305991F0A9487</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fc429085-b9d7-4744-8bee-c8a30703a256</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForFirstUser" searchProperties="true" id="29c15fcb-a18b-4ec7-87c6-193b1e3339d0"><con:settings/><con:testStep type="groovy" name="Set Encoded NodeUserID" id="e9c22d09-c37e-4967-97ed-ef3bb24facb4"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="78732f95-5bad-4898-b95b-9d4ef7846443"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");

RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);


if(testCase.getPropertyValue("Count") != "1"){

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;	
}</script></con:config></con:testStep><con:testStep type="groovy" name="Set_TOU_Policy_Resource" id="24beb413-d673-47ca-8de0-e3b20b1aaba1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )


def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="b26df845-fea0-4199-9988-d916ad8ada68"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#Policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>${#TestCase#NODEUSERIDDecoded}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCDC24327E0DE0530F991F0A1EC7/Policy/urn:dece:type:policy:TermsOfUse</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="8ceb2bd2-0123-491e-957a-b50e07810fa1"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCDC24327E0DE0530F991F0A1EC7/Policy/urn:dece:type:policy:UserLinkConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageAccountConsent" id="37306d65-efc4-4fd6-afe9-373e9539dea8" disabled="true"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="PolicyCreateAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageAccountConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">    
<dece:Policy>       
<dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>       
<dece:Resource>${#TestCase#NODEACCOUNTIDDecoded}</dece:Resource>       
<dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>       
<!--<dece:RequestingEntity>urn:dece:org:org:dece:500501</dece:RequestingEntity>       
<dece:RequestingEntity>urn:dece:org:org:dece:500502</dece:RequestingEntity-->         
<!--<dece:RequestingEntity>urn:dece:org:org:dece:o:pjgdevicetoken:testing</dece:RequestingEntity>-->       
<dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>       
<dece:ResourceStatus>          
<dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">             
<dece:Value>urn:dece:type:status:active</dece:Value>          </dece:Current>       
</dece:ResourceStatus>    </dece:Policy> </dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true" id="a69cc818-ad79-42a0-926b-5713106b64f9"><con:configuration><scriptText>def hList = messageExchange.getResponseHeaders()
def hitFlag = 0
for (n in hList) {
	if (n.value == "HTTP/1.1 201 Created") {
		hitFlag = 1
	}
}
assert hitFlag
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn%3Adece%3Auserid%3Aorg%3Adece%3A${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="5c31e517-f3d1-4b5b-8698-6d855054e184"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCDC24327E0DE0530F991F0A1EC7/Policy/urn:dece:type:policy:ManageUserConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetNodeID" id="814ff63f-7ce1-4cde-a7ce-c014baf23a5c"><con:settings/><con:config><script>
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def loopuntil = testCase.getPropertyValue("loopuntil");
def Counter = testCase.getPropertyValue("Count");

Counter++;
testCase.setPropertyValue("Count",Counter);
if(testCase.getPropertyValue("Count") == "1")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdRTL"));
}
if(testCase.getPropertyValue("Count") == "2")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdRTLCS"));
}
if(testCase.getPropertyValue("Count") == "3")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdDLASP"));
}

if( Counter &lt;= loopuntil){
    testRunner.gotoStepByName("Set pem");
}</script></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="80fbb56a-d3cc-4029-ba93-4b0e6dcdb6ba"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForStandardUser" searchProperties="true" id="31dfb121-3d99-4549-94de-5bad98d18d1c"><con:settings/><con:testStep type="groovy" name="Set pem" id="4e412bc5-2d72-442b-8181-316dc72d57cb"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");

RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="5b4e0939-fe6d-4852-8c00-34482be1e3db"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="11e7bfeb-a214-4360-81c9-0d20dc8cd1dc"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLSAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#Policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>${#TestCase#NODEUSERIDDecoded}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CDB6E8F77E17E0530F991F0A3A27/Policy/urn:dece:type:policy:TermsOfUse</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="7c35d6a6-9934-40ed-95fb-eeb7d1b27170"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLSAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CDB6E8F77E17E0530F991F0A3A27/Policy/urn:dece:type:policy:UserLinkConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageAccountConsent" disabled="true" id="24e62a2f-0c33-475d-bbda-85bcbe645faf"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="PolicyCreateAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageAccountConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">    
<dece:Policy>       
<dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>       
<dece:Resource>${#Project#Node_Account}</dece:Resource>       
<dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>       
<!--<dece:RequestingEntity>urn:dece:org:org:dece:500501</dece:RequestingEntity>       
<dece:RequestingEntity>urn:dece:org:org:dece:500502</dece:RequestingEntity-->         
<!--<dece:RequestingEntity>urn:dece:org:org:dece:o:pjgdevicetoken:testing</dece:RequestingEntity>-->       
<dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>       
<dece:ResourceStatus>          
<dece:Current CreatedBy="${#Project#NODEUSERIDFAU1}">             
<dece:Value>urn:dece:type:status:active</dece:Value>          </dece:Current>       
</dece:ResourceStatus>    </dece:Policy> </dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true" id="a69cc818-ad79-42a0-926b-5713106b64f9"><con:configuration><scriptText>def hList = messageExchange.getResponseHeaders()
def hitFlag = 0
for (n in hList) {
	if (n.value == "HTTP/1.1 201 Created") {
		hitFlag = 1
	}
}
assert hitFlag
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn%3Adece%3Auserid%3Aorg%3Adece%3A${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID_Encoded}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="bb7cf2c8-e9f9-43ca-bec3-080cab4e0954"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLSAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CDB6E8F77E17E0530F991F0A3A27/Policy/urn:dece:type:policy:ManageUserConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0A408ECEC6AA7E08E05307991F0A8F5E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95c44820-dc3d-41b1-aaeb-046ed883cdd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bebf0d96-3664-4297-8a60-39c898da110e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ae07363f-1c5d-48de-93f1-d5ae9ad79a72</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="STS" searchProperties="true" id="0fc67fe0-db17-4161-8164-c537f7a63266"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7e04da00-2a2c-4bd9-bb9b-fd3bcc3450a5"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem1" id="cd5ea61b-23a8-4780-b9af-279c4aab5494"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("STS - POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="STS - POST" id="e7a9c5e3-79d8-4679-89f4-0d630222e495"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/SecurityTokenExchange" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="STS - POST" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" id="d4c50fa6-0b2e-46ce-b588-c8699cf74374"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
<Credentials xmlns="${#Project#Coordinator_Schema}">
  <Username>${#TestCase#UserName}</Username> 
  <Password>${#TestCase#Password}</Password> 
</Credentials>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/SecurityToken/SecurityTokenExchange</con:originalUri><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="audience" value="${#Project#audience}"/>
  <con:entry key="tokentype" value="${#Project#urntokenType_userpassword}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="98c5f251-0317-4a02-9a7d-b1ceb0d7c6a9">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def tStep  = tC.getTestStepByName('STS - POST');

/*
*  Get the HTTP headers
*/
def status = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];

log.info status[0];
//log.info connection[0];
log.info contentType[0];
log.info contentLength[0];
log.info contentLocation[0];

tC.setPropertyValue("status",status[0]);
//tC.setPropertyValue("connection", connection[0]);
tC.setPropertyValue("contentType", contentType[0]);
tC.setPropertyValue("contentLength", contentLength[0]);
tC.setPropertyValue("contentLocation", contentLocation[0]);

//this.log.info "contentLength [$contentLength]";

/*
if (contentLength[0].toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
    def rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);
      log.info strVal[0];

    int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");

    	//XMLbody =  strVal.tokenize('\n').last();

	String XMLbody  = strVal.substring(startAssert, strVal.size());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}
*/</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="cb5f2845-0209-4f0d-add6-b7f27f7229fa">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
log.info(expectErrType);
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = true;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/rest/1/0/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "text/plain; charset=UTF-8";
		contentLengthZero = true;
		doContentLocaton  = true;
		dobodyXML = false;
	break;
	case "FORBIDDEN":
	default:
		errorReason = "Forbidden";
		errorID = "Forbidden";
		errorLink = "";
		orgRequest = "";
		doContentLocaton  = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	//assert tC.getPropertyValue("connection") == expectHTTPconnection;
}


//Content-Length
if (contentLengthZero) {
	assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	//assert b.getPath().matches("/rest/1/07/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Set pem 1" id="1d6deba7-1e9f-4639-9f4c-9f1d7ae6305c"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("GET - STS");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - STS" id="a15b0636-791f-46be-aa37-3622c5ce472d"><con:settings/><con:config service="STS" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/SecurityToken/Assertion/{ASSERTION}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/json" sslKeystore="RET_concat.pem" id="6021051f-1767-49f5-ad51-bcf2aa4701f2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/SecurityToken/Assertion/_526559ce-3b0b-4611-a6ac-f2b91f9211a9</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ASSERTION" value="${#TestCase#assertionUUID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1" id="635beeb6-dbc7-46f9-bde1-122d6bdd0f01"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def callTSname = tC.getPropertyValue("sName");
//def callTCname = tC.getPropertyValue("tName");
//
//def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def tStep  = tC.getTestStepByName('GET - STS');


/*
*  Get the HTTP headers
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
	   /*	case "Location": 
			contentLocation = value[0];
		break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;*/
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
//def contentLocation = tStep.httpRequest.response.responseHeaders["Content-Location"];

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();
rawResp = new ByteArrayOutputStream();
rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
String XMLbody  = strVal.substring(startAssert, strVal.length());

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
//tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
//tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>" id="f3217336-ddd6-4c64-b37d-c5582afd0dd9"><con:settings/><con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

//import groovy.sql.Sql;
//import org.apache.commons.codec.binary.Base64;

//com.eviware.soapui.support.ClasspathHacker.addFile( new File("opensaml-2.3.1.jar") );

//import org.opensaml.*;
import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");

String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);
    
//ByteArrayOutputStream byteOutputStream    = new ByteArrayOutputStream();
//DeflaterOutputStream deflaterOutputStream = new DeflaterOutputStream(byteOutputStream);

//deflaterOutputStream.write(xmlBytes, 0, xmlBytes.length);
//deflaterOutputStream.close();

/*
// next, base64 encode it
Base64 base64Encoder = new Base64();

byte[] base64EncodedByteArray = base64Encoder.encode(byteOutputStream.toByteArray());
String base64EncodedMessage = new String(base64EncodedByteArray);
*/

//BaseID base64Encoder1 = new BaseID();

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);

// finally, URL encode it
//String urlEncodedMessage = URLEncoder.encode(base64EncodedMessage, "UTF-8");
tC.setPropertyValue("assert", base64encodeStr);

//tP.setPropertyValue("SAMLFAU1_"+tP.getPropertyValue("Count")+"1", "SAML2 Assertion="+base64encodeStr);
tP.setPropertyValue("SAML",base64encodeStr);

//DatatypeHelper DTH = new DatatypeHelper();

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Account and User Info based on Assertion UUID" id="6052e189-bbb8-4d9c-9e9e-87088502b21f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody       = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

if (expectErrType == "" || expectErrType == "SUCCESS") {
                if (XMLbody.length() > 0) {
                                def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

                                                // Verify response sizes...
                                                assert myXML.size() == 1;

                                                /*
                                                String accountId = myXML."saml2:Assertion"."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
                                                String userId    = myXML."saml2:Assertion"."saml2:Subject"."saml2:NameID";
                                                */
                                                String accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
                                                String userId    = myXML."saml2:Subject"."saml2:NameID";
                                                
                                                this.log.info "accountId [$accountId]";
                                                this.log.info "userId [$userId]";

                                                tC.setPropertyValue("assertionAccountId",accountId.substring(accountId.lastIndexOf(":")+1, accountId.length()));
                                                tC.setPropertyValue("assertionUserId",   userId.substring(userId.lastIndexOf(":")+1,userId.length()));
                                                tC.setPropertyValue("assertionAccountIdFULL",accountId);
                                                tC.setPropertyValue("assertionUserIdFULL",userId);
                                                tP.setPropertyValue("Node_Account",accountId);
                                                tP.setPropertyValue("Node_User",userId);

                                                this.log.info "assertionAccountId property is " + tC.getPropertyValue("assertionAccountId");
                                                this.log.info "assertionUserId property is " + tC.getPropertyValue("assertionUserId");
                } else {
                                return false;
                }
}
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value>CE0F1A1CC2F69345E0401F0A07990CC5</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbb/I4EP0rKH1c5UooJCpIXHdpoaVAL/SlMs4E3CYOjR0I/fVrB0iB0i77SUjIk/HMmYvPzBVDYWC5dcYg5iSihTQMKHMzaVVJYupGiBHmUhQCczl2R/V+z7U0w0W7K0qh26oqryXTtuwKArViWEXVRkVDrZierVrgI6fkFO3KdCpUGUugSxlHlFcVyzBLqlEUv7HhuKblWkXNtisvSuERYiZsCxXNULagUlZV5pwvXF1frVbaqqhF8Uy3DMPUn/u9EZ5DiJTa1SaizFFc2+pjzQMMQYA1HIX6lX6gc+Uxd0RmFPEkhq0v7ydfhm44utDxGJldKPld8LrUj7JjE9GIEowC8olkfvrA55FXqAezKCZ8Hv4YhGlIwyqkWMWmTS8U/RDamYYOEMYMqWyOzK2tIfgQA8VQeBh2q8rFeVXLro5jRJkfxSE7PP4/PECXEEQL8FS2C2sL7XyDJzJVuwLsdikOEkaWcCubdYEwsG01AZ9vqjCIwSdpjzDRoCmT6PR9eEfHTTZaZAaM/0mB9oqzMfKIggRqpadnK5xUHsN3j93GfwUNIx0vG+8fn/37agZgXzkT5KXdHI+aMm+izY2l33y6Ic3y46SC+vWh/dKzS3TVfxt8tj+fhg6NzPmDV24Nys70Nmm3Ob2b+L3R4G/nIfWe+M1lxy6l65Q6lbtBd9J4Tp1irJu8zMNZiupwP+88kBvn+eUxWZh2j45frtf9ZbnBpk0WMOtu0Fg5wfR6elluTJ4njQpL4aE8vJ84Yxw3sPV2XbRMRO59/Z+lvw33CP+hbPfmR8n0DTDfHWUbdFuFjqgS4r+TmZQQT/UzVXchyYdxoFypyVuSO9xE0B3xXFHDzdk0Sp2K02g1O0bZbJfrbaNUNMqOY3aMulNpWjuS2aA4gtiMqE+kL0m5m7b5HSAOXQbUg1hdRolgOqb8YrGFOCp06VA8gogyGEeCnon58c4Wa9/7dKxg4bASWSPvMl4phduI39G7uO5ziA8oWfDxPiUPAZMFAcnbsq2Z6GvGRSo+0DLhgaktkUYhEcweS5J1Ba2UdEbCRQASqB5GXhKAtpgvssTobPNvqQizTDpsj7PH9mNYx992GRA6HpEKTMbSAFFFODFbzF0g3wK+PDmDdubriUfkuxLp5DHBGySHn766RLZH3iKtXn002IHOdc+7K7Lx2hy9mn9+/ftN/ZeA9ONc5o68Jdlzu5v6Yn4IxqntOuEDaR9aslwmWe3LklljYV6XVdANSx8BTgQnrsfRO1A9t6KfNYBy4EfOc/khxITP6YgjDqFo1kJ2PGPjGAGTG0dXPLL03HXmwKVIHYeUn5I1A7EtScS/LlTYxVJPiAfibxXF3lfFTtja8yPiFAsHJ3QmT3L4rH/oCxwJs0TQZhTvGz9l4JTzQ2Ge5BwLFw01TTj8/KUg+bCqIIyjhPJuS8kE+xyd4eTrBbhfSt/MZGMg3wvJfy+GKslaAIPYJhnJ7Mvx7sonQGd7PL91+p3qnXanXbfMduWA6kslq50n5QBd7Zv4u2QvT8c9XvsX</con:value></con:property><con:property><con:name>assertId</con:name><con:value>_514248ae-8023-4a30-81d4-2efa959348bb</con:value></con:property><con:property><con:name>assertIdL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value>_514248ae-8023-4a30-81d4-2efa959348bb</con:value></con:property><con:property><con:name>assertPackaged</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertRaw</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value>CE0F1A1CC2F19345E0401F0A07990CC5</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>3512</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value>CE0FA9BFE5F30C65E0401F0A07990DF9</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>uname</con:name><con:value>shikha_user_create_accp_test_20110610_11508</con:value></con:property><con:property><con:name>username</con:name><con:value>SanityFAU_20150303_1425374077748</con:value></con:property><con:property><con:name>useroid</con:name><con:value>CE0FA9BFE5F80C65E0401F0A07990DF9</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>contentType</con:name><con:value>text/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>3009</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/2015/02/SecurityToken/Assertion/_514248ae-8023-4a30-81d4-2efa959348bb</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" ID="_514248ae-8023-4a30-81d4-2efa959348bb" IssueInstant="2015-03-03T09:12:23.448Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><ds:Reference URI="#_514248ae-8023-4a30-81d4-2efa959348bb"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="xs"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><ds:DigestValue>5WX2mY8VmkdsNr+lB0xTvBkqzMQ=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>vfCWKiC7VY8aMAR4ZL45nwMjPzEzWR9no1hUd7DP79bNuEEtnOYfLSPG9UxdWtK6F45xyxn98OPIYBXx93r/1t7tmgxaAeQhFUiK9XZVup14LnTZJyMv7BsbCsls2OPBw9lbJb67BYXYB8sxeU7RQY9TcrBc2jJ321aiQf/HvfQ=</ds:SignatureValue></ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_i1qkspyfdz92lp9s5iyad6rw" NotOnOrAfter="2015-03-03T12:12:23.448Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/RET"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2015-03-03T09:12:13.448Z" NotOnOrAfter="2016-03-03T09:12:23.448Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:DLASP</saml2:Audience><saml2:Audience>urn:dece:org:org:dece:RET_CS_1</saml2:Audience><saml2:Audience>urn:dece:org:org:dece:RET</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa.q.uvvu.com:7001/rest/2015/02/SecurityToken/Assertion/_514248ae-8023-4a30-81d4-2efa959348bb</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2015-03-03T09:12:23.448Z" SessionIndex="_514248ae-8023-4a30-81d4-2efa959348bb"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>800673c1-3147-4c8c-b0c1-58e0015b4b03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>175431f8-b1ab-411a-838d-f62e6ec865f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7b4251c4-b0c9-4524-b11d-58f032477794</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad58565a-ea44-49b7-aab1-812ed0ed9584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>63c7be09-e6de-4048-88a8-4093708a9d7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a41302e2-c2f1-4384-92f7-153edc9522ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2fe33502-92b9-4bc5-9cab-1083378ddd6c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1adab77f-1cd6-4d9f-ac40-f99f00ddbb94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>af3889f5-e9ad-4a18-837c-7ead87c1caed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fdb00829-308f-406e-9775-a6c8de3621f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98f48738-f6c6-4056-be18-f24b60c6a023</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb39d541-2f26-4a00-9fc8-5a5ea810f40b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1d6deba7-1e9f-4639-9f4c-9f1d7ae6305c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate_Basic" searchProperties="true" id="7c7ae868-f90e-4c3a-8f29-ea1f383cbf0f"><con:settings/><con:testStep type="groovy" name="Set properties for user" id="f821d649-bc32-40c2-9f7b-7c4498b9b99e"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));
testCase.setPropertyValue("UserClass",callTC.getPropertyValue("UserClass"));
testCase.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
testCase.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));
testCase.setPropertyValue("LegalGuardian",callTC.getPropertyValue("LegalGuardian"));

def NODEUSERIDFULLDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDFULLDecoded",NODEUSERIDFULLDecoded);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="a8e24fc2-b533-4d28-94f8-782d66e96b1e"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("User_Create");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="9ed15f65-9840-45c7-a665-c1121ea7dc6b"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User" methodName="User_Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="e0b80965-5d28-444f-bd86-fb60556b82b5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:basic" xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>bau</SurName>
	</Name>	
<ContactInfo>
        <PrimaryEmail>			
	       <Value>${#Project#PrimaryEmail}</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>${#Project#AlternateEmail}</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth>
       <LegalGuardian>${#TestCase#LegalGuardian}</LegalGuardian>
       <Credentials> 

               <Username>${#TestCase#UserName}</Username>	
                <Password>${#TestCase#Password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="c34013d7-7784-4dd0-8948-1c434c68760d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="b50ae353-c9ed-47af-bbc5-d3431a194a84"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
	
	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	if (tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
	{
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
		
		int lastColon = urlStr.lastIndexOf(':');
		int lastSlash = urlStr.lastIndexOf('/');
		userid     = urlStr.substring(lastColon + 1);
		def node_User = urlStr.substring(lastSlash + 1);
		
		tP.setPropertyValue("Node_User",node_User);
		     
		tP.setPropertyValue("NODE_USER_ID",userid);
	} 
	else 
	{
		assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
		int lastColon = urlStr.lastIndexOf('%3A');
		int lastSlash = urlStr.lastIndexOf('/');
		userid     = urlStr.substring(lastColon + 3);

		def node_User = urlStr.substring(lastSlash + 1);		
		tP.setPropertyValue("Node_User",node_User);		
		tP.setPropertyValue("NODE_USER_ID",userid);
	}

} else {

assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806/User/urn:dece:userid:org:dece:0A408ECE9B2A7DD3E05307991F0AB81D</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>UserName</con:name><con:value>SanityBAU1_20141215_1418643094372</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB8F0F6588921CE6E0401F0A05991E36</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:0A408E6FB0367D8FE05307991F0AF491</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:basic</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-06-01</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>urn:dece:userid:org:dece:0A408E6FB0367D8FE05307991F0AF491</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ed15f65-9840-45c7-a665-c1121ea7dc6b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Get_API" searchProperties="true" id="e2c4b352-b1d7-45e9-92f5-80017e8c6856"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="39fd81c1-fcb2-401d-91b3-2a3d23d29d39"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SET PEM" id="f5011b4b-580a-4e49-aec1-fec8f76ba93f"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("AccountGet");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountGet" id="5c6ae69f-3e09-4d51-a2a3-4c85c35795d5"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountGet" mediaType="application/xml" sslKeystore="RET_concat.pem" id="e488fd39-a24d-4f2f-ae1c-2a5f76576ad2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="28da194c-7ee2-4ae6-873b-b6ef6163e13d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag=null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag":
			etag = value[0];
			break;
			
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
tP.setPropertyValue("eTag", etag);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="98b1821f-7c3e-4c0d-9524-1f982af0133e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def usercount = context.expand( '${#TestCase#UserCount}' );
//def usercount = context.expand( '${#Project#UserCount}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		//XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The country code is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requestor is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
//if (XMLbodynull) {
//	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
//} else {
//	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
//}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;  -- Comment for cache issue

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	else {
		//assert myXML.Account.size() == 1;
		assert myXML.DisplayName.size() == 1;
		assert myXML.Country.size() == 1;
		assert myXML.RightsLockerID.size() == 1;
		log.info "RightsLockerID : " +  myXML.RightsLockerID;		
		tC.setPropertyValue("RightsLockerID",myXML.RightsLockerID.toString());
		//assert myXML.DomainID.size() == 1;
		assert myXML.UserList.size() == 1;
		//assert myXML.UserList.UserReference.size().toString() == usercount;
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.@CreatedBy.size() == 1;
		assert myXML.ResourceStatus.Current.@CreationDate.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;
		// add available Stream Count - Active Stream Count.
		

	     if(context.expand( '${#TestCase#CS}') == 'Y')
	     {
	       assert myXML.ResourceStatus.History.size() == 1;
	     }
	}
} 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Account AccountID="urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <DisplayName>Sanity_Acc_Create_20150303_024435</DisplayName>
   <Country>US</Country>
   <RightsLockerID>urn:dece:rightslockerid:org:dece:105F899EFEAA1E8AE05307991F0A552E</RightsLockerID>
   <UserList>
      <UserReference>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</UserReference>
   </UserList>
   <ResourceStatus>
      <Current ModificationDate="2015-03-03T09:12:11.342Z" ModifiedBy="urn:dece:org:org:dece:RET" CreationDate="2015-03-03T09:12:03.043Z" CreatedBy="urn:dece:org:org:dece:RET">
         <Value>urn:dece:type:status:active</Value>
         <Description>Flipping Account Status to active</Description>
      </Current>
   </ResourceStatus>
</Account>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UserCount</con:name><con:value>1</con:value></con:property><con:property><con:name>synced</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CS</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>eTag</con:name><con:value>"E23D997E5D8EF2E2E0401F0A07994DAE"</con:value></con:property><con:property><con:name>RightsLockerID</con:name><con:value>urn:dece:rightslockerid:org:dece:105F899EFEAA1E8AE05307991F0A552E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5c6ae69f-3e09-4d51-a2a3-4c85c35795d5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Update_API" searchProperties="true" id="1eedbeec-1eb0-4440-9b3d-d76af50bfb0d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="90256e89-5be5-43f1-a01a-0c11e0e04a95"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

def accName= "Sanity_Acc_Create_new" + new Date().format( 'yyyyMMdd_hhmms' );

tP.setPropertyValue("DisplayName_New",accName); 
</script></con:config></con:testStep><con:testStep type="groovy" name="SET PEM" id="d9c43d7c-fc17-4daa-8d0d-f5710a976d6a"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.settings.SSLSettings;
import com.eviware.soapui.SoapUI 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, "123" );


RestTestRequestStep testStep = testCase.getTestStepByName("AccountUpdate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountUpdate" id="c0481e2d-e8d8-4999-9afc-b864b3924d0f"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountUpdate" id="758d0cd6-9d3d-42d8-a6b1-a3d503080e09" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="${#Project#eTag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
  <DisplayName>${#Project#DisplayName_New}</DisplayName> 
  <Country>${#TestCase#Country}</Country>
  ${#TestCase#ResourceStatus}
</Account>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="d98feb7a-8bae-43b1-89cc-3357e400ef6c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="395cfa69-56af-4676-bb6b-26321b014320"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The country code is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "The member's user ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "A user ID is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACC_ID_INVALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountIDNotValid";
		errorReason = "The account ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIDNotValid";
	break;

	case "CANNOT_UPDATE_COUNTRY":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CountryCannotBeChangedOnceSet";
		errorReason = "The country cannot be changed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CountryCannotBeChangedOnceSet";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";		
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;


     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;	

     case "STS_UPDT_NOT_ALLWD":
          expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;


	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
	/*else {
		this.log.info "ResourceStatus size is " + myXML.ResourceStatus.size();
		this.log.info "ResourceStatus.Current size is " + myXML.ResourceStatus.Current.size();
		this.log.info "ResourceStatus.Current.Value size is " + myXML.ResourceStatus.Current.Value.size();
		this.log.info "ResourceStatus.Current.Description size is " + myXML.ResourceStatus.Current.Description.size();
		this.log.info "myXML.RequestingUserID size is " + myXML.RequestingUserID.size();
		this.log.info "myXML.RightsTokenID size is " + myXML.RightsTokenID.size();
		this.log.info "ExpirationDateTime size is " + myXML.ExpirationDateTime.size();
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;
	
	}*/
} 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>AccountID</con:name><con:value>E2199B56E4032FF7E0401F0A059938C7</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>90174</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c0481e2d-e8d8-4999-9afc-b864b3924d0f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeTest" searchProperties="true" id="9973eb41-078a-47e1-ac9e-61c82c4622b1"><con:settings/><con:testStep type="groovy" name="Establish Testcase Properties" id="f098c51c-942a-4845-a9c1-6e7dcbc07499"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="e358fe56-c3b2-4124-a4f4-380554b8ae37"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.settings.SSLSettings;
import com.eviware.soapui.SoapUI 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, "123" );


RestTestRequestStep testStep = testCase.getTestStepByName("AccountMergeTest");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountMergeTest" id="5ae76c96-778a-4795-904c-b0809ce03507"><con:settings/><con:config service="AccountMerge" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Test/{RetiredAccountID}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMergeTest" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RET_concat.pem" id="5e16d5c4-2369-48aa-ab71-acd888e5abaf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL_RA_FAU1}"/>
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL_SA_FAU1}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:AccountMerge xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
	xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#CoordinatorSchema}">
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_SA_FAU1}</dece:UserReference>                
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_SA_SAU1}</dece:UserReference>
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_SA_BAU1}</dece:UserReference> 
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_RA_FAU1}</dece:UserReference>                
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_RA_SAU1}</dece:UserReference> 
</dece:AccountMerge>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="urn:dece:accountid:org:dece:${#Project#SA_Node_Account_ID}"/>
  <con:entry key="RetiredAccountID" value="urn:dece:accountid:org:dece:${#Project#RA_Node_Account_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Headers" id="61e1ccbb-b304-4547-bdaf-780ef18b655a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMergeTest');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response Headers and Body" id="f475ab86-2205-4287-8722-4d898a6f14b3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The country code is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "The member's user ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "A user ID is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACC_ID_INVALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountIDNotValid";
		errorReason = "The account ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIDNotValid";
	break;

	case "CANNOT_UPDATE_COUNTRY":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CountryCannotBeChangedOnceSet";
		errorReason = "The country cannot be changed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CountryCannotBeChangedOnceSet";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";		
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;


     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;	

     case "STS_UPDT_NOT_ALLWD":
          expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;


	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
} 

</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMerge" searchProperties="true" id="009db14d-e16b-411d-85b3-ceff6018a981"><con:settings/><con:testStep type="groovy" name="Establish Testcase Properties" id="6db931a9-d517-46f1-8dea-14740558169b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="cbbaeaae-7a65-459b-9c58-f7ddd5861716"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.settings.SSLSettings;
import com.eviware.soapui.SoapUI 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, "123" );


RestTestRequestStep testStep = testCase.getTestStepByName("AccountMerge");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountMerge" id="497e38d2-833f-4df1-a15c-42fe1c1bc551"><con:settings/><con:config service="AccountMerge" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/{RetiredAccountID}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMerge" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RET_concat.pem" id="16a5d80c-cb75-497c-8e90-6a944b66410d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL_SA_FAU1}"/>
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL_RA_FAU1}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:AccountMerge xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
	xmlns:md="http://www.movielabs.com/schema/md/v1.2/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#CoordinatorSchema}">
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_SA_FAU1}</dece:UserReference>                
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_SA_SAU1}</dece:UserReference>
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_SA_BAU1}</dece:UserReference> 
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_RA_FAU1}</dece:UserReference>                
	<dece:UserReference ResourceDisposition="urn:dece:type:status:active">${#Project#NODEUSERIDFULL_RA_SAU1}</dece:UserReference> 
</dece:AccountMerge>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="SurvivingAccountID" value="urn:dece:accountid:org:dece:${#Project#SA_Node_Account_ID}"/>
  <con:entry key="RetiredAccountID" value="urn:dece:accountid:org:dece:${#Project#RA_Node_Account_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Headers" id="0803b6b5-f1da-4704-9bee-e34bd98ca63a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMerge');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response Headers and Body" id="d10738f9-7a01-4811-b36f-657c4bb2b837"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The country code is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "The member's user ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "A user ID is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACC_ID_INVALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountIDNotValid";
		errorReason = "The account ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIDNotValid";
	break;

	case "CANNOT_UPDATE_COUNTRY":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CountryCannotBeChangedOnceSet";
		errorReason = "The country cannot be changed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CountryCannotBeChangedOnceSet";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";		
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;


     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;	

     case "STS_UPDT_NOT_ALLWD":
          expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;


	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
} 

</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountMergeUndo" searchProperties="true" id="48dffd83-c0dc-4378-b60e-f00d77d864f4"><con:settings/><con:testStep type="groovy" name="Establish Testcase Properties" id="41450c10-9c9b-4af6-ab6c-6bbaf2bc2139"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="eb4cebb4-7a94-48dd-85d3-a63cce1d4793"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.settings.SSLSettings;
import com.eviware.soapui.SoapUI 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, "123" );


RestTestRequestStep testStep = testCase.getTestStepByName("AccountMergeUndo");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountMergeUndo" id="d46d07de-f15c-4c1d-a442-5e9c5105ce49"><con:settings/><con:config service="AccountMerge" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{SurvivingAccountID}/Merge/Undo" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountMergeUndo" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RETCS_concat.pem" id="71b699a1-d3f2-4c02-b795-693e7b9a60ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL_SA_FAU1}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="SurvivingAccountID" value="urn:dece:accountid:org:dece:${#Project#SA_Node_Account_ID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Headers" id="3d3d4899-5d3a-4898-a851-ea34402b3671"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountMergeUndo');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response Headers and Body" id="6ffa8f99-435a-424f-b727-f1c62926f8c5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#Project#Node_Account}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The country code is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "The member's user ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "A user ID is required.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "ACC_ID_INVALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountIDNotValid";
		errorReason = "The account ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIDNotValid";
	break;

	case "CANNOT_UPDATE_COUNTRY":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:CountryCannotBeChangedOnceSet";
		errorReason = "The country cannot be changed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#CountryCannotBeChangedOnceSet";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";		
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;


     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;	

     case "STS_UPDT_NOT_ALLWD":
          expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;


	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
} 

</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RETCS_concat.pem</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForBasicUser" searchProperties="true" id="87be1060-3f55-4483-922f-8534504ee82d"><con:settings/><con:testStep type="groovy" name="Set pem" id="9590f29b-1806-439a-87a7-b8710f5443ef"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");

RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="9bc6419d-7e02-4576-988c-0f3df98a787f"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="454c39f9-45eb-42b4-bcd8-5e6941588fb7"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLBAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#Policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>${#TestCase#NODEUSERIDDecoded}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCBD4AEC7E37E0530F991F0AA3E5/Policy/urn:dece:type:policy:TermsOfUse</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="6c860400-483b-4661-b9d7-d36648491990"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLBAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCBD4AEC7E37E0530F991F0AA3E5/Policy/urn:dece:type:policy:UserLinkConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageAccountConsent" disabled="true" id="9caa6d99-a0c3-4d12-a9cf-e288245ab233"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="PolicyCreateAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageAccountConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">    
<dece:Policy>       
<dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>       
<dece:Resource>${#Project#Node_Account}</dece:Resource>       
<dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>       
<!--<dece:RequestingEntity>urn:dece:org:org:dece:500501</dece:RequestingEntity>       
<dece:RequestingEntity>urn:dece:org:org:dece:500502</dece:RequestingEntity-->         
<!--<dece:RequestingEntity>urn:dece:org:org:dece:o:pjgdevicetoken:testing</dece:RequestingEntity>-->       
<dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>       
<dece:ResourceStatus>          
<dece:Current CreatedBy="${#Project#NODEUSERIDFAU1}">             
<dece:Value>urn:dece:type:status:active</dece:Value>          </dece:Current>       
</dece:ResourceStatus>    </dece:Policy> </dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true" id="a69cc818-ad79-42a0-926b-5713106b64f9"><con:configuration><scriptText>def hList = messageExchange.getResponseHeaders()
def hitFlag = 0
for (n in hList) {
	if (n.value == "HTTP/1.1 201 Created") {
		hitFlag = 1
	}
}
assert hitFlag
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn%3Adece%3Auserid%3Aorg%3Adece%3A${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID_Encoded}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="07e9e62f-141a-46e5-a831-f8455a39d5d0"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLBAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCBD4AEC7E37E0530F991F0AA3E5/Policy/urn:dece:type:policy:ManageUserConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0A408ECE9B2A7DD3E05307991F0AB81D</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95c44820-dc3d-41b1-aaeb-046ed883cdd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bebf0d96-3664-4297-8a60-39c898da110e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ae07363f-1c5d-48de-93f1-d5ae9ad79a72</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForChildBasicUser" searchProperties="true" id="86f042c7-c229-41e8-ae2b-4c3a3e3d8205"><con:settings/><con:testStep type="groovy" name="Set pem" id="945219a0-5d47-4ba3-83dc-f66ac08fab6d"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_CLGAttestation");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_COPPA");
RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep5 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep5, keyStorePath);
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="f8fa8dd1-13c0-4d0c-9469-376222c059a4"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEUSERIDFULLDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDFULLDecoded",NODEUSERIDFULLDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

def testStep1 = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" )
if( testStep1.disabled )
  testStep1.disabled = false;

def testStep2 = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_ManageUserConsent" )
if( testStep2.disabled )
  testStep2.disabled = false;

</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_CLGAttestation" id="e2a8b6a9-7c33-46ff-8ab8-2e3e52ac6484"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_CLGAttestation" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>     
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDFULLDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}CLGAttestation"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="be360f90-cbca-4172-b63f-f34fcbb6dbc9"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#Policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>${#TestCase#NODEUSERIDDecoded}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDFULLDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_COPPA" id="976be2c6-e8c7-4b5c-a993-6c1173f3a15b"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_COPPA" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:GeoPrivacyAssent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>     
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDFULLDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}GeoPrivacyAssent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="b4054c62-cccf-4928-89ba-ba1480103eb8"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLBAU1}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="e7144cb8-b44e-4ba2-a489-d6c546ee4353"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDFULLDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:FE22E74E9C5120A1E0401F0A05993E12</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:FE22E71DF0EB050FE0401F0A05993E06</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:FE22E70D20B992AEE0401F0A05993E0C</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>538eac1e-267d-47ba-b194-f9953171618c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bac177f5-5586-4318-b970-cc997f810ec4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2dc8a3b-c62a-4c6a-a101-634c57a370ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41774e16-4267-4acd-bbcd-b821f3f16b23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Delete_API" searchProperties="true" id="f876563f-7d3d-48e1-9f5e-44c595e0eefe"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="861982a7-a7ad-4ce7-b9b7-1bd298e64fc7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="6c10c5a5-68e8-4736-a7f5-7944477f61a0"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, "1123" );

RestTestRequestStep testStep = testCase.getTestStepByName("AccountDelete");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountDelete" id="f2f9735c-4db0-436a-9efa-4ef2b80a65d7"><con:settings/><con:config service="Account" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}" methodName="AccountDelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountDelete" mediaType="application/xml" id="0fdb6c42-d0d5-4eec-aff1-840b09bc8b20" sslKeystore="ISC_RETCS_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="${#Project#eTag}"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="d938d154-9353-4b78-92e6-1c1cd65c2b5c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="a2de8be5-d81d-4a61-a6e4-29637a63c9a5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;
     

     
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90259</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RETCS_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>f2f9735c-4db0-436a-9efa-4ef2b80a65d7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Get_API" searchProperties="true" id="9a034d2a-b1ae-4a52-b406-61fb5ebe9859"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f74a9c61-16d4-448a-a898-52c6dcc3fd56"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="5b6f76f8-f098-4cda-9b74-ed08303492c2"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("User_Get");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Get" id="9e29cce0-d04a-4367-b690-165597caf13c"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Get" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="0d647a5c-fada-4b07-b0fd-ab836b95fb74"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="if-modified-since" value="Fri, 25 Jul 2014 15:58:47 GMT"/>
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCDC24327E0DE0530F991F0A1EC7</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="UserID" value="${#TestCase#NodeUserId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="2db466e7-3ddf-40a9-974f-9f6c1b014429"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Get');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag":
			etag = value[0];
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
tP.setPropertyValue("eTag", etag);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="8f86f3d9-231f-41b5-b6ab-b4991749c73a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
//if (XMLbodynull) {
//	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
//} else {
//	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
//}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	
	tC.setPropertyValue("ACCID",accountid);
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT

   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');

    // Following Fields returned for Everyone
    // Contact Info shwon only for CLG or Self or Portal:CS or DECE:CS or COORD:CS - kalyan 05092013
    if ( (RequestorType == "Other")  || (RequestorType == "CS") )
    {
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
//         assert myXML.ContactInfo.size() == 1;
//         assert myXML.ContactInfo.Address.size() == 1;
//         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
//         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
//         assert myXML.ContactInfo.Address.Locality.size() == 1;
//         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
//         assert myXML.ContactInfo.Address.Country.size() == 1;
//         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
//         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
//         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
//         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
    else
    {
    	    assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
         assert myXML.ContactInfo.Address.size() == 1;
         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
         assert myXML.ContactInfo.Address.Locality.size() == 1;
         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
         assert myXML.ContactInfo.Address.Country.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0; 	
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0; 	
         }

   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels

   if(Requestee == "CHILD")
    {

    	  this.log.info "Getting CHILD details";
    	  
  	 if((RequestorType == "CLG") || (RequestorType == "Self") )
  	 {
  	   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
         assert myXML.DateOfBirth.size() == 1;
         log.info "myXML.DateOfBirth....", myXML.DateOfBirth.text();
         tP.setPropertyValue("DOB_XML",myXML.DateOfBirth.text());
             
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() > 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
  	 }
  	 else
  	  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
  	   

         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************

         //firstmask = usernamestring.indexOf('u');
        lastmask = usernamestring.length();
        
     log.info firstmask;
 		 log.info  lastmask;
        usernamestring = usernamestring.substring(1,lastmask-1);
        //usernamestring = "••••••";
   log.info usernamestring;
//        assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
         assert usernamestring == "••••••";

       //*************Verifying Masking of CHILD GivenName details ******************
          
        //firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.length();

         givennamestring = givennamestring.substring(1,lastmask-1);

       // assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
        assert givennamestring == "••••••";

         //*************Verifying Masking of CHILD SurName details ******************
          
       // firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.length();

         surnamestring = surnamestring.substring(1,lastmask-1);

       //assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";     
      assert surnamestring == "••••••";        
    }
  	 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else
             if(myXML.LegalGuardian.size() == 2)     	
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)     	
                {
            	   this.log.info "Getting CHILD Active CLG details for NonCS";
            	 
           	   assert myXML.LegalGuardian.size() == 1;   
           	   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
               }
           else
               {
            	 this.log.info "Getting CHILD Pending CLG details for NonCS";
           	 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
    	       	  
    	    assert myXML.DateOfBirth.size() == 1; 
//    	    log.info "myXML.DateOfBirth......" + myXML.DateOfBirth;
    	    
    	    tP.setPropertyValue("DOB_XML",myXML.DateOfBirth.text());
    	    
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")	
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else if(myXML.LegalGuardian.size() == 2)     	
             {
           	 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
           else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }      	
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";	
           //assert myxml.LegalGuardian.size() == 0; 	
		assert myXML.LegalGuardian.size() == 0; 	
        }
    }  
     else 
    {   
    	    this.log.info "BAU geting other's details";
    	    
    	    assert myXML.DateOfBirth.size() == 1; 
    	    
    	     tP.setPropertyValue("DOB_XML",myXML.DateOfBirth);
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH")	
          {
            if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
          else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }	
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 	
          }      	
    }       
    
  }	// end if for SUCCESS response
} // end if for XML Body Validations

</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:User UserID="urn:dece:userid:org:dece:0A408ECEC6AA7E08E05307991F0A8F5E" UserClass="urn:dece:role:user:class:standard" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Name>
      <dece:GivenName>SanitySAU1_20141215_1418643074315</dece:GivenName>
      <dece:SurName>sau</dece:SurName>
   </dece:Name>
   <dece:ContactInfo>
      <dece:PrimaryEmail VerificationStatus="urn:dece:type:status:pending">
         <dece:Value>testing@uvvutesting.biz</dece:Value>
      </dece:PrimaryEmail>
      <dece:AlternateEmail Notify="false" VerificationStatus="urn:dece:type:status:pending">
         <dece:Value>test_+126@uvvutesting.biz</dece:Value>
      </dece:AlternateEmail>
   </dece:ContactInfo>
   <dece:Languages>
      <dece:Language primary="true">en-us</dece:Language>
      <dece:Language primary="false">de</dece:Language>
   </dece:Languages>
   <dece:DateOfBirth MeetsAgeOfMajority="true">1888-08-09</dece:DateOfBirth>
   <dece:Credentials>
      <dece:Username>sanitysau1_20141215_1418643074315</dece:Username>
   </dece:Credentials>
   <dece:UserRecoveryTokens>
      <dece:RecoveryItem>
         <dece:QuestionID>1200</dece:QuestionID>
         <dece:Question>What is the name of your favorite movie?</dece:Question>
         <dece:QuestionResponse>Turner</dece:QuestionResponse>
      </dece:RecoveryItem>
      <dece:RecoveryItem>
         <dece:QuestionID>1650</dece:QuestionID>
         <dece:Question>What is the name of your favorite song?</dece:Question>
         <dece:QuestionResponse>Phoenix</dece:QuestionResponse>
      </dece:RecoveryItem>
   </dece:UserRecoveryTokens>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2014-12-15T11:29:57.683Z" CreatedBy="urn:dece:org:org:dece:RET" ModificationDate="2014-12-15T11:30:03.313Z" ModifiedBy="urn:dece:org:org:dece:RET">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>Flipping User Status to active</dece:Description>
      </dece:Current>
   </dece:ResourceStatus>
</dece:User>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#Project#Node_User1}</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Other</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>FAU</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90809</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>NodeUserId</con:name><con:value>urn:dece:userid:org:dece:0A408ECEC6AA7E08E05307991F0A8F5E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>cc891f73-44b8-47ce-9d08-8d9a2f63ef82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72b5513-a556-4ec7-9925-002c39bb23ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e29cce0-d04a-4367-b690-165597caf13c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_GetList_API" searchProperties="true" id="f825a6d5-fcaf-4a9f-9dc8-9fce64b955a8"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6bb3dacb-00c5-4c09-b55a-9b27a2f62fc5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("AccountID",tP.getPropertyValue("Node_Account"));

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="c6a61ba8-2fa9-43d9-a175-b31904052857"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("UserGetList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserGetList" id="d42b7cbc-b7d4-4df9-8eef-d9026d01910c"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/List" methodName="UserGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserGetList" mediaType="application/xml" postQueryString="false" accept="" id="2c6efed1-a2fd-4567-bc03-5922f8dd548b" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="5051c2bf-a09b-473f-9c9b-f32c21cdcfde"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserGetList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag":
			etag = value[0];
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
tC.setPropertyValue("eTag", etag);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="3e507e3f-840f-4591-af16-d0014fe41a83"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Query_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def usercount = context.expand( '${#TestCase#UserCount}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/List";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		//XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
	errorID     = "urn:dece:errorid:org:dece:UserNotInAccount";
	errorReason = "The member does not belong to the account.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotInAccount";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";		
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;


     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;
      
     
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
//if (XMLbodynull) {
//	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
//} else {
//	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
//}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	else {
	        //this.log.info myXML.@xmlns.text();
		  assert myXML.size() == 1;
		  assert myXML.UserReference.size().toString() == usercount;
		
		  for(def i = 0;i&lt;myXML.UserReference.size();i++)
		   {
		     assert myXML.UserReference[i].text().matches("urn:dece:userid:org:dece:[0-9,A-F]*");
		     this.log.info "Valid User Reference :  " + myXML.UserReference[i].text();
		   }
	   }
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:UserList xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:UserReference>urn:dece:userid:org:dece:0A408E6FB0367D8FE05307991F0AF491</dece:UserReference>
   <dece:UserReference>urn:dece:userid:org:dece:0A408ECE9B2A7DD3E05307991F0AB81D</dece:UserReference>
   <dece:UserReference>urn:dece:userid:org:dece:0A408ECEC6AA7E08E05307991F0A8F5E</dece:UserReference>
</dece:UserList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>UserCount</con:name><con:value>3</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90940</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>eTag</con:name><con:value>"0A408E9228260317E05307991F0A6F8C:D51699CA"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b651d442-610d-4859-809b-2cbedd24a3c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Update_API" searchProperties="true" id="90e774cf-9b54-422d-b527-c68e8b39cfb5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ce1f1f5a-dbcf-4401-b709-9904590782cf"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="5ab69c6e-a37e-49ea-b783-ccf3393a0d8c"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("UserUpdate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserUpdate" id="c1e5408f-2815-47d2-a35a-ce700b37f9a2"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="UserUpdate_PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserUpdate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="7911d39c-d7fa-4537-abd8-4fa853f207cb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="${#Project#eTag}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:full" UserID="urn:dece:userid:org:dece:${#Project#NODEUSERIDFULL}" xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Name>
      <GivenName>${#TestCase#GivenName}</GivenName>
      <SurName>${#TestCase#SurName}</SurName>
   </Name>
   <ContactInfo>
      <PrimaryEmail>
         <Value>${#Project#PrimaryEmail}</Value>
         <ConfirmationEndpoint>Coordinator-Confirmed</ConfirmationEndpoint>
      </PrimaryEmail>
      <AlternateEmail verified="true" verificationEntity="urn:dece:org:org:dece:${#Project#nodeId}" VerificationStatus="urn:dece:type:status:success" verificationDateTime="2012-11-30T10:05:32"> 	
         <Value>${#Project#AlternateEmail}</Value>
         <ConfirmationEndpoint>confirmed</ConfirmationEndpoint>
      </AlternateEmail>
      <TelephoneNumber>
         <Value>+1.7033453434</Value>
      </TelephoneNumber>
      <MobileTelephoneNumber>
         <Value>+1.7033453434</Value>
      </MobileTelephoneNumber>      
   </ContactInfo>
   <Languages>
      <Language primary="true">en-gb</Language>
   </Languages>
   <DateOfBirth MeetsAgeOfMajority="true">${#Project#DOB_XML}</DateOfBirth>
   <Credentials>
      <Username>${#Project#UserName_FAU1}</Username>
   </Credentials>
   <UserRecoveryTokens>
      <RecoveryItem>
         <QuestionID>1200</QuestionID>
         <Question>What is the name of your favorite movie?</Question>
         <QuestionResponse>Turner</QuestionResponse>
      </RecoveryItem>
      <RecoveryItem>
         <QuestionID>1650</QuestionID>
         <Question>What is the name of your favorite song?</Question>
         <QuestionResponse>Phoenix</QuestionResponse>
      </RecoveryItem>
   </UserRecoveryTokens>
</User>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCDC24327E0DE0530F991F0A1EC7</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="UserID" value="${#Project#NODEUSERIDFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="18091881-4310-4c1b-871b-26bc252b7a8d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="7482c25c-4e14-4425-bb14-728754084c2f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull     = true;
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	
	tC.setPropertyValue("ACCID",accountid);
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
  else
  {
   //Data Types
   // RequestorType: Self, CLG, CS, Other
   // RequestorClass: BAU,SAU,FAU
   //Requestee: CHILD, YOUTH, ADULT

   RequestorType = context.expand( '${#TestCase#RequestorType}');
   RequestorClass = context.expand( '${#TestCase#RequestorClass}');
   Requestee = context.expand( '${#TestCase#Requestee}');

    // Following Fields returned for Everyone
    // Contact Info shwon only for CLG or Self or Portal:CS or DECE:CS or COORD:CS - kalyan 05092013
    if ( (RequestorType == "Other")  || (RequestorType == "CS") )
    {
         assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
//         assert myXML.ContactInfo.size() == 1;
//         assert myXML.ContactInfo.Address.size() == 1;
//         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
//         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
//         assert myXML.ContactInfo.Address.Locality.size() == 1;
//         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
//         assert myXML.ContactInfo.Address.Country.size() == 1;
//         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
//         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
//         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
//         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
    else
    {
    	    assert myXML.@UserClass.size() == 1;
         assert myXML.@UserClass.toString().matches("urn:dece:role:user:class:[a-z]*");
         
         assert myXML.Credentials.size() == 1;
         assert myXML.Credentials.Username.size() == 1;
         assert myXML.Credentials.Password.size() == 0;

         assert myXML.Name.size() == 1;
         assert myXML.Name.GivenName.size() == 1;
         assert myXML.Name.SurName.size() == 1;
             
         assert myXML.ContactInfo.size() == 1;
         assert myXML.ContactInfo.Address.size() == 1;
         assert myXML.ContactInfo.Address.PostalAddress.size() == 1;
         assert myXML.ContactInfo.Address.PostalCode.size() == 1;
         assert myXML.ContactInfo.Address.Locality.size() == 1;
         assert myXML.ContactInfo.Address.StateOrProvince.size() == 1;
         assert myXML.ContactInfo.Address.Country.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.size() == 1;
         assert myXML.ContactInfo.TelephoneNumber.Value.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.size() == 1;
         assert myXML.ContactInfo.MobileTelephoneNumber.Value.size() == 1;
     
         assert myXML.Languages.size() == 1;
         assert myXML.Languages.Language.size() > 0;
     
         assert myXML.ResourceStatus.size() == 1;
         assert myXML.ResourceStatus.Current.size() == 1;
    }
         if(RequestorType == "CS")
         {
           assert myXML.ResourceStatus.History.size() > 0; 	
         } 
         else
         {
           assert myXML.ResourceStatus.History.size() == 0; 	
         }

   /******************************************************************************************************************/
           
   //Filtering fields based on PI and Access levels

   if(Requestee == "CHILD")
    {

    	  this.log.info "Getting CHILD details";
    	  
  	 if((RequestorType == "CLG") || (RequestorType == "Self") )
  	 {
  	   /****************DOB, Security Token and Email Shown only to Self,CLG and CS**********/
         assert myXML.DateOfBirth.size() == 1;     
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0;
        
         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;     
  	 }
  	 else
  	  {
         /****************DOB, Security Token and Email not shown to CS and others**********/
         assert myXML.DateOfBirth.size() == 0;     
       //  assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0;
         //assert myXML.LegalGuardian.size() == 1; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 0;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.size() == 0;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 0;
  	   

         /**************Verifying Masking of CHILD PI details *******************/
          
         usernamestring = myXML.Credentials.Username.toString();
         givennamestring = myXML.Name.GivenName.toString();
         surnamestring = myXML.Name.SurName.toString();
                
         //*************Verifying Masking of CHILD UserName details ******************

         //firstmask = usernamestring.indexOf('u');
        lastmask = usernamestring.length();
        
     log.info firstmask;
 		 log.info  lastmask;
        usernamestring = usernamestring.substring(1,lastmask-1);
        //usernamestring = "••••••";
   log.info usernamestring;
//        assert usernamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
         assert usernamestring == "••••••";

       //*************Verifying Masking of CHILD GivenName details ******************
          
        //firstmask = givennamestring.indexOf('â');
        lastmask = givennamestring.length();

         givennamestring = givennamestring.substring(1,lastmask-1);

       // assert givennamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";
        assert givennamestring == "••••••";

         //*************Verifying Masking of CHILD SurName details ******************
          
       // firstmask = surnamestring.indexOf('â');
        lastmask = surnamestring.length();

         surnamestring = surnamestring.substring(1,lastmask-1);

       //assert surnamestring == "â€¢â€¢â€¢â€¢â€¢â€¢";     
      assert surnamestring == "••••••";        
    }
  	 if(RequestorType == "CS")
          {
             this.log.info "Getting CHILD LG details for CS";
             
             assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else
             if(myXML.LegalGuardian.size() == 2)     	
             {
                if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else
               if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }         
          else if(myXML.LegalGuardian.size() != 0)     	
                {
            	   this.log.info "Getting CHILD Active CLG details for NonCS";
            	 
           	   assert myXML.LegalGuardian.size() == 1;   
           	   assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
               }
           else
               {
            	 this.log.info "Getting CHILD Pending CLG details for NonCS";
           	 assert myXML.LegalGuardian.size() == 0;  
              }
          }
    }  
   else if((RequestorClass == "FAU") || (RequestorClass == "SAU") || (RequestorType == "Self") || (RequestorType == "CS"))
    {
    	       	  
    	    assert myXML.DateOfBirth.size() == 1; 
         assert myXML.UserRecoveryTokens.size() == 1;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() > 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1;
         
          if(Requestee == "YOUTH")	
          {
            this.log.info "Getting YOUTH details";
            assert myXML.LegalGuardian.size() == 0; 
/*
             if(RequestorType == "CS")
            {
              assert myXML.LegalGuardian.size() > 0; 

              if(myXML.LegalGuardian.size() == 1)     	
             {
           	 assert (myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active" || myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:pending");	
             }
             else if(myXML.LegalGuardian.size() == 2)     	
             {
           	 if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:active")
                {
                	assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:pending";
                }
                else if(myXML.LegalGuardian[0].@Status.toString()=="urn:dece:type:status:pending")
             	{
           	  assert myXML.LegalGuardian[1].@Status.toString()=="urn:dece:type:status:active";	
               } 
            }
            else if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
           else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }      	
          }
*/          
       }  
     else
        {
           this.log.info "Getting ADULT details";	
           //assert myxml.LegalGuardian.size() == 0; 	
		assert myXML.LegalGuardian.size() == 0; 	
        }
    }  
     else 
    {   
    	    this.log.info "BAU geting other's details";
    	    
    	    assert myXML.DateOfBirth.size() == 1; 
        // assert myXML.UserRecoveryTokens.size() == 0;
         assert myXML.UserRecoveryTokens.RecoveryItem.size() == 0; 

         assert myXML.ContactInfo.PrimaryEmail.size() == 1;
         assert myXML.ContactInfo.PrimaryEmail.Value.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.size() == 1;
         assert myXML.ContactInfo.AlternateEmail.Value.size() == 1; 
         
         if(Requestee == "YOUTH")	
          {
            if(myXML.LegalGuardian.size() != 0)     	
            {
           	 assert myXML.LegalGuardian.size() == 1;   
           	 assert myXML.LegalGuardian.@Status.toString()=="urn:dece:type:status:active";	
            }
          else
            {
           	 assert myXML.LegalGuardian.size() == 0;  
            }	
          }
          else
          {
            assert myXML.LegalGuardian.size() == 0; 	
          }      	
    }       
    
  }	// end if for SUCCESS response
} // end if for XML Body Validations

</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#Project#Node_User1}</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Other</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>FAU</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90809</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>Raju</con:value></con:property><con:property><con:name>SurName</con:name><con:value>Alluri</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>cc891f73-44b8-47ce-9d08-8d9a2f63ef82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72b5513-a556-4ec7-9925-002c39bb23ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9502db6b-c711-4d04-9372-64700bfdfead</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Delete_API" searchProperties="true" id="687ecfe5-4f68-4863-87a4-27f1e7bd0c3b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="1d1d2574-19fc-4f4e-b13f-cfb30b4cdd31"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SET PEM" id="ef2a4919-b36f-4805-ab21-2259e910515f"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("User_Delete");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Delete" id="b651d442-610d-4859-809b-2cbedd24a3c3"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}" methodName="User_Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Delete" mediaType="application/xml" sslKeystore="RET_concat.pem" id="7394b0f0-9be7-4dc0-8097-d7393146d12b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="${#Project#eTag}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CDB6E8F77E17E0530F991F0A3A27</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="UserID" value="${#Project#NODEUSERIDSAU1}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="aac3b393-f45d-4613-a5c7-f08670eba934"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Delete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="4a8a1c28-fb0d-4fea-93c7-e2d6b2360300"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def url       = context.expand( '${#Project#Provision_HostName}' );
//def urnacct   = tP.getPropertyValue("urnaccount");
//def acct      = tC.getPropertyValue("nodeaccountid");
//def urnnode   = tP.getPropertyValue("urnNode");

//def sh            = tC.getPropertyValue("streamhandleFULL");
//def nodeid        = tC.getPropertyValue("nodeid");
//def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	//errorReason = "API call not authorized";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		//errorReason = "The supplied UserID is invalid.";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	//errorReason = "The requestor is not active.";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	//errorReason = "The supplied UserID was not found.";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		//errorReason = "The user does not have permission to perform the requested action.";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		//errorReason = "Request Account ID not match";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":	
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";

	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		//errorReason = "The identified account is not active.";
		errorReason = "The account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		//errorReason = "The request is unauthorized.";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "USER_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAlreadyDeleted";
		//errorReason = "The user has already been removed.";
		errorReason = "The member has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlreadyDeleted";
     break;

     case "LAST_FULL_USER":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:LastFullAccessUserofAccountCannotBeDeleted";
		//errorReason = "The last remaining full-access user in an account cannot be removed.";
		errorReason = "The last remaining full-access member in an account cannot be removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LastFullAccessUserofAccountCannotBeDeleted";
     break;

     case "FULL_USER_DELETE_NOT_ALLWD":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToDeleteFullAccessUser";
		//errorReason = "Requestor privilege is not sufficient to delete full access users in the account";
		errorReason = "The requesting member does not have permission to delete a full-access member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToDeleteFullAccessUser";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		//errorReason = "The request is unauthorized.";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

     case "USER_ACTIVE_CLG":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:LegalGuardianUserCannotBeDeleted";
		//errorReason = "User cannot be deleted as he is CLG to other users in the account";
		errorReason = "The connected legal guardian (CLG) cannot be removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#LegalGuardianUserCannotBeDeleted";
	break;

	case "USER_PRIVILEGE_INSUFFICIENT":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:RequestorPermissionInsufficientToDeleteUser";
		errorReason = "The requesting member cannot delete the member.";
		//errorReason = "The requesting member cannot delete the member.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPermissionInsufficientToDeleteUser";
	break;

     
     
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	//def a = context.expand( '${#TestCase#httpLocation}');
	def a = URLDecoder.decode(context.expand( '${#TestCase#httpLocation}'), "UTF-8");
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	accountid     = urlStr.substring(lastColon + 1);
	//streamidFULL = urlStr.substring(lastSlash + 1);

	//this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("ACCID",accountid);
	//tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;

		// code added to get the expected and actual responses
		def fileName = tS.project.name + new Date().format( 'yyyyMMdd_hhmms' );

		tP.setPropertyValue("fileName",fileName);
		def testCaseName = testRunner.testCase.name;

		//def logFile = new File(projectPath +"\\" +context.expand( '${#Project#fileName}' )+".xls")
		//logFile.append(testCaseName.toString()+"\t"+context.expand( '${#TestCase#httpStatus}').toString()+"\t"+expectHTTPstatus.toString()+"\t"+"Exp[$errorID]"+"\t"+"ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "]"+"\t"+"\n")

	} 
	
 } 


</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#Project#Node_User1}</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>91155</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>0bf82b90-98b1-4f22-b5f2-fee31bde8abe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>437753d1-2ec7-450f-9e67-a3f918bb35b0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c1e5408f-2815-47d2-a35a-ce700b37f9a2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ResourcePropertyQuery" searchProperties="true" id="ad59220f-ed68-4f33-aa83-c69fa104bce2"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b339ab93-ad28-4684-99eb-847fbb0a8cbf"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="SetPem" id="268a9924-e35e-46ee-a1d3-791db2fdb2dc"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RPQ_Post");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="RPQ_Post" id="2e1f1e48-dcc3-48a8-99f1-86800a7acfc9"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Info" methodName="Post - RPQ" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RPQ_Post" mediaType="application/xml" postQueryString="false" sslKeystore="RET_CS_1_concat.pem" id="06db1b53-4b12-41fd-8929-92e3c7103306"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#TestCase#RPQ_xmlRequestBody}</con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Info</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Major" value="${#Project#versionMajor}"/>
  <con:entry key="Minor" value="${#Project#versionMinor}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="0f595ab0-adbd-4ac9-b665-8249147bb662"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('RPQ_Post');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);


</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="d3bb7974-6b51-4e24-bfee-3a07a6b2db40"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {

                case "FOUND":
					expectHTTPstatus   = "HTTP/1.1 302 Found";
					//expectHTTPstatus   =  "HTTP/1.1 302 Moved Temporarily"
					XMLbodynull        = true;
					httpLocationHeader = true;
                break;

                case "MULTIPLE_CHOICES":
					expectHTTPstatus   = "HTTP/1.1 300 Multiple Choices";
					XMLbodynull        = true;
					httpLocationHeader = true;
                     
                break;

                case "INVALID_NODE":
					expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                break;

                case "NOT_FOUND":
					expectHTTPstatus   = "HTTP/1.1 404 Not Found";
                break;
                
                case "FORBIDDEN":
					expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
					errorID     = "urn:dece:errorid:org:dece:Forbidden";
					errorReason = "The Node is not allowed to perform this request.";
					errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Forbidden";
                break;
                case "ROLEINVALID":
					expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
					errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
					errorReason = "The API call is not authorized.";
					errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";               
                break;

                case "INVALID_METHOD":
					expectHTTPstatus   = "HTTP/1.1 405 Method Not Allowed";
                break;
                case "INVALID_EXPRESSION":
					expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                break;
                case "EMAIL_SHORT":
					expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
                break;
}

// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink Received [" + myXML.Error.ErrorLink.toString() + "] Exp[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
} // end if for XML Body Validations

</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 300 Multiple Choices</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>${#Project#Node_Account}</con:value></con:property><con:property><con:name>UserID</con:name><con:value>${#Project#Node_User1}</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>MULTIPLE_CHOICES</con:value></con:property><con:property><con:name>RequestorType</con:name><con:value>Other</con:value></con:property><con:property><con:name>RequestorClass</con:name><con:value>FAU</con:value></con:property><con:property><con:name>Requestee</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>90809</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>NodeUserId</con:name><con:value>urn:dece:userid:org:dece:FECDD61F9DB4EB0FE0401F0A07994228</con:value></con:property><con:property><con:name>RPQ_xmlRequestBody</con:name><con:value>//User[ContactInfo/PrimaryEmail[Value='testing@uvvutesting.biz']]</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>cc891f73-44b8-47ce-9d08-8d9a2f63ef82</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72b5513-a556-4ec7-9925-002c39bb23ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e29cce0-d04a-4367-b690-165597caf13c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" id="96dfb56d-608d-49d0-a66f-b81fac3092db"><con:settings/><con:testStep type="groovy" name="Setpem" id="78dc0482-bf52-4bf1-a4e5-897d4bbddaaf"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info("Set Pem File!!!");
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath
log.info("Project Path : '" + projectPath + "'");

def eNV = context.expand( '${#Project#ENV}' )
log.info("Environment: '" + eNV+ "'");

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");

def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));

String line;
while ((line = reader.readLine()) != null)
      {
	       if (line.trim().length()==0) continue;
	       if (line.charAt(0)=='#') continue;
	
	       int delimPosition = line.indexOf("=");
	       String key = line.substring(0, delimPosition-0).trim();
	       String value = line.substring(delimPosition+1).trim();
	       propMap.put(key, value);
      }

def certPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows OS!!!";
            File temp = new File( projectPath + "\\..\\..\\Certs\\" + eNV + "\\");
    		  certPath = temp.getCanonicalPath();      
      } 
else 
      {
            log.info "it's Linux OS!!!";
            File temp = new File(projectPath + "/../../Certs/" + eNV + "/");
    		  certPath = temp.getCanonicalPath();
      }  
      
 log.info("Cert path: " + certPath );  
                  
def nodeId = context.expand( '${#Project#nodeid}' )

log.info "nodeId: "+nodeId;

 if (nodeId == "dece:cs")
       {
             nodeId = "dececs";
       }
 else if (nodeId == "coord:cs")
       {
             nodeId = "coordcs";
       }
 else
       {
             nodeId = nodeId;
       }


//log.info "~~~~~~~~~~~~" +nodeId
boolean imFine = true;
def pwd = null;
def certMatchesNodeID = context.expand( '${#Project#CertMatchesNodeID}' )
log.info("CertMatchesNodeID : '" + certMatchesNodeID + "'");
if (certMatchesNodeID == "YES")
{
		File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
		File f2 = new File(certPath+"/"+nodeId + ".jks");
		File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");
		File f4 = new File(certPath+"/"+nodeId + ".pem");

//		log.info("F1 : '" + f1.getPath()+ "'");
//		log.info("F2 : '" + f2.getPath()+ "'");
//		log.info("F3 : '" + f3.getPath()+ "'");
//		log.info("F4 : '" + f4.getPath()+ "'");
	
	// sets the certificate from the specific folder when the certname and NodeId are same
	  if(f1.exists()) 
             {
                   keyStorePath = certPath+"/"+nodeId + "_concat.pem";
                   pwd = "123"
                   log.info("F1 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");      
             }
	  else if(f2.exists())
             {
                  	keyStorePath = certPath+"/"+nodeId + ".jks";
                   	pwd = "abcd1234" 
                   	log.info("F2 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");          
             }
	  else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
                   	pwd = "12elma";
				log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
             }
	  else if(f4.exists()) 
             {
                   	keyStorePath = certPath+"/"+nodeId + ".pem";
                   	pwd = "123";
                   	log.info("F4 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");       
             }
	  else
             {
                  	log.info "No cert file is Found!!!";
                  	imFine = false;
             }
}
else
{
	//to get the certificate name from another property based on the nodeid property.
		
	
       def value = propMap.find{ it.value == nodeId }?.key
       def certName = testProject.getPropertyValue(value+"_cert");       
       log.info "cert name .... " + certName;

		File f1 = new File(certPath+"/"+certName + "_concat.pem");
		File f2 = new File(certPath+"/"+certName + ".jks");
		File f3 = new File(certPath+"/truststore-"+certName + ".jks");
		File f4 = new File(certPath+"/"+certName + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");      
		     
       if(f1.exists()) 
             {
             		
				keyStorePath = certPath+"/"+certName + "_concat.pem";
				pwd = "123";
				log.info("F1 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else if(f2.exists())
             {
				keyStorePath = certPath+"/"+certName + ".jks";
				pwd = "abcd1234";
				log.info("F2 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");           
             }
       else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+certName + ".jks";
                   	pwd = "abcd1234";
                   	log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
                   	         
             }
       else if(f4.exists()) 
             {
				keyStorePath = certPath+"/"+certName + ".pem";
				pwd = "123";  
				log.info("F4 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else
			{
			log.info "No cert file is Found!!!";
			imFine = false;
			}                             
}


if(imFine)
{
      def callTSname = testCase.getPropertyValue("sName");
      def callTCname = testCase.getPropertyValue("tName");
      
      def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
      
      callTC.setPropertyValue("keyStorePath","$keyStorePath");
      testCase.setPropertyValue("keyStorePath","$keyStorePath");
      
      SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
      SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
      log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>StreamCreate</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserValidationTokenCreate_Account_User" searchProperties="true" id="9a3790d1-24de-47a3-97b9-1c2f2e7599d3"><con:settings/><con:testStep type="groovy" name="SetPem" id="51a15e4d-b59c-43a9-9107-d0de5758ba5c"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

//String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
//testCase.setPropertyValue("keyStorePath","");


def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

//Thread.sleep(5000);

//keyStorePath = testCase.getPropertyValue("keyStorePath");
keyStorePath=myTC.getPropertyValue("keyStorePath");

log.info "keyStorePath test: "+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("UserValidationTokenCreate");

this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep,keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate" id="5e3ff2de-196f-4306-b5ae-aea383d4a276"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/User/{UserID}/VerificationToken/{TokenType}" methodName="UserValidationTokenCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" id="183b0939-41cc-4140-a140-bdc10dfca189"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/User/urn:dece:userid:org:dece:0083CCDC24327E0DE0530F991F0A1EC7/VerificationToken/urn:dece:type:token:ResetPassword</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="TokenType" value="${#TestCase#TokenType}"/>
  <con:entry key="UserID" value="${#Project#NODEUSERIDFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="b2e03419-693d-4855-a85e-b959cdeca60c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('UserValidationTokenCreate');
def expXML = tStep.httpRequest.response.getResponseContent();
log.info "Extracting Response Details"

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

log.info "End of Extracting Response Details"
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="c41acf32-a936-4b2a-8ea8-f1473c4216e8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#HostName}' );

def errorRespType = context.expand( '${#TestCase#errorRespType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;


String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype =  "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
                errorHost = "http://error.decellc.org";
} else {
                errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
               case "SUCCESS":        
                			  log.info "Success message --->"	                        
                                expectHTTPstatus   = "HTTP/1.1 200 OK";
                                XMLbodynull        = true;
                                httpLocationHeader = true;
                                //this.log.info "Hello";
                break;           
                
                case "API_NOT_AUTH":
                		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
                		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
                		//errorReason = "API call not authorized";
					errorReason = "The API call is not authorized.";
                		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
                break;

                case "ACCOUNT_FORBIDDEN":
                          expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                          errorID = "urn:dece:errorid:org:dece:AccountIdUnmatched";
                          //errorReason = "Request Account ID not match";
					 errorReason = "The account ID does not match.";
                          errorLink   = "https://qa.q.uvvu.com:7001/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
                break;

                case "SECURITY_FORBIDDEN":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";                               
                                errorID = "urn:dece:errorid:org:dece:securitycontext:forbidden:1122";
                                errorReason = "forbidden";							
                                errorLink   = "https://qa.q.uvvu.com:7001/deceerrors/error/error_response.html";
                break;

                case "NOT_FOUND":
                                expectHTTPstatus = "HTTP/1.1 404 Not Found";                               
                                 XMLbodynull        = true;
                                 httpLocationHeader = true;
                                 expectHTTPcontenttype = "text/xml";                               
                break;   
			
			case "INVALID_TOKENTYPE":						
                                expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:TokenTypeNotValid";
                                //errorReason = "Token type in the request is not valid";
						  errorReason = "The token type is not valid";
                                errorLink   = "https://qa.q.uvvu.com:7001/rest/$major/$minor/error/en/ErrorList.html#TokenTypeNotValid";
                break;   

			case "INVALID_METHOD":
						expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
						errorID = "urn:dece:error:MalformedRequest";
						//errorReason = "405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.";	
						errorReason = "The request cannot be fulfilled because the method is unknown or not supported by the server.";							
			break;
			
			case "INVALID_USERID":						
                                expectHTTPstatus = "HTTP/1.1 400 Bad Request";                               
                                errorID = "urn:dece:errorid:org:dece:UserIdInvalid";
                                //errorReason = "The supplied UserID is invalid.";
						   errorReason = "The user ID is not valid.";
                                errorLink   = "https://qa.q.uvvu.com:7001/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
                break;   
                case "FORBIDDEN_COORD":
			               expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:RequestCannotBeServiced";
						//errorReason = "Coordinator cannot service the request.";
						errorReason = "The request cannot be serviced.";
						errorLink = "https://qa.q.uvvu.com:7001/rest/$major/$minor/error/en/ErrorList.html#RequestCannotBeServiced";
			break;
			case "USER_STATUS_NOT_VALID":
						expectHTTPstatus = "HTTP/1.1 400 Bad Request";
						errorID = "urn:dece:errorid:org:dece:UserStatusNotValid";
						//errorReason = "The user status is invalid.";
						errorReason = "The member\'s status is not valid.";
						errorLink = "https://qa.q.uvvu.com:7001/rest/$major/$minor/error/en/ErrorList.html#UserStatusNotValid";					
			break;
			case "REQUESTOR_NOT_ACTIVE":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:RequestorNotActive";
						//errorReason = "The requestor is not active.";
						errorReason = "The requesting member is not active.";
						errorLink = "https://qa.q.uvvu.com:7001/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";	
			break;
			case "FORBIDDEN_USER_LINK_CONSENT":
						expectHTTPstatus = "HTTP/1.1 403 Forbidden";
						errorID = "urn:dece:errorid:org:dece:Policy:UserLinkConsentRequired";
						errorReason = "The setting of the \"User Link Consent\" policy prevents the requested action from being completed.";
						errorLink = "https://qa.q.uvvu.com:7001/rest/$major/$minor/error/en/ErrorList.html#Policy:UserLinkConsentRequired";	
			break;			
						
			
}

// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
////assert tC.getPropertyValue("connection") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
                assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

                assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
                def myXML = new XmlSlurper().parseText(XMLbody);
  
                if (errorRespType != "SUCCESS" ) {
                                // Verify response sizes...
                                assert myXML.Error.size() == 1;
                                assert myXML.Error.Reason.size() == 1;
                                assert myXML.Error.OriginalRequest.size() == 1;
                                assert myXML.Error.ErrorLink.size() == 1;
                                
                                // ErrorCode
                                this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
                                assert myXML.Error.@ErrorID.toString() == errorID;
                
                                // ErrorReason
                                this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
                                assert myXML.Error.Reason.toString() == errorReason;

                                // ErrorLink
                                assert myXML.Error.ErrorLink.toString() == errorLink;
                } 
                
 } 



</script></con:config></con:testStep><con:properties><con:property><con:name>TokenType</con:name><con:value>urn:dece:type:token:ResetPassword</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorRespType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>05f29811-9d45-4892-ab42-c44278163a96</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5e3ff2de-196f-4306-b5ae-aea383d4a276</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserValidationTokenCreate_PrimaryEmail" searchProperties="true" id="a70333b3-fff7-497f-aaf6-ee711935cd32"><con:settings/><con:testStep type="groovy" name="SetPem" id="024d08ca-33c6-49ed-81b4-86ba6e26a025"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("UserValidationTokenRequest");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserValidationTokenCreate" id="a9ae8924-21ac-4ad4-aa9e-32d658dd5b71"><con:settings/><con:config service="User" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/VerificationToken/{TokenType}?subject={UserIdentifier}" methodName="UserValidationTokenCreate_POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserValidationTokenCreate" mediaType="application/xml" postQueryString="false" id="ee745d0c-4228-4b7b-8480-dc1b8f46e0d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/VerificationToken/urn:dece:type:token:ResetPassword</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="TokenType" value="${#TestCase#TokenType}"/>
  <con:entry key="UserIdentifier" value="${#Project#PrimaryEmail}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="8142f0c5-35ea-4a88-95a1-72f0886cfac5"><con:settings/><con:config><script>import groovy.xml.* ;
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange ;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('UserValidationTokenCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

/*def userVerTokenTS = tP.getTestSuiteByName('Setup');
log.info "userVerTokenTS===="+userVerTokenTS;

def userVerTokenTC = userVerTokenTS.getTestCaseByName('User_VerificationTokenCreate_Request_Post');
log.info "userVerTokenTC===="+userVerTokenTC;

def tStep  = userVerTokenTC.getTestStepByName('UserValidationTokenRequest');
log.info "tStep===="+tStep;

def expXML = tStep.httpRequest.response.getResponseContent();*/

log.info 'expXML=='+expXML;

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;

log.info "tStep.httpRequest.response.responseHeaders ==="+tStep.httpRequest.response.responseHeaders;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
log.info "expXML: "+expXML;

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
log.info "httpStatus==="+status;
tC.setPropertyValue("httpConnect", connection);
log.info "httpConnect==="+connection;
tC.setPropertyValue("httpContentType", contentType);
log.info "httpContentType==="+contentType;
tC.setPropertyValue("httpContentLength", contentLength);
log.info "httpContentLength==="+contentLength;
tC.setPropertyValue("httpLocation", contentLocation);
log.info "httpLocation==="+contentLocation;

log.info "Done setting the properties for the Response";
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="aca67fd2-6568-4ba9-aa39-6acd8efea92e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
log.info 'errorRespType=='+errorRespType
def XMLbody   = context.expand( '${#TestCase#XMLbody}');
log.info 'XMLbody=='+XMLbody

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
//String orgRequest = url + "/merc_api/merc-service/Account/";
String expectHTTPstatus      = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;

def major = context.expand( '${#Project#versionMajor}' );
def minor = context.expand( '${#Project#versionMinor}' );


if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		log.info "We are in SUCCESS Switch-Case";
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "NOT_FOUND":
		log.info "We are in NOT_FOUND Switch-Case";
		expectHTTPstatus   = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:UserIdentifierNotFound";
		errorReason = "The user ID was not found.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdentifierNotFound";
		//httpLocationHeader = true;
		//this.log.info "Hello";
	break;
	case "BAD_REQUEST":
		log.info "We are in BAD_REQUEST Switch-Case";
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:TokenTypeNotValid";
		errorReason = "Token type in the request is not valid";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#TokenTypeNotValid";
	break;

	case "INVALID_REQUEST":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdentifierRequired";
		errorReason = "User Identifier is required to perform the requested action.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdentifierRequired";
	break;

	case "INVALID_STATUS":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserStatusNotValid";
	errorReason = "The member's status is not valid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserStatusNotValid";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	break;
	
	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requestor is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;
	
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;

	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "The user does not have permission to perform the requested action.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "Request Account ID not match";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;	

     case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is unauthorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "ACCT_ALREADY_DELETED":
	     expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:AccountDeleted";
		errorReason = "The account has already been removed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDeleted";
     break;

     case "FORBIDDEN_COORD":
          expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID = "urn:dece:errorid:org:dece:RequestCannotBeServiced";
		errorReason = "The request cannot be serviced.";
		errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestCannotBeServiced";
	break;
	case "FORBIDDEN_LIMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID = "urn:dece:errorid:org:dece:ValidationTokenRetryLimitReached";
		errorReason = "The maximum number of validation token requests allowed for the user identifier has been reached.";
		errorLink = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ValidationTokenRetryLimitReached";
	break;
	
}


log.info "xmlbodynull " + XMLbodynull;

if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

 log.info 'DONE'



</script></con:config></con:testStep><con:properties><con:property><con:name>TokenType</con:name><con:value>urn:dece:type:token:ResetPassword</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>offshoreuvvu@gmail.com</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b3ca7188-ff18-4ab6-92e1-c03925bc6d0d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9ae8924-21ac-4ad4-aa9e-32d658dd5b71</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenCreateRequest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="277320fc-7e6a-48ad-ba60-32ff50322f66">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Properties" id="b385eee4-f168-42d2-add8-b74566b3acce">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
//import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

//def headers = new StringToStringMap()
//headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("assert"));
//testRunner.testCase.getTestStepByName("RightsTokenCreate Request POST").testRequest.setRequestHeaders(headers);

// setUp Node Properties

testCase.setPropertyValue("ALID",CallingTCase.getPropertyValue("ALID"));
testCase.setPropertyValue("ContentID",CallingTCase.getPropertyValue("ContentID"));
testCase.setPropertyValue("SoldAsDisplayName",CallingTCase.getPropertyValue("SoldAsDisplayName") );
testCase.setPropertyValue("SoldAsLanguage",CallingTCase.getPropertyValue("SoldAsLanguage"));
testCase.setPropertyValue("SoldAsContentID",CallingTCase.getPropertyValue("SoldAsContentID"));
testCase.setPropertyValue("SoldAsBundleID",CallingTCase.getPropertyValue("SoldAsBundleID"));
testCase.setPropertyValue("PPContentProfile1",CallingTCase.getPropertyValue("PPContentProfile1"));
testCase.setPropertyValue("PPDiscreteMediaRemaining1",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining1"));
testCase.setPropertyValue("PPDiscreteMediaProfile1",CallingTCase.getPropertyValue("PPDiscreteMediaProfile1"));
testCase.setPropertyValue("PPCanDownLoad1",CallingTCase.getPropertyValue("PPCanStream1"));
testCase.setPropertyValue("PPCanStream1",CallingTCase.getPropertyValue("PPCanStream1"));
testCase.setPropertyValue("PPContentProfile2",CallingTCase.getPropertyValue("PPContentProfile2"));
testCase.setPropertyValue("PPDiscreteMediaRemaining2",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining2"));
testCase.setPropertyValue("PPDiscreteMediaProfile2",CallingTCase.getPropertyValue("PPDiscreteMediaProfile2"));
testCase.setPropertyValue("PPCanDownLoad2",CallingTCase.getPropertyValue("PPCanDownLoad2"));
testCase.setPropertyValue("PPCanStream2",CallingTCase.getPropertyValue("PPCanStream2"));
testCase.setPropertyValue("PPContentProfile3",CallingTCase.getPropertyValue("PPContentProfile3"));
testCase.setPropertyValue("PPDiscreteMediaRemaining3",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining3"));
testCase.setPropertyValue("PPDiscreteMediaProfile3",CallingTCase.getPropertyValue("PPDiscreteMediaProfile3"));
testCase.setPropertyValue("PPCanDownLoad3",CallingTCase.getPropertyValue("PPCanDownLoad3"));
testCase.setPropertyValue("PPCanStream3",CallingTCase.getPropertyValue("PPCanStream3"));
testCase.setPropertyValue("RSCreatedby",CallingTCase.getPropertyValue("RSCreatedby"));
testCase.setPropertyValue("RSCreationDate",CallingTCase.getPropertyValue("RSCreationDate"));
testCase.setPropertyValue("RSValue",CallingTCase.getPropertyValue("RSValue"));
testCase.setPropertyValue("RSDescription",CallingTCase.getPropertyValue("RSDescription"));
testCase.setPropertyValue("LICAcqBaseLoc",CallingTCase.getPropertyValue("LICAcqBaseLoc"));
testCase.setPropertyValue("FFWebLocLocation1",CallingTCase.getPropertyValue("FFWebLocLocation1"));
testCase.setPropertyValue("FFWebLocPreference1",CallingTCase.getPropertyValue("FFWebLocPreference1"));
testCase.setPropertyValue("FFWebLocLocation2",CallingTCase.getPropertyValue("FFWebLocLocation2"));
testCase.setPropertyValue("FFWebLocPreference2",CallingTCase.getPropertyValue("FFWebLocPreference2"));
testCase.setPropertyValue("FFManifestLocLocation1",CallingTCase.getPropertyValue("FFManifestLocLocation1"));
testCase.setPropertyValue("FFManifestLocPreference1",CallingTCase.getPropertyValue("FFManifestLocPreference1"));
testCase.setPropertyValue("FFManifestLocLocation2",CallingTCase.getPropertyValue("FFManifestLocLocation2"));
testCase.setPropertyValue("FFManifestLocPreference2",CallingTCase.getPropertyValue("FFManifestLocPreference2"));
testCase.setPropertyValue("StreamWebLocLocation1",CallingTCase.getPropertyValue("StreamWebLocLocation1"));
testCase.setPropertyValue("StreamWebLocPreference1",CallingTCase.getPropertyValue("StreamWebLocPreference1"));

testCase.setPropertyValue("PINodeID",CallingTCase.getPropertyValue("PINodeID"));
testCase.setPropertyValue("PIRetailerTransx",CallingTCase.getPropertyValue("PIRetailerTransx"));
testCase.setPropertyValue("PIPurchaseAccount",CallingTCase.getPropertyValue("PIPurchaseAccount"));
testCase.setPropertyValue("PIPurchaseUser",CallingTCase.getPropertyValue("PIPurchaseUser"));
testCase.setPropertyValue("PIPurchaseTime",CallingTCase.getPropertyValue("PIPurchaseTime"));
testCase.setPropertyValue("VCAllowedUser",CallingTCase.getPropertyValue("VCAllowedUser"));
testCase.setPropertyValue("RTC_rcStatusHistory",CallingTCase.getPropertyValue("RTC_rcStatusHistory"));
testCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));
//Testing RightTokenCreate Request Properties Loaded correctly.



</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="pem set" id="e4fe7428-c2c8-49d1-8cec-750a883618f1">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("nodeId",nodeId);
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenCreate Request POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="RightsTokenCreate Request POST" id="66453046-7e1c-4b93-9f64-9e4b8eacb2a5"><con:settings/><con:config service="RightsTokenCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken" methodName="RightsTokenCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenCreate Request POST" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept="" id="f98d81db-4418-4e6c-a3f2-c00a6815cf9a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  
xmlns:ns4="${#Project#Coordinator_Schema}"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema 
file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="${#TestCase#ALID}" ContentID="${#TestCase#ContentID}"> 	
	<ns4:SoldAs>
		<ns4:DisplayName Language="${#TestCase#SoldAsLanguage}">${#TestCase#SoldAsDisplayName}</ns4:DisplayName> 		
		<ns4:ContentID>${#TestCase#SoldAsContentID}</ns4:ContentID>
	</ns4:SoldAs>
	<ns4:RightsProfiles>
		<ns4:PurchaseProfile 
MediaProfile="${#TestCase#PPContentProfile1}">
			<ns4:CanDownload>${#TestCase#PPCanDownLoad1}</ns4:CanDownload> 			
			<ns4:CanStream>${#TestCase#PPCanStream1}</ns4:CanStream>
		</ns4:PurchaseProfile>
		<ns4:PurchaseProfile 
MediaProfile="${#TestCase#PPContentProfile2}">
			<ns4:CanDownload>${#TestCase#PPCanDownLoad2}</ns4:CanDownload> 			
			<ns4:CanStream>${#TestCase#PPCanStream2}</ns4:CanStream>
		</ns4:PurchaseProfile>
			</ns4:RightsProfiles> 	
	<ns4:LicenseAcqBaseLoc>${#TestCase#LICAcqBaseLoc}</ns4:LicenseAcqBaseLoc>
	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" 
xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFWebLocLocation1}</ns4:Location> 		
		<ns4:Preference>${#TestCase#FFWebLocPreference1}</ns4:Preference>
	</ns4:FulfillmentWebLoc>
	<ns4:FulfillmentWebLoc 
MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFWebLocLocation2}</ns4:Location> 		
		<ns4:Preference>${#TestCase#FFWebLocPreference2}</ns4:Preference>
	</ns4:FulfillmentWebLoc>
	<ns4:FulfillmentManifestLoc 
MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		
		<ns4:Location>${#TestCase#FFManifestLocLocation1}</ns4:Location>
		<ns4:Preference>${#TestCase#FFManifestLocPreference1}</ns4:Preference> 	
	</ns4:FulfillmentManifestLoc>
	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		
		<ns4:Location>${#TestCase#FFManifestLocLocation2}</ns4:Location>
		<ns4:Preference>${#TestCase#FFManifestLocPreference2}</ns4:Preference> 	
	</ns4:FulfillmentManifestLoc>
	<ns4:StreamWebLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 	
		<ns4:Location>${#TestCase#StreamWebLocLocation1}</ns4:Location> 		 
		<ns4:Preference>${#TestCase#StreamWebLocPreference1}</ns4:Preference> 	
	</ns4:StreamWebLoc> 
	<ns4:StreamWebLoc MediaProfile="${#TestCase#PPContentProfile2}" xsi:type="ns4:ResourceLocation-type"> 	
		<ns4:Location>${#TestCase#StreamWebLocLocation1}</ns4:Location> 		 
		<ns4:Preference>${#TestCase#StreamWebLocPreference1}</ns4:Preference> 	
	</ns4:StreamWebLoc> 
	<ns4:PurchaseInfo>
		<ns4:NodeID>${#TestCase#PINodeID}</ns4:NodeID> 		
		<ns4:RetailerTransaction>${#TestCase#PIRetailerTransx}</ns4:RetailerTransaction> 		
		<ns4:PurchaseAccount>${#TestCase#PIPurchaseAccount}</ns4:PurchaseAccount>
		<ns4:PurchaseUser>${#TestCase#PIPurchaseUser}</ns4:PurchaseUser> 		
		<ns4:PurchaseTime>${#TestCase#PIPurchaseTime}</ns4:PurchaseTime>
	</ns4:PurchaseInfo>
</ns4:RightsTokenData>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="f8c6eea0-e9ac-435e-88bd-d63e988d3cf2">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);

def RT_RequestBody = testCase.getTestStepByName("RightsTokenCreate Request POST").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
callingTCase.setPropertyValue("RightsReqXml",testCase.getPropertyValue("RightsReqXml"));

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Extract RightsToken Info from the Response" id="647b6292-a5f4-4620-ac1a-30cc8de1bff2">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName)

def RightsResHeader = testCase.getTestStepByName("RightsTokenCreate Request POST").httpRequest.response.getResponseHeaders(); 
def RightsResXml = testCase.getTestStepByName("RightsTokenCreate Request POST").httpRequest.response.getContentAsString();
def RightsResTime = testCase.getTestStepByName("RightsTokenCreate Request POST").httpRequest.response.getTimeTaken();
def RightsResHttpStatus = RightsResHeader.getAt("#status#");
def RightsResLocation = RightsResHeader.getAt("Location");
log.info RightsResHttpStatus[0];
log.info RightsResLocation;

log.info "Response Time : $RightsResTime:ms";

testCase.setPropertyValue("RightsResXml",RightsResXml);
testCase.setPropertyValue("RightsResTime",RightsResTime.toString());

if(RightsResHttpStatus[0] == "HTTP/1.1 201 Created")
{
def RTKLoc = RightsResLocation[0].tokenize('/')
log.info RTKLoc[RTKLoc.indexOf("RightsToken").next()];
testCase.setPropertyValue("rightstokenid",RTKLoc[RTKLoc.indexOf("RightsToken").next()] );

def decodedRTKLoc = URLDecoder.decode(RTKLoc[RTKLoc.indexOf("RightsToken").next()],"UTF-8");
log.info "decodedRTKLoc=="+decodedRTKLoc;

testCase.setPropertyValue("rightstokenid",decodedRTKLoc);

log.info RTKLoc[RTKLoc.indexOf("Account").next()];
def decodedAccountIDLoc = URLDecoder.decode(RTKLoc[RTKLoc.indexOf("Account").next()],"UTF-8");
log.info "decodedAccountIDLoc=="+decodedAccountIDLoc;
testCase.setPropertyValue("Accountid",decodedAccountIDLoc);
}
else{
log.info " RightsToken Create failed - [ " + RightsResHttpStatus[0] + " ]"
}
// Returns Rights token , Account id
testCase.setPropertyValue("DBrightstokenid",testCase.getPropertyValue("rightstokenid").tokenize(':').last());
//callingTCase.setPropertyValue("rightstokenid",testCase.getPropertyValue("rightstokenid"));
if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
{
	callingTCase.setPropertyValue("rightstokenid",testCase.getPropertyValue("rightstokenid"));
	
}
else 
{
	callingTCase.setPropertyValue("rightstokenid",URLEncoder.encode(testCase.getPropertyValue("rightstokenid"),"UTF-8"));
}
callingTCase.setPropertyValue("DBrightstokenid",testCase.getPropertyValue("DBrightstokenid"));
log.info testCase.getPropertyValue("DBrightstokenid");
callingTCase.setPropertyValue("RightsResXml",testCase.getPropertyValue("RightsResXml"));
callingTCase.setPropertyValue("RightsReqXml",testCase.getPropertyValue("RightsReqXml"));
callingTCase.setPropertyValue("RightsResTime",testCase.getPropertyValue("RightsResTime"));


</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsTokenCreate RESPONSE" id="75a72d97-e45e-4a1c-9e9f-769a9194dabf">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeId","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenCreate Request POST").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenCreate Request POST").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:tearDownScript><![CDATA[def RightsTCLogs;
def testSteps = new ArrayList();
def testSteplog;
def date = new Date(); 
def RightsTClogFile = new File ("c:\\RightsLog\\RightsTClogFile.txt");

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

count  = 0;

for( r in testRunner.results )
{
   count++ ;
     if (r.toString().indexOf ("Request") != -1)
   {    
   	   def rawRequest = new String( r.rawRequestData );   		     	

   	    testSteplog = "\n\n" + "[" + count.toString() +  "] ###################" + "\n\n" +       
       	"TimeStamp :" + r.getTimeStamp() + "[$date]" +"------TestStep < " + r.testStep.name + " > finished with status < " + r.status + " > Time Taken ::< " + r.timeTaken + " > ms " + "\n\n" +   "---------"+ " CallingTestCase Name :  " + CallingTCase.getName() + "\n\n" + "------------"+ r.testStep.name + "Request Message --------" + "\n\n" + rawRequest.tokenize('\n').last() +"\n\n" + "-------------" + r.testStep.name +" Response Message Header--------" +"\n\n"+ r.getResponseHeaders()+ "\n\n" + " Response Message Body--------" +"\n\n"+ r.testStep.getProperty("response").getValue()+ "\n\n" +"-----"+ r.testStep.name + " Assertions-------" +"\n\n" +   r.messages +
        	" ###################" + "\n\n" ;
   }
    else
   {	
   	 testSteplog = "\n\n" + "[" + count.toString() +  "] ###################### " + "\n\n" +
       "TimeStamp :" + r.getTimeStamp() + "[$date]" + "------TestStep < " + r.testStep.name + " > finished with status < " + r.status + " > Time Taken ::< " + r.timeTaken + " > ms " +"\n\n" +   "---------"+ " CallingTest Case Name :   " + CallingTCase.getName() +
   	  " ###################" + "\n\n";	
   }
   
   testSteps.add(testSteplog); 
   
RightsTCLogs = testSteplog.toString();
log.info RightsTCLogs;
//RightsTClogFile << RightsTCLogs;
}]]></con:tearDownScript>
      <con:properties>
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>105F899C03483FE0E05305991F0A7286</con:value></con:property><con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADBA44DA581C6DE1CE0401F0A079924C8</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>FeedRTCReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property><con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value>1</con:value></con:property>
        
        
        
        <con:property><con:name>FFManifestLocPreference2</con:name><con:value>3</con:value></con:property>
        
        
        
        
        
        
        
        
        <con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>LICAcqBaseLoc</con:name><con:value>ns3.google.com</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property><con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value>transcation</con:value></con:property>
        <con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value>1</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property>
        
        
        
        
        
        
        
        
        
      <con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>&lt;/ns4:RightsTokenData></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>2407</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:105F899C03483FE0E05305991F0A7286</con:value></con:property><con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:retailer</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property><con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RSValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>0</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value>nVfbkqLKEn33Kwzn0bABFW8x3RHFtbFF5SJeXk5gUQKKoBQI+vW7wNHRnp7Zs89Dh11JZdbKzEWy6ju290FzADBGceJHYVURXmv/662dje306YbdY1uNNrSZRs/posYa2r12j2Z7/damVlUwTpES4sQOk9dak2ZaDZpt0IxJdwftzqDdemHb/VWtaqEYk9Bkywtdq+b7IMSD8tjXWhqHg8jGPh6E9h7hQQIHBlBHA7JzYN8w1d6+X1GWB8ZvXpIcBhQFXxwEURDAFxjtqe/U057vDh4YvhvaSRqjH2c6+LX2wzfLspes9RLFLtWkaZqi+xTZ42Df/VZ7q9yckaOEm+i65u0wCn1oB/7FLkCpKPEipwoCN4r9xNv/JjRDMXQRuoFy2IBMO/xWo34eUKL7y0hPIGNsN7BnM7dgOtqgGIUQVWe68lr79ncdvPqasR3iTRTv8af1f4OEwhMKogNyGviW2Q3d30f8olxv3xEcKCEMUuyf0LigycGGCFenMdr4+cjHhHwOrpbtr+b4xjAE/0tLvlOPOAls6ovKCL6LcPL/9OuxV9colh2k6C3W9j0979RbZ9tbz5euuaq/u2fTsDbaawnhcfMV1L3VP9afiXrn1Q+ncX0Run1zG1rQOmdrc7kE76rETr3xSTCoiwAjenj2LBSiIed22Ollt3YvvoX0fKZYayvT9kdqUZ+hmWVsKh/K3Nht2t2wG2znvUAKlYPrdcdi1PbbdSnyl8akpUXuoQUXB+mdDoP+kJ8biWLSKW+w2/XW12w96sjh6WJXxlx9xgYQ6dukrm2T7Xoqvv7M6TGHIq8PdC6TLP5fsHRfsBP7vuCLSbEhr2eC3lRFEdILz4Oz4YJM4YBL/rZgzLm7o7fz5X5Gc0DTJCDwXLAVRyrYyYCZiZyn8pal5vwFkEqMLeJoVkCw4lRdzIRsKVia9i5mnunI1nktB+nqIo5VgEtn3lNFXbQE3RRVFURXW64KaznfqoaaKdpSqJAAgpgfLo7cT5Cc+7CpsKrBNpcGm64WFrFL59F+fFqbYqDyqswbR9lQ1i1BE4dAX85hU0qJ72W0P0SV5Yx7cBoe0BYgKaPJmeCimrtMNWfNsaDbpc18tqmKPFQ1nPFamZVcEbOhNbv8rAXPqbyzF3PRBNNrLaDJS2N6tRhie86Gqg4ywS2dP8TMmdyAqBqdVfhrrUZipov6bCypupKJoLQJYhbgdXPsrWXvBFtaPjTB9rExvCbOpZA8D/UTPLPHii1LYL23GNjSPeizvr2IMnfVywRtOfyIVgoJMwaayHEaIIBoUKRG6s+BEWexk4Pfb/potJGiPfLiispEH7vTJad7fmviTsdzVtjsulPZn7Zsx6OUADa3rR1QFOR8MJ5mO/qS0oXQv3QmH7MF8uPlJRmzGtPxe2xFn6ezhRAFXed9sZx91PMl1MzJ1JjNp5c8Hx+3vUuQvE+499gYqoI7GSM0xbBO0bbEmT2B5ZfvW8KnjU4jtgJclQNA3rqu6BMCc+/bKwnfdVUk5AUqn8n8nJcNIMt1UeEETdtIHjOFspXOmLGqiE5AynReLvSgsuI5gXSKtuerw7Ip0SsTOGUwrS1KrjZj68MFWmnjwLQSkB2sTcgwtHzQ3jdq5kK1YICjZAZH3iKukipgZk8OQzr/sDo0c9ScYGj0wayVG81dPvHc1XnnrnakKcuHV2dpgsAyHzimEIrNK5op6iroXd+3XFVmLT2A+/yw3sNcMEnPSufI5ERd0uhZLgjg42rDJmjmeHkRtyovlv4VkKs2ocVpvfDwMhz7E1NMCWnTB7ps1036XzlWUKzyzLEjDzTwmWPilWMi2BzrSk9gMNvhD3ieuZwsHrWuNRr2D7S2GO0qXF2i3MQP2pOwl5kf9TlzzrreVpvP+4rg8fVws/Ra64Sj7QvU0HDXlX19J4SddnBWR6rGznwqONNbdMzwqDJWmFBsJReJ6sdpnduv/P3l0mo3Z/upkZ6Umf2BmbO3Ps772Xb63qGoWD6zl+7qpEmLCC6v35HPQ/JuvI5R6nHAPk3gm/Yy0vUWweS2LL7DilCVyMfRTv6s4wqL7zQ25dbBoRCDOEFhUnsrvAoNN0iJ0vOdAflyXtcCB9ptAbA9RugKIsOLdJtmJBrQ3X6/2eZ7N7F3RfEJIh+FG784q5Cz14/1nwHC/QCj0EFx4xSl0EO49oeIRb2qSqgTFRKFGJkRkcs8K4mg2WT7EtvlmA7HtLp9XuIlTqKb3V6XiN5xlEzCSQw2CYqfpDJDP0llHUH/4KNCTxeiAhNVgRNSkqN9SpOAeTnZLyFKieKOC9E7aLZ7LIX9/SFABWBqHzlpgF4O3qEsEIWvv82GDXFpLQpYqp3f5vf52a0UZI/jFxtwkQyHSDvRF6K/dcvk9xm3HjO+hQep4xeihtQ1iX14RfL86CddCp7cuVKkdMN83/rZ8BSW+pzR/STn5MM74+93IiKpieh6uzXkaL8cX9LTKS1b0C0EZUzCUwxFdygDwZSowrMZ7VBI3UNQfyXI76g/nXy3P+NLEy80EvI27wlhquXyL25jBsLFbUwhhM//9qr3dCSpW4Ly5CsbH5BLW4H4j/c6OIDFPmKekp8sip2f7foi1sM5JM9ifPmhW6wK+X3+DStgRML6ZIRF8WPwrwJ8dfiz8V7kO5aEsGmdJuj3T6rFbHqt2RBGaZgoQq00PM7LEmdyPqDBz02/hCkF8I8bTY5/e6NZqCODTK69Xbvv9f99c8Mv6QIR8cJ+ieW1lpPLOTk8dB/m8w+AX49ovvOnEf2cydsv5l8tDzX9/D68/QM=</con:value></con:property><con:property><con:name>SoldAsBundleID</con:name><con:value/></con:property><con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>VCAllowedUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StreamWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/streaminglink</con:value></con:property><con:property><con:name>StreamWebLocPreference1</con:name><con:value>3</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_Download_Query" searchProperties="true" id="669ef973-18f3-4d95-9f00-3d6f5cf6bc6e">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="5e7744dc-ddd2-4352-8c34-7fb35afc9aff">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="pem set" id="edd81982-2d43-4c40-8456-9923231d429b">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_DWQ");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="RightsLockerDataGet_DWQ" id="07f84815-9f5e-4c99-9a7a-08adff603270"><con:settings/><con:config service="RightsLockerDataGet_DownLoad_Query" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=download" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsLockerDataGet_DWQ" mediaType="application/xml" sslKeystore="RET_concat.pem" id="16ab7bdc-6988-47f4-85db-2cd338788092"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsLocker Request XML" id="84f4bb2b-b00f-432a-9a54-b65eabc14841">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_DWQ").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Copy of ValidateRightsLockerGet RESPONSE">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_DWQ").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_DWQ").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";

//
//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:0484333842D05F81E05305991F0A06D9" AccountID="urn:dece:accountid:org:dece:0484333842C85F81E05305991F0A06D9" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:048434A02AE76F22E05307991F0A3906">
      <RightsTokenLocation ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_120972337.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_771837851.txt">
         <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/aaa</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/bbb</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ccc</Location>
            <Preference>1</Preference>
         </FulfillmentManifestLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ddd</Location>
            <Preference>3</Preference>
         </FulfillmentManifestLoc>
      </RightsTokenLocation>
   </RightsToken>
</RightsTokenList>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>8916</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_Download_Query without SAML" searchProperties="true" id="b3ad0468-9d16-411e-a161-03a6c531247c">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="5cadcd6c-f103-4eca-bb78-4ae7696a5b99">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="pem set" id="5fea0dc0-b2fb-49ee-ad7b-7b6ccc7bc16e">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_DWQ");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="RightsLockerDataGet_DWQ" id="3456b9bb-3cc4-4ad6-b671-7ecfcb189f6b"><con:settings/><con:config service="RightsLockerDataGet_DownLoad_Query" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=download" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsLockerDataGet_DWQ" mediaType="application/xml" sslKeystore="RET_concat.pem" id="268697ad-a4fe-43a1-8842-1f95f99f5ec1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsLocker Request XML" id="d09d8980-a27b-404e-bfd7-0ed2334d732a">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_DWQ").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="6e51ff0a-436c-4293-8f1a-71b401d724ca">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_DWQ").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_DWQ").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";

//
//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:0484333842D05F81E05305991F0A06D9" AccountID="urn:dece:accountid:org:dece:0484333842C85F81E05305991F0A06D9" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:048434A02AE76F22E05307991F0A3906">
      <RightsTokenLocation ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_120972337.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_771837851.txt">
         <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/aaa</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/bbb</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ddd</Location>
            <Preference>3</Preference>
         </FulfillmentManifestLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ccc</Location>
            <Preference>1</Preference>
         </FulfillmentManifestLoc>
      </RightsTokenLocation>
   </RightsToken>
</RightsTokenList>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>34414</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_Metadata" searchProperties="true" id="d08b241f-b4c1-4415-a92f-77fbc1a6192b">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="91449267-93fb-485b-b080-67225da7556d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="68a5d878-cf7b-450a-a77d-cd4458f2ac30">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_MD");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsLockerDataGet_MD" id="8e0f5496-37e8-4870-95cf-ccfcdcb81761">
        <con:settings/>
        <con:config service="RightsLockerDataGet_Metadata_Query" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=metadata" methodName="RightsLockerDataGet_MD" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="RightsLockerDataGet_MD" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="978d35b7-fe34-4da8-8a20-98e89951f424">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#Query_HostName}</con:endpoint>
            <con:request/>
            <con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Rights Locker  Request XML" id="87df0511-804b-4452-bacc-2052bc89bfc5">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_MD").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="96fd1005-628d-4d62-b7c9-2d34d8f2c4d5">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_MD").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_MD").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:0484333842D05F81E05305991F0A06D9" AccountID="urn:dece:accountid:org:dece:0484333842C85F81E05305991F0A06D9" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:048434A02AE76F22E05307991F0A3906">
      <RightsTokenDetails ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_120972337.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_771837851.txt" Language="EN">
         <TitleDisplay60>A Beautiful Mind</TitleDisplay60>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/04842402EA6347B4E05307991F0A05C0</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/04842402EA6447B4E05307991F0A05C0</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/04842402EA6047B4E05307991F0A05C0</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/04842402EA6147B4E05307991F0A05C0</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/04842402EA6247B4E05307991F0A05C0</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/04842402EA6547B4E05307991F0A05C0</ArtReference>
         <Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</Summary190>
         <Genre>Comedy</Genre>
         <RunLength>PT1H43M0.000S</RunLength>
         <WorkType>Movie</WorkType>
         <RatingSet>
            <ns2:Rating>
               <ns2:Region>
                  <ns2:countryRegion>US</ns2:countryRegion>
                  <ns2:country>US</ns2:country>
               </ns2:Region>
               <ns2:System>ALL</ns2:System>
               <ns2:Value>NotRated</ns2:Value>
               <ns2:LinkToLogo>http://www.mpaa.org</ns2:LinkToLogo>
            </ns2:Rating>
            <ns2:AdultContent>true</ns2:AdultContent>
         </RatingSet>
      </RightsTokenDetails>
   </RightsToken>
</RightsTokenList>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>9401</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>551e926c-ea40-4e07-84bf-aa3ee4cc78f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_Metadata without SAML" searchProperties="true" id="f962a430-fcac-4300-8609-1c4ae27cff59">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="dd9dbc6a-ba3f-4439-9fb1-10c9d5b14b07">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="70544895-06ac-470c-8c1f-bf8acbc98d82">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_MD");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsLockerDataGet_MD" id="43b7e121-82ea-4c67-9e68-f9b7d94af7b5">
        <con:settings/>
        <con:config service="RightsLockerDataGet_Metadata_Query" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=metadata" methodName="RightsLockerDataGet_MD" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="RightsLockerDataGet_MD" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="79a70692-fc8d-457e-a218-bb301095fa2b">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>${#Project#Query_HostName}</con:endpoint>
            <con:request/>
            <con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Rights Locker  Request XML" id="fe854fbb-1695-49e3-923e-0c577ec6982b">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_MD").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="2ccd4e92-bef0-4b6e-98d4-7275807f3270">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_MD").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_MD").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8" AccountID="urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="2" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6">
      <RightsTokenDetails ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" Language="en">
         <TitleDisplay60>A Beautiful Mind</TitleDisplay60>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD27870046FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD2786FF46FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD27870246FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD2786FD46FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD27870146FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD2786FE46FCE05305991F0A4B32</ArtReference>
         <Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</Summary190>
         <Genre>Comedy</Genre>
         <RunLength>PT1H43M0.000S</RunLength>
         <WorkType>Movie</WorkType>
         <RatingSet>
            <ns2:Rating>
               <ns2:Region>
                  <ns2:countryRegion>US</ns2:countryRegion>
                  <ns2:country>US</ns2:country>
               </ns2:Region>
               <ns2:System>ALL</ns2:System>
               <ns2:Value>NotRated</ns2:Value>
               <ns2:LinkToLogo>http://www.mpaa.org</ns2:LinkToLogo>
            </ns2:Rating>
            <ns2:AdultContent>true</ns2:AdultContent>
         </RatingSet>
      </RightsTokenDetails>
   </RightsToken>
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC41C554B3AA8E05307991F0A4C2E">
      <RightsTokenDetails ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" Language="en">
         <TitleDisplay60>A Beautiful Mind</TitleDisplay60>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD27870046FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD2786FF46FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD27870246FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD2786FD46FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD27870146FCE05305991F0A4B32</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/03BBAD2786FE46FCE05305991F0A4B32</ArtReference>
         <Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</Summary190>
         <Genre>Comedy</Genre>
         <RunLength>PT1H43M0.000S</RunLength>
         <WorkType>Movie</WorkType>
         <RatingSet>
            <ns2:Rating>
               <ns2:Region>
                  <ns2:countryRegion>US</ns2:countryRegion>
                  <ns2:country>US</ns2:country>
               </ns2:Region>
               <ns2:System>ALL</ns2:System>
               <ns2:Value>NotRated</ns2:Value>
               <ns2:LinkToLogo>http://www.mpaa.org</ns2:LinkToLogo>
            </ns2:Rating>
            <ns2:AdultContent>true</ns2:AdultContent>
         </RatingSet>
      </RightsTokenDetails>
   </RightsToken>
</RightsTokenList>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>4332</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>551e926c-ea40-4e07-84bf-aa3ee4cc78f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_Reference_Query" searchProperties="true" id="703a9682-db1a-4eac-a721-2f7e0cc91c00">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="1d483c5a-a138-4b6e-80d1-92834003dacb">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="c740d06a-391f-42ad-a66b-def159d74203">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_RF");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsLockerDataGet_RF" id="56222f26-586a-4b02-bc42-531ae57c9036"><con:settings/><con:config service="RightsLockerDataGet_Reference_Query" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=reference" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsLockerDataGet_RF" mediaType="application/xml" sslKeystore="RET_concat.pem" id="a7efec0a-1dc6-4876-bf97-e47fb97d4b3a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Rights Locker Request XML" id="7bdefba9-fe28-4223-be70-454e8c4fd930">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_RF").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="e2f92a02-9fdb-483d-bfce-07ff5a0c9306">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_RF").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_RF").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value>&lt;RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8" AccountID="urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="2" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:33:18.182Z"/>
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC41C554B3AA8E05307991F0A4C2E" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:32:52.553Z"/>
&lt;/RightsTokenList></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>2083</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>551e926c-ea40-4e07-84bf-aa3ee4cc78f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_Reference_Query without SAML" searchProperties="true" id="2b2fd626-b5a2-4d45-8f9f-2b9fba0c83b4">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="7652d2dd-6a5c-4fde-8470-e1199d965daf">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="f22e3d9a-602a-40a2-9a02-3ba3f0ca2a8b">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_RF");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsLockerDataGet_RF" id="8a90ca3e-5f35-477a-89e4-6496a505958e"><con:settings/><con:config service="RightsLockerDataGet_Reference_Query" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List?response=reference" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsLockerDataGet_RF" mediaType="application/xml" sslKeystore="RET_concat.pem" id="5881651e-b2c0-4886-a469-9ce938c914d5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Rights Locker Request XML" id="f46f17ef-76db-4644-a11a-1e892ed6133a">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_RF").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="f63d61c3-977f-4c99-83ea-a93d1b58316d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_RF").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_RF").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value>&lt;RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8" AccountID="urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="2" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:33:18.182Z"/>
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC41C554B3AA8E05307991F0A4C2E" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:32:52.553Z"/>
&lt;/RightsTokenList></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>2924</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>551e926c-ea40-4e07-84bf-aa3ee4cc78f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_List" searchProperties="true" id="8e62035c-1a03-452b-a86b-c60bf6ab66b3">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="a74d82a4-ed4c-4f28-9c60-dbc6782086f2">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="3437abec-d1f5-4d38-a29f-e15987b9dda1">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_byRightsTokenID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsLockerDataGet_byRightsTokenID" id="53fcbbfe-d210-4238-bbcd-66302dad518f"><con:settings/><con:config service="RightsLockerDataGet_byRightsToken" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsLockerDataGet_byRightsTokenID" mediaType="application/xml" sslKeystore="RET_concat.pem" id="72384868-44bf-4588-b6e5-9dd0bb0f746d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Rights Locker  Request XML" id="35181ae3-2d98-4a9f-9018-bb8b93474f84">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_byRightsTokenID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="f4eb78bf-aa39-45a3-95cb-0e17cb22a67b">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_byRightsTokenID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_byRightsTokenID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value>&lt;RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8" AccountID="urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="2" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:33:18.182Z"/>
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC41C554B3AA8E05307991F0A4C2E" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:32:52.553Z"/>
&lt;/RightsTokenList></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>1977</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>551e926c-ea40-4e07-84bf-aa3ee4cc78f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_List without DST" searchProperties="true" id="60043400-e269-4510-8cb4-c6362c023100">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="57c95fce-81f9-4caf-b909-c2295baf4716">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="ba14bde5-b9d7-4023-88f1-c6a190897946">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_byRightsTokenID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsLockerDataGet_byRightsTokenID" id="be856ab1-8d74-4cbe-8e2c-09177f85171f"><con:settings/><con:config service="RightsLockerDataGet_byRightsToken" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsLockerDataGet_byRightsTokenID" mediaType="application/xml" sslKeystore="RET_concat.pem" id="937d3362-4d69-4622-93c8-923ab52bd069"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Rights Locker  Request XML" id="14b16ecf-c8c6-40b2-82b4-9844006ac029">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_byRightsTokenID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="da1085a9-3288-4fc6-85dd-f285b89f046f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_byRightsTokenID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_byRightsTokenID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value>&lt;RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8" AccountID="urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="2" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:33:18.182Z"/>
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC41C554B3AA8E05307991F0A4C2E" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:32:52.553Z"/>
&lt;/RightsTokenList></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>2354</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>551e926c-ea40-4e07-84bf-aa3ee4cc78f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsLockerDataGet Request_without_DST" searchProperties="true" id="a4c23797-03b0-4585-893c-5b73bb7b3be6">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Locker Properties" id="b19ed93d-e985-437c-9256-06f507f4e917">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Testing RightLockerDataGet Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTDReq",CallingTCase.getPropertyValue("FeedRTDReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="d8f6131f-e6e6-426b-bf2e-cfb2ab6b316b">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsLockerDataGet_without_DST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsLockerDataGet_without_DST" id="a25b08aa-4915-49c3-a083-41aeb6256122"><con:settings/><con:config service="RightsLockerDataGet_byRightsToken" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/List" methodName="RightsLockerDataGet_byRightTokenID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsLockerDataGet_without_DST" mediaType="application/xml" sslKeystore="RET_concat.pem" id="3bb2d87e-c5d0-4800-aabf-8e7b7da13f2e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Rights Locker  Request XML" id="75caa256-ae71-4a6f-be27-ec6f5524d4fe">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsLockerDataGet_without_DST").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="1f8fe897-1aeb-4263-96c7-76c011a31c66">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsLockerDataGet_without_DST").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsLockerDataGet_without_DST").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        
        <con:property>
          <con:name>FeedRTDReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        
      <con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value>&lt;RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8" AccountID="urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="2" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:33:18.182Z"/>
   &lt;RightsTokenReference RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC41C554B3AA8E05307991F0A4C2E" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-23T12:32:52.553Z"/>
&lt;/RightsTokenList></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>2133</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>Accountid</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>551e926c-ea40-4e07-84bf-aa3ee4cc78f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenDataGet Request_ALID" searchProperties="true" id="80f528f2-c51e-404d-bf68-9b29af3cc745">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="54af2f6b-9762-428e-8dce-a66115456e9b">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("RightsTokenDataGet_ALID").testRequest.setRequestHeaders(headers);


//SetUp test properties

if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
{
	testCase.setPropertyValue("ALID",CallingTCase.getPropertyValue("ALID"));
	
}
else 
{
	testCase.setPropertyValue("ALID",URLEncoder.encode(CallingTCase.getPropertyValue("ALID"),"UTF-8"));
}
testCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="19d9c016-4af2-4ec3-9751-6f9275795d2d">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenDataGet_ALID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      
      
      
      
      
      <con:testStep type="restrequest" name="RightsTokenDataGet_ALID" id="db9b6e36-3614-4153-9868-2007304d8fab"><con:settings/><con:config service="RightsTokenDataGet_ByALID" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/ByMedia/{ALID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenDataGet_ALID" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="46df4fca-38cd-4be0-b601-71bd6a06bc2a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBDsYVqGIw2WEnJFlMMpeXKUVuQIwtOZIMTr5+JQMeICTLzpNL7Vb36YtO96VAWeqGfSGAS8Joo8xSKsJK2jUKTkOGBBEhRRmIUOIw7o+vQ7dph2h3xWiMoq7xs+V4vudduGa7E2DT64BvPj56HTPAuA2dFkbJRaBUhShgRIVEVHYN13Y803FNx586Tuh2Qt9pem3/h9F4AC6UbaXStI0tqFJ0jYWUeWhZ6/W6uW41GZ9brm071rfxdYwXkCGjd7mJqHLEe1t93EwAQ5riJmaZdWkd6FwmIozJnCJZcNj6St7yZVt2x1I6iSDzD0Z9F5IRnbHqOECUUYJRSl6Qzs8Y5IIljX46Z5zIRfZmEI6tDZtQYhM7Hv1gWIfQzjR0gJALZIoFcra2JjADDhRD434y6hofzqtadXXKERUzxjNxePx/eICuIGU5JKbYhbWFdr7BE5nqXQIORxSnhSAruNHNmiMMYltNwOebatxxmJHymgjVoKXQ6Kx9eEfHTTYiMgch/6RAe8XZGHlAaQG9AX4uvwZ+NhXfxZiP13+Xwe0/LGGj++/dCsC+ciWoS7s5HjVl3USbG6PPJC6Xsp3GcT9igwn925nEPyJ4mIw/fln0b17uJs/x5H64+IKH4xtY3r4wNv5WBHMHnI8vfLDw776jT8nnpYPuBP7xKOLPN/dP1sB6DBhb9efD4bex9G7XAaHRMv5LTgbRbHmf5Pm1xfveVy7SZckxt8sWWuXjqT+eBfxL8pRR9pQI/GT7snCDcjF48O1uHc4e/kPZ7s3HxeMSsNwddRuMosaVqhKS75OZlpDEnFWqYa7JR0ig0ujpW5o7wkLRHUlCVcPN2e57djC8uPpkty7aUXA1tP2W3e50nCu7f+V1nB3JbFAcQRwwOiPal6bcTdu8DxBnoQCaADdXrFBMJ4x3LEZIosaITtQjYFTAlCl6TtzkVyvHdoBy8Ry4Cvs6FfaL0bhh8pbe8v5MAj9kZO+AkSeASU5A07buaqHaWkiViSe0KmTqNFeoSaFQxM41x4auF/iWIFmegsZpZSwpUmjmi7zKiyU2X9dEWFTSyXBavbU3ozr+t0uA0kmIVhA6lk+giggnRou3C+RVwP7JEbQz3y8Sop+VyqbkBG+QHP763SS6O+oOia778d0OdK173l2VjZ+D+Kfz59df37TeCcg6zmXtKFmRPbe7oa/GhyKc3q4T8uZTs1itiqr0bc2rXFm3dHIt27ViwIVixOcp+wXUqo1YZ42fGveR71p+iLCQCxpLJCFTvdqojmfsGzEIvW+M1BMrz11mDlyqzEko5SnZIFW7kkb87jqFQ6z1lPhOfdaMJ78LdsLWnh8Vp1o3JKFzfdKj5/mNtsBMmSWKNBnfN37KwCnnh8I6yTUWqfrpsZDw9p+GZsOugTBmBZWjyKgE+wxd4ZTPOYS/lV6ZqYZAvRWS/14LTVK1AAa1SwpS2dfDPdQvgM73WH7r9DXR+20viCJbUfw+0XcC+6JOygG63ivxa8leno57vPcv" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/ByMedia/urn:dece:alid:test:3725260318013214</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="ALID" value="${#TestCase#ALID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="80768a74-75b2-4a8c-bbaa-cc16382ffd0f">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsTokenDataGet_ALID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="ca027870-7b8e-4eb2-99a9-8fbf866049dc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenDataGet_ALID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenDataGet_ALID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>urn:dece:org:org:dece:RET</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value>
        </con:property>
        <con:property>
          <con:name>User_oid</con:name>
          <con:value>A1C0C00EDD42CF8AE0401F0A0599345D</con:value>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADBA9C97E25BA80D9E0401F0A079931A1</con:value></con:property><con:property><con:name>encodedALID</con:name><con:value>urn%3Adece%3Aalid%3Afile%3ARTGET_ALID_R3_EXAMPLE_ALIDVersion_960500.txt</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8" AccountID="urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6">
      <RightsTokenInfo ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt">
         <SoldAs>
            <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
            <ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt</ContentID>
         </SoldAs>
         <RightsProfiles>
            <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
               <CanDownload>true</CanDownload>
               <CanStream>true</CanStream>
            </PurchaseProfile>
            <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
               <CanDownload>true</CanDownload>
               <CanStream>true</CanStream>
            </PurchaseProfile>
         </RightsProfiles>
         <ResourceStatus>
            <Current ModifiedBy="urn:dece:org:org:dece:RET" CreationDate="2014-09-23T12:33:18.182Z" CreatedBy="urn:dece:org:org:dece:RET">
               <Value>urn:dece:type:status:active</Value>
            </Current>
            <History>
               <Prior ModificationDate="2014-09-23T12:33:18.188Z" ModifiedBy="urn:dece:org:org:dece:RET">
                  <Value>urn:dece:type:status:active</Value>
                  <Description>RightsToken has been created.</Description>
               </Prior>
            </History>
         </ResourceStatus>
         <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/aaa</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/bbb</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ccc</Location>
            <Preference>1</Preference>
         </FulfillmentManifestLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ddd</Location>
            <Preference>3</Preference>
         </FulfillmentManifestLoc>
      </RightsTokenInfo>
   </RightsToken>
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC41C554B3AA8E05307991F0A4C2E">
      <RightsTokenInfo ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt">
         <SoldAs>
            <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
            <ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt</ContentID>
         </SoldAs>
         <RightsProfiles>
            <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
               <CanDownload>true</CanDownload>
               <CanStream>true</CanStream>
            </PurchaseProfile>
            <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
               <CanDownload>true</CanDownload>
               <CanStream>true</CanStream>
            </PurchaseProfile>
         </RightsProfiles>
         <ResourceStatus>
            <Current ModifiedBy="urn:dece:org:org:dece:RET" CreationDate="2014-09-23T12:32:52.553Z" CreatedBy="urn:dece:org:org:dece:RET">
               <Value>urn:dece:type:status:active</Value>
            </Current>
            <History>
               <Prior ModificationDate="2014-09-23T12:32:52.559Z" ModifiedBy="urn:dece:org:org:dece:RET">
                  <Value>urn:dece:type:status:active</Value>
                  <Description>RightsToken has been created.</Description>
               </Prior>
            </History>
         </ResourceStatus>
         <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/bbb</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/aaa</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ddd</Location>
            <Preference>3</Preference>
         </FulfillmentManifestLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ccc</Location>
            <Preference>1</Preference>
         </FulfillmentManifestLoc>
      </RightsTokenInfo>
   </RightsToken>
</RightsTokenList>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>5464</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>eab5fdf0-eff8-429e-bb53-b1cc69c6b3ac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenDataGet Request_APID" searchProperties="true" id="0fd39e77-74f1-43da-9fb6-9a160eaec14b">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="a1016634-8a2c-451f-92fb-d5fe8ac7ddaf">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("RightsTokenDataGet_APID").testRequest.setRequestHeaders(headers);


//SetUp test properties

if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
{
	testCase.setPropertyValue("APID",CallingTCase.getPropertyValue("APID"));
	
}
else 
{
	testCase.setPropertyValue("APID",URLEncoder.encode(CallingTCase.getPropertyValue("APID"),"UTF-8"));
}
testCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="a7ee7d41-c17b-4a5d-b08a-07bb96a7bf6c">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenDataGet_APID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsTokenDataGet_APID" id="62c44647-d1af-48d7-911b-309381f42886">
        <con:settings/>
        <con:config service="RightsTokenDataGet_byAPID" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/ByMedia/{APID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="RightsTokenDataGet_APID" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="7254148d-a8bb-4906-a514-a502d4688555">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBDsYVqGIw2WEnJFlMMpeXKUVuQIwtOZIMTr5+JQMeICTLzpNL7Vb36YtO96VAWeqGfSGAS8Joo8xSKsJK2jUKTkOGBBEhRRmIUOIw7o+vQ7dph2h3xWiMoq7xs+V4vudduGa7E2DT64BvPj56HTPAuA2dFkbJRaBUhShgRIVEVHYN13Y803FNx586Tuh2Qt9pem3/h9F4AC6UbaXStI0tqFJ0jYWUeWhZ6/W6uW41GZ9brm071rfxdYwXkCGjd7mJqHLEe1t93EwAQ5riJmaZdWkd6FwmIozJnCJZcNj6St7yZVt2x1I6iSDzD0Z9F5IRnbHqOECUUYJRSl6Qzs8Y5IIljX46Z5zIRfZmEI6tDZtQYhM7Hv1gWIfQzjR0gJALZIoFcra2JjADDhRD434y6hofzqtadXXKERUzxjNxePx/eICuIGU5JKbYhbWFdr7BE5nqXQIORxSnhSAruNHNmiMMYltNwOebatxxmJHymgjVoKXQ6Kx9eEfHTTYiMgch/6RAe8XZGHlAaQG9AX4uvwZ+NhXfxZiP13+Xwe0/LGGj++/dCsC+ciWoS7s5HjVl3USbG6PPJC6Xsp3GcT9igwn925nEPyJ4mIw/fln0b17uJs/x5H64+IKH4xtY3r4wNv5WBHMHnI8vfLDw776jT8nnpYPuBP7xKOLPN/dP1sB6DBhb9efD4bex9G7XAaHRMv5LTgbRbHmf5Pm1xfveVy7SZckxt8sWWuXjqT+eBfxL8pRR9pQI/GT7snCDcjF48O1uHc4e/kPZ7s3HxeMSsNwddRuMosaVqhKS75OZlpDEnFWqYa7JR0ig0ujpW5o7wkLRHUlCVcPN2e57djC8uPpkty7aUXA1tP2W3e50nCu7f+V1nB3JbFAcQRwwOiPal6bcTdu8DxBnoQCaADdXrFBMJ4x3LEZIosaITtQjYFTAlCl6TtzkVyvHdoBy8Ry4Cvs6FfaL0bhh8pbe8v5MAj9kZO+AkSeASU5A07buaqHaWkiViSe0KmTqNFeoSaFQxM41x4auF/iWIFmegsZpZSwpUmjmi7zKiyU2X9dEWFTSyXBavbU3ozr+t0uA0kmIVhA6lk+giggnRou3C+RVwP7JEbQz3y8Sop+VyqbkBG+QHP763SS6O+oOia778d0OdK173l2VjZ+D+Kfz59df37TeCcg6zmXtKFmRPbe7oa/GhyKc3q4T8uZTs1itiqr0bc2rXFm3dHIt27ViwIVixOcp+wXUqo1YZ42fGveR71p+iLCQCxpLJCFTvdqojmfsGzEIvW+M1BMrz11mDlyqzEko5SnZIFW7kkb87jqFQ6z1lPhOfdaMJ78LdsLWnh8Vp1o3JKFzfdKj5/mNtsBMmSWKNBnfN37KwCnnh8I6yTUWqfrpsZDw9p+GZsOugTBmBZWjyKgE+wxd4ZTPOYS/lV6ZqYZAvRWS/14LTVK1AAa1SwpS2dfDPdQvgM73WH7r9DXR+20viCJbUfw+0XcC+6JOygG63ivxa8leno57vPcv" xmlns="http://eviware.com/soapui/config"/></con:setting>
            <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings>
            <con:endpoint>${#Project#Query_HostName}</con:endpoint>
            <con:request/>
            <con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/ByMedia/urn:dece:apid:test:21498262966937542</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
  <con:entry key="APID" value="${#TestCase#APID}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
</con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="8442ae98-58c5-4ff6-a84d-d854b4f7a5e3">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsTokenDataGet_APID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="c9de86e7-cf92-434b-92ec-a9cef7add9bc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenDataGet_APID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenDataGet_APID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>urn:dece:org:org:dece:RET</con:value>
        </con:property>
        <con:property>
          <con:name>APID</con:name>
          <con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:653478442</con:value>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADD795C0DAE1D5682E0401F0A079944E3</con:value></con:property><con:property><con:name>encodedAPID</con:name><con:value>urn%3Adece%3Aapid%3Afile%3ASARVAJEET_CID_DONT_TOUCH_4.txt%3AAUDIO_Number_4</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8" AccountID="urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6">
      <RightsTokenInfo ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt">
         <SoldAs>
            <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
            <ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt</ContentID>
         </SoldAs>
         <RightsProfiles>
            <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
               <CanDownload>true</CanDownload>
               <CanStream>true</CanStream>
            </PurchaseProfile>
            <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
               <CanDownload>true</CanDownload>
               <CanStream>true</CanStream>
            </PurchaseProfile>
         </RightsProfiles>
         <ResourceStatus>
            <Current CreationDate="2014-09-23T12:33:18.182Z" CreatedBy="urn:dece:org:org:dece:RET">
               <Value>urn:dece:type:status:active</Value>
            </Current>
            <History>
               <Prior ModificationDate="2014-09-23T12:33:18.188Z" ModifiedBy="urn:dece:org:org:dece:RET">
                  <Value>urn:dece:type:status:active</Value>
                  <Description>RightsToken has been created.</Description>
               </Prior>
            </History>
         </ResourceStatus>
         <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/bbb</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/aaa</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ccc</Location>
            <Preference>1</Preference>
         </FulfillmentManifestLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ddd</Location>
            <Preference>3</Preference>
         </FulfillmentManifestLoc>
      </RightsTokenInfo>
   </RightsToken>
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC41C554B3AA8E05307991F0A4C2E">
      <RightsTokenInfo ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt">
         <SoldAs>
            <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
            <ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt</ContentID>
         </SoldAs>
         <RightsProfiles>
            <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
               <CanDownload>true</CanDownload>
               <CanStream>true</CanStream>
            </PurchaseProfile>
            <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
               <CanDownload>true</CanDownload>
               <CanStream>true</CanStream>
            </PurchaseProfile>
         </RightsProfiles>
         <ResourceStatus>
            <Current CreationDate="2014-09-23T12:32:52.553Z" CreatedBy="urn:dece:org:org:dece:RET">
               <Value>urn:dece:type:status:active</Value>
            </Current>
            <History>
               <Prior ModificationDate="2014-09-23T12:32:52.559Z" ModifiedBy="urn:dece:org:org:dece:RET">
                  <Value>urn:dece:type:status:active</Value>
                  <Description>RightsToken has been created.</Description>
               </Prior>
            </History>
         </ResourceStatus>
         <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/aaa</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/bbb</Location>
            <Preference>1</Preference>
         </FulfillmentWebLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ccc</Location>
            <Preference>1</Preference>
         </FulfillmentManifestLoc>
         <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
            <Location>https://dl.bestbuy.com/p/ddd</Location>
            <Preference>3</Preference>
         </FulfillmentManifestLoc>
      </RightsTokenInfo>
   </RightsToken>
</RightsTokenList>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>7416</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>931ad8f2-054a-4b2e-86c1-95a34778d3b7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenGet Request" searchProperties="true" id="8e65bdd3-4f94-448f-856e-bf8ee8f6cd0b">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="d1c1bc76-8898-4e72-af5f-62129d9d9cdd">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("RightsTokenGet byTokenID").testRequest.setRequestHeaders(headers);

//SetUp test properties
testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
//if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
//{
//	testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
//	
//}
//else 
//{
//	testCase.setPropertyValue("RightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
//}
testCase.setPropertyValue("PolicyLockerViewAllConsent",CallingTCase.getPropertyValue("PolicyLockerViewAllConsent"));
testCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="81baf055-355d-41e6-996a-f76aca19c833">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenGet byTokenID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      
      
      
      
      
      <con:testStep type="restrequest" name="RightsTokenGet byTokenID" id="74f74f62-43aa-4560-b221-123dad0b4001"><con:settings/><con:config service="RightsTokenGet" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenGet byTokenID" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="c1fa70fd-f1c8-49e6-a8d3-082e27d393d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBDsYVqGIw2WEnJFlMMpeXKUVuQIwtOZIMTr5+JQMeICTLzpNL7Vb36YtO96VAWeqGfSGAS8Joo8xSKsJK2jUKTkOGBBEhRRmIUOIw7o+vQ7dph2h3xWiMoq7xs+V4vudduGa7E2DT64BvPj56HTPAuA2dFkbJRaBUhShgRIVEVHYN13Y803FNx586Tuh2Qt9pem3/h9F4AC6UbaXStI0tqFJ0jYWUeWhZ6/W6uW41GZ9brm071rfxdYwXkCGjd7mJqHLEe1t93EwAQ5riJmaZdWkd6FwmIozJnCJZcNj6St7yZVt2x1I6iSDzD0Z9F5IRnbHqOECUUYJRSl6Qzs8Y5IIljX46Z5zIRfZmEI6tDZtQYhM7Hv1gWIfQzjR0gJALZIoFcra2JjADDhRD434y6hofzqtadXXKERUzxjNxePx/eICuIGU5JKbYhbWFdr7BE5nqXQIORxSnhSAruNHNmiMMYltNwOebatxxmJHymgjVoKXQ6Kx9eEfHTTYiMgch/6RAe8XZGHlAaQG9AX4uvwZ+NhXfxZiP13+Xwe0/LGGj++/dCsC+ciWoS7s5HjVl3USbG6PPJC6Xsp3GcT9igwn925nEPyJ4mIw/fln0b17uJs/x5H64+IKH4xtY3r4wNv5WBHMHnI8vfLDw776jT8nnpYPuBP7xKOLPN/dP1sB6DBhb9efD4bex9G7XAaHRMv5LTgbRbHmf5Pm1xfveVy7SZckxt8sWWuXjqT+eBfxL8pRR9pQI/GT7snCDcjF48O1uHc4e/kPZ7s3HxeMSsNwddRuMosaVqhKS75OZlpDEnFWqYa7JR0ig0ujpW5o7wkLRHUlCVcPN2e57djC8uPpkty7aUXA1tP2W3e50nCu7f+V1nB3JbFAcQRwwOiPal6bcTdu8DxBnoQCaADdXrFBMJ4x3LEZIosaITtQjYFTAlCl6TtzkVyvHdoBy8Ry4Cvs6FfaL0bhh8pbe8v5MAj9kZO+AkSeASU5A07buaqHaWkiViSe0KmTqNFeoSaFQxM41x4auF/iWIFmegsZpZSwpUmjmi7zKiyU2X9dEWFTSyXBavbU3ozr+t0uA0kmIVhA6lk+giggnRou3C+RVwP7JEbQz3y8Sop+VyqbkBG+QHP763SS6O+oOia778d0OdK173l2VjZ+D+Kfz59df37TeCcg6zmXtKFmRPbe7oa/GhyKc3q4T8uZTs1itiqr0bc2rXFm3dHIt27ViwIVixOcp+wXUqo1YZ42fGveR71p+iLCQCxpLJCFTvdqojmfsGzEIvW+M1BMrz11mDlyqzEko5SnZIFW7kkb87jqFQ6z1lPhOfdaMJ78LdsLWnh8Vp1o3JKFzfdKj5/mNtsBMmSWKNBnfN37KwCnnh8I6yTUWqfrpsZDw9p+GZsOugTBmBZWjyKgE+wxd4ZTPOYS/lV6ZqYZAvRWS/14LTVK1AAa1SwpS2dfDPdQvgM73WH7r9DXR+20viCJbUfw+0XcC+6JOygG63ivxa8leno57vPcv" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/urn:dece:rightstokenid:org:dece:0083CCBC6ECD7E31E0530F991F0A4FF1</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#RightsTokenID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3b2ed459-ae8f-4146-aae7-c3dbab1e7376"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('RightsTokenGet byTokenID');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag=null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag":
			etag = value[0];
			break;
			
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
tP.setPropertyValue("eTag", etag);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="23713b73-37c4-4326-aca6-47d8ed07ba15">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsTokenGet byTokenID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="aca8934a-1f67-4497-95f0-e9932de1fcf6">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenGet byTokenID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenGet byTokenID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>urn:dece:org:org:dece:RET</con:value>
        </con:property>
        <con:property>
          <con:name>PolicyLockerViewAllConsent</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADBB728DEF0887428E0401F0A079923A4</con:value></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:ED412F2C78C4C6ADE0401F0A07992A9E</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:RightsTokenInfo ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt">
      <dece:SoldAs>
         <dece:DisplayName Language="en">Avatar BestBuy Special Packaging</dece:DisplayName>
         <dece:ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</dece:ContentID>
      </dece:SoldAs>
      <dece:RightsProfiles>
         <dece:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd" HighDynamicRange="false" HighFrameRate="false" WideColorGamut="false" NextGenAudio="false" ThreeD="false">
            <dece:CanDownload>true</dece:CanDownload>
            <dece:CanStream>true</dece:CanStream>
         </dece:PurchaseProfile>
         <dece:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
            <dece:CanDownload>true</dece:CanDownload>
            <dece:CanStream>true</dece:CanStream>
         </dece:PurchaseProfile>
      </dece:RightsProfiles>
      <dece:ResourceStatus>
         <dece:Current CreationDate="2014-12-15T11:30:42.679Z" CreatedBy="urn:dece:org:org:dece:RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>RightsToken has been created.</dece:Description>
         </dece:Current>
      </dece:ResourceStatus>
      <dece:LicenseAcqBaseLoc>ns3.google.com</dece:LicenseAcqBaseLoc>
      <dece:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <dece:Location>https://dl.bestbuy.com/p/bbb</dece:Location>
         <dece:Preference>1</dece:Preference>
      </dece:FulfillmentWebLoc>
      <dece:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <dece:Location>https://dl.bestbuy.com/p/aaa</dece:Location>
         <dece:Preference>1</dece:Preference>
      </dece:FulfillmentWebLoc>
      <dece:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <dece:Location>https://dl.bestbuy.com/p/ddd</dece:Location>
         <dece:Preference>3</dece:Preference>
      </dece:FulfillmentManifestLoc>
      <dece:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <dece:Location>https://dl.bestbuy.com/p/ccc</dece:Location>
         <dece:Preference>1</dece:Preference>
      </dece:FulfillmentManifestLoc>
      <dece:StreamWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <dece:Location>https://dl.bestbuy.com/p/streaminglink</dece:Location>
         <dece:Preference>3</dece:Preference>
      </dece:StreamWebLoc>
      <dece:StreamWebLoc MediaProfile="urn:dece:type:mediaprofile:sd">
         <dece:Location>https://dl.bestbuy.com/p/streaminglink</dece:Location>
         <dece:Preference>3</dece:Preference>
      </dece:StreamWebLoc>
   </dece:RightsTokenInfo>
</dece:RightsToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBFA085C8A332DE05307991F0A3228" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenInfo ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt">
      <SoldAs>
         <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
         <ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt</ContentID>
      </SoldAs>
      <RightsProfiles>
         <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
            <CanDownload>true</CanDownload>
            <CanStream>true</CanStream>
         </PurchaseProfile>
         <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
            <CanDownload>true</CanDownload>
            <CanStream>true</CanStream>
         </PurchaseProfile>
      </RightsProfiles>
      <ResourceStatus>
         <Current CreationDate="2014-09-23T12:48:13.414Z" CreatedBy="urn:dece:org:org:dece:RET">
            <Value>urn:dece:type:status:active</Value>
         </Current>
         <History>
            <Prior ModificationDate="2014-09-23T12:48:13.419Z" ModifiedBy="urn:dece:org:org:dece:RET">
               <Value>urn:dece:type:status:active</Value>
               <Description>RightsToken has been created.</Description>
            </Prior>
         </History>
      </ResourceStatus>
      <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/aaa</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/bbb</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ddd</Location>
         <Preference>3</Preference>
      </FulfillmentManifestLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ccc</Location>
         <Preference>1</Preference>
      </FulfillmentManifestLoc>
   </RightsTokenInfo>
</RightsToken>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>1980</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenGet Request_without_DST" searchProperties="true" id="c0da1a28-c371-4b49-997a-2b44599ae620">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="dbe12bbf-29fa-41b1-bf1f-d252c8728d7b">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp test properties

if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
{
	testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
	
}
else 
{
	testCase.setPropertyValue("RightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
}
testCase.setPropertyValue("PolicyLockerViewAllConsent",CallingTCase.getPropertyValue("PolicyLockerViewAllConsent"));
testCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="2257af1b-fa13-4ae5-99ca-005bc9c3299e">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenGet byTokenID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      
      
      
      
      
      <con:testStep type="restrequest" name="RightsTokenGet byTokenID" id="4c3bbcf7-af83-4c22-a7a1-4ba2565d8e73"><con:settings/><con:config service="RightsTokenGet" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenGet byTokenID" mediaType="application/xml" id="d51a71c0-a6da-438a-8c31-faf305926023" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/urn:dece:rightstokenid:org:dece:0083CCBC6ECD7E31E0530F991F0A4FF1</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#RightsTokenID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="75a1e99c-4448-43cc-9a49-2a899abccfd6">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsTokenGet byTokenID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="6608d5b2-7cee-480c-94ec-4565da428028">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenGet byTokenID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenGet byTokenID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>urn:dece:org:org:dece:RET</con:value>
        </con:property>
        <con:property>
          <con:name>PolicyLockerViewAllConsent</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADBB728DEF0887428E0401F0A079923A4</con:value></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:ED412F2C78C4C6ADE0401F0A07992A9E</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBC5A364223EE0E05307991F0ABDF6" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenFull ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt">
      <SoldAs>
         <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
         <ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt</ContentID>
      </SoldAs>
      <RightsProfiles>
         <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
            <CanDownload>true</CanDownload>
            <CanStream>true</CanStream>
         </PurchaseProfile>
         <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
            <CanDownload>true</CanDownload>
            <CanStream>true</CanStream>
         </PurchaseProfile>
      </RightsProfiles>
      <ResourceStatus>
         <Current CreationDate="2014-09-23T12:33:18.182Z" CreatedBy="urn:dece:org:org:dece:RET">
            <Value>urn:dece:type:status:active</Value>
         </Current>
         <History>
            <Prior ModificationDate="2014-09-23T12:33:18.188Z" ModifiedBy="urn:dece:org:org:dece:RET">
               <Value>urn:dece:type:status:active</Value>
               <Description>RightsToken has been created.</Description>
            </Prior>
         </History>
      </ResourceStatus>
      <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/aaa</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/bbb</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ccc</Location>
         <Preference>1</Preference>
      </FulfillmentManifestLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ddd</Location>
         <Preference>3</Preference>
      </FulfillmentManifestLoc>
      <PurchaseInfo>
         <NodeID>urn:dece:org:org:dece:RET</NodeID>
         <RetailerTransaction>transcation</RetailerTransaction>
         <PurchaseAccount>urn:dece:accountid:org:dece:03BBB5FBE8481B51E05307991F0A0BF8</PurchaseAccount>
         <PurchaseUser>urn:dece:userid:org:dece:03BBB61CDBAB1BB0E05307991F0A9847</PurchaseUser>
         <PurchaseTime>2011-06-24T15:12:03.000Z</PurchaseTime>
      </PurchaseInfo>
      <RightsLockerID>urn:dece:rightslockerid:org:dece:03BBB5FBE8501B51E05307991F0A0BF8</RightsLockerID>
   </RightsTokenFull>
</RightsToken>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>2446</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenGet Request_without_Account_ID" searchProperties="true" id="82bc8c95-0116-4d86-8e1b-b025ac5603bf">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="7640f0e6-fb56-4e06-a755-356459499274">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp test properties

if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
{
	testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
	
}
else 
{
	testCase.setPropertyValue("RightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
}
testCase.setPropertyValue("PolicyLockerViewAllConsent",CallingTCase.getPropertyValue("PolicyLockerViewAllConsent"));
testCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));

</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="a4c6c9b9-a51e-4d64-9a8b-aa057f256cd6">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenGet byTokenID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      
      
      
      
      
      <con:testStep type="restrequest" name="RightsTokenGetwithoutAccount_ID" id="6022c1e4-9315-4875-9a79-5571c2cf884a"><con:settings/><con:config service="RightsTokenGet_without_Account_ID" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/RightsToken/{RightsTokenID}" methodName="Rights_Token_Get_without_Account_ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenGetwithoutAccount_ID" mediaType="application/json" id="19802f49-c896-4ce0-a2ac-d04f416dbd6b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/RightsToken/urn:dece:rightstokenid:org:dece:0083CCBC6ECD7E31E0530F991F0A4FF1</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="33212a82-b657-40cd-845a-af19d454895a">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsTokenGetwithoutAccount_ID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="4310d950-7240-4a8a-bb18-9b9769db4049">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenGetwithoutAccount_ID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenGetwithoutAccount_ID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>urn:dece:org:org:dece:RET</con:value>
        </con:property>
        <con:property>
          <con:name>PolicyLockerViewAllConsent</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADBB728DEF0887428E0401F0A079923A4</con:value></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:ED412F2C78C4C6ADE0401F0A07992A9E</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:03BBFA085C8A332DE05307991F0A3228" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenFull ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_255052759.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt">
      <SoldAs>
         <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
         <ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_796516102.txt</ContentID>
      </SoldAs>
      <RightsProfiles>
         <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
            <CanDownload>true</CanDownload>
            <CanStream>true</CanStream>
         </PurchaseProfile>
         <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
            <CanDownload>true</CanDownload>
            <CanStream>true</CanStream>
         </PurchaseProfile>
      </RightsProfiles>
      <ResourceStatus>
         <Current CreationDate="2014-09-23T12:48:13.414Z" CreatedBy="urn:dece:org:org:dece:RET">
            <Value>urn:dece:type:status:active</Value>
         </Current>
         <History>
            <Prior ModificationDate="2014-09-23T12:48:13.419Z" ModifiedBy="urn:dece:org:org:dece:RET">
               <Value>urn:dece:type:status:active</Value>
               <Description>RightsToken has been created.</Description>
            </Prior>
         </History>
      </ResourceStatus>
      <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/bbb</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/aaa</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ccc</Location>
         <Preference>1</Preference>
      </FulfillmentManifestLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ddd</Location>
         <Preference>3</Preference>
      </FulfillmentManifestLoc>
      <PurchaseInfo>
         <NodeID>urn:dece:org:org:dece:RET</NodeID>
         <RetailerTransaction>transcation</RetailerTransaction>
         <PurchaseAccount>urn:dece:accountid:org:dece:03BBF6C0FF2976A5E05305991F0A50CE</PurchaseAccount>
         <PurchaseUser>urn:dece:userid:org:dece:03BBF93A11AB767BE05305991F0A2999</PurchaseUser>
         <PurchaseTime>2011-06-24T15:12:03.000Z</PurchaseTime>
      </PurchaseInfo>
      <RightsLockerID>urn:dece:rightslockerid:org:dece:03BBF6C0FF3176A5E05305991F0A50CE</RightsLockerID>
   </RightsTokenFull>
</RightsToken>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>5692</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenUpdate Request" searchProperties="true" id="4b892447-aabe-4363-b1b6-da6a24e58464">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Properties" id="25b651fe-5ca7-43ca-a549-c046b9646a7e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
headers.put("If-Match",testProject.getPropertyValue("eTag"));
testRunner.testCase.getTestStepByName("RightTokenUpdateRequest PUT").testRequest.setRequestHeaders(headers);

if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
{
	testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
	
}
else 
{
	testCase.setPropertyValue("RightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
}
testCase.setPropertyValue("encodedRightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
testCase.setPropertyValue("RightsLockerID",CallingTCase.getPropertyValue("RightsLockerID"));
testCase.setPropertyValue("ALID",CallingTCase.getPropertyValue("ALID"));
testCase.setPropertyValue("ContentID",CallingTCase.getPropertyValue("ContentID"));
testCase.setPropertyValue("SoldAsDisplayName",CallingTCase.getPropertyValue("SoldAsDisplayName") );
testCase.setPropertyValue("SoldAsLanguage",CallingTCase.getPropertyValue("SoldAsLanguage"));
testCase.setPropertyValue("SoldAsContentID",CallingTCase.getPropertyValue("SoldAsContentID"));
testCase.setPropertyValue("SoldAsBundleID",CallingTCase.getPropertyValue("SoldAsBundleID"));
testCase.setPropertyValue("PPContentProfile1",CallingTCase.getPropertyValue("PPContentProfile1"));
testCase.setPropertyValue("PPDiscreteMediaRemaining1",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining1"));
testCase.setPropertyValue("PPDiscreteMediaProfile1",CallingTCase.getPropertyValue("PPDiscreteMediaProfile1"));
testCase.setPropertyValue("PPCanDownLoad1",CallingTCase.getPropertyValue("PPCanDownLoad1"));
testCase.setPropertyValue("PPCanStream1",CallingTCase.getPropertyValue("PPCanStream1"));
testCase.setPropertyValue("PPContentProfile2",CallingTCase.getPropertyValue("PPContentProfile2"));
testCase.setPropertyValue("PPDiscreteMediaRemaining2",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining2"));
testCase.setPropertyValue("PPDiscreteMediaProfile2",CallingTCase.getPropertyValue("PPDiscreteMediaProfile2"));
testCase.setPropertyValue("PPCanDownLoad2",CallingTCase.getPropertyValue("PPCanDownLoad2"));
testCase.setPropertyValue("PPCanStream2",CallingTCase.getPropertyValue("PPCanStream2"));
testCase.setPropertyValue("PPContentProfile3",CallingTCase.getPropertyValue("PPContentProfile3"));
testCase.setPropertyValue("PPDiscreteMediaRemaining3",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining3"));
testCase.setPropertyValue("PPDiscreteMediaProfile3",CallingTCase.getPropertyValue("PPDiscreteMediaProfile3"));
testCase.setPropertyValue("PPCanDownLoad3",CallingTCase.getPropertyValue("PPCanDownLoad3"));
testCase.setPropertyValue("PPCanStream3",CallingTCase.getPropertyValue("PPCanStream3"));
testCase.setPropertyValue("RSCreatedby",CallingTCase.getPropertyValue("RSCreatedby"));
testCase.setPropertyValue("RSCreationDate",CallingTCase.getPropertyValue("RSCreationDate"));
testCase.setPropertyValue("RSValue",CallingTCase.getPropertyValue("RRSValue"));
testCase.setPropertyValue("RSDescription",CallingTCase.getPropertyValue("RSDescription"));
testCase.setPropertyValue("LICAcqBaseLoc",CallingTCase.getPropertyValue("LICAcqBaseLoc"));
testCase.setPropertyValue("FFWebLocLocation1",CallingTCase.getPropertyValue("FFWebLocLocation1"));
testCase.setPropertyValue("FFWebLocPreference1",CallingTCase.getPropertyValue("FFWebLocPreference1"));
testCase.setPropertyValue("FFWebLocLocation2",CallingTCase.getPropertyValue("FFWebLocLocation2"));
testCase.setPropertyValue("FFWebLocPreference2",CallingTCase.getPropertyValue("FFWebLocPreference2"));
testCase.setPropertyValue("FFManifestLocLocation1",CallingTCase.getPropertyValue("FFManifestLocLocation1"));
testCase.setPropertyValue("FFManifestLocPreference1",CallingTCase.getPropertyValue("FFManifestLocPreference1"));
testCase.setPropertyValue("FFManifestLocLocation2",CallingTCase.getPropertyValue("FFManifestLocLocation2"));
testCase.setPropertyValue("FFManifestLocPreference2",CallingTCase.getPropertyValue("FFManifestLocPreference2"));
testCase.setPropertyValue("PINodeID",CallingTCase.getPropertyValue("PINodeID"));
testCase.setPropertyValue("PIRetailerTransx",CallingTCase.getPropertyValue("PIRetailerTransx"));
testCase.setPropertyValue("PIPurchaseAccount",CallingTCase.getPropertyValue("PIPurchaseAccount"));
testCase.setPropertyValue("PIPurchaseUser",CallingTCase.getPropertyValue("PIPurchaseUser"));
testCase.setPropertyValue("PIPurchaseTime",CallingTCase.getPropertyValue("PIPurchaseTime"));
testCase.setPropertyValue("PITransactionType",CallingTCase.getPropertyValue("PITransactionType"));
testCase.setPropertyValue("VCAllowedUser",CallingTCase.getPropertyValue("VCAllowedUser"));
testCase.setPropertyValue("StreamWebLocLocation1",CallingTCase.getPropertyValue("StreamWebLocLocation1"));
testCase.setPropertyValue("StreamWebLocPreference1",CallingTCase.getPropertyValue("StreamWebLocPreference1"));

//Testing RightTokenCreate Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTUReq","OK");
CallingTCase.setPropertyValue("FeedRTUReq",testCase.getPropertyValue("FeedRTUReq"));</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="2e19e5da-ca5c-4585-9fa1-01ba2a7bb53f">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightTokenUpdateRequest PUT");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightTokenUpdateRequest PUT" id="14d875c4-a51b-4b20-b71a-803481075d46">
        <con:settings/>
        <con:config service="RightsTokenUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" methodName="RightsTokenUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="RightTokenUpdateRequest PUT" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept="" id="68744c87-2fa2-4c12-a36c-f69d53ea37f6">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBDsYVqGIw2WEnJFlMMpeXKUVuQIwtOZIMTr5+JQMeICTLzpNL7Vb36YtO96VAWeqGfSGAS8Joo8xSKsJK2jUKTkOGBBEhRRmIUOIw7o+vQ7dph2h3xWiMoq7xs+V4vudduGa7E2DT64BvPj56HTPAuA2dFkbJRaBUhShgRIVEVHYN13Y803FNx586Tuh2Qt9pem3/h9F4AC6UbaXStI0tqFJ0jYWUeWhZ6/W6uW41GZ9brm071rfxdYwXkCGjd7mJqHLEe1t93EwAQ5riJmaZdWkd6FwmIozJnCJZcNj6St7yZVt2x1I6iSDzD0Z9F5IRnbHqOECUUYJRSl6Qzs8Y5IIljX46Z5zIRfZmEI6tDZtQYhM7Hv1gWIfQzjR0gJALZIoFcra2JjADDhRD434y6hofzqtadXXKERUzxjNxePx/eICuIGU5JKbYhbWFdr7BE5nqXQIORxSnhSAruNHNmiMMYltNwOebatxxmJHymgjVoKXQ6Kx9eEfHTTYiMgch/6RAe8XZGHlAaQG9AX4uvwZ+NhXfxZiP13+Xwe0/LGGj++/dCsC+ciWoS7s5HjVl3USbG6PPJC6Xsp3GcT9igwn925nEPyJ4mIw/fln0b17uJs/x5H64+IKH4xtY3r4wNv5WBHMHnI8vfLDw776jT8nnpYPuBP7xKOLPN/dP1sB6DBhb9efD4bex9G7XAaHRMv5LTgbRbHmf5Pm1xfveVy7SZckxt8sWWuXjqT+eBfxL8pRR9pQI/GT7snCDcjF48O1uHc4e/kPZ7s3HxeMSsNwddRuMosaVqhKS75OZlpDEnFWqYa7JR0ig0ujpW5o7wkLRHUlCVcPN2e57djC8uPpkty7aUXA1tP2W3e50nCu7f+V1nB3JbFAcQRwwOiPal6bcTdu8DxBnoQCaADdXrFBMJ4x3LEZIosaITtQjYFTAlCl6TtzkVyvHdoBy8Ry4Cvs6FfaL0bhh8pbe8v5MAj9kZO+AkSeASU5A07buaqHaWkiViSe0KmTqNFeoSaFQxM41x4auF/iWIFmegsZpZSwpUmjmi7zKiyU2X9dEWFTSyXBavbU3ozr+t0uA0kmIVhA6lk+giggnRou3C+RVwP7JEbQz3y8Sop+VyqbkBG+QHP763SS6O+oOia778d0OdK173l2VjZ+D+Kfz59df37TeCcg6zmXtKFmRPbe7oa/GhyKc3q4T8uZTs1itiqr0bc2rXFm3dHIt27ViwIVixOcp+wXUqo1YZ42fGveR71p+iLCQCxpLJCFTvdqojmfsGzEIvW+M1BMrz11mDlyqzEko5SnZIFW7kkb87jqFQ6z1lPhOfdaMJ78LdsLWnh8Vp1o3JKFzfdKj5/mNtsBMmSWKNBnfN37KwCnnh8I6yTUWqfrpsZDw9p+GZsOugTBmBZWjyKgE+wxd4ZTPOYS/lV6ZqYZAvRWS/14LTVK1AAa1SwpS2dfDPdQvgM73WH7r9DXR+20viCJbUfw+0XcC+6JOygG63ivxa8leno57vPcv"/>
  <con:entry key="If-Match" value="&quot;0A408ECE9B3E7DD3E05307991F0AB81D:4FE61BFB&quot;"/>
</xml-fragment>]]></con:setting>
              <con:setting id="RecordRequestRepresentations">false</con:setting>
            </con:settings>
            <con:endpoint>${#Project#Provision_HostName}</con:endpoint>
            <con:request><![CDATA[<ns4:RightsTokenFull ALID="${#TestCase#ALID}" 	xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/WEB-INF/dece.xsd" 	ContentID="${#TestCase#ContentID}" xmlns:ns4="${#Project#Coordinator_Schema}" 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<ns4:SoldAs>
		<ns4:DisplayName Language="${#TestCase#SoldAsLanguage}">${#TestCase#SoldAsDisplayName} 		</ns4:DisplayName>
		<ns4:ContentID>${#TestCase#SoldAsContentID}</ns4:ContentID>
	</ns4:SoldAs>
	<ns4:RightsProfiles>
		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile1}">
			<ns4:DiscreteMediaRightsRemaining 				FulfillmentMethod="${#TestCase#PPDiscreteMediaProfile1}">${#TestCase#PPDiscreteMediaRemaining1} 			</ns4:DiscreteMediaRightsRemaining>
			<ns4:CanDownload>${#TestCase#PPCanDownLoad3}</ns4:CanDownload>
			<ns4:CanStream>${#TestCase#PPCanStream3}</ns4:CanStream>
		</ns4:PurchaseProfile>
		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile2}">
			<ns4:DiscreteMediaRightsRemaining 				FulfillmentMethod="${#TestCase#PPDiscreteMediaProfile1}">${#TestCase#PPDiscreteMediaRemaining1} 			</ns4:DiscreteMediaRightsRemaining>
			<ns4:CanDownload>${#TestCase#PPCanDownLoad3}</ns4:CanDownload>
			<ns4:CanStream>${#TestCase#PPCanStream3}</ns4:CanStream>
		</ns4:PurchaseProfile>
	</ns4:RightsProfiles>
<!--	<ns4:ResourceStatus>-->
<!--      <ns4:Current CreatedBy="urn:dece:userid:org:dece:FFF33D8028550E41E04307991F0A2EE3" CreationDate="2001-12-31T12:00:00">-->
<!--        <ns4:Value>urn:dece:type:status:active</ns4:Value>-->
<!--      </ns4:Current>-->
<!--    </ns4:ResourceStatus>-->
	<ns4:LicenseAcqBaseLoc>${#TestCase#LICAcqBaseLoc} 	</ns4:LicenseAcqBaseLoc>
	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" 		xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFWebLocLocation1}</ns4:Location>
		<ns4:Preference>${#TestCase#FFWebLocPreference1}</ns4:Preference>
	</ns4:FulfillmentWebLoc>
	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" 		xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFWebLocLocation2}</ns4:Location>
		<ns4:Preference>${#TestCase#FFWebLocPreference2}</ns4:Preference>
	</ns4:FulfillmentWebLoc>
	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" 		xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFManifestLocLocation1}</ns4:Location>
		<ns4:Preference>${#TestCase#FFManifestLocPreference1}</ns4:Preference>
	</ns4:FulfillmentManifestLoc>
	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" 		xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFManifestLocLocation2}</ns4:Location>
		<ns4:Preference>${#TestCase#FFManifestLocPreference2}</ns4:Preference>
	</ns4:FulfillmentManifestLoc>
	<ns4:StreamWebLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 	
		<ns4:Location>${#TestCase#StreamWebLocLocation1}</ns4:Location> 		 
		<ns4:Preference>${#TestCase#StreamWebLocPreference1}</ns4:Preference> 	
	</ns4:StreamWebLoc> 
	<ns4:StreamWebLoc MediaProfile="${#TestCase#PPContentProfile2}" xsi:type="ns4:ResourceLocation-type"> 	
		<ns4:Location>${#TestCase#StreamWebLocLocation1}</ns4:Location> 		 
		<ns4:Preference>${#TestCase#StreamWebLocPreference1}</ns4:Preference> 	
	</ns4:StreamWebLoc> 
	<ns4:PurchaseInfo>
		<ns4:NodeID>${#TestCase#PINodeID}</ns4:NodeID>
		<ns4:RetailerTransaction>${#TestCase#PIRetailerTransx}</ns4:RetailerTransaction>
		<ns4:PurchaseAccount>${#TestCase#PIPurchaseAccount}</ns4:PurchaseAccount>
		<ns4:PurchaseUser>${#TestCase#PIPurchaseUser}</ns4:PurchaseUser>
		<ns4:PurchaseTime>${#TestCase#PIPurchaseTime}</ns4:PurchaseTime>
	</ns4:PurchaseInfo>
	<ns4:RightsLockerID>${#TestCase#RightsLockerID}</ns4:RightsLockerID>
</ns4:RightsTokenFull>]]></con:request>
            <con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/RightsToken/urn:dece:rightstokenid:org:dece:0083CCBC6ECD7E31E0530F991F0A4FF1</con:originalUri><con:assertion type="GroovyScriptAssertion" disabled="true" id="71490b8e-ae51-4517-b64a-83ce622d7a3e">
              <con:configuration>
                <scriptText>// check for the HTTP Response code 
assert messageExchange.responseHeaders["#status#"] == "HTTP/1.1 200 OK"</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#RightsTokenID}"/>
</con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract RightsToken Request XML" id="b0514048-f2b9-412b-b9d7-054b7400469a">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightTokenUpdateRequest PUT").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="b9222890-c3e1-4f15-8b8d-7085345358c9">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightTokenUpdateRequest PUT").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightTokenUpdateRequest PUT").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value>
        </con:property>
        
        
        <con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property>
        
        
        <con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>FeedRTUReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property>
        <con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value>3</con:value></con:property>
        
        <con:property><con:name>FFManifestLocPreference2</con:name><con:value>1</con:value></con:property>
        
        
        <con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property><con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ns3.google.com</con:value>
        </con:property>
        
        
        <con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property>
        
        
        
        <con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property>
        <con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property><con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:0A408E6FB0367D8FE05307991F0AF491</con:value></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value>RetailerTransaction_1_node0799_RetailerNode</con:value></con:property>
        
        
        <con:property><con:name>PITransactionType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property>
        <con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property>
        
        
        
        
        <con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property>
        
        
        
        <con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property>
        <con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>RightsLockerID</con:name><con:value>urn:dece:rightslockerid:org:dece:0A408E5748E50307E05307991F0A9806</con:value></con:property><con:property><con:name>RightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:retailer</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property>
        
        
        <con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SoldAsBundleID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        <con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property><con:property><con:name>StreamWebLocLocation1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://dl.bestbuy.com/p/streaminglink</con:value></con:property>
        
        
      <con:property><con:name>StreamWebLocPreference1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>synced</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>VCAllowedUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADE54AD6830BE2671E0401F0A07996160</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>&lt;/ns4:RightsTokenFull></con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsResTime</con:name><con:value>2435</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenDelete Request" searchProperties="true" id="e04d786b-915e-489d-9a98-ac9bbd4bd695">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="85ba5621-6a2c-4a81-8879-cfbb8dfae33e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
headers.put("If-Match",testProject.getPropertyValue("eTag"));
testRunner.testCase.getTestStepByName("RightsTokenDelete byTokenID").testRequest.setRequestHeaders(headers);

//SetUp test properties
testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
//if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
//{
//	testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
//	
//}
//else 
//{
//	testCase.setPropertyValue("RightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
//}
testCase.setPropertyValue("PolicyLockerViewAllConsent",CallingTCase.getPropertyValue("PolicyLockerViewAllConsent"));
testCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));

</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="pem set" id="60dbf026-321f-4a01-9baf-680670dc2fb5">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenDelete byTokenID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="RightsTokenDelete byTokenID" id="1f118337-f1eb-4267-96ae-781a0f4f6f53"><con:settings/><con:config service="RightsTokenDelete" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" methodName="RightsTokenDelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenDelete byTokenID" mediaType="application/xml" sslKeystore="ISC_RET_concat.pem" accept="" id="2b946bec-9951-4d2a-8dd7-8f3f3be535e4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="SAML2 Assertion=pVfZkqrKEv0Vw/1oKIOoQHR3hIo4IA6gtu3LCSgKoWWSKgb9+lM4be3p9r33SSvJylw5sDJ5QobvsWIbIRhjNwxKue8FSDxJn8tJHIihgVwkBoYPkYiBqLfVscjWaNG4XimXhtJz+Z86R7PQaLJVk+aEKmcKsMpbDKhyggUsE9IcNC2iilAChwHCRoCfyyzNcFWGrrLsgmFFmhfrfI2ps5tyaQVjRGwTlRpdvoDK0XPZwTgSKSrLslpWr4XxlmJpmqHW6lgHDvSN8svTOaKTo/jlog9qFgTQ80ANhD71RD3oPFlI1N1tYOAkhhdf1ne+aIoWKKJjIXf7p3y7C61hYIenY9cIwsAFhucejSI/KsROaJXa3jaMXez43wbB0IXhKsxBFTBc8KdMPUL7paEHhDEyqsgxmIstDdowhgGApaU2fC7/+V3VTlcXsREgO4x99Hj87/DAIIVeGEGriq5hXaD93uAXmXp5gkAcBsBLkJvCSdGskQEgulQTgt+bKs1iaLv52EWkQXNUoKPu4X04nrMhuVuI8P9SoLvinI2sDC+BL6uB5qcb5HQMRmK8/auk5rG09zm1O38+AbhXPglupT0fPzTlrYnONwaWN6nk6byiMkdF0vl+dwp4tneUN9mmf2CapoX681d/v49HMb1RJnZGTUK1yw+51pQBOR/0DxOvI9HGJmXDxTEdHDlOEqAi09vjDKuxIdGj9TTpcmwWp9LbqBN1Z5W2oh17qXlc+/bubRyn/WDWNJljIuhCczTKcyi3tr2VErFWXh/Jy1E7oYClg7nMJjRPtRzD0zz4umxDZTIN17j5Jqhj2KB2Ey7avb9q800fv2/q/gRTK9dW0sgnjLCbrvlla6jJSjRXFbTK4ox6UxVz09+iysbc2cpre2AtnERZdYK3ftY3FwM7njedxW4a8unbrq07odL2bJptQoDgrtXZSsaw2XqbjqYj1Vosx0IQU5PNMgEM7EVoCtIwbM6gAxtsRWnuPNqxomQBNHWsRs1ZtA9HLOsfbdVroIF5cNd+d7sG3Mxq9OBcqSSxOWcm09l6WA9wNuF8WgBKmsa+L+RzRe8nK0qzsFqh5H3PmcwSSj7O9pThT9azxcQbz5s9zZ/t7bDvbGyXmjId4fjqMvXZO9QUJmytVH/E0cNGh1eNyOsNxnKkeQ0n2wyYZn0e4LGX9dbv5nGHE3bDuRw3HrbiuQPe1Gl/Egz8kbHKGpV2smCifp6kkNsuOW85OFpszDYOmxkNF5sh5sJlg9RRwY1+YrMjrJuH/hrSOyArlJS8Y8bEYKlza81eLg0+cJi99647bq5Fma1OGW4hyPLaAa26rLUv7f6hfx9lV87XE/MdAnw9FjQwlEoyeUsN/PMwKySuVbVPqmJUDB+EYYDLL8WtYnaICRl3riWSd/h8pps025X4Ro9v8U2+LfToRp2WBYGR6TYny/J1yJxRfIDYDQPbLXwVI/dMGz8DBL6IYGDBuJqGCelrVP7BomRgozQMNEKCYYDgIizGMzTCnHUFsEMtJj/QKGukiD0Ap1yahHgaTOO2jWH8OJMbDzNZg8CNXFgM7guvMXStztSYRp1oiK2CTgtMXa9QOv29Qqi9o+jEpN9i/vjsGh7RsdxCARU4O5CUCH6xOLBXkJ+CaXy5YFzNtxPLLUiTAMWxC85IHh/9bYGi9rf6D/XuP9K4rc+uwG/6v7+v9RZd/f+7//k29UNk1Mek3pxZqXvn+rrbkS2BzJXTFoVIvb2IJYtUWtvXkjRNil1K5DmuTsXEB1XkmqJZSocgIePvsAh3MKBupqhf7Ro39B8Q3OSPOBPsBDo2MPRJx5VOx18slzpExXI5JO9T/tvN9cElyR+GOf5K1vXIYlwg/nF3BiIo9Ih4Rn6yMP4b+Fe27vyQOMluid1gW5yKPePwTYOAkJh1CUOG8b3xrwx85fxReEvyDQsmXWUmGH7/pFRQ33PZACBMAjyUyifBPR2fcOJDBMW/Sp/MnBj/9gng/udvgKp7agEAyYcDck/2i01OLN6DYHtH6Renn1m9KbQ5niWs3rlndb7L1m9JeUD38kn8WXKXp489/vIv"/>
  <con:entry key="If-Match" value="&quot;0602CDA9303F68F1E0530F991F0A72DD:305C7242&quot;"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:00846CBE142B424AE0530F991F0A5A94</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#RightsTokenID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="f04dada7-3b9b-4da4-84ab-cd5c2b742181">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsTokenDelete byTokenID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="61596c83-62e2-4cf5-bb64-75811cecada9">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenDelete byTokenID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenDelete byTokenID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0602CD69A48268ABE0530F991F0A8C23</con:value>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0602CD6A23BA68ADE0530F991F0A0F83</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>urn:dece:org:org:dece:ISC_RET</con:value>
        </con:property>
        <con:property>
          <con:name>PolicyLockerViewAllConsent</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADBB728DEF0887428E0401F0A079923A4</con:value></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:EBAB459414898DBEE0401F0A07997A66</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:E2CBE24531240945E0401F0A05990271" xmlns="${#Project#Coordinator_schema}" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenInfo ContentID="urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt" ALID="urn:dece:alid:file:RTUPDATE_R3_EXAMPLE_ALIDVersion_212395.txt">
      <SoldAs>
         <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
         <ContentID>urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt</ContentID>
      </SoldAs>
      <RightsProfiles>
         <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:pd">
            <CanDownload>true</CanDownload>
            <CanStream>true</CanStream>
         </PurchaseProfile>
      </RightsProfiles>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:org:org:dece:RET" CreationDate="2013-07-31T08:55:32.288Z" ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-07-31T09:30:52.416Z">
            <Value>urn:dece:type:status:active</Value>
         </Current>
         <History>
            <Prior ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-07-31T09:30:51.942Z">
               <Value>urn:dece:type:status:active</Value>
               <Description>Rights Token is Updated</Description>
            </Prior>
            <Prior ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-07-31T08:55:32.293Z">
               <Value>urn:dece:type:status:active</Value>
               <Description>RightsToken has been created.</Description>
            </Prior>
         </History>
      </ResourceStatus>
      <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/bbb</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/aaa</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ddd</Location>
         <Preference>1</Preference>
      </FulfillmentManifestLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ccc</Location>
         <Preference>3</Preference>
      </FulfillmentManifestLoc>
   </RightsTokenInfo>
</RightsToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>2821</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsResTime</con:name><con:value>1935</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>1f118337-f1eb-4267-96ae-781a0f4f6f53</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenDelete Request Without DST" searchProperties="true" id="9e13c26a-778c-440e-88ef-3757302a56ad">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="62f25ba6-337b-4e4f-be55-c6e848bd68d9">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
headers.put("If-Match",testProject.getPropertyValue("eTag"));
testRunner.testCase.getTestStepByName("RightsTokenDelete byTokenID").testRequest.setRequestHeaders(headers);

//SetUp test properties
testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
//if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
//{
//	testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
//	
//}
//else 
//{
//	testCase.setPropertyValue("RightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
//}
testCase.setPropertyValue("PolicyLockerViewAllConsent",CallingTCase.getPropertyValue("PolicyLockerViewAllConsent"));
testCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));

</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="pem set" id="b52049d0-8a65-44d0-868f-4dab7fec2d42">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenDelete byTokenID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="RightsTokenDelete byTokenID" id="eb38ff0a-00bb-42df-b9a9-2776b5032901"><con:settings/><con:config service="RightsTokenDelete" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenID}" methodName="RightsTokenDelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenDelete byTokenID" mediaType="application/xml" sslKeystore="ISC_RET_concat.pem" accept="" id="f5b6f35b-94f4-4263-9fb4-107bbe538e67"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="SAML2 Assertion=pVfZkqrKEv0Vw/1oKIOoQHR3hIo4IA6gtu3LCSgKoWWSKgb9+lM4be3p9r33SSvJylw5sDJ5QobvsWIbIRhjNwxKue8FSDxJn8tJHIihgVwkBoYPkYiBqLfVscjWaNG4XimXhtJz+Z86R7PQaLJVk+aEKmcKsMpbDKhyggUsE9IcNC2iilAChwHCRoCfyyzNcFWGrrLsgmFFmhfrfI2ps5tyaQVjRGwTlRpdvoDK0XPZwTgSKSrLslpWr4XxlmJpmqHW6lgHDvSN8svTOaKTo/jlog9qFgTQ80ANhD71RD3oPFlI1N1tYOAkhhdf1ne+aIoWKKJjIXf7p3y7C61hYIenY9cIwsAFhucejSI/KsROaJXa3jaMXez43wbB0IXhKsxBFTBc8KdMPUL7paEHhDEyqsgxmIstDdowhgGApaU2fC7/+V3VTlcXsREgO4x99Hj87/DAIIVeGEGriq5hXaD93uAXmXp5gkAcBsBLkJvCSdGskQEgulQTgt+bKs1iaLv52EWkQXNUoKPu4X04nrMhuVuI8P9SoLvinI2sDC+BL6uB5qcb5HQMRmK8/auk5rG09zm1O38+AbhXPglupT0fPzTlrYnONwaWN6nk6byiMkdF0vl+dwp4tneUN9mmf2CapoX681d/v49HMb1RJnZGTUK1yw+51pQBOR/0DxOvI9HGJmXDxTEdHDlOEqAi09vjDKuxIdGj9TTpcmwWp9LbqBN1Z5W2oh17qXlc+/bubRyn/WDWNJljIuhCczTKcyi3tr2VErFWXh/Jy1E7oYClg7nMJjRPtRzD0zz4umxDZTIN17j5Jqhj2KB2Ey7avb9q800fv2/q/gRTK9dW0sgnjLCbrvlla6jJSjRXFbTK4ox6UxVz09+iysbc2cpre2AtnERZdYK3ftY3FwM7njedxW4a8unbrq07odL2bJptQoDgrtXZSsaw2XqbjqYj1Vosx0IQU5PNMgEM7EVoCtIwbM6gAxtsRWnuPNqxomQBNHWsRs1ZtA9HLOsfbdVroIF5cNd+d7sG3Mxq9OBcqSSxOWcm09l6WA9wNuF8WgBKmsa+L+RzRe8nK0qzsFqh5H3PmcwSSj7O9pThT9azxcQbz5s9zZ/t7bDvbGyXmjId4fjqMvXZO9QUJmytVH/E0cNGh1eNyOsNxnKkeQ0n2wyYZn0e4LGX9dbv5nGHE3bDuRw3HrbiuQPe1Gl/Egz8kbHKGpV2smCifp6kkNsuOW85OFpszDYOmxkNF5sh5sJlg9RRwY1+YrMjrJuH/hrSOyArlJS8Y8bEYKlza81eLg0+cJi99647bq5Fma1OGW4hyPLaAa26rLUv7f6hfx9lV87XE/MdAnw9FjQwlEoyeUsN/PMwKySuVbVPqmJUDB+EYYDLL8WtYnaICRl3riWSd/h8pps025X4Ro9v8U2+LfToRp2WBYGR6TYny/J1yJxRfIDYDQPbLXwVI/dMGz8DBL6IYGDBuJqGCelrVP7BomRgozQMNEKCYYDgIizGMzTCnHUFsEMtJj/QKGukiD0Ap1yahHgaTOO2jWH8OJMbDzNZg8CNXFgM7guvMXStztSYRp1oiK2CTgtMXa9QOv29Qqi9o+jEpN9i/vjsGh7RsdxCARU4O5CUCH6xOLBXkJ+CaXy5YFzNtxPLLUiTAMWxC85IHh/9bYGi9rf6D/XuP9K4rc+uwG/6v7+v9RZd/f+7//k29UNk1Mek3pxZqXvn+rrbkS2BzJXTFoVIvb2IJYtUWtvXkjRNil1K5DmuTsXEB1XkmqJZSocgIePvsAh3MKBupqhf7Ro39B8Q3OSPOBPsBDo2MPRJx5VOx18slzpExXI5JO9T/tvN9cElyR+GOf5K1vXIYlwg/nF3BiIo9Ih4Rn6yMP4b+Fe27vyQOMluid1gW5yKPePwTYOAkJh1CUOG8b3xrwx85fxReEvyDQsmXWUmGH7/pFRQ33PZACBMAjyUyifBPR2fcOJDBMW/Sp/MnBj/9gng/udvgKp7agEAyYcDck/2i01OLN6DYHtH6Renn1m9KbQ5niWs3rlndb7L1m9JeUD38kn8WXKXp489/vIv"/>
  <con:entry key="If-Match" value="&quot;0602CD6A71AB68B3E0530F991F0AB8B3:FEE4DC53&quot;"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:00846D428C1A424CE0530F991F0A3EE2</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#RightsTokenID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="16370a6b-c6fc-45cf-8334-b390a12eafa3">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsTokenDelete byTokenID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="56dbd64e-6c09-4c14-9ee5-1a7b1ca2848d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenDelete byTokenID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenDelete byTokenID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Sanity_Suite_E2E_APIs</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Sanity_TestSuite</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0602CD69A48268ABE0530F991F0A8C23</con:value>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0602CD85E8A768A9E0530F991F0A4FFF</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>urn:dece:org:org:dece:ISC_RET</con:value>
        </con:property>
        <con:property>
          <con:name>PolicyLockerViewAllConsent</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADBB728DEF0887428E0401F0A079923A4</con:value></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:EBAB459414898DBEE0401F0A07997A66</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:E2CBE24531240945E0401F0A05990271" xmlns="${#Project#Coordinator_schema}" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenInfo ContentID="urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt" ALID="urn:dece:alid:file:RTUPDATE_R3_EXAMPLE_ALIDVersion_212395.txt">
      <SoldAs>
         <DisplayName Language="en">Avatar BestBuy Special Packaging</DisplayName>
         <ContentID>urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt</ContentID>
      </SoldAs>
      <RightsProfiles>
         <PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:pd">
            <CanDownload>true</CanDownload>
            <CanStream>true</CanStream>
         </PurchaseProfile>
      </RightsProfiles>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:org:org:dece:RET" CreationDate="2013-07-31T08:55:32.288Z" ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-07-31T09:30:52.416Z">
            <Value>urn:dece:type:status:active</Value>
         </Current>
         <History>
            <Prior ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-07-31T09:30:51.942Z">
               <Value>urn:dece:type:status:active</Value>
               <Description>Rights Token is Updated</Description>
            </Prior>
            <Prior ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-07-31T08:55:32.293Z">
               <Value>urn:dece:type:status:active</Value>
               <Description>RightsToken has been created.</Description>
            </Prior>
         </History>
      </ResourceStatus>
      <LicenseAcqBaseLoc>ns3.google.com</LicenseAcqBaseLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/bbb</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/aaa</Location>
         <Preference>1</Preference>
      </FulfillmentWebLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ddd</Location>
         <Preference>1</Preference>
      </FulfillmentManifestLoc>
      <FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd">
         <Location>https://dl.bestbuy.com/p/ccc</Location>
         <Preference>3</Preference>
      </FulfillmentManifestLoc>
   </RightsTokenInfo>
</RightsToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>2821</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsReqXml</con:name><con:value>User-Agent: Apache-HttpClient/4.1.1 (java 1.5)
</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsResTime</con:name><con:value>1935</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>1f118337-f1eb-4267-96ae-781a0f4f6f53</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenUpdate Request without Account_ID" searchProperties="true" id="d4236e11-6bd2-44ca-b012-1c1bb7d003a1">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Properties" id="53dd6764-7a66-4a25-a05c-89bf587aea4a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
// sedning ETag as '*" Since RightsTokenGet without account ID API not returning the ETag as part of response.
//headers.put("If-Match",testProject.getPropertyValue("eTag"));

headers.put("If-Match","*");


testRunner.testCase.getTestStepByName("RightsTokenUpdateWithoutAccountID").testRequest.setRequestHeaders(headers);

if(testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
{
	testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
	
}
else 
{
	testCase.setPropertyValue("RightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
}
testCase.setPropertyValue("encodedRightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
testCase.setPropertyValue("RightsLockerID",CallingTCase.getPropertyValue("RightsLockerID"));
testCase.setPropertyValue("ALID",CallingTCase.getPropertyValue("ALID"));
testCase.setPropertyValue("ContentID",CallingTCase.getPropertyValue("ContentID"));
testCase.setPropertyValue("SoldAsDisplayName",CallingTCase.getPropertyValue("SoldAsDisplayName") );
testCase.setPropertyValue("SoldAsLanguage",CallingTCase.getPropertyValue("SoldAsLanguage"));
testCase.setPropertyValue("SoldAsContentID",CallingTCase.getPropertyValue("SoldAsContentID"));
testCase.setPropertyValue("SoldAsBundleID",CallingTCase.getPropertyValue("SoldAsBundleID"));
testCase.setPropertyValue("PPContentProfile1",CallingTCase.getPropertyValue("PPContentProfile1"));
testCase.setPropertyValue("PPDiscreteMediaRemaining1",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining1"));
testCase.setPropertyValue("PPDiscreteMediaProfile1",CallingTCase.getPropertyValue("PPDiscreteMediaProfile1"));
testCase.setPropertyValue("PPCanDownLoad1",CallingTCase.getPropertyValue("PPCanDownLoad1"));
testCase.setPropertyValue("PPCanStream1",CallingTCase.getPropertyValue("PPCanStream1"));
testCase.setPropertyValue("PPContentProfile2",CallingTCase.getPropertyValue("PPContentProfile2"));
testCase.setPropertyValue("PPDiscreteMediaRemaining2",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining2"));
testCase.setPropertyValue("PPDiscreteMediaProfile2",CallingTCase.getPropertyValue("PPDiscreteMediaProfile2"));
testCase.setPropertyValue("PPCanDownLoad2",CallingTCase.getPropertyValue("PPCanDownLoad2"));
testCase.setPropertyValue("PPCanStream2",CallingTCase.getPropertyValue("PPCanStream2"));
testCase.setPropertyValue("PPContentProfile3",CallingTCase.getPropertyValue("PPContentProfile3"));
testCase.setPropertyValue("PPDiscreteMediaRemaining3",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining3"));
testCase.setPropertyValue("PPDiscreteMediaProfile3",CallingTCase.getPropertyValue("PPDiscreteMediaProfile3"));
testCase.setPropertyValue("PPCanDownLoad3",CallingTCase.getPropertyValue("PPCanDownLoad3"));
testCase.setPropertyValue("PPCanStream3",CallingTCase.getPropertyValue("PPCanStream3"));
testCase.setPropertyValue("RSCreatedby",CallingTCase.getPropertyValue("RSCreatedby"));
testCase.setPropertyValue("RSCreationDate",CallingTCase.getPropertyValue("RSCreationDate"));
testCase.setPropertyValue("RSValue",CallingTCase.getPropertyValue("RRSValue"));
testCase.setPropertyValue("RSDescription",CallingTCase.getPropertyValue("RSDescription"));
testCase.setPropertyValue("LICAcqBaseLoc",CallingTCase.getPropertyValue("LICAcqBaseLoc"));
testCase.setPropertyValue("FFWebLocLocation1",CallingTCase.getPropertyValue("FFWebLocLocation1"));
testCase.setPropertyValue("FFWebLocPreference1",CallingTCase.getPropertyValue("FFWebLocPreference1"));
testCase.setPropertyValue("FFWebLocLocation2",CallingTCase.getPropertyValue("FFWebLocLocation2"));
testCase.setPropertyValue("FFWebLocPreference2",CallingTCase.getPropertyValue("FFWebLocPreference2"));
testCase.setPropertyValue("FFManifestLocLocation1",CallingTCase.getPropertyValue("FFManifestLocLocation1"));
testCase.setPropertyValue("FFManifestLocPreference1",CallingTCase.getPropertyValue("FFManifestLocPreference1"));
testCase.setPropertyValue("FFManifestLocLocation2",CallingTCase.getPropertyValue("FFManifestLocLocation2"));
testCase.setPropertyValue("FFManifestLocPreference2",CallingTCase.getPropertyValue("FFManifestLocPreference2"));
testCase.setPropertyValue("PINodeID",CallingTCase.getPropertyValue("PINodeID"));
testCase.setPropertyValue("PIRetailerTransx",CallingTCase.getPropertyValue("PIRetailerTransx"));
testCase.setPropertyValue("PIPurchaseAccount",CallingTCase.getPropertyValue("PIPurchaseAccount"));
testCase.setPropertyValue("PIPurchaseUser",CallingTCase.getPropertyValue("PIPurchaseUser"));
testCase.setPropertyValue("PIPurchaseTime",CallingTCase.getPropertyValue("PIPurchaseTime"));
testCase.setPropertyValue("PITransactionType",CallingTCase.getPropertyValue("PITransactionType"));
testCase.setPropertyValue("VCAllowedUser",CallingTCase.getPropertyValue("VCAllowedUser"));
testCase.setPropertyValue("StreamWebLocLocation1",CallingTCase.getPropertyValue("StreamWebLocLocation1"));
testCase.setPropertyValue("StreamWebLocPreference1",CallingTCase.getPropertyValue("StreamWebLocPreference1"));

//Testing RightTokenCreate Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTUReq","OK");
CallingTCase.setPropertyValue("FeedRTUReq",testCase.getPropertyValue("FeedRTUReq"));</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="pem set" id="ae464555-0399-4a5c-bcd8-9e7685a4eb44">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("RightTokenUpdateRequest PUT");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="RightsTokenUpdateWithoutAccountID" id="616cb6fe-d450-4ce8-9f93-7f239c8b10c1"><con:settings/><con:config service="RightsTokenUpdate_without_Account_ID" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/RightsToken/{RightsTokenID}" methodName="Rights_Token_Update_without_Account_ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenUpdateWithoutAccountID" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" id="12479ac0-79e4-47ad-8eb7-d147dab50d3d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVbbcuI4EP0VyvM4ZXzBDsYVqGIw2WEnJFlMMpeXKUVuQIwtOZIMTr5+JQMeICTLzpNL7Vb36YtO96VAWeqGfSGAS8Joo8xSKsJK2jUKTkOGBBEhRRmIUOIw7o+vQ7dph2h3xWiMoq7xs+V4vudduGa7E2DT64BvPj56HTPAuA2dFkbJRaBUhShgRIVEVHYN13Y803FNx586Tuh2Qt9pem3/h9F4AC6UbaXStI0tqFJ0jYWUeWhZ6/W6uW41GZ9brm071rfxdYwXkCGjd7mJqHLEe1t93EwAQ5riJmaZdWkd6FwmIozJnCJZcNj6St7yZVt2x1I6iSDzD0Z9F5IRnbHqOECUUYJRSl6Qzs8Y5IIljX46Z5zIRfZmEI6tDZtQYhM7Hv1gWIfQzjR0gJALZIoFcra2JjADDhRD434y6hofzqtadXXKERUzxjNxePx/eICuIGU5JKbYhbWFdr7BE5nqXQIORxSnhSAruNHNmiMMYltNwOebatxxmJHymgjVoKXQ6Kx9eEfHTTYiMgch/6RAe8XZGHlAaQG9AX4uvwZ+NhXfxZiP13+Xwe0/LGGj++/dCsC+ciWoS7s5HjVl3USbG6PPJC6Xsp3GcT9igwn925nEPyJ4mIw/fln0b17uJs/x5H64+IKH4xtY3r4wNv5WBHMHnI8vfLDw776jT8nnpYPuBP7xKOLPN/dP1sB6DBhb9efD4bex9G7XAaHRMv5LTgbRbHmf5Pm1xfveVy7SZckxt8sWWuXjqT+eBfxL8pRR9pQI/GT7snCDcjF48O1uHc4e/kPZ7s3HxeMSsNwddRuMosaVqhKS75OZlpDEnFWqYa7JR0ig0ujpW5o7wkLRHUlCVcPN2e57djC8uPpkty7aUXA1tP2W3e50nCu7f+V1nB3JbFAcQRwwOiPal6bcTdu8DxBnoQCaADdXrFBMJ4x3LEZIosaITtQjYFTAlCl6TtzkVyvHdoBy8Ry4Cvs6FfaL0bhh8pbe8v5MAj9kZO+AkSeASU5A07buaqHaWkiViSe0KmTqNFeoSaFQxM41x4auF/iWIFmegsZpZSwpUmjmi7zKiyU2X9dEWFTSyXBavbU3ozr+t0uA0kmIVhA6lk+giggnRou3C+RVwP7JEbQz3y8Sop+VyqbkBG+QHP763SS6O+oOia778d0OdK173l2VjZ+D+Kfz59df37TeCcg6zmXtKFmRPbe7oa/GhyKc3q4T8uZTs1itiqr0bc2rXFm3dHIt27ViwIVixOcp+wXUqo1YZ42fGveR71p+iLCQCxpLJCFTvdqojmfsGzEIvW+M1BMrz11mDlyqzEko5SnZIFW7kkb87jqFQ6z1lPhOfdaMJ78LdsLWnh8Vp1o3JKFzfdKj5/mNtsBMmSWKNBnfN37KwCnnh8I6yTUWqfrpsZDw9p+GZsOugTBmBZWjyKgE+wxd4ZTPOYS/lV6ZqYZAvRWS/14LTVK1AAa1SwpS2dfDPdQvgM73WH7r9DXR+20viCJbUfw+0XcC+6JOygG63ivxa8leno57vPcv"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ns4:RightsTokenFull ALID="${#TestCase#ALID}" 	xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/WEB-INF/dece.xsd" 	ContentID="${#TestCase#ContentID}" xmlns:ns4="${#Project#Coordinator_Schema}" 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<ns4:SoldAs>
		<ns4:DisplayName Language="${#TestCase#SoldAsLanguage}">${#TestCase#SoldAsDisplayName} 		</ns4:DisplayName>
		<ns4:ContentID>${#TestCase#SoldAsContentID}</ns4:ContentID>
	</ns4:SoldAs>
	<ns4:RightsProfiles>
		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile1}">
			<ns4:DiscreteMediaRightsRemaining 				FulfillmentMethod="${#TestCase#PPDiscreteMediaProfile1}">${#TestCase#PPDiscreteMediaRemaining1} 			</ns4:DiscreteMediaRightsRemaining>
			<ns4:CanDownload>${#TestCase#PPCanDownLoad3}</ns4:CanDownload>
			<ns4:CanStream>${#TestCase#PPCanStream3}</ns4:CanStream>
		</ns4:PurchaseProfile>
		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile2}">
			<ns4:DiscreteMediaRightsRemaining 				FulfillmentMethod="${#TestCase#PPDiscreteMediaProfile1}">${#TestCase#PPDiscreteMediaRemaining1} 			</ns4:DiscreteMediaRightsRemaining>
			<ns4:CanDownload>${#TestCase#PPCanDownLoad3}</ns4:CanDownload>
			<ns4:CanStream>${#TestCase#PPCanStream3}</ns4:CanStream>
		</ns4:PurchaseProfile>
	</ns4:RightsProfiles>
<!--	<ns4:ResourceStatus>-->
<!--      <ns4:Current CreatedBy="urn:dece:userid:org:dece:FFF33D8028550E41E04307991F0A2EE3" CreationDate="2001-12-31T12:00:00">-->
<!--        <ns4:Value>urn:dece:type:status:active</ns4:Value>-->
<!--      </ns4:Current>-->
<!--    </ns4:ResourceStatus>-->
	<ns4:LicenseAcqBaseLoc>${#TestCase#LICAcqBaseLoc} 	</ns4:LicenseAcqBaseLoc>
	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" 		xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFWebLocLocation1}</ns4:Location>
		<ns4:Preference>${#TestCase#FFWebLocPreference1}</ns4:Preference>
	</ns4:FulfillmentWebLoc>
	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" 		xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFWebLocLocation2}</ns4:Location>
		<ns4:Preference>${#TestCase#FFWebLocPreference2}</ns4:Preference>
	</ns4:FulfillmentWebLoc>
	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" 		xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFManifestLocLocation1}</ns4:Location>
		<ns4:Preference>${#TestCase#FFManifestLocPreference1}</ns4:Preference>
	</ns4:FulfillmentManifestLoc>
	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" 		xsi:type="ns4:ResourceLocation-type">
		<ns4:Location>${#TestCase#FFManifestLocLocation2}</ns4:Location>
		<ns4:Preference>${#TestCase#FFManifestLocPreference2}</ns4:Preference>
	</ns4:FulfillmentManifestLoc>
	<ns4:StreamWebLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 	
		<ns4:Location>${#TestCase#StreamWebLocLocation1}</ns4:Location> 		 
		<ns4:Preference>${#TestCase#StreamWebLocPreference1}</ns4:Preference> 	
	</ns4:StreamWebLoc> 
	<ns4:StreamWebLoc MediaProfile="${#TestCase#PPContentProfile2}" xsi:type="ns4:ResourceLocation-type"> 	
		<ns4:Location>${#TestCase#StreamWebLocLocation1}</ns4:Location> 		 
		<ns4:Preference>${#TestCase#StreamWebLocPreference1}</ns4:Preference> 	
	</ns4:StreamWebLoc> 
	<ns4:PurchaseInfo>
		<ns4:NodeID>${#TestCase#PINodeID}</ns4:NodeID>
		<ns4:RetailerTransaction>${#TestCase#PIRetailerTransx}</ns4:RetailerTransaction>
		<ns4:PurchaseAccount>${#TestCase#PIPurchaseAccount}</ns4:PurchaseAccount>
		<ns4:PurchaseUser>${#TestCase#PIPurchaseUser}</ns4:PurchaseUser>
		<ns4:PurchaseTime>${#TestCase#PIPurchaseTime}</ns4:PurchaseTime>
	</ns4:PurchaseInfo>
	<ns4:RightsLockerID>${#TestCase#RightsLockerID}</ns4:RightsLockerID>
</ns4:RightsTokenFull>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/RightsToken/urn:dece:rightstokenid:org:dece:0083CCBC6ECD7E31E0530F991F0A4FF1</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Request XML" id="7e6a15ff-adb9-4f3b-b1db-625800139a1f">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RT_RequestBody = testCase.getTestStepByName("RightsTokenUpdateWithoutAccountID").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="ValidateRightsLockerGet RESPONSE" id="6f1822de-c4a2-4007-a67d-2214f46ba289">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import dbUtils.dbNode;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

String major = context.expand('${#Project#versionMajor}');
String minor = context.expand('${#Project#versionMinor}');

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID",null);
def ValerrorID;
def QAResp_ErrorID;

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

def nodeID = context.expand( '${#Project#NodeID}' );

testCase.setPropertyValue("nodeid","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",testProject.getPropertyValue("Node_Account"));
testCase.setPropertyValue("expectErrTypeRTLGet",CallingTCase.getPropertyValue("expectErrTypeRTLGet"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));


def Res_RTObjType = testCase.getPropertyValue("RTObjType");

//myNode = new dbNode(log,context.expand( '${#Project#targetSystem}' ));
Nodeid = testCase.getPropertyValue("nodeid");
//myNodeRole = myNode.nodeGetRole(Nodeid);
//log.info myNodeRole;

def DeceUrl   = testProject.getPropertyValue("AppHost");
def DecePort  = testProject.getPropertyValue("AppPort");

def ResponseXML = testCase.getTestStepByName("RightsTokenUpdateWithoutAccountID").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testCase.getTestStepByName("RightsTokenUpdateWithoutAccountID").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTLGet");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
//def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");


log.info Resp_HTTPstatus[0];
log.info Resp_HTTPconnection[0];
log.info Resp_HTTPcontenttype[0];
//log.info Resp_HTTPcontentlength;
log.info errorRespType;
	
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml";


//if (DeceUrl.length() == 0) {
//	Resp_errorHost = "http://error.decellc.org";
//} else {
//	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
//}
//this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		log.info "Res_RTObjType[$Res_RTObjType]"+ "xxxxxxxxxxxxxxx";
		//log.info "myNodeRole[$myNodeRole]"+ "xxxxxxxxxxxxxxx";
//		if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' &amp;&amp; Res_RTObjType == 'RightsTokenFull'){
//		//if ( myNodeRole == 'urn:dece:role:retailer'||'urn:dece:role:retailer:customersupport' ){
//               	log.info "Valid RightsToken Object-type Returned  for Node[$Nodeid] - NodeRole[$myNodeRole] : [$errorRespType]";
//		}
//              else {
//
//              	 log.info " InValid RightsToken Object-type Returned for  Node[$Nodeid] - NodeRole[$myNodeRole]- $myNodeRole : [$errorRespType]";
//              }		
		processXMLFlag = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	ValerrorID = 1;
	QAResp_ErrorID = "ForbiddenAccountNotActive";
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	Resp_errorReason = "The API call is not authorized.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	ValerrorID  = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;

	
	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"	
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetIdentifierNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetIdentifierNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;
	
	case "DMR_LIMIT_EXCEEDED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaLimitExceeded";
	QAResp_ErrorID = "BadRequestDiscreteMediaLimitExceeded";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaLimitExceeded";
	break;
	
	case "CONTENTPROFILE_NOT_VALID":
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "PURCHASE_TIME_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "SCHEMA_VALIDATION_ERROR":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;
	case "LICACQBASE_LOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "RT_PP_DOWNLOAD/STREAM_INVALID":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";

	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	
	break;
	
	case "RT_UPDATE_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenStatusChangeNotAllowed";
	QAResp_ErrorID = "BadRequestRightsTokenStatusChangeNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenStatusChangeNotAllowed";
	break;

	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	break;

	case "PURCHASE_INFO_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "FULLFILLMENT_METHOD_INVALID":
	Resp_ErrorID = "urn:dece:errorid:org:dece:DiscreteMediaFulfillmentMethodNotValid";
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaFulfillmentMethodNotValid";
	break;


	case "ALID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:LogicalIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestLogicalIDUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LogicalIDUpdationNotAllowed";
	break;

	case "CONTENTID_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:ContentIDUpdationNotAllowed";
	QAResp_ErrorID = "BadRequestContentIDUpdationNotAllowed"
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDUpdationNotAllowed";
	break;

	case "SOLDAS_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "SOLDAS_DISPLAY_LANG_UPDATE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsSoldAsUpdationNotAllowed";
	QAResp_ErrorID = "RightsSoldAsUpdationNotAllowed";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsSoldAsUpdationNotAllowed";
	break;

	case "RIGHTSTOKEN_DELETE_NOTALLOWED":
	Resp_ErrorID = "urn:dece:errorid:org:dece:RightsTokenAlreadyDeleted";
	QAResp_ErrorID = "BadRequestRightsTokenStatusAlreadyDeleted";
	ValerrorID = 1;
	Resp_errorLink  = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenAlreadyDeleted";
	break;

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists"; 
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

	case "IVALID_FILTERENTRYPOINT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterEntryPoint";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterEntryPointNotValid";
	break;

	case "IVALID_FILTEROFFSET":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterOffsetNotValid";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterOffsetNotValid";
	break;

	case "IVALID_FILTERCOUNT":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:FilterCount";
	//QAResp_ErrorID = "BadRequest";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FilterCount";
	break;

 }
 
testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;


if(ValerrorID.toString() == '1') {
	
def RTErrors = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsError Validation");

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");

log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length
if(errorRespType!= "SUCCESS")
{
//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 
}
//Content-Type

//log.info "Content-Type:" + Resp_HTTPcontenttype[0];
//assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID.toString();
	
// ErrorReason
      log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;

// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value>
        </con:property>
        
        
        <con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property>
        
        
        <con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>FeedRTUReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property>
        <con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value>3</con:value></con:property>
        
        <con:property><con:name>FFManifestLocPreference2</con:name><con:value>1</con:value></con:property>
        
        
        <con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property><con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ns3.google.com</con:value>
        </con:property>
        
        
        <con:property><con:name>nodeid</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property>
        
        
        
        <con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:0A408E5748DD0307E05307991F0A9806</con:value></con:property>
        <con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property><con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:0A408E6FB0367D8FE05307991F0AF491</con:value></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value>RetailerTransaction_1_node0799_RetailerNode</con:value></con:property>
        
        
        <con:property><con:name>PITransactionType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property>
        <con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property>
        
        
        
        
        <con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property>
        
        
        
        <con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property>
        <con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>RightsLockerID</con:name><con:value>urn:dece:rightslockerid:org:dece:0A408E5748E50307E05307991F0A9806</con:value></con:property><con:property><con:name>RightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:retailer</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property>
        
        
        <con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SoldAsBundleID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        <con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property><con:property><con:name>StreamWebLocLocation1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://dl.bestbuy.com/p/streaminglink</con:value></con:property>
        
        
      <con:property><con:name>StreamWebLocPreference1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>synced</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>VCAllowedUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</con:value></con:property><con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADE54AD6830BE2671E0401F0A07996160</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>&lt;/ns4:RightsTokenFull></con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsResTime</con:name><con:value>2435</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>QAerrorID</con:name><con:value>null</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsError Validation" searchProperties="true" id="f55eb858-d6a0-4375-ae5c-b7d2a136ccab"><con:settings/><con:testStep type="groovy" name="Validate Rights Errors" id="d7c983e4-ef1b-463c-ab63-f635fe4861ef">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbErrors;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def RightsErrors = new dbErrors(log,context.expand( '${#Project#targetSystem}' ));


def callTSuitename = tC.getPropertyValue("TSuiteName");
def callTCasename = tC.getPropertyValue("TCaseName");

def CallingTCase = tP.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
def errId = CallingTCase.getPropertyValue("QAerrorID");
log.info errId;
/*
log.info errId.tokenize(':').last();
if(errId.contains('Policy'))
{
	log.info 'Policy:' + errId.tokenize(':').last();
	ErrorID = 'Policy:' + errId.tokenize(':').last();
}
else
{
	log.info errId.tokenize(':').last();
	ErrorID = errId.tokenize(':').last();
}
*/
def xmlData = "";

try {
			 xmlData = RightsErrors.errGetIdInfo(errId.toString());
                log.info xmlData;
                
                assert xmlData.trim().length() > 1;

                def myXML = new XmlSlurper().parseText(xmlData);
                

                log.info myXML.ResultSet.Row.size();
                tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
                tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
                tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

                /*
                *  The DB does not contain the complete HTTP status
                *  string, only the code.  Thus, we must adjust.
                */
                switch (tC.getPropertyValue("errorStatusCode")) {
                                case "400":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
                                                break;
                                case "403":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
                                                break;
                                case "404":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
                                                break;
                                case "409":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
                                                break;
                }
}
catch (Throwable e) {
                log.info "STEP FAILURE! --- " + e;
                
}


CallingTCase.setPropertyValue("errorStatusCode",tC.getPropertyValue("errorStatusCode"));
CallingTCase.setPropertyValue("errorReason",tC.getPropertyValue("errorReason"));
CallingTCase.setPropertyValue("errorID",tC.getPropertyValue("errorID"));

</script></con:config>
      </con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>a3a6b9e3-afc3-4437-8d08-ee69b1b20558</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e288b35b-f123-4211-b275-986f9f3046c2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamCreate" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="54fdb90a-8cd0-4f24-ac2b-1055a366bd81"><con:settings/><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="858bd098-c44f-4512-a0ed-ea4fd3d7db7c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("TSuiteName");
def callTCname = tC.getPropertyValue("TCaseName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nickname",callTC.getPropertyValue("nickname"));
//tC.setPropertyValue("transactionid",callTC.getPropertyValue("transactionid"));

tC.setPropertyValue("RightsTokenID",callTC.getPropertyValue("RightsTokenID"));
tC.setPropertyValue("decodedNodeUserID",callTC.getPropertyValue("decodedNodeUserID"));
tC.setPropertyValue("expectErrTypeStreamCreate",callTC.getPropertyValue("expectErrTypeStreamCreate"));

//tC.setPropertyValue("sCbodyRequestingUserSetting",callTC.getPropertyValue("sCbodyRequestingUserSetting"));
//tC.setPropertyValue("sCbodyTransactionIDSetting",callTC.getPropertyValue("sCbodyTransactionIDSetting"));

//if (tC.getPropertyValue("expectErrTypeStreamCreate") == null || tC.getPropertyValue("expectErrTypeStreamCreate") == "") {
//	tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
//}
//
//if (tC.getPropertyValue("expectErrTypeStreamCreate") == "SUCCESS") {
//	tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
//	tC.setPropertyValue("expectDBStatus","active");
//}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="52f50b8e-7b99-49af-8295-49a72b0ccac0"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeId.....;;;;;; " + nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("nodeId",nodeId);

log.info "myTC.setPropertyValue .........." + myTC.getPropertyValue("nodeId");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("POST - StreamCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="delay" name="5000" id="42fe73d4-ed05-4d4b-98f4-0107b06f491f"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST - StreamCreate" id="b9b41e77-5dfb-4079-bb5f-8dc734108add"><con:settings/><con:config service="Streams" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - StreamCreate" mediaType="application/xml" postQueryString="false" sslKeystore="LLASP_CS_1_concat.pem" accept="" id="faa2621f-d72a-4b68-bb9c-cf0afac6d5cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Stream xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/md"       xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">       <StreamClientNickname>${#TestCase#nickname}</StreamClientNickname>        <RequestingUserID>${#TestCase#decodedNodeUserID}</RequestingUserID>       <RightsTokenID>${#TestCase#RightsTokenID}</RightsTokenID>        <TransactionID></TransactionID>         <SubDividedGeolocation ViaProxy="urn:dece:type:true" Confidence="50" CalculationMethod="urn:dece:type:geoloc:networkaddress">US 20148</SubDividedGeolocation> </Stream>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/Stream</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ACCT" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="5000 1" id="e288b35b-f123-4211-b275-986f9f3046c2"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="groovy" name="Rerun" id="a3a6b9e3-afc3-4437-8d08-ee69b1b20558"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");
def tStep = testCase.getTestStepByName("POST - StreamCreate");

log.info "#########################IN RERUN ######################" + tStep.getName();
String status = tStep.httpRequest.response.responseHeaders["#status#"]; 


if(!status.contains("201 Created"))
{
                log.info "STS Post not Sucessful Retrying...!";
                testRunner.runTestStepByName(tStep.getName());
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="07b36745-768a-44dd-b776-c08f6ffc2a8c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - StreamCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="a85370e8-3e17-4a39-8b02-d1c031e8e022"><con:settings/><con:config><script><![CDATA[import java.net.URLDecoder;
import java.net.URLEncoder;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");
def urnnode   = tP.getPropertyValue("urnNode");

def sh            = tC.getPropertyValue("streamhandleFULL");
def nodeid        = tC.getPropertyValue("nodeid");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = false;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
String urnErr = tP.getPropertyValue("urnError");





this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
//	case "Node_status_inactive":
//		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
//		processXMLFlag  = true;
//		errorID = "Bad_Request";
//		errorReason = "Node_status_inactive";
//		errorLink = "";
//	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
		errorReason = "node_status_inactive";
		errorLink = "$errorHost/deceerrors/error/error_response.html";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
// assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = URLDecoder.decode(a,"UTF-8");
	//def urlStr = b.getPath();
	def urlStr = b;

	//assert b.getPath().matches("/rest/$major/$minor/Account/${account}/Stream/$urnstream[0-9, A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}

//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} else {
		this.log.info "ResourceStatus size is " + myXML.ResourceStatus.size();
		this.log.info "ResourceStatus.Current size is " + myXML.ResourceStatus.Current.size();
		this.log.info "ResourceStatus.Current.Value size is " + myXML.ResourceStatus.Current.Value.size();
		this.log.info "ResourceStatus.Current.Description size is " + myXML.ResourceStatus.Current.Description.size();
		this.log.info "myXML.RequestingUserID size is " + myXML.RequestingUserID.size();
		this.log.info "myXML.RightsTokenID size is " + myXML.RightsTokenID.size();
		this.log.info "ExpirationDateTime size is " + myXML.ExpirationDateTime.size();
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;
		if (nodetype != "llp" && nodetype != "llpcs") {
			assert myXML.RequestingUserID.size() == 1;
		} else {
			assert myXML.RequestingUserID.size() == 0;
		}
		assert myXML.RightsTokenID.size() == 1;
		assert myXML.ExpirationDateTime.size() == 1;

		// ModifiedBy
		expected = urnnode + nodeid;
		received = myXML.ResourceStatus.Current.@ModifiedBy.text();
		this.log.info "ModifiedBy - Expect[$expected] Received[$received]";
		assert expected == received;
		
		// StreamHandleID
		expected = sh;
		received = myXML.@StreamHandleID.text();
		this.log.info "StreamHandleID - Expect[$expected] Received[$received]";
		assert expected == received;

		// CreatedBy
		expected = urnnode + tC.getPropertyValue("expectDBCreatedBy");
		received = myXML.ResourceStatus.Current.@CreatedBy.text();
		this.log.info "CreatedBy - Expect[$expected] Received[$received]";
		assert expected == received;

		// Value
		expected = tC.getPropertyValue("expectDBStatus");
		received = myXML.ResourceStatus.Current.Value.text();
		this.log.info "Value - Expect[$expected] Received[$received]";
		assert expected == received;

		// Description
		expected = description;
		received = myXML.ResourceStatus.Current.Description.text();
		this.log.info "Description - Expect[$expected] Received[$received]";
		assert expected == received;

		// RequestingUserID
		received = myXML.RequestingUserID.text();
		if (nodetype != "llp" && nodetype != "llpcs") {
			expected = tC.getPropertyValue("assertionUserIdFULL");
		} else {
			expected = "";  /* LLP has not user associated with it */
		}
		this.log.info "RequestingUserID - Expect[$expected] Received[$received]";
		assert expected == received;
		
		// RightsTokenID
		expected = tC.getPropertyValue("rightstokenidFULL");
		received = myXML.RightsTokenID.text();
		this.log.info "RightsTokenID - Expect[$expected] Received[$received]";
		assert expected == received;

		// RightsTokenID
		assert myXML.ExpirationDateTime.text().length() > 0;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Return the streamhandle" id="53463d73-84a9-417a-9d4d-87ad60037c33"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("TSuiteName");
def callTCname = tC.getPropertyValue("TCaseName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("streamhandle",tC.getPropertyValue("streamhandle"));
callTC.setPropertyValue("streamhandleFULL",tC.getPropertyValue("streamhandleFULL"));
callTC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("expectDBCreatedBy"));
callTC.setPropertyValue("expectDBStatus",tC.getPropertyValue("expectDBStatus"));
</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ashwin_user_create_20130626_020921</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:9C604FF3213B4DB58BCD6F0A2824C7AF</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9C604FF3213B4DB58BCD6F0A2824C7AF</con:value></con:property><con:property><con:name>sCbodyRequestingUserSetting</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:E2A4C8F78A56EB42E0401F0A059938CD</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:105F899C03483FE0E05305991F0A7286</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value>9AAD6886B417B607E0401F0A0599673B</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3710</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value>nVdZd6JKEH73V3icR0/CoridJOc0qxhRQcTlDaFZFEFpEPTX3wajMctk5s5Dli5q+brq6+rqJ2TuAroHEIJx4kdhVeafa81mB9JOm3kwW6T50GQs8mHdphr4F2w2adhtdGi6VpURSqEcosQMk+caTVLUA0k90C2davaoVo9iHrGfVa1qwBhhz1jlkaxV810Qol4Z9bmWxmEvMpGPeqG5g6iXWL0pUIY9rNkzr5BqL08XkGXA+MVLkn2PIKxHG1owCKxHK9oRT8QHnScb9aa+G5pJGsO3mDZ6rr3ZZln2mDUeo9glaJIkCbJLYB0b+e6v2kvlagxtOXSiy5ozwyj0LTPwz2YBSoGJF9lVELhR7Cfe7jeuKYIiC9cPMLceLKoZ/qoR7wFKdH/p6QPIGJkPyDOpqzMNOjCGoQWrM01+rv36qwJeTPXYDJETxTv0af3/EMHwCINoD+0HdN3YFdzfe/wmWy9P0OrJoRWkyD/CUcGSvWlBVJ3E0PHzoY8w92xULatfzdGVYND6PxV5Iu5xYtjEN5nhfRei5F/KdV+qixfDDFL4YozsNeufwm3mR+mJVYR6MGQygtHU2XMJ4V75AupW6bf1Z57eaPVmxJ4kIWYHwNmAhAANZ77ZuwMrc9rT6YyORMZZdLOtaszrqdpXaKKLbA9GCjNthhtr3CEdrj0M+TG1WUsrUBmcyMOGTiKaFB23Th40G7DsLIr7y1Nruc8WuSNC9exSEu/RGZ0eUndsOIOQHzWNIQ36ou5qEeNrRK7XjYq7MQICdiTrdMiZKbFVFfT8vqf7PRT7eoWncpPF/wuG7PJmYt4WXNEoHHw6E/iiyDKfnjkOnKYuyGQWuPhnA0asuz14W1/qZiQLVFUEPMcGG2GogK0EqJnAegpnGErOncGAdUcGNtQrIFixiiZkfLbkDVXtC5mn25JxWktBujoLIwWg0pjzFEETDF7TBUUB0UWWK/xayjfKVMlkdclXsANeyPdnW+omUMp9i5YZZcrQyymTrhYGloun4W50XOtCoHCKxE0P0lReN3hVGABtObdoMcW25+FuH1WWM/bOaLCHGwDFjMQxwVnRt5miz+gRr5mlTP8oU2RpoKgo49RyV1JFyAbG7PyeC45VOHsn5IIOJpdcWDonjsjVYoDMORMqGsh4tzR+FTJ7fAWiqGRW4S65GgqZJmizkahociaAUsYLWYDW9MhbS97Raqj5QAeb+8JwqjAXQ/w91I7WiTlUTEkE651BWQ3Ns3zGNxdR5q46Ga8uB6/RSsZuRkAVWFYFGBAJiq3h/LNgyBrMeO93aR8OHTHaQS+uKFT0uj2ec7LjN8buZDRneGfbnkj+pGHaHiEHFr1pbIEsQ/uV8lTT1paExof+uTV+nS2gHy/PyYhRqZbfYSraPJ0t+Cho2/3FcvZaz5eWqo8n09l8cs7z0WHTOQdJf8z24+lA4d3xCMIJsuoEaYqs3uEZbtnfYD45GgmZCnAVFgBp47qCjwnM9jcXEvY1RcDkBQqXSdyck6ZAkuqCzPKq6ogeNbEkI51RI0UW7ACn6bRcaEFlxbE8rhRpzlf7JS2SKx3YpTO1KYiuOmPqgwVcqaNANxKQ7Q0npChS2qt9R8lcSykYYMvZlMWniK2kMpiZ4/2AzF+NFkkdVDsYTLtg1sin9DYfe+7qtHVXW1yU5d3RWeogMPQ7jsmYYvOKqguaAjqX85Yr8qyhBdYu3693Vs7ruGalcaSzgiaq5CznefB6kSEd0DlanoWNwgmlfQXkiolpcVwvPLQMR/5YF1JM2vSOLps1Tf6RYwXFKh85duCACj5zTLhwTADOoS53eAoxLW6P5pnLSsJBbRvDQXdPqovhtsLWRcJN/KA5DjuZ/lqfU6es7W3U+bwr8x5XD52l11gnLGmeLRUOtm3J17Z82GoGJ2WoqMzMJ4ITuYGHDA0rI5kKhUZyFolunNbZ3crfnc+NJj3bTabpUZ6Zr4g6eevDvJttJv0WQcTSiTm3V0dVXETW8nKPfG6SN+GljRL3DfZDB76OXtN0vYFWcl0W97DMV0V8OZrJz2NcIfHtB6dU7e2LWRAlMExqL4VVMcL1Ujzo+XYP35yXdRcAvtXptNgm1WZbZFsgmyQlkoBkut1Wu8FeZ70Lik8QuSh0/CJWMcxeLuufAVq73hqaMYxrP3gq8lSVQw1PH1GIoB491xoMA7pNsdPstBi2wzFNttUSAUt36Sbd4pqtWnUUJeNwHAMngfHdgNz+PCBr0PL3Piym6LdZAiU4EQfzmCYB9Xg0H0OY4jE7LibdHt3sMGUCCDvd7S38AXe3eB+h5HHv7cth5rfb+PztumOsY/uFAipAsxBXC34z0pNXxF92Rn87+l/dg9T2i5kFpy+JfeuC5OOndzYUNLhRgexS5BXzTfWvTel/N23+o2mXoph/N219NSV+SCHxuXq3SPbRv4t7fUnhxwGeH8sHFMIsO5iPh8f0eExLXrVJkiZi7J4giS4xhVaK59uTHm1hSNw8EH/zsrhh/hT3Jv+ILk28cJrgtrTDR6BaLv/8qvxgjROQwDz5TsYF+B1ZBP/xqWn1rEIPiyf4TxbF9nvev/F1FwdDLlqqH7rFqngSnD6W9+3o9qwIe/VxV43ie9/f2X8X+6Pwlq4blASzYp0m8PdfqkW7fK6ZlhWlYSLztVJw38JLzMlpD3vvSl/clDP52yMrR799ZC2U4dTy4M6s3XT9Pys/+GXhLYitkF9iea7lqFdwPnTvrow3gL+5NZifbo2PO3n5Iv4qucvpZ2a//Ac=</con:value></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Raju</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E/Stream/urn:dece:streamhandleid:org:dece:9C604FF3213B4DB58BCD6F0A2824C7AF</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa.q.uvvu.com:7002/dece/Account/urn:dece:accountid:org:dece:96D720451F824F56E0401F0A079921A9/Stream/urn:dece:streamhandleid:org:dece:98F5525959D92153E0401F0A07993F6C</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:E00B9A40E209CD0FE0401F0A059915D8</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:E00B9A40E207CD0FE0401F0A059915D8</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVdbc6rKEn73V1juR8sAgihWkqrhpqioeNeXUzgMF+UmA4L++jOY6EqystbJPk8wTU/31xd6vnnGZuA3uwBjlKReFFY1+aX2H56DnTbatxomy7caHN3hyZvNNgSLMWm7Y+45m65VNYwzpIU4NcP0pdakGbZB840mv6A7XY7tNtmnpiDsatUVSjAxTVSeyK4i8EPcvbl9qWVJ2I1M7OFuaAYId1PYnQN91CWaXfOOqfb6/Iby5jB5ddM07lIUfLIQRL4Pn2AUUM/UJ51nC3fnnhOaaZagd58Wfqm9783z/Clnn6LEoZo0TVO0QBEdC3vOP7XXyn0zsrTQjt7WkhlGoQdN37uaJSgdpW5kVYHvRImXusEfTDMUQ5emG6iADchw4T816peDG7ofWvoEMsFmA7smczc2QzZKUAhRdTnTXmr//KyCb3sXiRliO0oC/GX97yCh8Iz8KEZWA98ju6P7ucVv0vX6jGBXC6GfYe+MxmWbxCZEuDpNkO0VIw+T5rNw9Vb+aoHvHYbgvynJM/URJ4FNfZMZ2XMQTv+fen2s1ZuVleln6PWKIskf8dP+CWLfmMPWbnudG6GTaMuXG4SPym+gHqV+X39t1EdfvW9aTVbp4JQM1WDZHxpOMVOjdDqfOid3UNhs4W4EP5o1R9NpnEoqKFr7S9Y2hUlg7Nw6Z2z2g2Nytdb2aFJoXmWPeV7aznLLVZ31MrC1lcjJ8UKCPicOxgkXMa06T1vysQmXE6pFrwZ1lWV2y2YueWM1Yia7ev+Q2FKx0egKfYzZkSJQHYqn8UBLwh5++RXTxxjKuIbocguyfN+0aEE2U/OxkMpJYZPfM0WvuqZJdVmSAJIckGsicDRxdAVj0Tme3KPXE3JaBMZSBTK46DOQy85WXhnGUMmt1crfrTRVFfUZl/fBVq6QD7JSrOTdZkCb6128bar0bi6K1mYW7dlBbPWPed+FY32h5+OFdtEPSjFeKPT6JnMKsr7qB52ZLJZsZX0QBX2m5HJ+8ygruTverWfxdink8KoYOuB6gFkqkqv3F8GKgezMhQdlpIPjTS66urRa6YWyANOK6IxXJLaFpO5iGFjxPvDdD8b7xPjC6q0u+56f7a7KQZeUnjQ/9ebanpUNZQBm2+V+vTqaa/Vcgf0x2N89ei3P3ES5s+vksrEdDKOd5p7hGBiKKBqApIsGutYbgKgnAp0DXnGVDiIfSZaaU4MmrtQFv8dvLt5pg80e7ZtMp8NsR2t+euJlJazvhtn+4OruRp3Uh3PrvBRS4brF5/qZNz0GFrFtbJR+OizsvjGv7KdysYH9uuUMKP8qqIneHoDkenF93Zmla36CL3vPttfiZsL5bdvX2Vls+3Z8wfVFZBwTmhcR26S2l/MwrQBHFwHoHZYH0dDFTplUS8uNrS6aQFXSDFwPzXTYXJ0G/bMPtyyIiuF6cji+F8aSc0WkckMhbaVUOjKwyiL050tFPYCl6DiJ6CiqaEAZGFttmG9JvpZ9ovw1j+otj44iAoXdAV7oV9glLaSTdM5x4BKKy1AVXP1UrC0+oNsnpIzm45jLdTy2w906OuqBlyyTbL4cDsejYr/IescDmVU2PR+e2V1FOR9j4I2HC/coR7I5jbfbNK6HMIGpFge6VlwnO3zoePuAHtRbjDilZdhuLoN9vuyZym6YOHNm2J+FU7YtVHBmX/pB/dDJ1/XFnI/blhTa8uVC7ZIVHYFIFWatk1U0m0d3mY/43B6A495sjgtfEC+CMtwtYD4zhut5UG9VWufRKKCvC4obx5N83ss5xTDqrCUu+gscJ9426zhFMgmt5tZM+fOOXvFe7B+FZnZccDG7cgJSrOnZitv6tGJwG7gLnHYMB9SMOgOlbY+03mV/Na9xMIFvA/TrdHgI3+YH9XGyfBo9d9IxJ92KYHpflgeQJldVciqY6d8JTCnxrIZ9U+3GJQvCKQrT2mu5qyQv3YxQHM/qkiPjba3QtCgAjlaaBLVMqwrN0YxKA7olCExL7txZzhuKLxClKLS90lfJ495Oqb8DhEEXo9BCSeMcZdBFuPYXi2W+qlo4I8dvFGK0iAhP5Ngm0+FUSeJ4ILWVlghYwLdbYqsjKW1RYmrVcZROwkkC7BQlnzgiw3ziiDMEvdhDJZEsT1NMjlOckpSczHOW+szT2XwKUUaoZlKyvW6T67Qo7AWxj0rAVBBZmY+eYje+JYjCb89mw4T4JmXbDH075v8Y39dv91QQHcsrFXAZjIhIOdE3bJe5R/JbxNy3rPhuHmSWV57mJK9p4sE3JJ8//WqXsk8evVKGdMf8UP3xVub3rdRfEFFfk/HwZJ29D37vnJ3QUEJUXu+1PJlPp6fsfM5u1WuXJCwh5imGonlqjmBGmNRlER1RSD1MUD8isQ/UXzw/5J/xZakbzlMyCALSa9Xb8gc3mDnC5Q1GI/9K8dPr0SeXJG8pKtLvZJJPLjol4r/ehWAXlnpEPCWPPEqsX+X6xtYHPyTOcvJ5oVOuSsp6+UNXwIiY9cj0i5KPxr8z8J3zz8JHkh9YUtJN+yxFf/5SLcfaS82EMMrCVJNrN8HHUXvDmV5i1P2l9JuZG2l8vwUU+I+3gI0+mpOhF5i1h673v5Ub3q1dICK7sHfD8lIryIWWOA+dD6P9HeAfpnv7b9P9cySvv4l/l3zI6df/4fW/</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>3710</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>sCbodyTransactionIDSetting</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77327</con:value></con:property><con:property><con:name>subDivided</con:name><con:value>US 20148</con:value></con:property><con:property><con:name>calculationmethod</con:name><con:value>urn:dece:type:geoloc:networkaddress</con:value></con:property><con:property><con:name>viaproxy</con:name><con:value>urn:dece:type:true</con:value></con:property><con:property><con:name>confidence</con:name><con:value>50</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE00B9A40E207CD0FE0401F0A059915D8</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>decodedNodeUserID</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamView API" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4ffb5321-6f84-43d9-a300-b7b78b13ffa9"><con:settings/><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="cf10bbd7-83cf-4055-9368-e2dd6db2a91a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("TSuiteName");
def callTCname = tC.getPropertyValue("TCaseName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

if(tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
	
}
else 
{
	tC.setPropertyValue("streamhandleFULL",URLEncoder.encode(callTC.getPropertyValue("streamhandleFULL"),"UTF-8"));
}

tC.setPropertyValue("errorRespTypeStreamView",callTC.getPropertyValue("errorRespTypeStreamView"));
tC.setPropertyValue("expectStreamStatus",callTC.getPropertyValue("expectStreamStatus"));

//if (tC.getPropertyValue("expectStreamStatus") == null) {
//	tC.setPropertyValue("expectStreamStatus","active");
//}


</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="21a3fd72-849f-4e4a-9cc1-71febf060540"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("GET - StreamView");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamView" id="3016cbf1-06d3-4b04-bb42-0dd598259701"><con:settings/><con:config service="Streams" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamView" id="bedb4965-2eee-42a7-8409-37ed0984e920" mediaType="application/xml" sslKeystore="DLASP_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/Stream/urn:dece:streamhandleid:org:dece:0083CD0B1CB47E2BE0530F991F0A287C</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ACCT" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="75406400-68e0-41c9-90b6-38c99ec1978d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - StreamView');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag = null;

String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag":
			etag = value[0];
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tP.setPropertyValue("eTag", etag);

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="22e9477c-ca6a-4395-b724-3af3038a4476" disabled="true"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def urnrt     = tP.getPropertyValue("urnRightsToken");
def urnnode   = tP.getPropertyValue("urnNode");
def urnuser   = tP.getPropertyValue("urnUser");
def urnstream = tP.getPropertyValue("urnstream");
def genericRT = tP.getPropertyValue("urnGenericRightsToken");
def nodetype  = tC.getPropertyValue("nodetype");

boolean eNickPresentFlag = false;
String dBy   = "";
String eUser = "";
String eStatusDesc = "";
String expectHTTPstatus = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expectNickname = tC.getPropertyValue("expectNickname");
String expectStreamStatus = tC.getPropertyValue("expectStreamStatus");
String expectStreamHandle = tC.getPropertyValue("streamhandleFULL");
String expectCreatedBy = urnnode + tC.getPropertyValue("nodeid");
String expectUser = tC.getPropertyValue("assertionUserIdFULL");
String expectRightsToken = urnrt + tC.getPropertyValue("rightstokenid");
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");
/*
log.info "expectNickname is [$expectNickname]";
ifS (expectNickname != 'null' || expectNickname != null) {
	eNickPresentFlag = true;
}
log.info "eNickPresentFlag[$eNickPresentFlag]";
*/
/*
*   VALIDATION HTTP HEADERS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
// assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;
//Content-Length
assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;
//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;



def XMLbody = tC.getPropertyValue("XMLbody");

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

switch (expectStreamStatus) {
	case "deleted":
		eStatusDesc = "deleted";
		if (eDECEDeleteFlag != "true") {
			eDECEDeleteFlag = "false";
		} else {
			dby = tP.getPropertyValue("deceorgid");
		}
	break;
	case "active":
	default:
		expectStreamStatus = "active";
		eStatusDesc = "active";
	break;
}




if (XMLbody.length() > 0) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	// Assert element counts
	assert myXML.ResourceStatus.size() == 1;
	assert myXML.ResourceStatus.Current.size() == 1;
	assert myXML.ResourceStatus.Current.Value.size() == 1;
	assert myXML.ResourceStatus.Current.Description.size() == 1;
	assert myXML.RightsTokenID.size() == 1;
	if (nodetype == "llpcs" || nodetype == "dlpcs") {
		assert myXML.RequestingUserID.size() == 0;
	} else {
		assert myXML.RequestingUserID.size() == 1;
	}
	assert myXML.ExpirationDateTime.size() == 1;

	// Status 
	this.log.info "expectStreamStatus [$expectStreamStatus] and value is " + myXML.ResourceStatus.Current.Value.toString();
	if (expectStreamStatus == "active") {
		assert myXML.ResourceStatus.Current.Value.toString() == "urn:dece:type:status:active";
	} else {
		assert myXML.ResourceStatus.Current.Value.toString() == "urn:dece:type:status:deleted";
	}
		
	// Streamhandle
	this.log.info "expectStreamHandle [$expectStreamHandle] - value " + myXML.@StreamHandleID.toString();
	assert myXML.@StreamHandleID.toString() == expectStreamHandle;

	//<CreatedBy>
	this.log.info "expectCreatedBy[$expectCreatedBy] - CreatedBy is " + myXML.ResourceStatus.Current.@CreatedBy.toString();
	assert myXML.ResourceStatus.Current.@CreatedBy.toString() == expectCreatedBy;

	//<CreatedDate>
	assert myXML.ResourceStatus.Current.@CreationDate.toString().length() > 0;

	//<Description>
	assert myXML.ResourceStatus.Current.Description.toString() == eStatusDesc;

	//<RequestingUserID>
	def rUser = myXML.RequestingUserID.toString();
	this.log.info "rUser [$rUser] and expectUser [$expectUser]";
	if (nodetype == "llpcs" || nodetype == "dlpcs") {
		assert rUser == "";
	} else {
		assert rUser == expectUser;
	}
	
	//<RightsTokenID>
	this.log.info "expectRightsToken [$expectRightsToken] value " + myXML.RightsTokenID.toString();
	assert myXML.RightsTokenID.toString() == expectRightsToken;
	
	//<ExpirationDateTime>
	assert myXML.ExpirationDateTime.toString().length() > 0;

	if (eNickPresentFlag) {
		assert myXML.StreamClientNickname.size() == 1;
		assert myXML.StreamClientNickname.toString() == expectNickname;
	} else {
		assert myXML.StreamClientNickname.size() == 0;
	}
} else {
	return false;
}

]]></script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:0</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVfbcrLMEr33KSz/S8sAiihWkqpBUFHRKKiRm10wDAflJAOCPv0eTPQz+ZLs/PtKp6ene/WBnjWP2Aj8Zg9gjJLUi8KqLD7V/mM2TdhmaKbBIAQbbNtGDZ5h2IbFtrs0Mi3WsuxaVcY4Q3KIUyNMn2pNmmk1aK7RpDWG7jW5HsM9sK2OXquuUYKJaaLyQNeqReCHuHdx+1TLkrAXGdjDvdAIEO6lsKcCZdojmj3jiqn2/PiG8uIweXbTNO5RFHywEES+Dx9gFFCP1AedRwv3VM8JjTRL0LtPCz/V3s/mef6Qtx6ixKGaNE1TNE8RHQt7zj+158r1MLLk0I7e1n0jjEIPGr53NkpQCkrdyKoC34kSL3WDb0wzFEOXphuogA3IsOE/NeqPgwu6X1r6ADLBRgO7BnM1tkQ2SlAIUXW1lJ9q//yugm9ntcQIsR0lAf60/neQUHhEfhQjq4GvkV3R/d7iF+l6fkSwJ4fQz7B3RLOyTWIDIlx9SZDtFVMPk+azcPVS/mqBrx2G4L8pySN1j5PApr7IjOg5CKf/T73ua/VmZW34GXpu53qxSmZgs3cVFUrt5Qzqw6IzwCfl6QLhXvkN1K3U7+vPjXrrq/dDrtPSgwn0dgyauA5lpvtivx6Dwxq1uLE51rhhLG+NUxit5+lontAiUOdLf7/B2uI8y6a7/jlgTuvhdsOkTmW32PazbOVo2+nWmY1teGqvHCFUcuq82fmSNj1YzFRZKoN9ywQya/bNSSFN/KQwJZS1QCy7ycLlVFGxz0VlZyb6DIZL/pSM6fMw0ib7pz8x3cdQxjVBp0uQ5f/XNs2LRmrcFv1yUtjk80zRsyLL/brY7wPUd0AuC8CRhekZzARnf3D33pDPaQEsVgMggpOyBLnobMX1YjGRcmu99vW1PBgIypLNR2ArVsiGKBVrUX8d08ZGj7fNAa2rgmC9LiOzNY6t0T4fuXCmaEo+0+STspOKmSbRm4vMKcj6rOwUZq6tWpXNTuCVpZSL+cWjKOXuTN8s4+2Kz+FZWiiAHQJmJfVdZaQFawa2li7cSVMF7C9ywVX667VSSBp4qQjObE1i0/oDPYaBFZuB794ZHxHjmjVcn8yhn+lnaaf0pWFfPQxV2WyJC2kMltuVuVnvjc3gWIGjGTCvHr22Z7xGuaN3c3GxHU8iXXaPcAYWkiAsAEkXDRR5OAbRUAAKC7zi3N8JXNS3Bjk1buJKnfeH3OvJO7xiY0j7BtPtMtvphns5cKIU1vVJZu5cxX0dzOsT1Tqu+JQ/b/GxfuQMj4FFbC9epVE6KezRQq2YL2LxCkd1yxlT/pkfJEpnDJLzyfUVZ5luuDk+mZ5tb4TXOet3bF9pLWPbt+MTrmvRYp/QnIBaTWp7Ok7SCnAUAYDhbrUTForQLZNqyfliqwgGGEhpBs67Zjpprg/j0dGH2xaIislmvtu/F8YSc0mg8oVE2kqqdEVglUUYqStpsAMrwXESwZEGwgKKYLGVJ/mW5Gs1Isqf8zi45NGRBCC1dMDxo0prRfPpPFVZFpxCYRUOeFc5FBuLC+jOAUlTdRazuYJndqhvor0SeMkqydTVZDKbFqaWDfc7MqtsWp0cW3pFOu5j4M0mmrsXI9F4ibfbNK6HMIGpHAeKXJznOt51PTOgx/U2I7zQIuw0V4GZr4aGpE8SR2Umo2X40urwFZzZp1FQ33XzTV1Tubhj9UNbPJ0oPVnTEYgG/LJ9sIpmc++u8imX22OwN43mrPB54cRLE12D+XIx2ahBvV1pH6fTgD5rFDuL57k6zFlpsai3LEEbaThOvG3WdYpkHlrNrZFyR51ec17s7/lmttfYuLV2AlKsl6MVd5SXyoJ9hXrgdGI4ppbUEUgdeyoPT+bZOMfBHL4N0M/T4SZ8mx/U/WT5MHqupEMl3Ypgel2WF5AsVgfkVjDSnwlMKfGshn1R7cUlC8IpCtPac3mqJC+9jFAcz+qRK+NtLQ54ti31eZa0qdgUaYlmaWZAA7rD83Sn072ynDcUnyD2o9D2Sl8lj3u7pX4GCIMeRqGFksYxyqCLcO0Hi2W+qnK4JNdvFGKkRYQntmiGG7RZnm9L7QHNA7bPc81up8M3Acfw0qBWnUXpPJwnwE5R8pEjtj5wxCWCXuyhkki+36Y4JRk5GMcs9ZmHo/EQoowwzaQke70m221fMkFZWRBDshEFKIkjnD7Ebny5zr+N4/PeNWSiY3mlAi5BC4iUDX3Baukr4r8iY79kv1fzILO88tYm+UsTD74h+bj1py3Kfrj1BM0z7BXzTfV3Rwnl4/4+Sv2AiPqcjJsn6+jd+b1yc0I3CSG5UHJMinYwHg4P2fGYXcrUKclWQsxTDEVzlIpgRhjTSYv2KKRuJqhfkdUb6k+eb/KP+LLUDdWUfPAB6anqZfmLl4qKcPlSkck3Ufz2GfTBJclbior0K1nfJw+aEvGPbx7Yg6UeEb+QnzxKrD/l+sLWnR8SZznhvNApVyU1PX3TFTAiZj0y5aLk3vhXBr5y/lF4S/INS0q6ycxS9P1OtRxfTzUDwigLU1msXQT3I/WCMz3FqPdH6S8zF3L4zvYL/C3bf1WmKhlugVG76Xr/W7nhXdoFInIKexcsT7WCPFyJ89C5G+HvAL+Z4t2fpvjHSJ7/Ev8tucvp5+/h+b8=</con:value></con:property><con:property><con:name>cid</con:name><con:value>urn:dece:cid:0000-3BAB-9352-9999-G-0000-9999-Q:0001</con:value></con:property><con:property><con:name>dlpnodeid</con:name><con:value>914</con:value></con:property><con:property><con:name>eDECEDeleteFlag</con:name><con:value>false</con:value></con:property><con:property><con:name>eDeletedByPresent</con:name><con:value>false</con:value></con:property><con:property><con:name>errorRespTypeStreamView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamView</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">harbor&amp;#6158;</con:value></con:property><con:property><con:name>expectTransactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value>urn:dece:accountid:org:dece:9AAD6886B415B607E0401F0A0599673B</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>0914</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlp</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value>urn:dece:userid:org:dece:9AAD6886B417B607E0401F0A0599673B</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>DFAA2AC718B91024E0401F0A07991C2B</con:value></con:property><con:property><con:name>sName</con:name><con:value>Dynamic LASP Test Cases</con:value></con:property><con:property><con:name>streamdeletenodeaccount</con:name><con:value>1999003</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_13056 - StreamCreate - DLP - &lt;StreamClientNickname> can contains UTF-8 Encoded characters - 201 Created</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:Stream StreamHandleID="urn:dece:streamhandleid:org:dece:0A408ECEC6C27E08E05307991F0A8F5E" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:StreamClientNickname>Raju</dece:StreamClientNickname>
   <dece:RequestingUserID>urn:dece:userid:org:dece:0A408E6FB0367D8FE05307991F0AF491</dece:RequestingUserID>
   <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</dece:RightsTokenID>
   <dece:ExpirationDateTime>2014-12-15T17:31:23.809Z</dece:ExpirationDateTime>
   <dece:SubDividedGeolocation Confidence="50" CalculationMethod="urn:dece:type:geoloc:networkaddress" ViaProxy="urn:dece:type:true">US 20148</dece:SubDividedGeolocation>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2014-12-15T11:31:23.809Z" CreatedBy="urn:dece:org:org:dece:DLASP">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>active</dece:Description>
      </dece:Current>
   </dece:ResourceStatus>
</dece:Stream>]]></con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:DF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:DF945EC94BAAD2D0E0401F0A07990778</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:0A408ECEC6C27E08E05307991F0A8F5E</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77329</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3AED419DFA2BA592C7E0401F0A0799147D</con:value></con:property><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/DLASP_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3016cbf1-06d3-4b04-bb42-0dd598259701</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListView" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="87a09ea8-2f52-4f96-b858-9101127e00c7"><con:settings/><con:testStep type="groovy" name="Extract required Properties from calling Test Case" disabled="true" id="0e6926db-8fbb-4b18-9c4e-0ec0391bdfb0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));

if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt","")
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenFULL_"   + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="f95d99c4-d546-4991-93d3-57f64533997b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("GET - StreamListView");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView" id="852eed9a-4d62-4a55-8572-421356bf351f"><con:settings/><con:config service="Streams" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" id="8fba20b8-88ae-40af-aa13-8ecb02761e91" mediaType="application/xml" sslKeystore="DLASP_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/Stream/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ACCT" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="3b591731-3438-4a0f-9b88-841adb5cae4f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" disabled="true" id="40062d0b-3193-478d-95f3-a864c1d4f536"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url         = tP.getPropertyValue("targetHost");
def urnacct     = tP.getPropertyValue("urnaccount");
def urnstream   = tP.getPropertyValue("urnstream");
def urnnode     = tP.getPropertyValue("urnNode");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct         = tC.getPropertyValue("nodeaccountid");
def sh           = tC.getPropertyValue("streamhandleFULL");
def counter      = tC.getPropertyValue("counter").toInteger();
def account      = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody       = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectStatus    = tC.getPropertyValue("expectDBStatus");
def expectRT        = tC.getPropertyValue("rightstokenidFULL");
def expectSH        = tC.getPropertyValue("streamhandleFULL");
def expectNickname  = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt  = tC.getPropertyValue("expectStreamActiveCnt");
def expectStreamAvailCnt   = tC.getPropertyValue("expectStreamAvailCnt");
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "";
String availStreamsCnt = "";
String major = tP.getPropertyValue("versionMajor").toString();
String minor = tP.getPropertyValue("versionMinor").toString();
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount   = 0;
int xmlIndex             = 0;
int g                    = 0;

switch (expectStatus) {
	case "active":
		expectDescription = "active";
	break;
	default:
		expectDescription = "deleted";
	break;
}

/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		processXMLFlag   = true;
		XMLbodynull      = false;
	break;
	case "SUCCESS_NO_STREAMS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		processXMLFlag   = true;
		XMLbodynull      = false;
		if (expectStreamActiveCnt == null || expectStreamActiveCnt == "") {
			expectStreamActiveCnt  = 0;
		}
		if (expectStreamAvailCnt == null || expectStreamAvailCnt == "") {
			expectStreamAvailCnt = streamlimit;
		}
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "Account is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	
	case "API_NOT_AUTH":
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CID_CONTENT_NOT_ACTIVE":
	errorID     = "urn:dece:errorid:org:dece:Request:StreamContentIdNotActive";
	errorReason = "Rights content ID is not active";
	errorLink   = "http://error.decellc.org/en/Request:StreamContentIdNotActive";
	
	break;
	case "CID_NOT_ACTIVE":
	errorID     = "urn:dece:errorid:org:dece:Request:StreamAssetNotActive";
	errorReason = "Rights logical asset is not active";
	errorLink   = "http://error.decellc.org/en/Request:StreamAssetNotActive";
	
	break;
	case "CID_NOT_ALLOWED":
	errorID     = "urn:dece:errorid:org:dece:StreamAssetWindowNotAllowed";
	errorReason = "Rights logical asset is not allowed for streaming";
	//errorLink   = "http://error.decellc.org/en/StreamAssetWindowNotAllowed";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#StreamAssetWindowNotAllowed";
	
	break;
	case "CID_NOT_GRANTED":
	errorID     = "urn:dece:errorid:org:dece:StreamRightsNotGranted";
	errorReason = "Rights to stream the content is not granted";
	//errorLink   = "http://error.decellc.org/en/StreamRightsNotGranted";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#StreamRightsNotGranted";
	
	break;
	case "CID_CONTENT_NOT_EXIST":
	errorID     = "urn:dece:errorid:org:dece:Request:StreamContentIdNotFound";
	errorReason = "Rights content ID does not exist";
	errorLink   = "http://error.decellc.org/en/Request:StreamContentIdNotFound";
	
	break;
	case "CONTENT_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	errorReason = "ContentID is not found";
	//errorLink   = "http://error.decellc.org/en/ContentIDNotFound";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_ACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:ContentIDNotActive";
	errorReason = "ContentID is not active";
	//errorLink   = "http://error.decellc.org/en/ContentIDNotActive";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotActive";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "LOGICAL_ASSET_NOT_ACTIVE":
	errorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	errorReason = "AssetLogicalID is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
		orgRequest = "";
	break;
	
	case "RT_ACCESS_NOT_ALLOWED":
	errorID     = "urn:dece:errorid:org:dece:Request:RightsTokenAccessNotAllowed";
	errorReason = "Rights token access is not allowed";
	errorLink   = "http://error.decellc.org/en/Request:RightsTokenAccessNotAllowed";
	
	break;
	case "STREAM_USER_NOT_SPECIFIED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	
	break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "Request Account ID not match";
		errorLink   = "$errorHost/rest/0/9/error/en/ErrorList.html#AccountIdUnmatched";
		orgRequest  = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
	break;
	
	case "STREAM_NOT_ACTIVE":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:StreamNotActive";
		errorReason = "Stream Not Active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#StreamNotActive";
	break;

	case "STREAM_USER_INVALID":
	errorID     = "urn:dece:errorid:org:dece:StreamNotActive";
	errorReason = "Stream User ID Invalid";
	errorLink   = "http://error.decellc.org/en/Request:StreamUserIdInvalid";
	break;
	
	case "STREAM_INVALID_TRANS":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:StreamTransactionIdInvalid";
	errorReason = "Stream Transaction ID Invalid";
	//errorLink   = "http://error.decellc.org/en/StreamTransactionIdInvalid";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#StreamTransactionIdInvalid";

	case "STREAM_OWNER_MISMATCH":
		expectHTTPstatus = "HTTP/1.1 409 Conflict";
		errorID     = "urn:dece:errorid:org:dece:StreamOwnerMismatch";
		errorReason = "Stream Owner Mismatch";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#StreamOwnerMismatch";
	break;
	
	case "USER_NOT_PERMIT":
	errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
	errorReason = "User Privilege Access Restricted";
	//errorLink   = "http://error.decellc.org/en/UserPrivilegeAccessRestricted";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";

	case "STREAM_NOT_FOUND":
		expectHTTPstatus = "HTTP/1.1 404 Not Found";
		errorID     = "urn:dece:errorid:org:dece:StreamNotFound";
		errorReason = "Stream handle not found";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#StreamNotFound";
	break;

	break;
	case "STREAM_COUNT_EXCEEDED":
	expectHTTPstatus = "HTTP/1.1 409 Conflict";
	errorID     = "urn:dece:errorid:org:dece:StreamCountExceedMaxLimit";
	errorReason = "Stream count has exceeded the maximum limit";
	//errorLink   = "http://error.decellc.org/en/StreamCountExceedMaxLimit";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#StreamCountExceedMaxLimit";
	break;
	case "STREAM_NICKNAME_TOO_LONG":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:StreamClientNicknameTooLong";
	errorReason = "Stream Client Nickname Too Long";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#StreamClientNicknameTooLong";
	orgRequest  = url + "/rest/$major/$minor/Account/" + urnacct + acct + "/Stream/" + urnstream + sh;
	break;
	case "RT_NOT_ACTIVE":
	errorID     = "urn:dece:errorid:org:dece:RightsTokenNotActive";
	errorReason = "RightsToken is not active";
	//errorLink   = "http://error.decellc.org/en/RightsTokenNotActive";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotActive";
	
	break;
	case "RT_RENT_EXPIRED":
	errorID     = "urn:dece:errorid:org:dece:RightsTokenRentalExpired";
	errorReason = "Rights Token Rental Expired";
	//errorLink   = "http://error.decellc.org/en/RightsTokenRentalExpired";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenRentalExpired";
	
	break;
	case "RT_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	errorReason = "RightsToken is not found";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	
	break;
	case "RT_INVALID":
	errorID     = "urn:dece:errorid:org:dece:Request:StreamRightsTokenIdInvalid";
	errorReason = "Rights Token ID Invalid";
	errorLink   = "http://error.decellc.org/en/Request:StreamRightsTokenIdInvalid";
	
	break;
	case "USER_NOT_MATCH_TOKEN":
	errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	errorReason = "User ID does not match security token";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	case "USER_NOT_ACTIVE":
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	//errorLink   = "http://error.decellc.org/en/UserNotActive";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	//errorLink   = "http://error.decellc.org/en/UserNotSpecified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	
	break;
	default:
	errorID     = "urn:dece:errorid:org:dece:Request:StreamUserIdUnmatched";
	errorReason = "User ID does not match security token";
	errorLink   = "http://error.decellc.org/en/Request:StreamUserIdUnmatched";
	
	break;

}
/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
// assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}


//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		/*
		*    SUCCESS NO STREAMS
		*
		*/
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		/*  XML element count validations */
		log.info "Stream size: " + myXML.Stream.size();
		log.info "ResourceStatus size: " + myXML.Stream.ResourceStatus.size();
		log.info "RightsTokenID size: " + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		assert myXML.Stream.size() == 0;
		assert myXML.Stream.ResourceStatus.size() == 0;
		assert myXML.Stream.RightsTokenID.size() == 0;
		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt == expectStreamAvailCnt;

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
		
	} else {
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();
		
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Stream.size is [" + myXML.Stream.size() + "]";
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb    = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb    = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectsh    = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick  = tC.getPropertyValue("expectNickname_" + g);
			String expectrt    = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			
			log.info "expectValue[$expectValue]";
			log.info "expectcb[$expectcb]";
			log.info "expectdb[$expectdb]";
			log.info "expectsh[$expectsh]";

			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				if (	expectValue == "active") {
					doValidations = true;
				} else {
					doValidations = false;
				}
			} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}
			
			log.info "doValidations is " + doValidations;
			
			if (doValidations) {
				displayStreamCount++;
	
				/*  Streamhandle validation */
				String recvsh   = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - recvsh[$recvsh] - expect[$expectsh]";
				assert recvsh == expectsh;

				/*  CreatedBy validation */
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				/*  CreationDate */
				assert myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text().length() > 0;

				/*  Value validation */
				String recvValue   = myXML.Stream[xmlIndex].ResourceStatus.Current.Value.text();
				log.info "xmlIndex[$xmlIndex] - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}
				
				/*  Description validation */
				String expectDesc = "active";
				if (expectValue == "deleted") {
					expectDesc = "deleted";
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description.text();
				log.info "xmlIndex[$xmlIndex] - recvDesc[$recvDesc] - expectDesc[$expectDesc]";
				assert recvDesc == expectDesc;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
			
				/*  
				* RightsToken validation 
				*/
				String recvrt   = myXML.Stream[xmlIndex].RightsTokenID.text();
				log.info "xmlIndex[$xmlIndex] - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				if (expectGeneric != "true") {
					log.info "RightsTokenValidation against RightsToken";
					assert recvrt == expectrt;
				} else {
					log.info "RightsTokenValidation against generic rightsToken";
					assert recvrt == urnGenericRightsToken;
				}

				/*  ExpirationDateTime */
				assert myXML.Stream[xmlIndex].ExpirationDateTime.text().length() > 0;

				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: "    + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();

					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}
		log.info "displayStreamCount[$displayStreamCount]";
		log.info "Stream size: "             + myXML.Stream.size();
		log.info "ResourceStatus size: "     + myXML.Stream.ResourceStatus.size();
		log.info "ResourceStatus.Current size: "     + myXML.Stream.ResourceStatus.Current.size();
		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
		log.info "RightsTokenID size: "      + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		log.info "Stream size [" + myXML.Stream.size() + "] is lte " + streamMaxDisplayCount.toInteger();
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		log.info "Stream size [" + myXML.Stream.size() + "] is equal " + 1;
		assert myXML.Stream.size() == 1;
		assert myXML.Stream.ResourceStatus.size() == 1;
		assert myXML.Stream.ResourceStatus.Current.size() == 1;
		assert myXML.Stream.ResourceStatus.Current.Value.size() == 1;
		assert myXML.Stream.ResourceStatus.Current.Description.size() == 1;
		assert myXML.Stream.RightsTokenID.size()  == 1;
		assert myXML.Stream.ExpirationDateTime.size() == 1;
	}
} 

]]></script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:StreamList ActiveStreamCount="1" AvailableStreams="11" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Stream StreamHandleID="urn:dece:streamhandleid:org:dece:0A408ECEC6C27E08E05307991F0A8F5E">
      <dece:StreamClientNickname>Raju</dece:StreamClientNickname>
      <dece:RequestingUserID>urn:dece:userid:org:dece:0A408E6FB0367D8FE05307991F0AF491</dece:RequestingUserID>
      <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0A408E6FB04E7D8FE05307991F0AF491</dece:RightsTokenID>
      <dece:ExpirationDateTime>2014-12-15T17:31:23.809Z</dece:ExpirationDateTime>
      <dece:SubDividedGeolocation Confidence="50" CalculationMethod="urn:dece:type:geoloc:networkaddress" ViaProxy="urn:dece:type:true">US 20148</dece:SubDividedGeolocation>
      <dece:ResourceStatus>
         <dece:Current CreationDate="2014-12-15T11:31:23.809Z" CreatedBy="urn:dece:org:org:dece:DLASP">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>active</dece:Description>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Stream>
</dece:StreamList>]]></con:value></con:property><con:property><con:name>username</con:name><con:value>ashwin_user_create_20130620_03526</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10902 - StreamCreate - DLP - StreamListView on newly created stream - 200 OK</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B93FF1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B93F71E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B93EF1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B93E71E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B93DF1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B93A51E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B939D1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B93951E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B938D1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B93851E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B937D1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94BB1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94B51E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94AF1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94A71E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B949F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94971E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B948F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94871E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B947F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94771E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B946F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94671E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B945F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94571E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B944F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94471E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B943F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94371E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B942F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94271E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B941F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94171E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B940F1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value>urn:dece:streamhandleid:org:dece:9C523D9B94071E61E0401F0A079912E5</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value>urn:dece:streamhandleid:org:dece:DF98C5879ACFD9F8E0401F0A05991FE6</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:DF98C5879ACFD9F8E0401F0A05991FE6</con:value></con:property><con:property><con:name>sName</con:name><con:value>Dynamic LASP Test Cases</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:DF98BD1F0ABADC5CE0401F0A079928EA</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_9</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_8</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_7</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_6</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_5</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_40</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B925C1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_39</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B925C1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_38</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B925C1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_37</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B925C1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_36</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B925C1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_35</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B925C1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_33</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_32</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_31</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_30</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_29</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_28</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_27</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_26</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_25</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_24</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_23</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_22</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_21</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_20</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_19</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_18</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_17</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_16</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_15</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_14</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_13</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_12</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_11</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_10</con:name><con:value>urn:dece:rightstokenid:org:dece:9C523D9B93AE1E61E0401F0A079912E5</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:DF98BD1F0ABADC5CE0401F0A079928EA</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>0914</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">chunked</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value/></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value/></con:property><con:property><con:name>expectNickname_9</con:name><con:value/></con:property><con:property><con:name>expectNickname_8</con:name><con:value/></con:property><con:property><con:name>expectNickname_7</con:name><con:value/></con:property><con:property><con:name>expectNickname_6</con:name><con:value/></con:property><con:property><con:name>expectNickname_5</con:name><con:value/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_40</con:name><con:value/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_39</con:name><con:value/></con:property><con:property><con:name>expectNickname_38</con:name><con:value/></con:property><con:property><con:name>expectNickname_37</con:name><con:value/></con:property><con:property><con:name>expectNickname_36</con:name><con:value/></con:property><con:property><con:name>expectNickname_35</con:name><con:value/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value/></con:property><con:property><con:name>expectNickname_32</con:name><con:value/></con:property><con:property><con:name>expectNickname_31</con:name><con:value/></con:property><con:property><con:name>expectNickname_30</con:name><con:value/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_29</con:name><con:value/></con:property><con:property><con:name>expectNickname_28</con:name><con:value/></con:property><con:property><con:name>expectNickname_27</con:name><con:value/></con:property><con:property><con:name>expectNickname_26</con:name><con:value/></con:property><con:property><con:name>expectNickname_25</con:name><con:value/></con:property><con:property><con:name>expectNickname_24</con:name><con:value/></con:property><con:property><con:name>expectNickname_23</con:name><con:value/></con:property><con:property><con:name>expectNickname_22</con:name><con:value/></con:property><con:property><con:name>expectNickname_21</con:name><con:value/></con:property><con:property><con:name>expectNickname_20</con:name><con:value/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_19</con:name><con:value/></con:property><con:property><con:name>expectNickname_18</con:name><con:value/></con:property><con:property><con:name>expectNickname_17</con:name><con:value/></con:property><con:property><con:name>expectNickname_16</con:name><con:value/></con:property><con:property><con:name>expectNickname_15</con:name><con:value/></con:property><con:property><con:name>expectNickname_14</con:name><con:value/></con:property><con:property><con:name>expectNickname_13</con:name><con:value/></con:property><con:property><con:name>expectNickname_12</con:name><con:value/></con:property><con:property><con:name>expectNickname_11</con:name><con:value/></con:property><con:property><con:name>expectNickname_10</con:name><con:value/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value/></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value/></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value/></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value>221700</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:DF945EC94BAAD2D0E0401F0A07990778</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:DF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVfbcrLMEr33KSz/S8sAiihWkqpBUFHRKKiRm10wDAflJAOCPv0eTPQz+ZLs/PtKp6ene/WBnjWP2Aj8Zg9gjJLUi8KqLD7V/mM2TdhmaKbBIAQbbNtGDZ5h2IbFtrs0Mi3WsuxaVcY4Q3KIUyNMn2pNmmk1aK7RpDWG7jW5HsM9sK2OXquuUYKJaaLyQNeqReCHuHdx+1TLkrAXGdjDvdAIEO6lsKcCZdojmj3jiqn2/PiG8uIweXbTNO5RFHywEES+Dx9gFFCP1AedRwv3VM8JjTRL0LtPCz/V3s/mef6Qtx6ixKGaNE1TNE8RHQt7zj+158r1MLLk0I7e1n0jjEIPGr53NkpQCkrdyKoC34kSL3WDb0wzFEOXphuogA3IsOE/NeqPgwu6X1r6ADLBRgO7BnM1tkQ2SlAIUXW1lJ9q//yugm9ntcQIsR0lAf60/neQUHhEfhQjq4GvkV3R/d7iF+l6fkSwJ4fQz7B3RLOyTWIDIlx9SZDtFVMPk+azcPVS/mqBrx2G4L8pySN1j5PApr7IjOg5CKf/T73ua/VmZW34GXpu53qxSmZgs3cVFUrt5Qzqw6IzwCfl6QLhXvkN1K3U7+vPjXrrq/dDrtPSgwn0dgyauA5lpvtivx6Dwxq1uLE51rhhLG+NUxit5+lontAiUOdLf7/B2uI8y6a7/jlgTuvhdsOkTmW32PazbOVo2+nWmY1teGqvHCFUcuq82fmSNj1YzFRZKoN9ywQya/bNSSFN/KQwJZS1QCy7ycLlVFGxz0VlZyb6DIZL/pSM6fMw0ib7pz8x3cdQxjVBp0uQ5f/XNs2LRmrcFv1yUtjk80zRsyLL/brY7wPUd0AuC8CRhekZzARnf3D33pDPaQEsVgMggpOyBLnobMX1YjGRcmu99vW1PBgIypLNR2ArVsiGKBVrUX8d08ZGj7fNAa2rgmC9LiOzNY6t0T4fuXCmaEo+0+STspOKmSbRm4vMKcj6rOwUZq6tWpXNTuCVpZSL+cWjKOXuTN8s4+2Kz+FZWiiAHQJmJfVdZaQFawa2li7cSVMF7C9ywVX667VSSBp4qQjObE1i0/oDPYaBFZuB794ZHxHjmjVcn8yhn+lnaaf0pWFfPQxV2WyJC2kMltuVuVnvjc3gWIGjGTCvHr22Z7xGuaN3c3GxHU8iXXaPcAYWkiAsAEkXDRR5OAbRUAAKC7zi3N8JXNS3Bjk1buJKnfeH3OvJO7xiY0j7BtPtMtvphns5cKIU1vVJZu5cxX0dzOsT1Tqu+JQ/b/GxfuQMj4FFbC9epVE6KezRQq2YL2LxCkd1yxlT/pkfJEpnDJLzyfUVZ5luuDk+mZ5tb4TXOet3bF9pLWPbt+MTrmvRYp/QnIBaTWp7Ok7SCnAUAYDhbrUTForQLZNqyfliqwgGGEhpBs67Zjpprg/j0dGH2xaIislmvtu/F8YSc0mg8oVE2kqqdEVglUUYqStpsAMrwXESwZEGwgKKYLGVJ/mW5Gs1Isqf8zi45NGRBCC1dMDxo0prRfPpPFVZFpxCYRUOeFc5FBuLC+jOAUlTdRazuYJndqhvor0SeMkqydTVZDKbFqaWDfc7MqtsWp0cW3pFOu5j4M0mmrsXI9F4ibfbNK6HMIGpHAeKXJznOt51PTOgx/U2I7zQIuw0V4GZr4aGpE8SR2Umo2X40urwFZzZp1FQ33XzTV1Tubhj9UNbPJ0oPVnTEYgG/LJ9sIpmc++u8imX22OwN43mrPB54cRLE12D+XIx2ahBvV1pH6fTgD5rFDuL57k6zFlpsai3LEEbaThOvG3WdYpkHlrNrZFyR51ec17s7/lmttfYuLV2AlKsl6MVd5SXyoJ9hXrgdGI4ppbUEUgdeyoPT+bZOMfBHL4N0M/T4SZ8mx/U/WT5MHqupEMl3Ypgel2WF5AsVgfkVjDSnwlMKfGshn1R7cUlC8IpCtPac3mqJC+9jFAcz+qRK+NtLQ54ti31eZa0qdgUaYlmaWZAA7rD83Sn072ynDcUnyD2o9D2Sl8lj3u7pX4GCIMeRqGFksYxyqCLcO0Hi2W+qnK4JNdvFGKkRYQntmiGG7RZnm9L7QHNA7bPc81up8M3Acfw0qBWnUXpPJwnwE5R8pEjtj5wxCWCXuyhkki+36Y4JRk5GMcs9ZmHo/EQoowwzaQke70m221fMkFZWRBDshEFKIkjnD7Ebny5zr+N4/PeNWSiY3mlAi5BC4iUDX3Baukr4r8iY79kv1fzILO88tYm+UsTD74h+bj1py3Kfrj1BM0z7BXzTfV3Rwnl4/4+Sv2AiPqcjJsn6+jd+b1yc0I3CSG5UHJMinYwHg4P2fGYXcrUKclWQsxTDEVzlIpgRhjTSYv2KKRuJqhfkdUb6k+eb/KP+LLUDdWUfPAB6anqZfmLl4qKcPlSkck3Ufz2GfTBJclbior0K1nfJw+aEvGPbx7Yg6UeEb+QnzxKrD/l+sLWnR8SZznhvNApVyU1PX3TFTAiZj0y5aLk3vhXBr5y/lF4S/INS0q6ycxS9P1OtRxfTzUDwigLU1msXQT3I/WCMz3FqPdH6S8zF3L4zvYL/C3bf1WmKhlugVG76Xr/W7nhXdoFInIKexcsT7WCPFyJ89C5G+HvAL+Z4t2fpvjHSJ7/Ev8tucvp5+/h+b8=</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77330</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/DLASP_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>852eed9a-4d62-4a55-8572-421356bf351f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamRenew" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="37da474a-fc83-42a3-97a2-a71ddfad6afd"><con:settings/><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="1a189708-39bb-4902-b494-83551e5abe9e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("TSuiteName");
def callTCname = tC.getPropertyValue("TCaseName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nickname",callTC.getPropertyValue("nickname"));
//tC.setPropertyValue("transactionid",callTC.getPropertyValue("transactionid"));

tC.setPropertyValue("RightsTokenID",callTC.getPropertyValue("RightsTokenID"));
tC.setPropertyValue("decodedNodeUserID",callTC.getPropertyValue("decodedNodeUserID"));

if(tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
	
}
else 
{
	tC.setPropertyValue("streamhandleFULL",URLEncoder.encode(callTC.getPropertyValue("streamhandleFULL"),"UTF-8"));
}
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("errorRespTypeStreamView",callTC.getPropertyValue("errorRespTypeStreamView"));
tC.setPropertyValue("expectStreamStatus",callTC.getPropertyValue("expectStreamStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="bd6a4c04-d110-4f5c-9fa5-e3ac2da36921"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - StreamRenew");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - StreamRenew" id="c64c8e9e-4669-4f08-9d3d-342aadb42eab"><con:settings/><con:config service="Streams" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" methodName="StreamRenew" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - StreamRenew" mediaType="application/xml" postQueryString="false" sslKeystore="DLASP_concat.pem" id="e6000ceb-5638-4f15-ae73-0b9a0eaa4e3f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Stream xmlns="${#Project#Coordinator_Schema}" 
             xmlns:ns2="http://www.movielabs.com/md"       
             xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" 
             xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" StreamHandleID="urn:dece:streamhandleid:org:dece:${#TestCase#streamhandle}">       
    <StreamClientNickname>${#TestCase#nickname}</StreamClientNickname>        
    <RequestingUserID>${#TestCase#decodedNodeUserID}</RequestingUserID>      
    <RightsTokenID>${#TestCase#RightsTokenID}</RightsTokenID>       
    <TransactionID></TransactionID>
   <ExpirationDateTime>${#Project#ExpirationDateTime}</ExpirationDateTime>         
    <SubDividedGeolocation ViaProxy="urn:dece:type:true" Confidence="50" CalculationMethod="urn:dece:type:geoloc:networkaddress">US 20148</SubDividedGeolocation> 
    </Stream>]]></con:request><con:originalUri>https://lp3.qa-web-vip2-s01.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:FFF69346EA707E71E04305991F0A722B/Stream/urn:dece:streamhandleid:org:dece:FFE1E062A0B1139EE04307991F0AE2F4</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#versionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#versionMajor}"/>
  <con:entry key="ACCT" value="${#Project#Node_Account}"/>
  <con:entry key="STREAM" value="${#TestCase#streamhandleFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="87640ecc-088e-4fcd-b58e-e512e121c760"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PUT - StreamRenew');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="ec278e60-2fdf-4353-984a-8124a7c9a9fe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10903 - StreamCreate - DLP - StreamRenew on newly created stream - 200 OK</con:value></con:property><con:property><con:name>sName</con:name><con:value>Dynamic LASP Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>0914</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlp</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:0663A3A5EFBF0595E05307991F0AECF6</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0663A3A5EFBF0595E05307991F0AECF6</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0663A2A85EA25341E05305991F0A0E28</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVfbcrLMEr33KSz/S8sAiihWkqpBUFHRKKiRm10wDAflJAOCPv0eTPQz+ZLs/PtKp6ene/WBnjWP2Aj8Zg9gjJLUi8KqLD7V/mM2TdhmaKbBIAQbbNtGDZ5h2IbFtrs0Mi3WsuxaVcY4Q3KIUyNMn2pNmmk1aK7RpDWG7jW5HsM9sK2OXquuUYKJaaLyQNeqReCHuHdx+1TLkrAXGdjDvdAIEO6lsKcCZdojmj3jiqn2/PiG8uIweXbTNO5RFHywEES+Dx9gFFCP1AedRwv3VM8JjTRL0LtPCz/V3s/mef6Qtx6ixKGaNE1TNE8RHQt7zj+158r1MLLk0I7e1n0jjEIPGr53NkpQCkrdyKoC34kSL3WDb0wzFEOXphuogA3IsOE/NeqPgwu6X1r6ADLBRgO7BnM1tkQ2SlAIUXW1lJ9q//yugm9ntcQIsR0lAf60/neQUHhEfhQjq4GvkV3R/d7iF+l6fkSwJ4fQz7B3RLOyTWIDIlx9SZDtFVMPk+azcPVS/mqBrx2G4L8pySN1j5PApr7IjOg5CKf/T73ua/VmZW34GXpu53qxSmZgs3cVFUrt5Qzqw6IzwCfl6QLhXvkN1K3U7+vPjXrrq/dDrtPSgwn0dgyauA5lpvtivx6Dwxq1uLE51rhhLG+NUxit5+lontAiUOdLf7/B2uI8y6a7/jlgTuvhdsOkTmW32PazbOVo2+nWmY1teGqvHCFUcuq82fmSNj1YzFRZKoN9ywQya/bNSSFN/KQwJZS1QCy7ycLlVFGxz0VlZyb6DIZL/pSM6fMw0ib7pz8x3cdQxjVBp0uQ5f/XNs2LRmrcFv1yUtjk80zRsyLL/brY7wPUd0AuC8CRhekZzARnf3D33pDPaQEsVgMggpOyBLnobMX1YjGRcmu99vW1PBgIypLNR2ArVsiGKBVrUX8d08ZGj7fNAa2rgmC9LiOzNY6t0T4fuXCmaEo+0+STspOKmSbRm4vMKcj6rOwUZq6tWpXNTuCVpZSL+cWjKOXuTN8s4+2Kz+FZWiiAHQJmJfVdZaQFawa2li7cSVMF7C9ywVX667VSSBp4qQjObE1i0/oDPYaBFZuB794ZHxHjmjVcn8yhn+lnaaf0pWFfPQxV2WyJC2kMltuVuVnvjc3gWIGjGTCvHr22Z7xGuaN3c3GxHU8iXXaPcAYWkiAsAEkXDRR5OAbRUAAKC7zi3N8JXNS3Bjk1buJKnfeH3OvJO7xiY0j7BtPtMtvphns5cKIU1vVJZu5cxX0dzOsT1Tqu+JQ/b/GxfuQMj4FFbC9epVE6KezRQq2YL2LxCkd1yxlT/pkfJEpnDJLzyfUVZ5luuDk+mZ5tb4TXOet3bF9pLWPbt+MTrmvRYp/QnIBaTWp7Ok7SCnAUAYDhbrUTForQLZNqyfliqwgGGEhpBs67Zjpprg/j0dGH2xaIislmvtu/F8YSc0mg8oVE2kqqdEVglUUYqStpsAMrwXESwZEGwgKKYLGVJ/mW5Gs1Isqf8zi45NGRBCC1dMDxo0prRfPpPFVZFpxCYRUOeFc5FBuLC+jOAUlTdRazuYJndqhvor0SeMkqydTVZDKbFqaWDfc7MqtsWp0cW3pFOu5j4M0mmrsXI9F4ibfbNK6HMIGpHAeKXJznOt51PTOgx/U2I7zQIuw0V4GZr4aGpE8SR2Umo2X40urwFZzZp1FQ33XzTV1Tubhj9UNbPJ0oPVnTEYgG/LJ9sIpmc++u8imX22OwN43mrPB54cRLE12D+XIx2ahBvV1pH6fTgD5rFDuL57k6zFlpsai3LEEbaThOvG3WdYpkHlrNrZFyR51ec17s7/lmttfYuLV2AlKsl6MVd5SXyoJ9hXrgdGI4ppbUEUgdeyoPT+bZOMfBHL4N0M/T4SZ8mx/U/WT5MHqupEMl3Ypgel2WF5AsVgfkVjDSnwlMKfGshn1R7cUlC8IpCtPac3mqJC+9jFAcz+qRK+NtLQ54ti31eZa0qdgUaYlmaWZAA7rD83Sn072ynDcUnyD2o9D2Sl8lj3u7pX4GCIMeRqGFksYxyqCLcO0Hi2W+qnK4JNdvFGKkRYQntmiGG7RZnm9L7QHNA7bPc81up8M3Acfw0qBWnUXpPJwnwE5R8pEjtj5wxCWCXuyhkki+36Y4JRk5GMcs9ZmHo/EQoowwzaQke70m221fMkFZWRBDshEFKIkjnD7Ebny5zr+N4/PeNWSiY3mlAi5BC4iUDX3Baukr4r8iY79kv1fzILO88tYm+UsTD74h+bj1py3Kfrj1BM0z7BXzTfV3Rwnl4/4+Sv2AiPqcjJsn6+jd+b1yc0I3CSG5UHJMinYwHg4P2fGYXcrUKclWQsxTDEVzlIpgRhjTSYv2KKRuJqhfkdUb6k+eb/KP+LLUDdWUfPAB6anqZfmLl4qKcPlSkck3Ufz2GfTBJclbior0K1nfJw+aEvGPbx7Yg6UeEb+QnzxKrD/l+sLWnR8SZznhvNApVyU1PX3TFTAiZj0y5aLk3vhXBr5y/lF4S/INS0q6ycxS9P1OtRxfTzUDwigLU1msXQT3I/WCMz3FqPdH6S8zF3L4zvYL/C3bf1WmKhlugVG76Xr/W7nhXdoFInIKexcsT7WCPFyJ89C5G+HvAL+Z4t2fpvjHSJ7/Ev8tucvp5+/h+b8=</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>0914</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:DF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:DF945EC94BAAD2D0E0401F0A07990778</con:value></con:property><con:property><con:name>expectErrTypeStreamRenew</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>ashwin_user_create_20130620_03526</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:DF98C5879AEBD9F8E0401F0A05991FE6</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:Stream StreamHandleID="urn:dece:streamhandleid:org:dece:0663A3A5EFBF0595E05307991F0AECF6" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md">
   <dece:StreamClientNickname>Raju</dece:StreamClientNickname>
   <dece:RequestingUserID>urn:dece:userid:org:dece:0663A29F8B0B0337E05307991F0AEC98</dece:RequestingUserID>
   <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0663A2A85EA25341E05305991F0A0E28</dece:RightsTokenID>
   <dece:ExpirationDateTime>2014-10-27T15:43:18.647Z</dece:ExpirationDateTime>
   <dece:SubDividedGeolocation Confidence="50" CalculationMethod="urn:dece:type:geoloc:networkaddress" ViaProxy="urn:dece:type:true">US 20148</dece:SubDividedGeolocation>
   <dece:ResourceStatus>
      <dece:Current ModificationDate="2014-10-27T07:42:37.829Z" ModifiedBy="urn:dece:org:org:dece:DLASP" CreationDate="2014-10-27T07:42:19.439Z" CreatedBy="urn:dece:org:org:dece:DLASP">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>active</dece:Description>
      </dece:Current>
      <dece:History>
         <dece:Prior ModificationDate="2014-10-27T07:42:19.439Z" ModifiedBy="urn:dece:org:org:dece:DLASP">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>active</dece:Description>
         </dece:Prior>
      </dece:History>
   </dece:ResourceStatus>
</dece:Stream>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>1611</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77331</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn:dece:streamhandleid:org:dece:ED419DFA2BA592C7E0401F0A0799147D</con:value></con:property><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>errorRespTypeStreamView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectStreamStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>nickname</con:name><con:value>Raju</con:value></con:property><con:property><con:name>decodedNodeUserID</con:name><con:value>urn:dece:userid:org:dece:0663A29F8B0B0337E05307991F0AEC98</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamRenew_06" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="a46f8faf-71e4-4b61-a6be-29028d27f0e4"><con:settings/><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="b7b43d40-4bed-4c14-bf90-ce05eb0c33c6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("TSuiteName");
def callTCname = tC.getPropertyValue("TCaseName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nickname",callTC.getPropertyValue("nickname"));
//tC.setPropertyValue("transactionid",callTC.getPropertyValue("transactionid"));

tC.setPropertyValue("RightsTokenID",callTC.getPropertyValue("RightsTokenID"));
tC.setPropertyValue("decodedNodeUserID",callTC.getPropertyValue("decodedNodeUserID"));

if(tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
	
}
else 
{
	tC.setPropertyValue("streamhandleFULL",URLEncoder.encode(callTC.getPropertyValue("streamhandleFULL"),"UTF-8"));
}
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("errorRespTypeStreamView",callTC.getPropertyValue("errorRespTypeStreamView"));
tC.setPropertyValue("expectStreamStatus",callTC.getPropertyValue("expectStreamStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="f6a0657c-b694-4b9f-a3dd-6bf014d54284"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - StreamRenew");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamRenew" id="d16108a0-2803-4e68-9851-f544cd1d1a1c"><con:settings/><con:config service="Streams" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}/Renew" methodName="StreamRenew" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamRenew" mediaType="application/xml" postQueryString="false" id="5062a81c-c63b-4263-9ffc-ec0b029c4ae0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#versionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#versionMajor}"/>
  <con:entry key="ACCT" value="${#Project#Node_Account}"/>
  <con:entry key="STREAM" value="${#TestCase#streamhandleFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="991847d9-7b29-44e9-bafe-8b2068361e2d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamRenew');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="169d9780-e053-4c94-9707-c26839b2064f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_10903 - StreamCreate - DLP - StreamRenew on newly created stream - 200 OK</con:value></con:property><con:property><con:name>sName</con:name><con:value>Dynamic LASP Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>0914</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlp</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3AED55101022B16DBBE0401F0A05991153</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ED55101022B16DBBE0401F0A05991153</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:ED54DACEF9BE27EBE0401F0A07995654</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>nVfbcrLMEr33KSz/S8sAiihWkqpBUFHRKKiRm10wDAflJAOCPv0eTPQz+ZLs/PtKp6ene/WBnjWP2Aj8Zg9gjJLUi8KqLD7V/mM2TdhmaKbBIAQbbNtGDZ5h2IbFtrs0Mi3WsuxaVcY4Q3KIUyNMn2pNmmk1aK7RpDWG7jW5HsM9sK2OXquuUYKJaaLyQNeqReCHuHdx+1TLkrAXGdjDvdAIEO6lsKcCZdojmj3jiqn2/PiG8uIweXbTNO5RFHywEES+Dx9gFFCP1AedRwv3VM8JjTRL0LtPCz/V3s/mef6Qtx6ixKGaNE1TNE8RHQt7zj+158r1MLLk0I7e1n0jjEIPGr53NkpQCkrdyKoC34kSL3WDb0wzFEOXphuogA3IsOE/NeqPgwu6X1r6ADLBRgO7BnM1tkQ2SlAIUXW1lJ9q//yugm9ntcQIsR0lAf60/neQUHhEfhQjq4GvkV3R/d7iF+l6fkSwJ4fQz7B3RLOyTWIDIlx9SZDtFVMPk+azcPVS/mqBrx2G4L8pySN1j5PApr7IjOg5CKf/T73ua/VmZW34GXpu53qxSmZgs3cVFUrt5Qzqw6IzwCfl6QLhXvkN1K3U7+vPjXrrq/dDrtPSgwn0dgyauA5lpvtivx6Dwxq1uLE51rhhLG+NUxit5+lontAiUOdLf7/B2uI8y6a7/jlgTuvhdsOkTmW32PazbOVo2+nWmY1teGqvHCFUcuq82fmSNj1YzFRZKoN9ywQya/bNSSFN/KQwJZS1QCy7ycLlVFGxz0VlZyb6DIZL/pSM6fMw0ib7pz8x3cdQxjVBp0uQ5f/XNs2LRmrcFv1yUtjk80zRsyLL/brY7wPUd0AuC8CRhekZzARnf3D33pDPaQEsVgMggpOyBLnobMX1YjGRcmu99vW1PBgIypLNR2ArVsiGKBVrUX8d08ZGj7fNAa2rgmC9LiOzNY6t0T4fuXCmaEo+0+STspOKmSbRm4vMKcj6rOwUZq6tWpXNTuCVpZSL+cWjKOXuTN8s4+2Kz+FZWiiAHQJmJfVdZaQFawa2li7cSVMF7C9ywVX667VSSBp4qQjObE1i0/oDPYaBFZuB794ZHxHjmjVcn8yhn+lnaaf0pWFfPQxV2WyJC2kMltuVuVnvjc3gWIGjGTCvHr22Z7xGuaN3c3GxHU8iXXaPcAYWkiAsAEkXDRR5OAbRUAAKC7zi3N8JXNS3Bjk1buJKnfeH3OvJO7xiY0j7BtPtMtvphns5cKIU1vVJZu5cxX0dzOsT1Tqu+JQ/b/GxfuQMj4FFbC9epVE6KezRQq2YL2LxCkd1yxlT/pkfJEpnDJLzyfUVZ5luuDk+mZ5tb4TXOet3bF9pLWPbt+MTrmvRYp/QnIBaTWp7Ok7SCnAUAYDhbrUTForQLZNqyfliqwgGGEhpBs67Zjpprg/j0dGH2xaIislmvtu/F8YSc0mg8oVE2kqqdEVglUUYqStpsAMrwXESwZEGwgKKYLGVJ/mW5Gs1Isqf8zi45NGRBCC1dMDxo0prRfPpPFVZFpxCYRUOeFc5FBuLC+jOAUlTdRazuYJndqhvor0SeMkqydTVZDKbFqaWDfc7MqtsWp0cW3pFOu5j4M0mmrsXI9F4ibfbNK6HMIGpHAeKXJznOt51PTOgx/U2I7zQIuw0V4GZr4aGpE8SR2Umo2X40urwFZzZp1FQ33XzTV1Tubhj9UNbPJ0oPVnTEYgG/LJ9sIpmc++u8imX22OwN43mrPB54cRLE12D+XIx2ahBvV1pH6fTgD5rFDuL57k6zFlpsai3LEEbaThOvG3WdYpkHlrNrZFyR51ec17s7/lmttfYuLV2AlKsl6MVd5SXyoJ9hXrgdGI4ppbUEUgdeyoPT+bZOMfBHL4N0M/T4SZ8mx/U/WT5MHqupEMl3Ypgel2WF5AsVgfkVjDSnwlMKfGshn1R7cUlC8IpCtPac3mqJC+9jFAcz+qRK+NtLQ54ti31eZa0qdgUaYlmaWZAA7rD83Sn072ynDcUnyD2o9D2Sl8lj3u7pX4GCIMeRqGFksYxyqCLcO0Hi2W+qnK4JNdvFGKkRYQntmiGG7RZnm9L7QHNA7bPc81up8M3Acfw0qBWnUXpPJwnwE5R8pEjtj5wxCWCXuyhkki+36Y4JRk5GMcs9ZmHo/EQoowwzaQke70m221fMkFZWRBDshEFKIkjnD7Ebny5zr+N4/PeNWSiY3mlAi5BC4iUDX3Baukr4r8iY79kv1fzILO88tYm+UsTD74h+bj1py3Kfrj1BM0z7BXzTfV3Rwnl4/4+Sv2AiPqcjJsn6+jd+b1yc0I3CSG5UHJMinYwHg4P2fGYXcrUKclWQsxTDEVzlIpgRhjTSYv2KKRuJqhfkdUb6k+eb/KP+LLUDdWUfPAB6anqZfmLl4qKcPlSkck3Ufz2GfTBJclbior0K1nfJw+aEvGPbx7Yg6UeEb+QnzxKrD/l+sLWnR8SZznhvNApVyU1PX3TFTAiZj0y5aLk3vhXBr5y/lF4S/INS0q6ycxS9P1OtRxfTzUDwigLU1msXQT3I/WCMz3FqPdH6S8zF3L4zvYL/C3bf1WmKhlugVG76Xr/W7nhXdoFInIKexcsT7WCPFyJ89C5G+HvAL+Z4t2fpvjHSJ7/Ev8tucvp5+/h+b8=</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>0914</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:DF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:DF945EC94BAAD2D0E0401F0A07990778</con:value></con:property><con:property><con:name>expectErrTypeStreamRenew</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>ashwin_user_create_20130620_03526</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:DF98C5879AEBD9F8E0401F0A05991FE6</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Stream StreamHandleID="urn:dece:streamhandleid:org:dece:ED55101022B16DBBE0401F0A05991153" xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <StreamClientNickname>Raju</StreamClientNickname>
   <RequestingUserID>urn:dece:userid:org:dece:ED54DACF9635E705E0401F0A07995652</RequestingUserID>
   <RightsTokenID>urn:dece:rightstokenid:org:dece:ED54DACEF9BE27EBE0401F0A07995654</RightsTokenID>
   <ExpirationDateTime>2013-12-12T22:50:44.503Z</ExpirationDateTime>
   <SubDividedGeolocation ViaProxy="urn:dece:type:true" CalculationMethod="urn:dece:type:geoloc:networkaddress" Confidence="50">US 20148</SubDividedGeolocation>
   <ResourceStatus>
      <Current ModifiedBy="urn:dece:org:org:dece:DLASP" ModificationDate="2013-12-12T11:02:39.556Z" CreatedBy="urn:dece:org:org:dece:DLASP" CreationDate="2013-12-12T10:50:44.503Z">
         <Value>urn:dece:type:status:active</Value>
         <Description>active</Description>
      </Current>
      <History>
         <Prior ModifiedBy="urn:dece:org:org:dece:DLASP" ModificationDate="2013-12-12T10:50:44.503Z">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Prior>
      </History>
   </ResourceStatus>
</Stream>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>1467</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77331</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn:dece:streamhandleid:org:dece:ED419DFA2BA592C7E0401F0A0799147D</con:value></con:property><con:property><con:name>TCaseName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>errorRespTypeStreamView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectStreamStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value/></con:property><con:property><con:name>nickname</con:name><con:value>Raju</con:value></con:property><con:property><con:name>decodedNodeUserID</con:name><con:value>urn:dece:userid:org:dece:ED54DACF9635E705E0401F0A07995652</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamDelete API" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c222e697-5aee-478a-b6f9-111995e3641c"><con:settings/><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="0c011f0e-c098-417b-b4a9-5e87bd283547"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("TSuiteName");
def callTCname = tC.getPropertyValue("TCaseName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

if(tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
	
}
else 
{
	tC.setPropertyValue("streamhandleFULL",URLEncoder.encode(callTC.getPropertyValue("streamhandleFULL"),"UTF-8"));
}

tC.setPropertyValue("errorRespTypeStreamView",callTC.getPropertyValue("errorRespTypeStreamView"));
tC.setPropertyValue("expectStreamStatus",callTC.getPropertyValue("expectStreamStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="6ae79d2b-3c58-4f72-af1f-636f740f2e71"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("Delete - StreamDelete");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete - StreamDelete" id="839f0827-d6d7-446f-8ee2-3ed59a7254c3"><con:settings/><con:config service="Streams" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAMHANDLE}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - StreamDelete" id="4c44e8eb-ec74-4743-a725-58cfab41f542" mediaType="application/xml" sslKeystore="DLASP_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCBC6EB27E31E0530F991F0A4FF1/Stream/urn:dece:streamhandleid:org:dece:0083CD0B1CB47E2BE0530F991F0A287C</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="ACCT" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="2af85a87-1e0e-499a-a32a-fe371465c12d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Delete - StreamDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("versionMajor");
String minor = tP.getPropertyValue("versionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers" id="6d2b5680-6f19-4880-aff9-34a4b3e53df6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String expectHTTPstatus      = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

/*
*   VALIDATION HTTP HEADERS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
// assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;
//Content-Length
assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;
//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

</script></con:config></con:testStep><con:testStep type="groovy" name="Return Property Values if Required" id="a97b8ffc-ba6a-47f9-b096-cb0899163c9f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("TSuiteName");
def callTCname = tC.getPropertyValue("TCaseName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("expectDBDeletedBy"));
callTC.setPropertyValue("expectDBStatus",tC.getPropertyValue("expectDBStatus"));
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:0</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVfbcrLMEr33KSz/S8sAiihWkqpBUFHRKKiRm10wDAflJAOCPv0eTPQz+ZLs/PtKp6ene/WBnjWP2Aj8Zg9gjJLUi8KqLD7V/mM2TdhmaKbBIAQbbNtGDZ5h2IbFtrs0Mi3WsuxaVcY4Q3KIUyNMn2pNmmk1aK7RpDWG7jW5HsM9sK2OXquuUYKJaaLyQNeqReCHuHdx+1TLkrAXGdjDvdAIEO6lsKcCZdojmj3jiqn2/PiG8uIweXbTNO5RFHywEES+Dx9gFFCP1AedRwv3VM8JjTRL0LtPCz/V3s/mef6Qtx6ixKGaNE1TNE8RHQt7zj+158r1MLLk0I7e1n0jjEIPGr53NkpQCkrdyKoC34kSL3WDb0wzFEOXphuogA3IsOE/NeqPgwu6X1r6ADLBRgO7BnM1tkQ2SlAIUXW1lJ9q//yugm9ntcQIsR0lAf60/neQUHhEfhQjq4GvkV3R/d7iF+l6fkSwJ4fQz7B3RLOyTWIDIlx9SZDtFVMPk+azcPVS/mqBrx2G4L8pySN1j5PApr7IjOg5CKf/T73ua/VmZW34GXpu53qxSmZgs3cVFUrt5Qzqw6IzwCfl6QLhXvkN1K3U7+vPjXrrq/dDrtPSgwn0dgyauA5lpvtivx6Dwxq1uLE51rhhLG+NUxit5+lontAiUOdLf7/B2uI8y6a7/jlgTuvhdsOkTmW32PazbOVo2+nWmY1teGqvHCFUcuq82fmSNj1YzFRZKoN9ywQya/bNSSFN/KQwJZS1QCy7ycLlVFGxz0VlZyb6DIZL/pSM6fMw0ib7pz8x3cdQxjVBp0uQ5f/XNs2LRmrcFv1yUtjk80zRsyLL/brY7wPUd0AuC8CRhekZzARnf3D33pDPaQEsVgMggpOyBLnobMX1YjGRcmu99vW1PBgIypLNR2ArVsiGKBVrUX8d08ZGj7fNAa2rgmC9LiOzNY6t0T4fuXCmaEo+0+STspOKmSbRm4vMKcj6rOwUZq6tWpXNTuCVpZSL+cWjKOXuTN8s4+2Kz+FZWiiAHQJmJfVdZaQFawa2li7cSVMF7C9ywVX667VSSBp4qQjObE1i0/oDPYaBFZuB794ZHxHjmjVcn8yhn+lnaaf0pWFfPQxV2WyJC2kMltuVuVnvjc3gWIGjGTCvHr22Z7xGuaN3c3GxHU8iXXaPcAYWkiAsAEkXDRR5OAbRUAAKC7zi3N8JXNS3Bjk1buJKnfeH3OvJO7xiY0j7BtPtMtvphns5cKIU1vVJZu5cxX0dzOsT1Tqu+JQ/b/GxfuQMj4FFbC9epVE6KezRQq2YL2LxCkd1yxlT/pkfJEpnDJLzyfUVZ5luuDk+mZ5tb4TXOet3bF9pLWPbt+MTrmvRYp/QnIBaTWp7Ok7SCnAUAYDhbrUTForQLZNqyfliqwgGGEhpBs67Zjpprg/j0dGH2xaIislmvtu/F8YSc0mg8oVE2kqqdEVglUUYqStpsAMrwXESwZEGwgKKYLGVJ/mW5Gs1Isqf8zi45NGRBCC1dMDxo0prRfPpPFVZFpxCYRUOeFc5FBuLC+jOAUlTdRazuYJndqhvor0SeMkqydTVZDKbFqaWDfc7MqtsWp0cW3pFOu5j4M0mmrsXI9F4ibfbNK6HMIGpHAeKXJznOt51PTOgx/U2I7zQIuw0V4GZr4aGpE8SR2Umo2X40urwFZzZp1FQ33XzTV1Tubhj9UNbPJ0oPVnTEYgG/LJ9sIpmc++u8imX22OwN43mrPB54cRLE12D+XIx2ahBvV1pH6fTgD5rFDuL57k6zFlpsai3LEEbaThOvG3WdYpkHlrNrZFyR51ec17s7/lmttfYuLV2AlKsl6MVd5SXyoJ9hXrgdGI4ppbUEUgdeyoPT+bZOMfBHL4N0M/T4SZ8mx/U/WT5MHqupEMl3Ypgel2WF5AsVgfkVjDSnwlMKfGshn1R7cUlC8IpCtPac3mqJC+9jFAcz+qRK+NtLQ54ti31eZa0qdgUaYlmaWZAA7rD83Sn072ynDcUnyD2o9D2Sl8lj3u7pX4GCIMeRqGFksYxyqCLcO0Hi2W+qnK4JNdvFGKkRYQntmiGG7RZnm9L7QHNA7bPc81up8M3Acfw0qBWnUXpPJwnwE5R8pEjtj5wxCWCXuyhkki+36Y4JRk5GMcs9ZmHo/EQoowwzaQke70m221fMkFZWRBDshEFKIkjnD7Ebny5zr+N4/PeNWSiY3mlAi5BC4iUDX3Baukr4r8iY79kv1fzILO88tYm+UsTD74h+bj1py3Kfrj1BM0z7BXzTfV3Rwnl4/4+Sv2AiPqcjJsn6+jd+b1yc0I3CSG5UHJMinYwHg4P2fGYXcrUKclWQsxTDEVzlIpgRhjTSYv2KKRuJqhfkdUb6k+eb/KP+LLUDdWUfPAB6anqZfmLl4qKcPlSkck3Ufz2GfTBJclbior0K1nfJw+aEvGPbx7Yg6UeEb+QnzxKrD/l+sLWnR8SZznhvNApVyU1PX3TFTAiZj0y5aLk3vhXBr5y/lF4S/INS0q6ycxS9P1OtRxfTzUDwigLU1msXQT3I/WCMz3FqPdH6S8zF3L4zvYL/C3bf1WmKhlugVG76Xr/W7nhXdoFInIKexcsT7WCPFyJ89C5G+HvAL+Z4t2fpvjHSJ7/Ev8tucvp5+/h+b8=</con:value></con:property><con:property><con:name>cid</con:name><con:value>urn:dece:cid:0000-3BAB-9352-9999-G-0000-9999-Q:0001</con:value></con:property><con:property><con:name>dlpnodeid</con:name><con:value>914</con:value></con:property><con:property><con:name>eDECEDeleteFlag</con:name><con:value>false</con:value></con:property><con:property><con:name>eDeletedByPresent</con:name><con:value>false</con:value></con:property><con:property><con:name>errorRespTypeStreamView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamView</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectTransactionid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Hello-George...Lovely 123 Day</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>0914</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlp</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Dynamic LASP Test Cases</con:value></con:property><con:property><con:name>streamdeletenodeaccount</con:name><con:value>1999003</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_11081 - StreamCreate - DLP - &lt;TransactionID> can be duplicated on 'deleted' stream - 201 Created</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:DF9942FD9463A8EAE0401F0A079923F8</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:DF945EC94BAAD2D0E0401F0A07990778</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:DF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:0663A3A5EFBF0595E05307991F0AECF6</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>deleted</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77328</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADF945EC94BA8D2D0E0401F0A07990778</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3AED55101022B16DBBE0401F0A05991153</con:value></con:property><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>839f0827-d6d7-446f-8ee2-3ed59a7254c3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRCreate POST" searchProperties="true" id="91543ba3-e467-4611-87a1-1c94553d65e3"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="2126bb7a-feb2-4c81-b5a1-98e8a2b0e1dd">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("DMRCreate POST").testRequest.setRequestHeaders(headers);

// setUp Node Properties
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("decodedNodeUserID",CallingTCase.getPropertyValue("decodedNodeUserID"));
testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
testCase.setPropertyValue("RightsTokenIDdecoded",URLDecoder.decode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
testCase.setPropertyValue("fulfillmentMethod",CallingTCase.getPropertyValue("fulfillmentMethod"));
testCase.setPropertyValue("mediaProfile",CallingTCase.getPropertyValue("mediaProfile"));

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="f12114d2-87a1-4015-8ba9-2ddea899f407"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRCreate POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRCreate POST" id="e92a1394-66b9-4db3-b8b8-b49fe2b83e0d"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/DiscreteMediaRight" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRCreate POST" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept="" id="66447104-4b0a-4c9d-a54d-a0e7eef76f38"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVZZc+I4EP4rlOdxy1g2p12BKq5MkXBkgSGbeUkJucEKtmws2ZD8+pUMOECOZeeBotRudX996Ou+4TjwLafFOcSChqywC3zGnUza0JKYOSHmlDsMB8AdQZxpazhwrCJy8PGKVuh3G9pzldQtVK2BXjJrZb2MakvdJktTdzFaEEzMsl21pSrnCfQZF5iJhmYhs6ybSLdqM1RzyshBdrGC6r+1whxiLm1LlSLSDqB2vKF5QkSOYWy32+K2VAzjlWEhZBr/DAdT4kGAtebNPqLMUdw86JOiCwR8nxRJGBg3xpnOjcudKV0xLJIYDr7cr3whA9mG1HE5Xf3Q8rvg9tkyzI4dzEJGCfbpG1b5GYLwQrfQ8ldhTIUXfBmEiZRhHXZEl+liPzTjHNqVhs4Qxhzr3MPmwdYElhADI1D4Nek3tB/XVS27Oosx48swDvj58f/hAZaCH0bg6vwY1gHa9QY/yVTzBojTZ8RPOE1hpJo1wgT4oZpArjdVeIhhSXcDymWD7rhCZ5zCuzjus9GlK+DiTwp0Upy9kTn2E2iWJkP/Yeo+jW45ephF1fVduz3ejBfj+rqRAThVzgR5affHi6bMm2h/w1umo/CxH7aF/9PbGuMRWUx693W37y9wems81eoL9ld7Xb4beneoG7h+NFgPyr7XKvmDHR8FwUsX8ONiNAkm4mU361Ye7cpqNLdWaacaz6zfJErJZs3x5Glg75Zhb7CKXkbz/pz1YPyz4w/J22a+Yt4vuruztvczGAb3JXj1aDT1LTKM7HFM2sN7fuf//dTIwznBfy47vvlpsngBIo5H1Qb9buFWVgmL78lMSairLzNVJ1LkwwUwoTXVLcUdTiLpjrqOrOH+jKrVUsuyb+tt1EalUq2HKiVUs23zFrV6Hbt+JJk9iguInZAtqfKlKHffNt8DJIHDgbkQ62mYSKbj2jcWu1jgQp9N5CMIGYdZKOmZrVcsSbaW/L2ZsOax5W9qJLUsrTAKxZiN49ZSQHzGySY64+QJEBpRUMSt+prLxuZC5mKD00T4ZjHFRQaJpPZYsaxjlesVg9Mg8kEhNYLQTXwoRl6UZcbg+39Lx4Rn0klvlr22L+O6/HZMgdRxqVLgKpY2yDLC5XAp2U7lGMiHgCufDqGj+VbiUvWwZD5FTMkeyfmn9zZR/ZH3SHfQmj4cQee6192V2XjuTJ/NP7/+8abxTUDGZS5zR25KT9wex74cIJJymsdO2ODippikaZLVvqaoNZbmDZVdA1nGFEgiSfF1Fq6BGbkV46oJlAO/cJ7LzyEmwmNTgQUEslkL2fGKlWMKXK0cffnKdtfuM2cuZeoE7MRnso4v1yWF+NuNijhE6Unxg/zbhrH7XrFPbJ34kXHKjUNQtlInNX1ev+gLEkqzVPJmGJ8a/8zAZ87PhXmScyxCNtQiEfD1l4IixIaGCQkTJvpdLROcknSGU7xG4LwrfTCTzYF8MaT/vRnqNGsBAnKd5DSzr+a7o54AW50Q/cHpR66vdaqoV6+UyqWM6yt7ri9X6uU8KWfomh/EHyUnebrs8ea/" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<DiscreteMediaToken State="urn:dece:type:state:discretemediaright:available" xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/schema/md/v1.07/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RequestingUserID>${#TestCase#decodedNodeUserID}</RequestingUserID>
   <RightsTokenID>${#TestCase#RightsTokenIDdecoded}</RightsTokenID>
   <AuthorizedFulfillmentMethod>${#TestCase#fulfillmentMethod}</AuthorizedFulfillmentMethod>
   <MediaProfile>${#TestCase#mediaProfile}</MediaProfile>
   <LeaseExpiration>2011-06-04T02:30:57</LeaseExpiration>
</DiscreteMediaToken>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:00846C9E8876425AE0530F991F0A501C/DiscreteMediaRight</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="RightsTokenId" value="${#TestCase#rightstokenid}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="b5584b56-b124-4012-bd6a-2bb9b4e673c2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRCreate POST');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="305dfcef-183b-42d0-ab63-f5e2b0d33afb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 201 Created";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:testStep type="groovy" name="Fetch DiscreteMediaTokenId" id="d467e3b5-471b-4222-a045-4454c0cf5a7c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName("DMRCreate POST");
def expXML = tStep.httpRequest.response.getResponseContent();

def callTSuitename = tC.getPropertyValue("TSuiteName");
def callTCasename = tC.getPropertyValue("TCaseName");


boolean httpLocationHeader = true;

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);


def CallingTCase = tP.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	
if (tP.getPropertyValue("URLEncode") == "NO")
{
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	dmrtokenoid     = urlStr.substring(lastColon + 1);
	dmrtokenid = urlStr.substring(lastSlash + 1);

	tC.setPropertyValue("discreteMediaTokenOid",dmrtokenoid);
	tC.setPropertyValue("discreteMediaTokenId",dmrtokenid);
}
else 
{
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	dmrtokenoid     = urlStr.substring(lastColon + 3);
	dmrtokenid = urlStr.substring(lastSlash + 1);
	
	tC.setPropertyValue("discreteMediaTokenOid",dmrtokenoid);
	tC.setPropertyValue("discreteMediaTokenId",dmrtokenid);
	log.info dmrtokenid;
	log.info dmrtokenoid;
} 
	
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

CallingTCase.setPropertyValue("discreteMediaTokenOid",dmrtokenoid);
CallingTCase.setPropertyValue("discreteMediaTokenId",dmrtokenid);
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0663A3374389054BE05307991F0ACA41</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584/RightsToken/urn:dece:rightstokenid:org:dece:0663A3374389054BE05307991F0ACA41/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:0663A337A656055CE05307991F0A6671</con:value></con:property><con:property><con:name>discreteMediaTokenOid</con:name><con:value>0663A337A656055CE05307991F0A6671</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0663A337A656055CE05307991F0A6671</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE616B5E42370C812E0401F0A059902A8</con:value></con:property><con:property><con:name>urlrightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE616C7EA2B99122FE0401F0A05992BA4</con:value></con:property><con:property><con:name>decodedNodeUserID</con:name><con:value>urn:dece:userid:org:dece:0663A29F8B0B0337E05307991F0AEC98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584/RightsToken/urn:dece:rightstokenid:org:dece:0663A3374389054BE05307991F0ACA41/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:0663A337A656055CE05307991F0A6671</con:value></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>RightsTokenIDdecoded</con:name><con:value>urn:dece:rightstokenid:org:dece:0663A3374389054BE05307991F0ACA41</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>aafd4b7c-9e5d-4c26-bc42-83df7b59d575</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b5584b56-b124-4012-bd6a-2bb9b4e673c2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>305dfcef-183b-42d0-ab63-f5e2b0d33afb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMR GET" searchProperties="true" id="9e109905-bd39-4095-bd7c-73599d028442"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="01b62f4d-17c1-42f5-a06d-8c49ccca210e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("DMR GET").testRequest.setRequestHeaders(headers);


// setUp Node Properties
//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));


//Set the URL values
//testCase.setPropertyValue("urlNodeAccountID",URLEncoder.encode(testCase.getPropertyValue("NodeAccountID"), "UTF-8"));
//testCase.setPropertyValue("urlrightsTokenId",URLEncoder.encode(testCase.getPropertyValue("rightstokenid"), "UTF-8"));
//testCase.setPropertyValue("urldiscreteMediaTokenId",URLEncoder.encode(testCase.getPropertyValue("discreteMediaTokenId"), "UTF-8"));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="10530488-038a-4453-baeb-234741f1e46c"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMR GET");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMR GET" id="6c87d88e-b601-4cb3-950f-548d52f4fdf4"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/DiscreteMediaRight/{DiscreteMediaTokenId}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMR GET" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="e173cf2f-2167-4537-9396-c06b080c9606"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVZZc+I4EP4rlOdxy1g2p12BKq5MkXBkgSGbeUkJucEKtmws2ZD8+pUMOECOZeeBotRudX996Ou+4TjwLafFOcSChqywC3zGnUza0JKYOSHmlDsMB8AdQZxpazhwrCJy8PGKVuh3G9pzldQtVK2BXjJrZb2MakvdJktTdzFaEEzMsl21pSrnCfQZF5iJhmYhs6ybSLdqM1RzyshBdrGC6r+1whxiLm1LlSLSDqB2vKF5QkSOYWy32+K2VAzjlWEhZBr/DAdT4kGAtebNPqLMUdw86JOiCwR8nxRJGBg3xpnOjcudKV0xLJIYDr7cr3whA9mG1HE5Xf3Q8rvg9tkyzI4dzEJGCfbpG1b5GYLwQrfQ8ldhTIUXfBmEiZRhHXZEl+liPzTjHNqVhs4Qxhzr3MPmwdYElhADI1D4Nek3tB/XVS27Oosx48swDvj58f/hAZaCH0bg6vwY1gHa9QY/yVTzBojTZ8RPOE1hpJo1wgT4oZpArjdVeIhhSXcDymWD7rhCZ5zCuzjus9GlK+DiTwp0Upy9kTn2E2iWJkP/Yeo+jW45ephF1fVduz3ejBfj+rqRAThVzgR5affHi6bMm2h/w1umo/CxH7aF/9PbGuMRWUx693W37y9wems81eoL9ld7Xb4beneoG7h+NFgPyr7XKvmDHR8FwUsX8ONiNAkm4mU361Ye7cpqNLdWaacaz6zfJErJZs3x5Glg75Zhb7CKXkbz/pz1YPyz4w/J22a+Yt4vuruztvczGAb3JXj1aDT1LTKM7HFM2sN7fuf//dTIwznBfy47vvlpsngBIo5H1Qb9buFWVgmL78lMSairLzNVJ1LkwwUwoTXVLcUdTiLpjrqOrOH+jKrVUsuyb+tt1EalUq2HKiVUs23zFrV6Hbt+JJk9iguInZAtqfKlKHffNt8DJIHDgbkQ62mYSKbj2jcWu1jgQp9N5CMIGYdZKOmZrVcsSbaW/L2ZsOax5W9qJLUsrTAKxZiN49ZSQHzGySY64+QJEBpRUMSt+prLxuZC5mKD00T4ZjHFRQaJpPZYsaxjlesVg9Mg8kEhNYLQTXwoRl6UZcbg+39Lx4Rn0klvlr22L+O6/HZMgdRxqVLgKpY2yDLC5XAp2U7lGMiHgCufDqGj+VbiUvWwZD5FTMkeyfmn9zZR/ZH3SHfQmj4cQee6192V2XjuTJ/NP7/+8abxTUDGZS5zR25KT9wex74cIJJymsdO2ODippikaZLVvqaoNZbmDZVdA1nGFEgiSfF1Fq6BGbkV46oJlAO/cJ7LzyEmwmNTgQUEslkL2fGKlWMKXK0cffnKdtfuM2cuZeoE7MRnso4v1yWF+NuNijhE6Unxg/zbhrH7XrFPbJ34kXHKjUNQtlInNX1ev+gLEkqzVPJmGJ8a/8zAZ87PhXmScyxCNtQiEfD1l4IixIaGCQkTJvpdLROcknSGU7xG4LwrfTCTzYF8MaT/vRnqNGsBAnKd5DSzr+a7o54AW50Q/cHpR66vdaqoV6+UyqWM6yt7ri9X6uU8KWfomh/EHyUnebrs8ea/" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:00846C9E8876425AE0530F991F0A501C/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:00846CBCD5EE3091E0530F991F0AEA61</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="SchemaVersion" value="${#Project#SchemaVersion}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#urlNodeAccountID}"/>
  <con:entry key="RightsTokenId" value="${#TestCase#rightsTokenID}"/>
  <con:entry key="DiscreteMediaTokenId" value="${#TestCase#discreteMediaTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="ac0e4dcf-b7f4-4a83-9419-44aa30f46c74"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMR GET');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="78754708-86ba-4c6f-bde4-b264c0ff5496"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the Headers" disabled="true" id="5ac959ec-cfdc-4f90-9f7c-5bcc949530b6"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import CacheTestManager.CacheTestManager;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.WsdlProject;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("TSuiteName");
def callTCname = testCase.getPropertyValue("TCaseName");

def CommonLib = "End_To_End";
def TcName = "DMR GET"
def TpName =  testSuite.getProject().getName();  

def DMR = "DMR GET";

def cc = new CacheTestManager(TpName, CommonLib, TcName, DMR) 

def tStep  = testCase.getTestStepByName(DMR);
status = cc.getCacheHeaders("#status#");
def headersCount = tStep.httpRequest.response.responseHeaders.size()
testCase.setPropertyValue("headersCount",headersCount.toString());

log.info cc.getCacheHeaders("#status#");

if (status == 'HTTP/1.1 200 OK')
{
	//Header size
	//assert headersCount == 11;
	
	assert cc.getCacheHeaders("#status#") == "HTTP/1.1 200 OK" 

	log.info " Etag Returned -->" + cc.getCacheHeaders("ETag");
	testCase.setPropertyValue("ETag",cc.getCacheHeaders("ETag"));
	
	assert cc.getCacheHeaders("ETag") != null
	
	log.info " Expires Header Returned -->" + cc.getCacheHeaders("Expires");
	assert cc.getCacheHeaders("Expires") != null
	
	log.info " Lase-Modified -->" + cc.getCacheHeaders("Last-Modified");
	assert cc.getCacheHeaders("Last-Modified") != null
	assert cc.getCacheHeaders("Date") != null
	assert cc.getCacheHeaders("Server") != null
	assert cc.getCacheHeaders("Cache-Control") != null
	assert cc.getCacheHeaders("Connection") != null
	assert cc.getCacheHeaders("x-Transaction-Info") != null
	assert cc.getCacheHeaders("Content-Length") != null
	assert cc.getCacheHeaders("Content-Type") != null
}
else if (status == 'HTTP/1.1 304 Not Modified')
{
	//Header size
	//assert headersCount == 5;
	
	assert cc.getCacheHeaders("#status#") == "HTTP/1.1 304 Not Modified" 

	log.info " Etag Returned -->" + cc.getCacheHeaders("ETag");
	assert cc.getCacheHeaders("ETag") != null
	assert cc.getCacheHeaders("Date") != null
	assert cc.getCacheHeaders("Server") != null
	assert cc.getCacheHeaders("Connection") != null
}
else 
{
	log.info "Status -->" + cc.getCacheHeaders("#status#")
}

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
log.info 'head=='+testCase.getPropertyValue("headersCount")
callTC.setPropertyValue("headersCount",testCase.getPropertyValue("headersCount"));
callTC.setPropertyValue("ETag",testCase.getPropertyValue("ETag"));

</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NodeAccountID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0663A3A5EFC10595E05307991F0AECF6</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0663A337A650055CE05307991F0A6671</con:value></con:property><con:property><con:name>urlrightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE616C7EA2B99122FE0401F0A05992BA4</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE616C7EA2BBF122FE0401F0A05992BA4</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE616B5E42370C812E0401F0A059902A8</con:value></con:property><con:property><con:name>headersCount</con:name><con:value>13</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:DiscreteMediaToken DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:0663A337A650055CE05307991F0A6671" State="urn:dece:type:state:discretemediaright:available" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md">
   <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0663A3A5EFC10595E05307991F0AECF6</dece:RightsTokenID>
   <dece:AuthorizedFulfillmentMethod>urn:dece:type:discretemediaformat:bluray:packaged</dece:AuthorizedFulfillmentMethod>
   <dece:MediaProfile>urn:dece:type:mediaprofile:hd</dece:MediaProfile>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2014-10-27T07:42:56.906Z" CreatedBy="urn:dece:org:org:dece:RET">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>Active</dece:Description>
      </dece:Current>
   </dece:ResourceStatus>
</dece:DiscreteMediaToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">chunked</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"ED683B3F58B9BE51E0401F0A0799277A:81423F5A"</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>76438451-095f-46bf-8142-68514d9ff932</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ac0e4dcf-b7f4-4a83-9419-44aa30f46c74</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78754708-86ba-4c6f-bde4-b264c0ff5496</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRList GET" searchProperties="true" id="35448f8f-ada7-4827-8e19-31c863828195"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="88838cf6-4579-4f63-b22a-dbd32d7bf449">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("DMRList GET").testRequest.setRequestHeaders(headers);


// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));

//Set the URL values
//testCase.setPropertyValue("urlNodeAccountID",URLEncoder.encode(testCase.getPropertyValue("NodeAccountID"), "UTF-8"));
//testCase.setPropertyValue("urlrightsTokenId",URLEncoder.encode(testCase.getPropertyValue("rightstokenid"), "UTF-8"));
//testCase.setPropertyValue("urldiscreteMediaTokenId",URLEncoder.encode(testCase.getPropertyValue("discreteMediaTokenId"), "UTF-8"));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="b8eaa784-7f7a-455f-9d83-fa71897888f2"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRList GET");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRList GET" id="398933b1-2ebe-4392-a8e9-3f65ae7514c8"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/DiscreteMediaRight/List" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRList GET" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" id="cabdd676-6d24-4a33-9b1d-32f036a9273b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVZZc+I4EP4rlOdxy1g2p12BKq5MkXBkgSGbeUkJucEKtmws2ZD8+pUMOECOZeeBotRudX996Ou+4TjwLafFOcSChqywC3zGnUza0JKYOSHmlDsMB8AdQZxpazhwrCJy8PGKVuh3G9pzldQtVK2BXjJrZb2MakvdJktTdzFaEEzMsl21pSrnCfQZF5iJhmYhs6ybSLdqM1RzyshBdrGC6r+1whxiLm1LlSLSDqB2vKF5QkSOYWy32+K2VAzjlWEhZBr/DAdT4kGAtebNPqLMUdw86JOiCwR8nxRJGBg3xpnOjcudKV0xLJIYDr7cr3whA9mG1HE5Xf3Q8rvg9tkyzI4dzEJGCfbpG1b5GYLwQrfQ8ldhTIUXfBmEiZRhHXZEl+liPzTjHNqVhs4Qxhzr3MPmwdYElhADI1D4Nek3tB/XVS27Oosx48swDvj58f/hAZaCH0bg6vwY1gHa9QY/yVTzBojTZ8RPOE1hpJo1wgT4oZpArjdVeIhhSXcDymWD7rhCZ5zCuzjus9GlK+DiTwp0Upy9kTn2E2iWJkP/Yeo+jW45ephF1fVduz3ejBfj+rqRAThVzgR5affHi6bMm2h/w1umo/CxH7aF/9PbGuMRWUx693W37y9wems81eoL9ld7Xb4beneoG7h+NFgPyr7XKvmDHR8FwUsX8ONiNAkm4mU361Ye7cpqNLdWaacaz6zfJErJZs3x5Glg75Zhb7CKXkbz/pz1YPyz4w/J22a+Yt4vuruztvczGAb3JXj1aDT1LTKM7HFM2sN7fuf//dTIwznBfy47vvlpsngBIo5H1Qb9buFWVgmL78lMSairLzNVJ1LkwwUwoTXVLcUdTiLpjrqOrOH+jKrVUsuyb+tt1EalUq2HKiVUs23zFrV6Hbt+JJk9iguInZAtqfKlKHffNt8DJIHDgbkQ62mYSKbj2jcWu1jgQp9N5CMIGYdZKOmZrVcsSbaW/L2ZsOax5W9qJLUsrTAKxZiN49ZSQHzGySY64+QJEBpRUMSt+prLxuZC5mKD00T4ZjHFRQaJpPZYsaxjlesVg9Mg8kEhNYLQTXwoRl6UZcbg+39Lx4Rn0klvlr22L+O6/HZMgdRxqVLgKpY2yDLC5XAp2U7lGMiHgCufDqGj+VbiUvWwZD5FTMkeyfmn9zZR/ZH3SHfQmj4cQee6192V2XjuTJ/NP7/+8abxTUDGZS5zR25KT9wex74cIJJymsdO2ODippikaZLVvqaoNZbmDZVdA1nGFEgiSfF1Fq6BGbkV46oJlAO/cJ7LzyEmwmNTgQUEslkL2fGKlWMKXK0cffnKdtfuM2cuZeoE7MRnso4v1yWF+NuNijhE6Unxg/zbhrH7XrFPbJ34kXHKjUNQtlInNX1ev+gLEkqzVPJmGJ8a/8zAZ87PhXmScyxCNtQiEfD1l4IixIaGCQkTJvpdLROcknSGU7xG4LwrfTCTzYF8MaT/vRnqNGsBAnKd5DSzr+a7o54AW50Q/cHpR66vdaqoV6+UyqWM6yt7ri9X6uU8KWfomh/EHyUnebrs8ea/" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:00846C9E8876425AE0530F991F0A501C/DiscreteMediaRight/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#urlNodeAccountID}"/>
  <con:entry key="RightsTokenId" value="${#TestCase#rightsTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="b5de711a-38b2-4a10-b2ba-a60e1ed4717f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRList GET');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="b7bf41ae-43ae-4f23-ad4c-8bc43423e701"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value>urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0663A3A5EFC10595E05307991F0AECF6</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value/></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value/></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0663A2C81D48033DE05307991F0A9080</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FB73138017CB8AE0401F0A07997D7C</con:value></con:property><con:property><con:name>urlrightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE2FB7313805ECB8AE0401F0A07997D7C</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FB73138070CB8AE0401F0A07997D7C</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:DiscreteMediaTokenList xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md">
   <dece:DiscreteMediaToken DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:0663A2C81D48033DE05307991F0A9080" State="urn:dece:type:state:discretemediaright:available">
      <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0663A3A5EFC10595E05307991F0AECF6</dece:RightsTokenID>
      <dece:AuthorizedFulfillmentMethod>urn:dece:type:discretemediaformat:bluray:packaged</dece:AuthorizedFulfillmentMethod>
      <dece:MediaProfile>urn:dece:type:mediaprofile:hd</dece:MediaProfile>
      <dece:ResourceStatus>
         <dece:Current CreationDate="2014-10-27T07:42:49.410Z" CreatedBy="urn:dece:org:org:dece:RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>Active</dece:Description>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:DiscreteMediaToken>
</dece:DiscreteMediaTokenList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">chunked</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>e3ed726b-d1a1-407a-8b78-57d89fd08932</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRUpdate PUT" searchProperties="true" id="6236b77a-d091-48e4-89d5-acb354ff830b"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="26882ef1-1efd-47f7-a523-d15194b8488c">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
//testCase.setPropertyValue("Etag",CallingTCase.getPropertyValue("Etag"));

//Setting the If-Match to null
testCase.setPropertyValue("If-Match",null)

testCase.setPropertyValue("If-Match",CallingTCase.getPropertyValue("If-Match"))

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()

//def ifMatch = context.expand( '${#TestCase#If-Match}' )
//
//if (ifMatch == 'noIfMatch')
//{
//	 headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//}
//else if (ifMatch == 'withStar')
//{
//	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//	headers.put("If-Match","*");
//}
//else
//{
//	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//	headers.put("If-Match",testCase.getPropertyValue("Etag"));
//}
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
headers.put("If-Match","*");


//testRunner.testCase.getTestStepByName("DMRUpdate PUT").testRequest.setRequestHeaders(headers);
testRunner.testCase.getTestStepByName("DMRUpdate PUT_107").testRequest.setRequestHeaders(headers);

// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));
testCase.setPropertyValue("mediaProfile",CallingTCase.getPropertyValue("mediaProfile"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));

//Set the URL values
//testCase.setPropertyValue("urlNodeAccountID",URLEncoder.encode(testCase.getPropertyValue("NodeAccountID"), "UTF-8"));
//testCase.setPropertyValue("urldiscreteMediaTokenId",URLEncoder.encode(testCase.getPropertyValue("discreteMediaTokenId"), "UTF-8"));
//testCase.setPropertyValue("urlrightsTokenId",URLEncoder.encode(testCase.getPropertyValue("rightsTokenId"), "UTF-8"));</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="b67ab674-a117-4e36-8bba-02dbcdfaa461"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRUpdate PUT_107");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="groovy" name="Disable TC" disabled="true" id="e8d173da-d3f1-429b-881a-afa9af20f118"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def V2 = context.expand( '${#Project#versionMinor}' )

if (V2 == '07')
{
                callUpdate106 = tC.getTestStepByName('DMRUpdate PUT');

                callUpdate106.setDisabled(true);
}
if (V2 == '06')
{
                callUpdate107 = tC.getTestStepByName('DMRUpdate PUT_107');

                callUpdate107.setDisabled(true);
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRUpdate PUT_107" id="fa83a7ea-3cea-4c83-a02b-107d1ebaa3aa"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/DiscreteMediaRight/{DiscreteMediaTokenId}" methodName="DMRUpdate_107" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRUpdate PUT_107" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_concat.pem" id="51571901-b5d9-4283-9fe0-2de11f7192ef"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVZZc+I4EP4rlOdxy1g2p12BKq5MkXBkgSGbeUkJucEKtmws2ZD8+pUMOECOZeeBotRudX996Ou+4TjwLafFOcSChqywC3zGnUza0JKYOSHmlDsMB8AdQZxpazhwrCJy8PGKVuh3G9pzldQtVK2BXjJrZb2MakvdJktTdzFaEEzMsl21pSrnCfQZF5iJhmYhs6ybSLdqM1RzyshBdrGC6r+1whxiLm1LlSLSDqB2vKF5QkSOYWy32+K2VAzjlWEhZBr/DAdT4kGAtebNPqLMUdw86JOiCwR8nxRJGBg3xpnOjcudKV0xLJIYDr7cr3whA9mG1HE5Xf3Q8rvg9tkyzI4dzEJGCfbpG1b5GYLwQrfQ8ldhTIUXfBmEiZRhHXZEl+liPzTjHNqVhs4Qxhzr3MPmwdYElhADI1D4Nek3tB/XVS27Oosx48swDvj58f/hAZaCH0bg6vwY1gHa9QY/yVTzBojTZ8RPOE1hpJo1wgT4oZpArjdVeIhhSXcDymWD7rhCZ5zCuzjus9GlK+DiTwp0Upy9kTn2E2iWJkP/Yeo+jW45ephF1fVduz3ejBfj+rqRAThVzgR5affHi6bMm2h/w1umo/CxH7aF/9PbGuMRWUx693W37y9wems81eoL9ld7Xb4beneoG7h+NFgPyr7XKvmDHR8FwUsX8ONiNAkm4mU361Ye7cpqNLdWaacaz6zfJErJZs3x5Glg75Zhb7CKXkbz/pz1YPyz4w/J22a+Yt4vuruztvczGAb3JXj1aDT1LTKM7HFM2sN7fuf//dTIwznBfy47vvlpsngBIo5H1Qb9buFWVgmL78lMSairLzNVJ1LkwwUwoTXVLcUdTiLpjrqOrOH+jKrVUsuyb+tt1EalUq2HKiVUs23zFrV6Hbt+JJk9iguInZAtqfKlKHffNt8DJIHDgbkQ62mYSKbj2jcWu1jgQp9N5CMIGYdZKOmZrVcsSbaW/L2ZsOax5W9qJLUsrTAKxZiN49ZSQHzGySY64+QJEBpRUMSt+prLxuZC5mKD00T4ZjHFRQaJpPZYsaxjlesVg9Mg8kEhNYLQTXwoRl6UZcbg+39Lx4Rn0klvlr22L+O6/HZMgdRxqVLgKpY2yDLC5XAp2U7lGMiHgCufDqGj+VbiUvWwZD5FTMkeyfmn9zZR/ZH3SHfQmj4cQee6192V2XjuTJ/NP7/+8abxTUDGZS5zR25KT9wex74cIJJymsdO2ODippikaZLVvqaoNZbmDZVdA1nGFEgiSfF1Fq6BGbkV46oJlAO/cJ7LzyEmwmNTgQUEslkL2fGKlWMKXK0cffnKdtfuM2cuZeoE7MRnso4v1yWF+NuNijhE6Unxg/zbhrH7XrFPbJ34kXHKjUNQtlInNX1ev+gLEkqzVPJmGJ8a/8zAZ87PhXmScyxCNtQiEfD1l4IixIaGCQkTJvpdLROcknSGU7xG4LwrfTCTzYF8MaT/vRnqNGsBAnKd5DSzr+a7o54AW50Q/cHpR66vdaqoV6+UyqWM6yt7ri9X6uU8KWfomh/EHyUnebrs8ea/"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<DiscreteMediaToken State="urn:dece:type:state:discretemediaright:available" xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/schema/md/v1.07/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenID>${#TestCase#rightsTokenId}</RightsTokenID>
   <AuthorizedFulfillmentMethod>${#TestCase#fulfillmentMethod}</AuthorizedFulfillmentMethod>
   <MediaProfile>${#TestCase#mediaProfile}</MediaProfile>
   <LeaseExpiration>2011-06-04T02:30:57</LeaseExpiration>
</DiscreteMediaToken>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:00846C9E8876425AE0530F991F0A501C/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:00846D40E40E4267E0530F991F0AD666</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="SchemaVersion" value="${#Project#SchemaVersion}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#urlNodeAccountID}"/>
  <con:entry key="RightsTokenId" value="${#TestCase#rightsTokenId}"/>
  <con:entry key="DiscreteMediaTokenId" value="${#TestCase#discreteMediaTokenId}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#urlrightsTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Enable TC" disabled="true" id="d5be9fad-1aa7-4820-a0ca-a5b11c7fd995"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


callUpdate106 = tC.getTestStepByName('DMRUpdate PUT');
callUpdate107 = tC.getTestStepByName('DMRUpdate PUT_107');

callUpdate106.setDisabled(false);
callUpdate107.setDisabled(false);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="0da5d5f4-a93f-444b-8d03-d50e8be12f01"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRUpdate PUT_107');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="808b80d2-93fc-43c5-a9b9-0ddc8c4f4e55"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value>urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0663A3A5EFC10595E05307991F0AECF6</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:dvd:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0663A337A650055CE05307991F0A6671</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FB8DF3370B8786E0401F0A07992DA1</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FB8DF337698786E0401F0A07992DA1</con:value></con:property><con:property><con:name>If-Match</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Etag</con:name><con:value>"ED2E194D1536FF13E0401F0A07991EDF:B3DE8C3B"</con:value></con:property><con:property><con:name>urlrightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE2FB8DF337578786E0401F0A07992DA1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:DiscreteMediaToken DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:0663A337A650055CE05307991F0A6671" State="urn:dece:type:state:discretemediaright:available" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md">
   <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0663A3A5EFC10595E05307991F0AECF6</dece:RightsTokenID>
   <dece:AuthorizedFulfillmentMethod>urn:dece:type:discretemediaformat:dvd:packaged</dece:AuthorizedFulfillmentMethod>
   <dece:ResourceStatus>
      <dece:Current ModificationDate="2014-10-27T07:43:01.037Z" CreationDate="2014-10-27T07:42:56.906Z">
         <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
   </dece:ResourceStatus>
</dece:DiscreteMediaToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>950</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>d52cd0ff-6fc2-463b-b4db-80c38f05d43d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7872b5a4-f9cf-4524-a13a-93c804e5fd2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>91acfb71-834e-4f1a-9d09-e9f8c41172fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRDelete" searchProperties="true" id="b1cd8eb1-2ae4-41ec-a4f1-bbca5cab11df"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="4ab96999-64c9-4f2b-a79a-45a58ccfbc2f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
//testCase.setPropertyValue("Etag",CallingTCase.getPropertyValue("Etag"));

//Setting the If-Match to null
//testCase.setPropertyValue("If-Match",null)

//testCase.setPropertyValue("If-Match",CallingTCase.getPropertyValue("If-Match"))

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
//
//def ifMatch = context.expand( '${#TestCase#If-Match}' )
//
//if (ifMatch == 'noIfMatch')
//{
//	 headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//}
//else if (ifMatch == 'withStar')
//{
//	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//	headers.put("If-Match","*");
//}
//else
//{
//	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//	headers.put("If-Match",testCase.getPropertyValue("Etag"));
//}

headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
headers.put("If-Match","*");

//testRunner.testCase.getTestStepByName("DMRUpdate PUT").testRequest.setRequestHeaders(headers);
testRunner.testCase.getTestStepByName("DMRDelete").testRequest.setRequestHeaders(headers);


// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));

//Set the URL values
//testCase.setPropertyValue("urlNodeAccountID",URLEncoder.encode(testCase.getPropertyValue("NodeAccountID"), "UTF-8"));
//testCase.setPropertyValue("urldiscreteMediaTokenId",URLEncoder.encode(testCase.getPropertyValue("discreteMediaTokenId"), "UTF-8"));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="93f2c498-1327-460c-8fde-463fe79e88f3"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRDelete");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRDelete" id="133d43af-0d2f-4cfc-8797-812fbf5471ed"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/DiscreteMediaRight/{DiscreteMediaTokenId}" methodName="DMRDelete_107" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRDelete" mediaType="application/xml" sslKeystore="RET_concat.pem" accept="" postQueryString="false" id="70fa40db-a6d5-4d16-82c0-9480f41a799d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVZZc+I4EP4rlOdxy1g2p12BKq5MkXBkgSGbeUkJucEKtmws2ZD8+pUMOECOZeeBotRudX996Ou+4TjwLafFOcSChqywC3zGnUza0JKYOSHmlDsMB8AdQZxpazhwrCJy8PGKVuh3G9pzldQtVK2BXjJrZb2MakvdJktTdzFaEEzMsl21pSrnCfQZF5iJhmYhs6ybSLdqM1RzyshBdrGC6r+1whxiLm1LlSLSDqB2vKF5QkSOYWy32+K2VAzjlWEhZBr/DAdT4kGAtebNPqLMUdw86JOiCwR8nxRJGBg3xpnOjcudKV0xLJIYDr7cr3whA9mG1HE5Xf3Q8rvg9tkyzI4dzEJGCfbpG1b5GYLwQrfQ8ldhTIUXfBmEiZRhHXZEl+liPzTjHNqVhs4Qxhzr3MPmwdYElhADI1D4Nek3tB/XVS27Oosx48swDvj58f/hAZaCH0bg6vwY1gHa9QY/yVTzBojTZ8RPOE1hpJo1wgT4oZpArjdVeIhhSXcDymWD7rhCZ5zCuzjus9GlK+DiTwp0Upy9kTn2E2iWJkP/Yeo+jW45ephF1fVduz3ejBfj+rqRAThVzgR5affHi6bMm2h/w1umo/CxH7aF/9PbGuMRWUx693W37y9wems81eoL9ld7Xb4beneoG7h+NFgPyr7XKvmDHR8FwUsX8ONiNAkm4mU361Ye7cpqNLdWaacaz6zfJErJZs3x5Glg75Zhb7CKXkbz/pz1YPyz4w/J22a+Yt4vuruztvczGAb3JXj1aDT1LTKM7HFM2sN7fuf//dTIwznBfy47vvlpsngBIo5H1Qb9buFWVgmL78lMSairLzNVJ1LkwwUwoTXVLcUdTiLpjrqOrOH+jKrVUsuyb+tt1EalUq2HKiVUs23zFrV6Hbt+JJk9iguInZAtqfKlKHffNt8DJIHDgbkQ62mYSKbj2jcWu1jgQp9N5CMIGYdZKOmZrVcsSbaW/L2ZsOax5W9qJLUsrTAKxZiN49ZSQHzGySY64+QJEBpRUMSt+prLxuZC5mKD00T4ZjHFRQaJpPZYsaxjlesVg9Mg8kEhNYLQTXwoRl6UZcbg+39Lx4Rn0klvlr22L+O6/HZMgdRxqVLgKpY2yDLC5XAp2U7lGMiHgCufDqGj+VbiUvWwZD5FTMkeyfmn9zZR/ZH3SHfQmj4cQee6192V2XjuTJ/NP7/+8abxTUDGZS5zR25KT9wex74cIJJymsdO2ODippikaZLVvqaoNZbmDZVdA1nGFEgiSfF1Fq6BGbkV46oJlAO/cJ7LzyEmwmNTgQUEslkL2fGKlWMKXK0cffnKdtfuM2cuZeoE7MRnso4v1yWF+NuNijhE6Unxg/zbhrH7XrFPbJ34kXHKjUNQtlInNX1ev+gLEkqzVPJmGJ8a/8zAZ87PhXmScyxCNtQiEfD1l4IixIaGCQkTJvpdLROcknSGU7xG4LwrfTCTzYF8MaT/vRnqNGsBAnKd5DSzr+a7o54AW50Q/cHpR66vdaqoV6+UyqWM6yt7ri9X6uU8KWfomh/EHyUnebrs8ea/"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:C8F5EF70438D72C9E0401F0A07997136/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:00846CBCD5EE3091E0530F991F0AEA61</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DiscreteMediaRightID" value="${#TestCase#urldiscreteMediaTokenId}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="NodeAccountID" value="${#TestCase#urlNodeAccountId}"/>
  <con:entry key="RightsTokenId" value="${#TestCase#rightsTokenId}"/>
  <con:entry key="DiscreteMediaTokenId" value="${#TestCase#discreteMediaTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="9bfbc3b1-4d0e-414a-8974-9aa234ba9df9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRDelete');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="10ce4aa1-9ed7-4f6a-8f9b-2c825eb13969"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value>urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:C8F5EF70438D72C9E0401F0A07997136</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:dvd:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0663A2C81D48033DE05307991F0A9080</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2D3DDCB0FB23469E0401F0A0599358E</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2D3DDCB10113469E0401F0A0599358E</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Etag</con:name><con:value>"ED683B3F58B9BE51E0401F0A0799277A:81423F5A"</con:value></con:property><con:property><con:name>If-Match</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fdb90695-a52f-40dd-919c-c75ec7350bd4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRConsume POST" searchProperties="true" id="794916c4-a54f-4831-a31e-7184ea9439c1"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="54c87bd0-72b3-4a2d-9ac9-1b9919183f6d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header
def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("DMRConsume POST").testRequest.setRequestHeaders(headers);


// setUp Node Properties
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties
testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));
if (testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
 {
 	testCase.setPropertyValue("fulfillmentMethod",CallingTCase.getPropertyValue("fulfillmentMethod"));
	testCase.setPropertyValue("mediaProfile",CallingTCase.getPropertyValue("mediaProfile"));
 }
 else
 {
 	 testCase.setPropertyValue("fulfillmentMethod",URLEncoder.encode(CallingTCase.getPropertyValue("fulfillmentMethod"),"UTF-8"));
	 testCase.setPropertyValue("mediaProfile",URLEncoder.encode(CallingTCase.getPropertyValue("mediaProfile"),"UTF-8"));
 }

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="29b0a14f-2633-4219-977e-6c668650610b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRConsume POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRConsume POST" id="8f843eca-ad25-4bd9-804c-130eacfe518d"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/{ContentProfile}/DiscreteMediaRight/{DiscreteMediaFulfillmentMethod}/Consume" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRConsume POST" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept="" id="5fbdf74d-b972-474f-8c33-616108fe199f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVZZc+I4EP4rlOdxy1g2p12BKq5MkXBkgSGbeUkJucEKtmws2ZD8+pUMOECOZeeBotRudX996Ou+4TjwLafFOcSChqywC3zGnUza0JKYOSHmlDsMB8AdQZxpazhwrCJy8PGKVuh3G9pzldQtVK2BXjJrZb2MakvdJktTdzFaEEzMsl21pSrnCfQZF5iJhmYhs6ybSLdqM1RzyshBdrGC6r+1whxiLm1LlSLSDqB2vKF5QkSOYWy32+K2VAzjlWEhZBr/DAdT4kGAtebNPqLMUdw86JOiCwR8nxRJGBg3xpnOjcudKV0xLJIYDr7cr3whA9mG1HE5Xf3Q8rvg9tkyzI4dzEJGCfbpG1b5GYLwQrfQ8ldhTIUXfBmEiZRhHXZEl+liPzTjHNqVhs4Qxhzr3MPmwdYElhADI1D4Nek3tB/XVS27Oosx48swDvj58f/hAZaCH0bg6vwY1gHa9QY/yVTzBojTZ8RPOE1hpJo1wgT4oZpArjdVeIhhSXcDymWD7rhCZ5zCuzjus9GlK+DiTwp0Upy9kTn2E2iWJkP/Yeo+jW45ephF1fVduz3ejBfj+rqRAThVzgR5affHi6bMm2h/w1umo/CxH7aF/9PbGuMRWUx693W37y9wems81eoL9ld7Xb4beneoG7h+NFgPyr7XKvmDHR8FwUsX8ONiNAkm4mU361Ye7cpqNLdWaacaz6zfJErJZs3x5Glg75Zhb7CKXkbz/pz1YPyz4w/J22a+Yt4vuruztvczGAb3JXj1aDT1LTKM7HFM2sN7fuf//dTIwznBfy47vvlpsngBIo5H1Qb9buFWVgmL78lMSairLzNVJ1LkwwUwoTXVLcUdTiLpjrqOrOH+jKrVUsuyb+tt1EalUq2HKiVUs23zFrV6Hbt+JJk9iguInZAtqfKlKHffNt8DJIHDgbkQ62mYSKbj2jcWu1jgQp9N5CMIGYdZKOmZrVcsSbaW/L2ZsOax5W9qJLUsrTAKxZiN49ZSQHzGySY64+QJEBpRUMSt+prLxuZC5mKD00T4ZjHFRQaJpPZYsaxjlesVg9Mg8kEhNYLQTXwoRl6UZcbg+39Lx4Rn0klvlr22L+O6/HZMgdRxqVLgKpY2yDLC5XAp2U7lGMiHgCufDqGj+VbiUvWwZD5FTMkeyfmn9zZR/ZH3SHfQmj4cQee6192V2XjuTJ/NP7/+8abxTUDGZS5zR25KT9wex74cIJJymsdO2ODippikaZLVvqaoNZbmDZVdA1nGFEgiSfF1Fq6BGbkV46oJlAO/cJ7LzyEmwmNTgQUEslkL2fGKlWMKXK0cffnKdtfuM2cuZeoE7MRnso4v1yWF+NuNijhE6Unxg/zbhrH7XrFPbJ34kXHKjUNQtlInNX1ev+gLEkqzVPJmGJ8a/8zAZ87PhXmScyxCNtQiEfD1l4IixIaGCQkTJvpdLROcknSGU7xG4LwrfTCTzYF8MaT/vRnqNGsBAnKd5DSzr+a7o54AW50Q/cHpR66vdaqoV6+UyqWM6yt7ri9X6uU8KWfomh/EHyUnebrs8ea/" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:0084609D7F8E382DE0530F991F0A146E/urn:dece:type:mediaprofile:hd/DiscreteMediaRight/urn:dece:type:discretemediaformat:bluray:packaged/Consume</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#urlNodeAccountId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="86978827-4382-49f6-86ef-8dc4ac95cfad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRConsume POST');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="38d23126-9bef-4e1a-9044-923a8489bb6a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value>urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0663A352F4530473E05307991F0A1C11</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0663A357330604A2E05307991F0A5F50</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FB73138017CB8AE0401F0A07997D7C</con:value></con:property><con:property><con:name>urlrightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE2FB7313805ECB8AE0401F0A07997D7C</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FB73138070CB8AE0401F0A07997D7C</con:value></con:property><con:property><con:name>urlfulfillmentMethod</con:name><con:value>urn%3Adece%3Atype%3Adiscretemediaformat%3Abluray%3Apackaged</con:value></con:property><con:property><con:name>urlmediaProfile</con:name><con:value>urn%3Adece%3Atype%3Amediaprofile%3Ahd</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:DiscreteMediaToken DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:0663A357330604A2E05307991F0A5F50" State="urn:dece:type:state:discretemediaright:fulfilled" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md">
   <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0663A352F4530473E05307991F0A1C11</dece:RightsTokenID>
   <dece:DiscreteMediaFulfillmentMethod>urn:dece:type:discretemediaformat:bluray:packaged</dece:DiscreteMediaFulfillmentMethod>
   <dece:MediaProfile>urn:dece:type:mediaprofile:hd</dece:MediaProfile>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2014-10-27T07:43:08.125Z">
         <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      <dece:History>
         <dece:Prior ModificationDate="2014-10-27T07:43:06.406Z" ModifiedBy="urn:dece:org:org:dece:RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>urn:dece:type:state:discretemediaright:available</dece:Description>
         </dece:Prior>
      </dece:History>
   </dece:ResourceStatus>
</dece:DiscreteMediaToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>1340</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>4bf778e0-e788-4a39-bf0f-1a5139b61c4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRLeaseCreate POST" searchProperties="true" id="12b6b0fe-5ccb-4afd-bb3f-60203017531c"><con:settings/><con:testStep type="groovy" name="Update DMR Expire Count" id="91acfb71-834e-4f1a-9d09-e9f8c41172fd"><con:settings/><con:config><script>import groovy.sql.Sql;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");
def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//Commented as part of DB calls removal from Sanity Project. - Kalyan - 10/03/2014

//def sql =new dbUtils.dbUtils(log, testProject.getPropertyValue("targetSystem"));
//def nodeid = "urn:dece:org:org:dece:"+testProject.getPropertyValue("nodeidRTL");
//log.info nodeid
//sqlStr = """update node set DMR_EXPIRE_COUNT = '0' where node_Id ='$nodeid'""";

//sql.dbConnExecuteQuery(sqlStr,testProject.getPropertyValue("targetSystem"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Get the Required DMR Properties" id="f893b9fd-4c5c-4976-a1d5-cb688bc71ce2">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("DMRLeaseCreate POST").testRequest.setRequestHeaders(headers);


// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));
testCase.setPropertyValue("fulfillmentMethod",CallingTCase.getPropertyValue("fulfillmentMethod"));
if (testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
 {
 	testCase.setPropertyValue("fulfillmentMethod",CallingTCase.getPropertyValue("fulfillmentMethod"));
	testCase.setPropertyValue("mediaProfile",CallingTCase.getPropertyValue("mediaProfile"));
 }
 else
 {
 	 testCase.setPropertyValue("fulfillmentMethod",URLEncoder.encode(CallingTCase.getPropertyValue("fulfillmentMethod"),"UTF-8"));
	 testCase.setPropertyValue("mediaProfile",URLEncoder.encode(CallingTCase.getPropertyValue("mediaProfile"),"UTF-8"));
 }

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="a15ad45b-d4ac-49bf-a273-5f5c8470305d"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRLeaseCreate POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRLeaseCreate POST" id="81734ee0-fc6a-4b2a-8ecd-2cf0b11a8ac8"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/{RightsTokenId}/{ContentProfile}/DiscreteMediaRight/{DiscreteMediaTokenID}/{DiscreteMediaFulfillmentMethod}/Lease" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRLeaseCreate POST" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" accept="" id="3d2540e0-b8d3-408c-a4c5-725944781c73"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVZZc+I4EP4rlOdxy1g2p12BKq5MkXBkgSGbeUkJucEKtmws2ZD8+pUMOECOZeeBotRudX996Ou+4TjwLafFOcSChqywC3zGnUza0JKYOSHmlDsMB8AdQZxpazhwrCJy8PGKVuh3G9pzldQtVK2BXjJrZb2MakvdJktTdzFaEEzMsl21pSrnCfQZF5iJhmYhs6ybSLdqM1RzyshBdrGC6r+1whxiLm1LlSLSDqB2vKF5QkSOYWy32+K2VAzjlWEhZBr/DAdT4kGAtebNPqLMUdw86JOiCwR8nxRJGBg3xpnOjcudKV0xLJIYDr7cr3whA9mG1HE5Xf3Q8rvg9tkyzI4dzEJGCfbpG1b5GYLwQrfQ8ldhTIUXfBmEiZRhHXZEl+liPzTjHNqVhs4Qxhzr3MPmwdYElhADI1D4Nek3tB/XVS27Oosx48swDvj58f/hAZaCH0bg6vwY1gHa9QY/yVTzBojTZ8RPOE1hpJo1wgT4oZpArjdVeIhhSXcDymWD7rhCZ5zCuzjus9GlK+DiTwp0Upy9kTn2E2iWJkP/Yeo+jW45ephF1fVduz3ejBfj+rqRAThVzgR5affHi6bMm2h/w1umo/CxH7aF/9PbGuMRWUx693W37y9wems81eoL9ld7Xb4beneoG7h+NFgPyr7XKvmDHR8FwUsX8ONiNAkm4mU361Ye7cpqNLdWaacaz6zfJErJZs3x5Glg75Zhb7CKXkbz/pz1YPyz4w/J22a+Yt4vuruztvczGAb3JXj1aDT1LTKM7HFM2sN7fuf//dTIwznBfy47vvlpsngBIo5H1Qb9buFWVgmL78lMSairLzNVJ1LkwwUwoTXVLcUdTiLpjrqOrOH+jKrVUsuyb+tt1EalUq2HKiVUs23zFrV6Hbt+JJk9iguInZAtqfKlKHffNt8DJIHDgbkQ62mYSKbj2jcWu1jgQp9N5CMIGYdZKOmZrVcsSbaW/L2ZsOax5W9qJLUsrTAKxZiN49ZSQHzGySY64+QJEBpRUMSt+prLxuZC5mKD00T4ZjHFRQaJpPZYsaxjlesVg9Mg8kEhNYLQTXwoRl6UZcbg+39Lx4Rn0klvlr22L+O6/HZMgdRxqVLgKpY2yDLC5XAp2U7lGMiHgCufDqGj+VbiUvWwZD5FTMkeyfmn9zZR/ZH3SHfQmj4cQee6192V2XjuTJ/NP7/+8abxTUDGZS5zR25KT9wex74cIJJymsdO2ODippikaZLVvqaoNZbmDZVdA1nGFEgiSfF1Fq6BGbkV46oJlAO/cJ7LzyEmwmNTgQUEslkL2fGKlWMKXK0cffnKdtfuM2cuZeoE7MRnso4v1yWF+NuNijhE6Unxg/zbhrH7XrFPbJ34kXHKjUNQtlInNX1ev+gLEkqzVPJmGJ8a/8zAZ87PhXmScyxCNtQiEfD1l4IixIaGCQkTJvpdLROcknSGU7xG4LwrfTCTzYF8MaT/vRnqNGsBAnKd5DSzr+a7o54AW50Q/cHpR66vdaqoV6+UyqWM6yt7ri9X6uU8KWfomh/EHyUnebrs8ea/" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/urn:dece:rightstokenid:org:dece:00846DFC8F324265E0530F991F0A4667/urn:dece:type:mediaprofile:hd/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:0084609DB9EF424EE0530F991F0A2430/urn:dece:type:discretemediaformat:bluray:packaged/Lease</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ContentProfile" value="${#TestCase#mediaProfile}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="DiscreteMediaFulfillmentMethod" value="${#TestCase#fulfillmentMethod}"/>
  <con:entry key="SchemaVersion" value="${#Project#SchemaVersion}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NodeAccountID}"/>
  <con:entry key="RightsTokenId" value="${#TestCase#rightsTokenId}"/>
  <con:entry key="DiscreteMediaTokenID" value="${#TestCase#discreteMediaTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="612695e7-e52c-41a1-a47c-ef0c703f4da0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRLeaseCreate POST');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="59facc9d-22b6-4d3a-87a1-dbeb01104b75"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0663A3374389054BE05307991F0ACA41</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0663A337A656055CE05307991F0A6671</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FCA5AC5F1AD9CDE0401F0A07992ED3</con:value></con:property><con:property><con:name>urlrightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE2FCA5C2FF5C7FF6E0401F0A07992ED1</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FCA693F77C6FF5E0401F0A059953AA</con:value></con:property><con:property><con:name>urlfulfillmentMethod</con:name><con:value>urn%3Adece%3Atype%3Adiscretemediaformat%3Abluray%3Apackaged</con:value></con:property><con:property><con:name>urlmediaProfile</con:name><con:value>urn%3Adece%3Atype%3Amediaprofile%3Ahd</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:ErrorList xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md">
   <dece:Error ErrorID="urn:dece:errorid:org:dece:DiscreteMediaRightExpireLimitReached">
      <dece:Reason Language="en">The discrete media right has expired.</dece:Reason>
      <dece:OriginalRequest>http://stdecqavap1.va.neustar.com:8009/rest/2015/02/Account/urn:dece:accountid:org:dece:0663A27C60E85343E05305991F0A4584/RightsToken/urn:dece:rightstokenid:org:dece:0663A3374389054BE05307991F0ACA41/urn:dece:type:mediaprofile:hd/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:0663A337A656055CE05307991F0A6671/urn:dece:type:discretemediaformat:bluray:packaged/Lease</dece:OriginalRequest>
      <dece:ErrorLink>https://qa.q.uvvu.com:7001/rest/2015/02/error/en/ErrorList.html#DiscreteMediaRightExpireLimitReached</dece:ErrorLink>
   </dece:Error>
</dece:ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>1066</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5e127f61-48be-4ffd-b950-d806c86f121e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRLeaseConsume POST" searchProperties="true" id="c6d7a5ad-968b-4f3c-8cc6-4deeb5b83cb6"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="a7b08d8a-7448-4336-9502-b3ca98d9b9f5">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("DMRLeaseConsume POST").testRequest.setRequestHeaders(headers);


// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="18e7dd8f-f147-4d2e-bd84-d1e80165a181"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRLeaseConsume POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRLeaseConsume POST" id="55d05a56-278b-4717-8bd2-8bbdc034ed5f"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/DiscreteMediaRight/{DiscreteMediaRightID}/Lease/Consume" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRLeaseConsume POST" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RET_concat.pem" id="0451b9c9-ac8d-45bd-96b2-e1a22444a591"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=pVfZkqrKEv0Vw/1oKIOoQHR3hIo4IA6gtu3LCSgKoWWSKgb9+lM4be3p9r33SSvJylw5sDJ5QobvsWIbIRhjNwxKue8FSDxJn8tJHIihgVwkBoYPkYiBqLfVscjWaNG4XimXhtJz+Z86R7PQaLJVk+aEKmcKsMpbDKhyggUsE9IcNC2iilAChwHCRoCfyyzNcFWGrrLsgmFFmhfrfI2ps5tyaQVjRGwTlRpdvoDK0XPZwTgSKSrLslpWr4XxlmJpmqHW6lgHDvSN8svTOaKTo/jlog9qFgTQ80ANhD71RD3oPFlI1N1tYOAkhhdf1ne+aIoWKKJjIXf7p3y7C61hYIenY9cIwsAFhucejSI/KsROaJXa3jaMXez43wbB0IXhKsxBFTBc8KdMPUL7paEHhDEyqsgxmIstDdowhgGApaU2fC7/+V3VTlcXsREgO4x99Hj87/DAIIVeGEGriq5hXaD93uAXmXp5gkAcBsBLkJvCSdGskQEgulQTgt+bKs1iaLv52EWkQXNUoKPu4X04nrMhuVuI8P9SoLvinI2sDC+BL6uB5qcb5HQMRmK8/auk5rG09zm1O38+AbhXPglupT0fPzTlrYnONwaWN6nk6byiMkdF0vl+dwp4tneUN9mmf2CapoX681d/v49HMb1RJnZGTUK1yw+51pQBOR/0DxOvI9HGJmXDxTEdHDlOEqAi09vjDKuxIdGj9TTpcmwWp9LbqBN1Z5W2oh17qXlc+/bubRyn/WDWNJljIuhCczTKcyi3tr2VErFWXh/Jy1E7oYClg7nMJjRPtRzD0zz4umxDZTIN17j5Jqhj2KB2Ey7avb9q800fv2/q/gRTK9dW0sgnjLCbrvlla6jJSjRXFbTK4ox6UxVz09+iysbc2cpre2AtnERZdYK3ftY3FwM7njedxW4a8unbrq07odL2bJptQoDgrtXZSsaw2XqbjqYj1Vosx0IQU5PNMgEM7EVoCtIwbM6gAxtsRWnuPNqxomQBNHWsRs1ZtA9HLOsfbdVroIF5cNd+d7sG3Mxq9OBcqSSxOWcm09l6WA9wNuF8WgBKmsa+L+RzRe8nK0qzsFqh5H3PmcwSSj7O9pThT9azxcQbz5s9zZ/t7bDvbGyXmjId4fjqMvXZO9QUJmytVH/E0cNGh1eNyOsNxnKkeQ0n2wyYZn0e4LGX9dbv5nGHE3bDuRw3HrbiuQPe1Gl/Egz8kbHKGpV2smCifp6kkNsuOW85OFpszDYOmxkNF5sh5sJlg9RRwY1+YrMjrJuH/hrSOyArlJS8Y8bEYKlza81eLg0+cJi99647bq5Fma1OGW4hyPLaAa26rLUv7f6hfx9lV87XE/MdAnw9FjQwlEoyeUsN/PMwKySuVbVPqmJUDB+EYYDLL8WtYnaICRl3riWSd/h8pps025X4Ro9v8U2+LfToRp2WBYGR6TYny/J1yJxRfIDYDQPbLXwVI/dMGz8DBL6IYGDBuJqGCelrVP7BomRgozQMNEKCYYDgIizGMzTCnHUFsEMtJj/QKGukiD0Ap1yahHgaTOO2jWH8OJMbDzNZg8CNXFgM7guvMXStztSYRp1oiK2CTgtMXa9QOv29Qqi9o+jEpN9i/vjsGh7RsdxCARU4O5CUCH6xOLBXkJ+CaXy5YFzNtxPLLUiTAMWxC85IHh/9bYGi9rf6D/XuP9K4rc+uwG/6v7+v9RZd/f+7//k29UNk1Mek3pxZqXvn+rrbkS2BzJXTFoVIvb2IJYtUWtvXkjRNil1K5DmuTsXEB1XkmqJZSocgIePvsAh3MKBupqhf7Ro39B8Q3OSPOBPsBDo2MPRJx5VOx18slzpExXI5JO9T/tvN9cElyR+GOf5K1vXIYlwg/nF3BiIo9Ih4Rn6yMP4b+Fe27vyQOMluid1gW5yKPePwTYOAkJh1CUOG8b3xrwx85fxReEvyDQsmXWUmGH7/pFRQ33PZACBMAjyUyifBPR2fcOJDBMW/Sp/MnBj/9gng/udvgKp7agEAyYcDck/2i01OLN6DYHtH6Renn1m9KbQ5niWs3rlndb7L1m9JeUD38kn8WXKXp489/vIv" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:0084609DB9EF424EE0530F991F0A2430/Lease/Consume</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DiscreteMediaRightID" value="${#TestCase#discreteMediaTokenId}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="19fb7d09-3938-489c-9532-64dd0d5e5a9b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRLeaseConsume POST');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="bc5f7d30-9e5f-42a2-812f-15d5cf685842"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0602CD69A48268ABE0530F991F0A8C23</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0602CDA9A16168E7E0530F991F0A8003</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0602CDA91E9868EFE0530F991F0A1D1E</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FCA5AC5F1AD9CDE0401F0A07992ED3</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FCA693F77C6FF5E0401F0A059953AA</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:DiscreteMediaToken DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:0602CDA91E9868EFE0530F991F0A1D1E" State="urn:dece:type:state:discretemediaright:fulfilled" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0602CDA9A16168E7E0530F991F0A8003</dece:RightsTokenID>
   <dece:DiscreteMediaFulfillmentMethod>urn:dece:type:discretemediaformat:bluray:packaged</dece:DiscreteMediaFulfillmentMethod>
   <dece:MediaProfile>urn:dece:type:mediaprofile:hd</dece:MediaProfile>
   <dece:LeaseExpiration>2014-10-22T18:11:02.310Z</dece:LeaseExpiration>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2014-10-22T12:11:02.310Z" CreatedBy="urn:dece:org:org:dece:ISC_RET" ModificationDate="2014-10-22T12:11:06.007Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>Active</dece:Description>
      </dece:Current>
      <dece:History>
         <dece:Prior ModificationDate="2014-10-22T12:11:02.310Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>urn:dece:type:state:discretemediaright:leased</dece:Description>
         </dece:Prior>
         <dece:Prior ModificationDate="2014-10-22T12:11:00.277Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>urn:dece:type:state:discretemediaright:available</dece:Description>
         </dece:Prior>
      </dece:History>
   </dece:ResourceStatus>
</dece:DiscreteMediaToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>1909</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2f025dc0-7653-46fe-903d-890cd6dcfb20</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRLeaseRelease POST" searchProperties="true" id="9bb3458c-d037-428b-acfd-a392de6f03c3"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="b672f0b5-6e70-4da8-ae21-c70a9ad82362">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("DMRLeaseRelease POST").testRequest.setRequestHeaders(headers);


// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));
testCase.setPropertyValue("fulfillmentMethod",CallingTCase.getPropertyValue("fulfillmentMethod"));

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="428f687e-c060-4da7-a66d-b8d1bd065ac3"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRLeaseRelease POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRLeaseRelease POST" id="8217689a-5e06-4511-b680-836803157640"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/DiscreteMediaRight/{DiscreteMediaRightID}/Lease/Release" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRLeaseRelease POST" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RET_concat.pem" accept="" id="d6857648-f9eb-45b9-a28d-96a8c6263acd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=pVfZkqrKEv0Vw/1oKIOoQHR3hIo4IA6gtu3LCSgKoWWSKgb9+lM4be3p9r33SSvJylw5sDJ5QobvsWIbIRhjNwxKue8FSDxJn8tJHIihgVwkBoYPkYiBqLfVscjWaNG4XimXhtJz+Z86R7PQaLJVk+aEKmcKsMpbDKhyggUsE9IcNC2iilAChwHCRoCfyyzNcFWGrrLsgmFFmhfrfI2ps5tyaQVjRGwTlRpdvoDK0XPZwTgSKSrLslpWr4XxlmJpmqHW6lgHDvSN8svTOaKTo/jlog9qFgTQ80ANhD71RD3oPFlI1N1tYOAkhhdf1ne+aIoWKKJjIXf7p3y7C61hYIenY9cIwsAFhucejSI/KsROaJXa3jaMXez43wbB0IXhKsxBFTBc8KdMPUL7paEHhDEyqsgxmIstDdowhgGApaU2fC7/+V3VTlcXsREgO4x99Hj87/DAIIVeGEGriq5hXaD93uAXmXp5gkAcBsBLkJvCSdGskQEgulQTgt+bKs1iaLv52EWkQXNUoKPu4X04nrMhuVuI8P9SoLvinI2sDC+BL6uB5qcb5HQMRmK8/auk5rG09zm1O38+AbhXPglupT0fPzTlrYnONwaWN6nk6byiMkdF0vl+dwp4tneUN9mmf2CapoX681d/v49HMb1RJnZGTUK1yw+51pQBOR/0DxOvI9HGJmXDxTEdHDlOEqAi09vjDKuxIdGj9TTpcmwWp9LbqBN1Z5W2oh17qXlc+/bubRyn/WDWNJljIuhCczTKcyi3tr2VErFWXh/Jy1E7oYClg7nMJjRPtRzD0zz4umxDZTIN17j5Jqhj2KB2Ey7avb9q800fv2/q/gRTK9dW0sgnjLCbrvlla6jJSjRXFbTK4ox6UxVz09+iysbc2cpre2AtnERZdYK3ftY3FwM7njedxW4a8unbrq07odL2bJptQoDgrtXZSsaw2XqbjqYj1Vosx0IQU5PNMgEM7EVoCtIwbM6gAxtsRWnuPNqxomQBNHWsRs1ZtA9HLOsfbdVroIF5cNd+d7sG3Mxq9OBcqSSxOWcm09l6WA9wNuF8WgBKmsa+L+RzRe8nK0qzsFqh5H3PmcwSSj7O9pThT9azxcQbz5s9zZ/t7bDvbGyXmjId4fjqMvXZO9QUJmytVH/E0cNGh1eNyOsNxnKkeQ0n2wyYZn0e4LGX9dbv5nGHE3bDuRw3HrbiuQPe1Gl/Egz8kbHKGpV2smCifp6kkNsuOW85OFpszDYOmxkNF5sh5sJlg9RRwY1+YrMjrJuH/hrSOyArlJS8Y8bEYKlza81eLg0+cJi99647bq5Fma1OGW4hyPLaAa26rLUv7f6hfx9lV87XE/MdAnw9FjQwlEoyeUsN/PMwKySuVbVPqmJUDB+EYYDLL8WtYnaICRl3riWSd/h8pps025X4Ro9v8U2+LfToRp2WBYGR6TYny/J1yJxRfIDYDQPbLXwVI/dMGz8DBL6IYGDBuJqGCelrVP7BomRgozQMNEKCYYDgIizGMzTCnHUFsEMtJj/QKGukiD0Ap1yahHgaTOO2jWH8OJMbDzNZg8CNXFgM7guvMXStztSYRp1oiK2CTgtMXa9QOv29Qqi9o+jEpN9i/vjsGh7RsdxCARU4O5CUCH6xOLBXkJ+CaXy5YFzNtxPLLUiTAMWxC85IHh/9bYGi9rf6D/XuP9K4rc+uwG/6v7+v9RZd/f+7//k29UNk1Mek3pxZqXvn+rrbkS2BzJXTFoVIvb2IJYtUWtvXkjRNil1K5DmuTsXEB1XkmqJZSocgIePvsAh3MKBupqhf7Ro39B8Q3OSPOBPsBDo2MPRJx5VOx18slzpExXI5JO9T/tvN9cElyR+GOf5K1vXIYlwg/nF3BiIo9Ih4Rn6yMP4b+Fe27vyQOMluid1gW5yKPePwTYOAkJh1CUOG8b3xrwx85fxReEvyDQsmXWUmGH7/pFRQ33PZACBMAjyUyifBPR2fcOJDBMW/Sp/MnBj/9gng/udvgKp7agEAyYcDck/2i01OLN6DYHtH6Renn1m9KbQ5niWs3rlndb7L1m9JeUD38kn8WXKXp489/vIv" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:00846D5FDB674258E0530F991F0A6A3D/Lease/Release</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DiscreteMediaRightID" value="${#TestCase#discreteMediaTokenId}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="NodeAccountID" value="${#TestCase#urlNodeAccountId}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#urlNodeAccountId}"/>
  <con:entry key="DiscreteMediaTokenId" value="${#TestCase#urldiscreteMediaTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="86b710ad-80d4-496a-879a-f5d440d98dd9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRLeaseRelease POST');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="250041ec-9548-4959-947b-9d65df6ec199"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0602CD69A48268ABE0530F991F0A8C23</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0602CD6A23BA68ADE0530F991F0A0F83</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0602CD87682368B9E0530F991F0ACFF1</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FCA5AC5F1AD9CDE0401F0A07992ED3</con:value></con:property><con:property><con:name>urlrightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE2FCA5C2FF5C7FF6E0401F0A07992ED1</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FCA693F77C6FF5E0401F0A059953AA</con:value></con:property><con:property><con:name>urlfulfillmentMethod</con:name><con:value>urn%3Adece%3Atype%3Adiscretemediaformat%3Abluray%3Apackaged</con:value></con:property><con:property><con:name>urlmediaProfile</con:name><con:value>urn%3Adece%3Atype%3Amediaprofile%3Ahd</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:DiscreteMediaToken DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:0602CD87682368B9E0530F991F0ACFF1" State="urn:dece:type:state:discretemediaright:available" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0602CD6A23BA68ADE0530F991F0A0F83</dece:RightsTokenID>
   <dece:AuthorizedFulfillmentMethod>urn:dece:type:discretemediaformat:bluray:packaged</dece:AuthorizedFulfillmentMethod>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2014-10-22T12:11:11.883Z">
         <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      <dece:History>
         <dece:Prior ModificationDate="2014-10-22T12:11:11.883Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>urn:dece:type:state:discretemediaright:available</dece:Description>
         </dece:Prior>
         <dece:Prior ModificationDate="2014-10-22T12:11:11.883Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>urn:dece:type:state:discretemediaright:leased</dece:Description>
         </dece:Prior>
         <dece:Prior ModificationDate="2014-10-22T12:11:11.883Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>urn:dece:type:state:discretemediaright:leased</dece:Description>
         </dece:Prior>
      </dece:History>
   </dece:ResourceStatus>
</dece:DiscreteMediaToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>1877</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5e127f61-48be-4ffd-b950-d806c86f121e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRLeaseRenew PUT" searchProperties="true" id="8d9fe10f-9e9d-4f58-a39b-81c0d23afc93"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="92fc60b9-978c-44c1-93c4-b4b90cca8a73">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
//testCase.setPropertyValue("Etag",CallingTCase.getPropertyValue("Etag"));

//Setting the If-Match to null
//testCase.setPropertyValue("If-Match",null)
//
//testCase.setPropertyValue("If-Match",CallingTCase.getPropertyValue("If-Match"))

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()

//def ifMatch = context.expand( '${#TestCase#If-Match}' )
//
//if (ifMatch == 'noIfMatch')
//{
//	 headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//}
//else if (ifMatch == 'withStar')
//{
//	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//	headers.put("If-Match","*");
//}
//else
//{
//	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//	headers.put("If-Match",testCase.getPropertyValue("Etag"));
//}

headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
headers.put("If-Match","*");

//testRunner.testCase.getTestStepByName("DMRUpdate PUT").testRequest.setRequestHeaders(headers);
testRunner.testCase.getTestStepByName("DMRLeaseRenew PUT").testRequest.setRequestHeaders(headers);


// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));
testCase.setPropertyValue("mediaProfile",CallingTCase.getPropertyValue("mediaProfile"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="1eb7764f-90f0-45d4-8356-662dd7b5cd12"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRLeaseRenew PUT");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRLeaseRenew PUT" id="62015167-9de9-486c-bc3b-fadda9275dc4"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/DiscreteMediaRight/{DiscreteMediaRightID}/Lease/Renew" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRLeaseRenew PUT" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RET_concat.pem" accept="" id="86e5409a-bc90-4321-b4da-27c463fbfebf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=pVfZkqrKEv0Vw/1oKIOoQHR3hIo4IA6gtu3LCSgKoWWSKgb9+lM4be3p9r33SSvJylw5sDJ5QobvsWIbIRhjNwxKue8FSDxJn8tJHIihgVwkBoYPkYiBqLfVscjWaNG4XimXhtJz+Z86R7PQaLJVk+aEKmcKsMpbDKhyggUsE9IcNC2iilAChwHCRoCfyyzNcFWGrrLsgmFFmhfrfI2ps5tyaQVjRGwTlRpdvoDK0XPZwTgSKSrLslpWr4XxlmJpmqHW6lgHDvSN8svTOaKTo/jlog9qFgTQ80ANhD71RD3oPFlI1N1tYOAkhhdf1ne+aIoWKKJjIXf7p3y7C61hYIenY9cIwsAFhucejSI/KsROaJXa3jaMXez43wbB0IXhKsxBFTBc8KdMPUL7paEHhDEyqsgxmIstDdowhgGApaU2fC7/+V3VTlcXsREgO4x99Hj87/DAIIVeGEGriq5hXaD93uAXmXp5gkAcBsBLkJvCSdGskQEgulQTgt+bKs1iaLv52EWkQXNUoKPu4X04nrMhuVuI8P9SoLvinI2sDC+BL6uB5qcb5HQMRmK8/auk5rG09zm1O38+AbhXPglupT0fPzTlrYnONwaWN6nk6byiMkdF0vl+dwp4tneUN9mmf2CapoX681d/v49HMb1RJnZGTUK1yw+51pQBOR/0DxOvI9HGJmXDxTEdHDlOEqAi09vjDKuxIdGj9TTpcmwWp9LbqBN1Z5W2oh17qXlc+/bubRyn/WDWNJljIuhCczTKcyi3tr2VErFWXh/Jy1E7oYClg7nMJjRPtRzD0zz4umxDZTIN17j5Jqhj2KB2Ey7avb9q800fv2/q/gRTK9dW0sgnjLCbrvlla6jJSjRXFbTK4ox6UxVz09+iysbc2cpre2AtnERZdYK3ftY3FwM7njedxW4a8unbrq07odL2bJptQoDgrtXZSsaw2XqbjqYj1Vosx0IQU5PNMgEM7EVoCtIwbM6gAxtsRWnuPNqxomQBNHWsRs1ZtA9HLOsfbdVroIF5cNd+d7sG3Mxq9OBcqSSxOWcm09l6WA9wNuF8WgBKmsa+L+RzRe8nK0qzsFqh5H3PmcwSSj7O9pThT9azxcQbz5s9zZ/t7bDvbGyXmjId4fjqMvXZO9QUJmytVH/E0cNGh1eNyOsNxnKkeQ0n2wyYZn0e4LGX9dbv5nGHE3bDuRw3HrbiuQPe1Gl/Egz8kbHKGpV2smCifp6kkNsuOW85OFpszDYOmxkNF5sh5sJlg9RRwY1+YrMjrJuH/hrSOyArlJS8Y8bEYKlza81eLg0+cJi99647bq5Fma1OGW4hyPLaAa26rLUv7f6hfx9lV87XE/MdAnw9FjQwlEoyeUsN/PMwKySuVbVPqmJUDB+EYYDLL8WtYnaICRl3riWSd/h8pps025X4Ro9v8U2+LfToRp2WBYGR6TYny/J1yJxRfIDYDQPbLXwVI/dMGz8DBL6IYGDBuJqGCelrVP7BomRgozQMNEKCYYDgIizGMzTCnHUFsEMtJj/QKGukiD0Ap1yahHgaTOO2jWH8OJMbDzNZg8CNXFgM7guvMXStztSYRp1oiK2CTgtMXa9QOv29Qqi9o+jEpN9i/vjsGh7RsdxCARU4O5CUCH6xOLBXkJ+CaXy5YFzNtxPLLUiTAMWxC85IHh/9bYGi9rf6D/XuP9K4rc+uwG/6v7+v9RZd/f+7//k29UNk1Mek3pxZqXvn+rrbkS2BzJXTFoVIvb2IJYtUWtvXkjRNil1K5DmuTsXEB1XkmqJZSocgIePvsAh3MKBupqhf7Ro39B8Q3OSPOBPsBDo2MPRJx5VOx18slzpExXI5JO9T/tvN9cElyR+GOf5K1vXIYlwg/nF3BiIo9Ih4Rn6yMP4b+Fe27vyQOMluid1gW5yKPePwTYOAkJh1CUOG8b3xrwx85fxReEvyDQsmXWUmGH7/pFRQ33PZACBMAjyUyifBPR2fcOJDBMW/Sp/MnBj/9gng/udvgKp7agEAyYcDck/2i01OLN6DYHtH6Renn1m9KbQ5niWs3rlndb7L1m9JeUD38kn8WXKXp489/vIv"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:0083CCDFDF307E25E0530F991F0A5366/RightsToken/DiscreteMediaRight/urn:dece:discretemediatokenid:org:dece:00846D5FDB674258E0530F991F0A6A3D/Lease/Renew</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DiscreteMediaRightID" value="${#TestCase#discreteMediaTokenId}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
  <con:entry key="NodeAccountID" value="${#TestCase#urlNodeAccountId}"/>
  <con:entry key="DiscreteMediaTokenId" value="${#TestCase#urldiscreteMediaTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="2d53e103-6332-4825-ac49-a5c5d7d0ff7d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRLeaseRenew PUT');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="89b6c23f-208b-47b0-bdb6-3cbe9f496b18"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET</con:value></con:property><con:property><con:name>NodeAccountID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0602CD69A48268ABE0530F991F0A8C23</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:0602CD6A23BA68ADE0530F991F0A0F83</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:dvd:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0602CD87682368B9E0530F991F0ACFF1</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FCA5AC5F1AD9CDE0401F0A07992ED3</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FCA693F77C6FF5E0401F0A059953AA</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:DiscreteMediaToken DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:0602CD87682368B9E0530F991F0ACFF1" State="urn:dece:type:state:discretemediaright:leased" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:RightsTokenID>urn:dece:rightstokenid:org:dece:0602CD6A23BA68ADE0530F991F0A0F83</dece:RightsTokenID>
   <dece:DiscreteMediaFulfillmentMethod>urn:dece:type:discretemediaformat:bluray:packaged</dece:DiscreteMediaFulfillmentMethod>
   <dece:AuthorizedFulfillmentMethod>urn:dece:type:discretemediaformat:bluray:packaged</dece:AuthorizedFulfillmentMethod>
   <dece:MediaProfile>urn:dece:type:mediaprofile:hd</dece:MediaProfile>
   <dece:LeaseExpiration>2014-10-23T00:11:11.883Z</dece:LeaseExpiration>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2014-10-22T12:11:11.883Z" CreatedBy="urn:dece:org:org:dece:ISC_RET" ModificationDate="2014-10-22T12:11:15.450Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>Active</dece:Description>
      </dece:Current>
      <dece:History>
         <dece:Prior ModificationDate="2014-10-22T12:11:10.027Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>urn:dece:type:state:discretemediaright:available</dece:Description>
         </dece:Prior>
         <dece:Prior ModificationDate="2014-10-22T12:11:11.883Z" ModifiedBy="urn:dece:org:org:dece:ISC_RET">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>urn:dece:type:state:discretemediaright:leased</dece:Description>
         </dece:Prior>
      </dece:History>
   </dece:ResourceStatus>
</dece:DiscreteMediaToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>2029</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Etag</con:name><con:value>"ED683B3F58B9BE51E0401F0A0799277A:81423F5A"</con:value></con:property><con:property><con:name>If-Match</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>4c7a463a-f060-4ecd-aaf2-9dd05d24ee7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRLeaseConsume POST_06" searchProperties="true" id="7ac404b8-f5f4-4494-a293-c9251d0309bc"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="aa3bf211-3078-4fa7-b646-1c77a8f50bad">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
testRunner.testCase.getTestStepByName("DMRLeaseConsume POST").testRequest.setRequestHeaders(headers);


// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="7c8dc66e-5229-423b-8c7e-79aaf553389f"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRLeaseConsume POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRLeaseConsume POST" id="1c236262-33a7-4a21-93aa-0b8856f7632e"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/DiscreteMediaRight/{DiscreteMediaRightID}/Consume" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRLeaseConsume POST" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem" id="905c0859-71d3-4fa6-aeda-52453be53263"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVZdU6s8EL73VzB46dAApVAY25m2WOVYtUrrOXrjxBDaKAQkoR/++jdQqW2tvj1npjOdLJvdZz/y7J4yGEe602EMZ5wkVPLclvxkB9DSdWwrYahqitEIVaXZCHUFqZaBrcBoNJtNWfIYy7FHGYeUt2Rd1eqKpovfSFMdo+FoWs1s2I+ydI8zJkwLlZoqS4s4oswp3bbkPKNOAhlhDoUxZg5Hjt+5GjhC04EVJrl9ukJZOszaU85TBwBUCzDCUYRqKInBKdjSOQ2Y45MJhTzP8IfPgLXkj7vz+bw2r9eSbAJ0VVWBagOhEzAyOZbbR9VlHHg0TFbnHqQJJQhG5B0WoK4wnyaB1IkmSUb4NP7GtAY0tTCt4AVSkGbQYxl8OijRHWhpC2TGoMKmUKuM3eEQZ5giLI3vvJZ8fFgFV3dHGaQsTLKY7Zz/DhKmMxwlKQ4UVkVWoTvc4p50tU8xcjyKopyRGb4u2iSFCDNpmOGQLAaEieYLmFSWX1ow8SNVl2H0N2U5BZtYBXSwJzsumWDG/6Vmm/VaWbmHUY7bV4/u+UMPvJvxiwlu1XE6us5mD4/Zw/u4VULYVF6BWpf747zbrOve+rh0PZ8F2jKzB0nzxDqZh1bStMDbTR//ehlfU3t8ORz6tNvsdr2r5aC7GKvx3YU98Qbhm58CNny4naDgedS/vRz8YUf94Sh+Hj5qg5O+7gV0eBFN41f1PcXL8+Uy8ozu/a/MD/WLrAPCE26PU/8SvXSXce/hjbGb+cXk940av1u/L8cvg6OQxCZ4vYTng/v5aGDWl51m6zOmzRi2hRUl+PnzC0a8Ohbt4blSX9QL8p/ppZCQQAlLVSctOIpxTLncLm4V1OLkgoBI4Ihirs5nbsNwO72+bdYbZ5baOFMNVeurHdWy7YbZ0CsOWqHYgdhLaEgKXwXLrvrnZ4AodhimAc6UWZKjKWbyDxZdyKHk0TvxOBLK8CgRLH7mdpuG1TdN3exaTa1h9lxDreu6Ve/2z0y3L0vXCb+hN1kn5DjbZvD6FoPfYURSgguaL/qciUZnXKTkDc5yHmm1GaxRnItBkBVc7OhGswEYidMIF4BBnAR5hGvpNC0TBNjqX1cgYqX07mxUvr9vw9v9VmVC6ASkUGBFLF0sqon3jCK1CuRLwMbekVWZ7+QBKZ6ZSCvPCFoh2f702S1Fm6xbxR10/GEFeq172F2Rjaee/6T9+/WvN8EPAYHdXK4dBTOy4baax2LECAJqV53wBmtvtXw2y8vaW6qqg0yYBxpQTeBjlAuGXI6SV0zB2gQ4aECtUe94Xsu38eV8Sn0OOY5Fp0rl8YDtxMes2E488dIWh64+Wy5F3jhe8H2yXiSWmALxj3sOclChJ8RD8TdPsuCzXHtsbfgRcYqVhBM6KU7FKFp+0xQoEWaJ4M4k2zS+z8A+59vCdZLXWLjopuec4++/SAUptmSIUJJT7rlyKdgk6hInX6bY+VT6YqYcBh/TfcG+ne5/rga+oMwYymtd8v/KCinbBWG5WCJKLC15IZZV4ZxONgbDB8Dd2dDVeq5pa25HN43N2WA0TXudwK1I2l/EXyUbOd19D+3/AA==" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DiscreteMediaRightID" value="${#TestCase#discreteMediaTokenId}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="e3bd14e0-1857-406c-ac4c-c51faca832d8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRLeaseConsume POST');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="33ebee71-d9e9-4b85-81b9-eb987580b0da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NodeAccountID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:ED54B1CD691DA264E0401F0A07994869</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AED68B22EEE4AD1E5E0401F0A059911CC</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AED683B3F58ADBE51E0401F0A0799277A</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FCA5AC5F1AD9CDE0401F0A07992ED3</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FCA693F77C6FF5E0401F0A059953AA</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value/></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<DiscreteMediaToken State="urn:dece:type:state:discretemediaright:fulfilled" DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:ED683B3F58ADBE51E0401F0A0799277A" xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenID>urn:dece:rightstokenid:org:dece:ED68B22EEE4AD1E5E0401F0A059911CC</RightsTokenID>
   <DiscreteMediaFulfillmentMethod>urn:dece:type:discretemediaformat:bluray:packaged</DiscreteMediaFulfillmentMethod>
   <MediaProfile>urn:dece:type:mediaprofile:hd</MediaProfile>
   <LeaseExpiration>2013-12-13T16:29:20.703Z</LeaseExpiration>
   <ResourceStatus>
      <Current ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-12-13T10:29:25.701Z" CreatedBy="urn:dece:org:org:dece:RET" CreationDate="2013-12-13T10:29:20.703Z">
         <Value>urn:dece:type:status:active</Value>
         <Description>Active</Description>
      </Current>
      <History>
         <Prior ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-12-13T10:27:53.203Z">
            <Value>urn:dece:type:status:active</Value>
            <Description>urn:dece:type:state:discretemediaright:available</Description>
         </Prior>
         <Prior ModifiedBy="urn:dece:org:org:dece:RET" ModificationDate="2013-12-13T10:29:20.703Z">
            <Value>urn:dece:type:status:active</Value>
            <Description>urn:dece:type:state:discretemediaright:leased</Description>
         </Prior>
      </History>
   </ResourceStatus>
</DiscreteMediaToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>1729</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2f025dc0-7653-46fe-903d-890cd6dcfb20</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRUpdate PUT_06" searchProperties="true" id="c5f11641-3b6e-46af-a62d-733f74feab27"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="e7055409-6826-4f35-b60e-464f0f4379cb">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
//testCase.setPropertyValue("Etag",CallingTCase.getPropertyValue("Etag"));
//
////Setting the If-Match to null
//testCase.setPropertyValue("If-Match",null)
//
//testCase.setPropertyValue("If-Match",CallingTCase.getPropertyValue("If-Match"))
//
////SetUp SAML assertion in Request header
//
//def headers = new StringToStringMap()
//
//def ifMatch = context.expand( '${#TestCase#If-Match}' )
//
//if (ifMatch == 'noIfMatch')
//{
//	 headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//}
//else if (ifMatch == 'withStar')
//{
//	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//	headers.put("If-Match","*");
//}
//else
//{
//	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
//	headers.put("If-Match",testCase.getPropertyValue("Etag"));
//}
//
//
////testRunner.testCase.getTestStepByName("DMRUpdate PUT").testRequest.setRequestHeaders(headers);
//testRunner.testCase.getTestStepByName("DMRUpdate PUT").testRequest.setRequestHeaders(headers);

// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));
testCase.setPropertyValue("RightsTokenIDdecoded",URLDecoder.decode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
testCase.setPropertyValue("mediaProfile",CallingTCase.getPropertyValue("mediaProfile"));
testCase.setPropertyValue("rightsTokenId",CallingTCase.getPropertyValue("rightstokenid"));

</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="2128ecde-09a6-43d1-9fd9-2d9435e11ef2"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRUpdate PUT_107");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRUpdate PUT" id="e7cc4449-88a9-4d92-bfb4-b55895a742c4"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/DiscreteMediaRight/{DiscreteMediaRightID}" methodName="DMRUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRUpdate PUT" mediaType="application/xml" postQueryString="false" id="f6b9842c-ceb2-4a49-af41-580e67eb8b75"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="SAML2 Assertion=nVZdU6s8EL73VzB46dAApVAY25m2WOVYtUrrOXrjxBDaKAQkoR/++jdQqW2tvj1npjOdLJvdZz/y7J4yGEe602EMZ5wkVPLclvxkB9DSdWwrYahqitEIVaXZCHUFqZaBrcBoNJtNWfIYy7FHGYeUt2Rd1eqKpovfSFMdo+FoWs1s2I+ydI8zJkwLlZoqS4s4oswp3bbkPKNOAhlhDoUxZg5Hjt+5GjhC04EVJrl9ukJZOszaU85TBwBUCzDCUYRqKInBKdjSOQ2Y45MJhTzP8IfPgLXkj7vz+bw2r9eSbAJ0VVWBagOhEzAyOZbbR9VlHHg0TFbnHqQJJQhG5B0WoK4wnyaB1IkmSUb4NP7GtAY0tTCt4AVSkGbQYxl8OijRHWhpC2TGoMKmUKuM3eEQZ5giLI3vvJZ8fFgFV3dHGaQsTLKY7Zz/DhKmMxwlKQ4UVkVWoTvc4p50tU8xcjyKopyRGb4u2iSFCDNpmOGQLAaEieYLmFSWX1ow8SNVl2H0N2U5BZtYBXSwJzsumWDG/6Vmm/VaWbmHUY7bV4/u+UMPvJvxiwlu1XE6us5mD4/Zw/u4VULYVF6BWpf747zbrOve+rh0PZ8F2jKzB0nzxDqZh1bStMDbTR//ehlfU3t8ORz6tNvsdr2r5aC7GKvx3YU98Qbhm58CNny4naDgedS/vRz8YUf94Sh+Hj5qg5O+7gV0eBFN41f1PcXL8+Uy8ozu/a/MD/WLrAPCE26PU/8SvXSXce/hjbGb+cXk940av1u/L8cvg6OQxCZ4vYTng/v5aGDWl51m6zOmzRi2hRUl+PnzC0a8Ohbt4blSX9QL8p/ppZCQQAlLVSctOIpxTLncLm4V1OLkgoBI4Ihirs5nbsNwO72+bdYbZ5baOFMNVeurHdWy7YbZ0CsOWqHYgdhLaEgKXwXLrvrnZ4AodhimAc6UWZKjKWbyDxZdyKHk0TvxOBLK8CgRLH7mdpuG1TdN3exaTa1h9lxDreu6Ve/2z0y3L0vXCb+hN1kn5DjbZvD6FoPfYURSgguaL/qciUZnXKTkDc5yHmm1GaxRnItBkBVc7OhGswEYidMIF4BBnAR5hGvpNC0TBNjqX1cgYqX07mxUvr9vw9v9VmVC6ASkUGBFLF0sqon3jCK1CuRLwMbekVWZ7+QBKZ6ZSCvPCFoh2f702S1Fm6xbxR10/GEFeq172F2Rjaee/6T9+/WvN8EPAYHdXK4dBTOy4baax2LECAJqV53wBmtvtXw2y8vaW6qqg0yYBxpQTeBjlAuGXI6SV0zB2gQ4aECtUe94Xsu38eV8Sn0OOY5Fp0rl8YDtxMes2E488dIWh64+Wy5F3jhe8H2yXiSWmALxj3sOclChJ8RD8TdPsuCzXHtsbfgRcYqVhBM6KU7FKFp+0xQoEWaJ4M4k2zS+z8A+59vCdZLXWLjopuec4++/SAUptmSIUJJT7rlyKdgk6hInX6bY+VT6YqYcBh/TfcG+ne5/rga+oMwYymtd8v/KCinbBWG5WCJKLC15IZZV4ZxONgbDB8Dd2dDVeq5pa25HN43N2WA0TXudwK1I2l/EXyUbOd19D+3/AA=="/>
  <con:entry key="If-Match" value="&quot;ED67D2C6B701C983E0401F0A079943F5:18B31766&quot;"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<DiscreteMediaToken State="urn:dece:type:state:discretemediaright:available" xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/schema/md/v1.07/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenID>${#TestCase#RightsTokenIDdecoded}</RightsTokenID>
   <AuthorizedFulfillmentMethod>${#TestCase#fulfillmentMethod}</AuthorizedFulfillmentMethod>
   <MediaProfile>${#TestCase#mediaProfile}</MediaProfile>
   <LeaseExpiration>2011-06-04T02:30:57</LeaseExpiration>
</DiscreteMediaToken>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DiscreteMediaRightID" value="${#TestCase#discreteMediaTokenId}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="f88c3bc5-5781-4feb-a945-c08ec2cd22d7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRUpdate PUT');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="c87997b3-e9de-4a8d-8b29-62b1769d7fc8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NodeAccountID</con:name><con:value>urn:dece:accountid:org:dece:ED54B1CD691DA264E0401F0A07994869</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AED683B3F56F0BE51E0401F0A0799277A</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:dvd:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AED683B3F572DBE51E0401F0A0799277A</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2FB8DF3370B8786E0401F0A07992DA1</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2FB8DF337698786E0401F0A07992DA1</con:value></con:property><con:property><con:name>If-Match</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Etag</con:name><con:value>"ED67D2C6B701C983E0401F0A079943F5:18B31766"</con:value></con:property><con:property><con:name>urlrightsTokenId</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE2FB8DF337578786E0401F0A07992DA1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value/></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<DiscreteMediaToken State="urn:dece:type:state:discretemediaright:available" DiscreteMediaTokenID="urn:dece:discretemediatokenid:org:dece:ED683B3F572DBE51E0401F0A0799277A" xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsTokenID>urn:dece:rightstokenid:org:dece:ED683B3F56F0BE51E0401F0A0799277A</RightsTokenID>
   <AuthorizedFulfillmentMethod>urn:dece:type:discretemediaformat:dvd:packaged</AuthorizedFulfillmentMethod>
   <ResourceStatus>
      <Current ModificationDate="2013-12-13T10:15:28.602Z" CreationDate="2013-12-13T09:46:02.481Z">
         <Value>urn:dece:type:status:active</Value>
      </Current>
   </ResourceStatus>
</DiscreteMediaToken>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>886</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsTokenIDdecoded</con:name><con:value>urn:dece:rightstokenid:org:dece:ED683B3F56F0BE51E0401F0A0799277A</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>d52cd0ff-6fc2-463b-b4db-80c38f05d43d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7872b5a4-f9cf-4524-a13a-93c804e5fd2d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>91acfb71-834e-4f1a-9d09-e9f8c41172fd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DMRDelete_06" searchProperties="true" id="8eeae6f1-2a94-4029-85a9-a3287539c14b"><con:settings/><con:testStep type="groovy" name="Get the Required DMR Properties" id="c5a1b1de-4ab5-412e-9aff-167f270d51a2">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");


def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
testCase.setPropertyValue("Etag",CallingTCase.getPropertyValue("Etag"));

//Setting the If-Match to null
testCase.setPropertyValue("If-Match",null)

testCase.setPropertyValue("If-Match",CallingTCase.getPropertyValue("If-Match"))

//SetUp SAML assertion in Request header

def headers = new StringToStringMap()

def ifMatch = context.expand( '${#TestCase#If-Match}' )

if (ifMatch == 'noIfMatch')
{
	 headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
}
else if (ifMatch == 'withStar')
{
	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
	headers.put("If-Match","*");
}
else
{
	headers.put("Authorization",testProject.getPropertyValue("SAMLFULL"));
	headers.put("If-Match",testCase.getPropertyValue("Etag"));
}


//testRunner.testCase.getTestStepByName("DMRUpdate PUT").testRequest.setRequestHeaders(headers);
testRunner.testCase.getTestStepByName("DMRDelete").testRequest.setRequestHeaders(headers);


// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties

testCase.setPropertyValue("NodeAccountID",CallingTCase.getPropertyValue("NODEACCOUNTIDDecoded"));
testCase.setPropertyValue("discreteMediaTokenId",CallingTCase.getPropertyValue("discreteMediaTokenId"));

//Set the URL values
//testCase.setPropertyValue("urlNodeAccountID",URLEncoder.encode(testCase.getPropertyValue("NodeAccountID"), "UTF-8"));
//testCase.setPropertyValue("urldiscreteMediaTokenId",URLEncoder.encode(testCase.getPropertyValue("discreteMediaTokenId"), "UTF-8"));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Set Pem" id="881558f5-7f72-4752-8ef0-3295ac3527ee"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;

RestTestRequestStep testStep = testCase.getTestStepByName("DMRDelete");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config></con:testStep><con:testStep type="restrequest" name="DMRDelete" id="341e5cec-2a7f-49d2-8d83-6bd1d4b356d9"><con:settings/><con:config service="DMR" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/RightsToken/DiscreteMediaRight/{DiscreteMediaRightID}" methodName="DMRDelete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DMRDelete" mediaType="application/xml" sslKeystore="RET_concat.pem" id="abf5c2fb-a2c3-4b78-ad1a-66c9fcedc17d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Authorization" value="SAML2 Assertion=nVZdU6s8EL73VzB46dAApVAY25m2WOVYtUrrOXrjxBDaKAQkoR/++jdQqW2tvj1npjOdLJvdZz/y7J4yGEe602EMZ5wkVPLclvxkB9DSdWwrYahqitEIVaXZCHUFqZaBrcBoNJtNWfIYy7FHGYeUt2Rd1eqKpovfSFMdo+FoWs1s2I+ydI8zJkwLlZoqS4s4oswp3bbkPKNOAhlhDoUxZg5Hjt+5GjhC04EVJrl9ukJZOszaU85TBwBUCzDCUYRqKInBKdjSOQ2Y45MJhTzP8IfPgLXkj7vz+bw2r9eSbAJ0VVWBagOhEzAyOZbbR9VlHHg0TFbnHqQJJQhG5B0WoK4wnyaB1IkmSUb4NP7GtAY0tTCt4AVSkGbQYxl8OijRHWhpC2TGoMKmUKuM3eEQZ5giLI3vvJZ8fFgFV3dHGaQsTLKY7Zz/DhKmMxwlKQ4UVkVWoTvc4p50tU8xcjyKopyRGb4u2iSFCDNpmOGQLAaEieYLmFSWX1ow8SNVl2H0N2U5BZtYBXSwJzsumWDG/6Vmm/VaWbmHUY7bV4/u+UMPvJvxiwlu1XE6us5mD4/Zw/u4VULYVF6BWpf747zbrOve+rh0PZ8F2jKzB0nzxDqZh1bStMDbTR//ehlfU3t8ORz6tNvsdr2r5aC7GKvx3YU98Qbhm58CNny4naDgedS/vRz8YUf94Sh+Hj5qg5O+7gV0eBFN41f1PcXL8+Uy8ozu/a/MD/WLrAPCE26PU/8SvXSXce/hjbGb+cXk940av1u/L8cvg6OQxCZ4vYTng/v5aGDWl51m6zOmzRi2hRUl+PnzC0a8Ohbt4blSX9QL8p/ppZCQQAlLVSctOIpxTLncLm4V1OLkgoBI4Ihirs5nbsNwO72+bdYbZ5baOFMNVeurHdWy7YbZ0CsOWqHYgdhLaEgKXwXLrvrnZ4AodhimAc6UWZKjKWbyDxZdyKHk0TvxOBLK8CgRLH7mdpuG1TdN3exaTa1h9lxDreu6Ve/2z0y3L0vXCb+hN1kn5DjbZvD6FoPfYURSgguaL/qciUZnXKTkDc5yHmm1GaxRnItBkBVc7OhGswEYidMIF4BBnAR5hGvpNC0TBNjqX1cgYqX07mxUvr9vw9v9VmVC6ASkUGBFLF0sqon3jCK1CuRLwMbekVWZ7+QBKZ6ZSCvPCFoh2f702S1Fm6xbxR10/GEFeq172F2Rjaee/6T9+/WvN8EPAYHdXK4dBTOy4baax2LECAJqV53wBmtvtXw2y8vaW6qqg0yYBxpQTeBjlAuGXI6SV0zB2gQ4aECtUe94Xsu38eV8Sn0OOY5Fp0rl8YDtxMes2E488dIWh64+Wy5F3jhe8H2yXiSWmALxj3sOclChJ8RD8TdPsuCzXHtsbfgRcYqVhBM6KU7FKFp+0xQoEWaJ4M4k2zS+z8A+59vCdZLXWLjopuec4++/SAUptmSIUJJT7rlyKdgk6hInX6bY+VT6YqYcBh/TfcG+ne5/rga+oMwYymtd8v/KCinbBWG5WCJKLC15IZZV4ZxONgbDB8Dd2dDVeq5pa25HN43N2WA0TXudwK1I2l/EXyUbOd19D+3/AA=="/>
  <con:entry key="If-Match" value="&quot;ED683B3F5711BE51E0401F0A0799277A:A0347DEF&quot;"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DiscreteMediaRightID" value="${#TestCase#discreteMediaTokenId}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="0b81939c-6eaf-4e30-a72a-3504ba138d5d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DMRDelete');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="157a5b0b-1142-448b-8b8b-c4c1e3244034"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


String expectHTTPstatus  = "HTTP/1.1 200 OK";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>TCaseName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>TSuiteName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NodeAccountID</con:name><con:value>urn:dece:accountid:org:dece:ED54B1CD691DA264E0401F0A07994869</con:value></con:property><con:property><con:name>rightsTokenId</con:name><con:value>urn:dece:rightstokenid:org:dece:C8F5EF70438D72C9E0401F0A07997136</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:dvd:packaged</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AED67F56BD7916BD4E0401F0A0599217F</con:value></con:property><con:property><con:name>urlNodeAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE2D3DDCB0FB23469E0401F0A0599358E</con:value></con:property><con:property><con:name>urldiscreteMediaTokenId</con:name><con:value>urn%3Adece%3Adiscretemediatokenid%3Aorg%3Adece%3AE2D3DDCB10113469E0401F0A0599358E</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Etag</con:name><con:value>"ED683B3F5711BE51E0401F0A0799277A:A0347DEF"</con:value></con:property><con:property><con:name>If-Match</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fdb90695-a52f-40dd-919c-c75ec7350bd4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateSinglePolicyAccount" searchProperties="true" id="51d7bc4c-7657-43c6-b399-4b36f5bbf183"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="cb24d118-1c6b-40cf-b5a9-2e4758003b9f"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="facba7ff-4489-4acf-8bdc-dec2c6b6ab1c"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="21698966-f503-49b2-897a-ce0df266dbf8"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyAccount" id="29e6fe37-ab79-4fc5-bae6-bc93f811a814"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglrPolicyUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyAccount" mediaType="application/xml" postQueryString="false" id="01845b1f-f7fa-494b-a695-3b1cbdd2f191"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">



<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}</dece:PolicyClass>
      <dece:Resource>${#Project#Node_Account}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/urn:dece:type:policy:ManageAccountConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b5df78b6-0827-42c1-a5a1-89f8e8c71a78"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="eefebf73-0d0c-4ab2-b051-146a94664f9d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>ManageAccountConsent</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateSinglePolicyUser" searchProperties="true" id="a2584d1b-a80a-411e-ab51-b560a1eabbb7"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="42743b4b-a9e8-443c-a0ca-eed0903c1475"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="48ab5d7f-193b-4bfa-8808-9bdb186d7b43"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="76bb1060-b31f-4ac6-b08b-420a0c2d2e3c"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyUser" id="41f36822-e448-447b-ba10-6f2e4a6d958a"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateSinglrPolicyUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyUser" mediaType="application/xml" postQueryString="false" id="1c430fa4-3cdb-430a-8b00-e385aa082aaa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:type:policy:UserDataUsageConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="b53c3252-d139-44b3-af0a-1ce24b4f5f29"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="d4da827c-1b14-410f-9025-babdde1831dc"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateAccountList" searchProperties="true" id="aa99e37b-65bd-4dc6-b7b8-5fa3286765bd"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="445a6603-ab6c-4bf7-ac2d-b3986c9daac8"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="7d7110ca-0ab8-4af9-97f0-b76c41a79661"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="67fb0faa-434b-4c89-a0d0-448279db0b83"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyListCreate - Account" id="bf7e67eb-478e-414f-85ef-f583018dbfa9"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/List" methodName="PolicyCreateListAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyListCreate - Account" mediaType="application/xml" postQueryString="false" id="305e73ab-600b-4b24-b172-3d987c847feb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageAccountConsent</dece:PolicyClass>
      <dece:Resource>${#Project#Node_Account}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<!--<dece:Policy>-->
<!--      <dece:PolicyClass>${#Project#Encoded_PolicyClass}EnableManageUserConsent</dece:PolicyClass>-->
<!--      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>-->
<!--      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>-->
<!--      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>-->
<!--      <dece:ResourceStatus>-->
<!--      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">-->
<!--      <dece:Value>urn:dece:type:status:active</dece:Value>-->
<!--      </dece:Current>-->
<!--      </dece:ResourceStatus>-->
<!--</dece:Policy>-->

</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/List</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0e88af8f-3aff-430b-b0d1-74ba78abda33"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="cd055689-8d42-49ad-9e79-632514a352c3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Policy List and return to calling test case" id="53ab0e85-9b83-41c0-a641-801324c37858"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PolicyListCreate - Account');
def responseXML = tStep.httpRequest.response.getResponseContent();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() 
{ 
	header, value ->
		switch (header) 
		{
			case "Location": 
				contentLocation = value[0];
				break;
			case "#status#": 
				status = value[0]; 
				break;
			case "Connection": 
				connection = value[0]; 
				break;
			case "Content-Type": 
				contentType = value[0]; 
				break;
			case "Content-Length": 
				contentLength = value[0]; 
				break;
			case "Transfer-Encoding": 
				contentEncoding = value[0]; 
				break;
		}
}

def policListId = contentLocation.split("/Policy/")[1];
log.info "policListId--> "+policListId

tC.setPropertyValue("policyListID",policListId);
callTC.setPropertyValue("policyListID",policListId);
</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:0602CD69A4C368ABE0530F991F0A8C23</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateUserList" searchProperties="true" id="440b0fb9-0ff3-4089-bcf2-87a2c25e7954"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="d2abeeef-8211-43cf-b415-14175558c761"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="7fc7baf5-3abf-45d6-806b-45aa5f4805ad"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="78654456-d795-449a-9ca2-8beda7351cf8"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyListCreate - User" id="b6d07c24-5f90-42fa-9807-f50bf369c1d2"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/List" methodName="PolicyCreateListUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyListCreate - User" mediaType="application/xml" postQueryString="false" id="32c9da12-bc95-4fb3-90cc-4ef463b5d333"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/List</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="7da25ee9-f842-453a-9cb9-bb6a66932584"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="608f8e2a-921e-4337-8f52-b1f8f0fc05a7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Policy List and return to calling test case" id="581f6f9a-675f-43fc-98a3-91df22429cc1"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PolicyListCreate - User');
def responseXML = tStep.httpRequest.response.getResponseContent();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() 
{ 
	header, value ->
		switch (header) 
		{
			case "Location": 
				contentLocation = value[0];
				break;
			case "#status#": 
				status = value[0]; 
				break;
			case "Connection": 
				connection = value[0]; 
				break;
			case "Content-Type": 
				contentType = value[0]; 
				break;
			case "Content-Length": 
				contentLength = value[0]; 
				break;
			case "Transfer-Encoding": 
				contentEncoding = value[0]; 
				break;
		}
}

def policListId = contentLocation.split("/Policy/")[1];
log.info "policListId--> "+policListId

tC.setPropertyValue("policyListID",policListId);
callTC.setPropertyValue("policyListID",policListId);
</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:04862215A39A784AE05305991F0A1AA5</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:04862E4AD91031A2E05307991F0A7FEF</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyUpdateSinglePolicyAccount" searchProperties="true" id="d4cc0b4a-a270-4b71-928f-08e3b24439aa"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="532593c4-11ab-480e-90ee-5c12f0da267e"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="f3c56de9-b004-4c07-b5f5-a296073e0d97"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="95fb0187-7fb1-4fb3-b7a0-5549e3b55434"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyUpdateSinglePolicyAccount" id="993e98be-fbc3-4df4-8f08-c97316e54ebb"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyId}" methodName="PolicyUpdateSinglePolicyAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyUpdateSinglePolicyAccount" mediaType="application/xml;charset=UTF-8" postQueryString="false" id="7e275940-e685-42cb-b276-106ee6e2e90f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<dece:Policy PolicyID="${#TestCase#policyId}">
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}</dece:PolicyClass>
      <dece:Resource>${#Project#Node_Account}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
<!--      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeIdRTLCS}</dece:RequestingEntity>-->
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/urn:dece:policyid:org:dece:0084609DBA07424EE0530F991F0A2430</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3c8bae1d-79b1-4408-a93b-8754c0824ab5"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyId" value="${#TestCase#policyId}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="6489841c-79ad-4ee2-ae60-092e9d7ea73b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:0602CDAA8BD468E5E0530F991F0AAE6E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyUpdateSinglePolicyUser" searchProperties="true" id="67c624f2-16ac-4099-8ebf-eafceade25f6"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="9250237b-3ab8-418b-bee9-ee03790daa3a"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="6b6dbfc1-e11d-4939-adbe-2569f5138254"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="1adf1e92-e1fd-4321-83c6-106291f4ea7e"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyUpdateSinglePolicyUser" id="20cf3549-6c62-4e07-ab80-7d4c652e547c"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyId}" methodName="PolicyUpdateSinglePolicyUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyUpdateSinglePolicyUser" mediaType="application/xml;charset=UTF-8" postQueryString="false" id="e50654db-d958-47b5-a533-d7c30846e249"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy PolicyID="${#TestCase#policyId}">
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
<!--      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeIdRTLCS}</dece:RequestingEntity>-->
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:policyid:org:dece:00846D2272544256E0530F991F0AC54C</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="58c4cd86-c79f-4780-b42d-58e9c8d8812d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyId" value="${#TestCase#policyId}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="b5db86df-a4da-4766-b5d2-886460eea748"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:0602CDA74FC168DEE0530F991F0A5307</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGetSinglePolicyUser" searchProperties="true" id="ba3ea222-c590-42c4-a26d-00125890b558"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="f43b4dbc-bf41-4000-bab7-e5d180323650"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="029e248c-4bb9-468f-b95a-9473db17f579"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="e861ccda-9f27-406f-b55c-8d1dd6d767a1"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyGetSinglePolicyUser" id="2fef31ee-5297-4a47-9c9b-d363698765ea"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyGetSinglePolicyUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyGetSinglePolicyUser" mediaType="application/xml" postQueryString="false" id="c6a67407-61fa-4df4-b62c-aef57d591fda"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:type:policy:UserDataUsageConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="1ab345f0-429d-4c3a-9c16-5e1688cb76a7"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="5bfe82e9-0d8c-4246-be91-36b3b64d33a2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyId to calling test case" id="fd24e517-ca32-4681-a6eb-1d71110db352"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PolicyGetSinglePolicyUser');
def responseXML = tStep.httpRequest.response.getResponseContent();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() 
{ 
	header, value ->
		switch (header) 
		{
			case "Location": 
				contentLocation = value[0];
				break;
			case "#status#": 
				status = value[0]; 
				break;
			case "Connection": 
				connection = value[0]; 
				break;
			case "Content-Type": 
				contentType = value[0]; 
				break;
			case "Content-Length": 
				contentLength = value[0]; 
				break;
			case "Transfer-Encoding": 
				contentEncoding = value[0]; 
				break;
		}
}

def myXML = null;
if(responseXML != null)
{
	try
	{
		myXML = new XmlSlurper().parseText(responseXML);
	}
	catch(Throwable e)
	{
		log.info e;					
	}
}

String policyId = myXML.Policy[0].@PolicyID.toString();
String policyOid = "";
if(policyId != "" &amp;&amp; policyId != null)
{
	policyOid = policyId.split("urn:dece:policyid:org:dece:")[1];
}

tC.setPropertyValue("policyId", policyId);
tC.setPropertyValue("policyOid", policyOid);

//def myURLFunctions = new urlFunctions();

tC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
callTC.setPropertyValue("policyId", URLEncoder.encode(policyOid));
callTC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:0602CDA74FC168DEE0530F991F0A5307</con:value></con:property><con:property><con:name>policyIdURL</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3A0602CDA74FC168DEE0530F991F0A5307</con:value></con:property><con:property><con:name>policyOid</con:name><con:value>0602CDA74FC168DEE0530F991F0A5307</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGetUserPolicyId" searchProperties="true" id="e077b892-3a7e-4a49-b5a0-b665d25a0818"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="ee65b34f-d57a-4a2f-b7ab-d412be7c7924"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="75e223ee-4d86-4a02-a7c9-95fb7e2d64c2"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="92ff4eca-ffc7-4ae7-9d14-9d60fd94009f"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyGetUserPolicyId" id="c892717c-4167-444c-8420-d9eaa8c31494"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyId}" methodName="PolicyGetUserPolicyId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyGetUserPolicyId" mediaType="application/xml" postQueryString="false" id="acfc1923-4b32-4cac-91ea-5be8964e401f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:policyid:org:dece:00846D2272544256E0530F991F0AC54C</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="630e5683-c77e-4790-9d1f-fe179997dcc4"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyId" value="${#TestCase#policyId}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="223bffdd-54dd-4cf2-a815-e4d1b6e423ec"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyId to calling test case" id="4b8badb9-402c-408b-a9c0-4adfe98f752d"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PolicyGetUserPolicyId');
def responseXML = tStep.httpRequest.response.getResponseContent();

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() 
{ 
	header, value ->
		switch (header) 
		{
			case "Location": 
				contentLocation = value[0];
				break;
			case "#status#": 
				status = value[0]; 
				break;
			case "Connection": 
				connection = value[0]; 
				break;
			case "Content-Type": 
				contentType = value[0]; 
				break;
			case "Content-Length": 
				contentLength = value[0]; 
				break;
			case "Transfer-Encoding": 
				contentEncoding = value[0]; 
				break;
		}
}

def myXML = null;
if(responseXML != null)
{
	try
	{
		myXML = new XmlSlurper().parseText(responseXML);
	}
	catch(Throwable e)
	{
		log.info e;					
	}
}

String policyId = myXML.Policy[0].@PolicyID.toString();
String policyOid = "";
if(policyId != "" &amp;&amp; policyId != null)
{
	policyOid = policyId.split("urn:dece:policyid:org:dece:")[1];
}

tC.setPropertyValue("policyId", policyId);
tC.setPropertyValue("policyOid", policyOid);

//def myURLFunctions = new urlFunctions();

tC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:0602CDA74FC168DEE0530F991F0A5307</con:value></con:property><con:property><con:name>policyOid</con:name><con:value>0602CDA74FC168DEE0530F991F0A5307</con:value></con:property><con:property><con:name>policyIdURL</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3A0602CDA74FC168DEE0530F991F0A5307</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGetSinglePolicyAccount" searchProperties="true" id="dc59a3be-6399-4d71-b393-e06411d4e845"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="1c15139a-e1fd-4762-936b-81e1b2c6d23e"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="944e189c-826a-4830-a61c-e45ad2763b68"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="c69b4418-7f31-4de6-b189-917a07ca2fba"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyGetAccountPolicyId" id="8ca3440e-1532-4261-be97-46f23adc2fd3"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="PolicyGetSinglePolicyUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyGetAccountPolicyId" mediaType="application/xml" postQueryString="false" id="56868672-e650-40d4-96ee-21b413f53724"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/urn:dece:type:policy:ManageAccountConsent</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="78df3856-ae61-4458-9935-1f2ad03a2607"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyId" value="${#TestCase#policyId}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="53c4b9b2-be57-4139-abf4-c8ed2765cde3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyId to calling test case" id="a75ddfb1-f098-4cec-9f44-2a570a040e9b"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PolicyGetAccountPolicyId');
def responseXML = tStep.httpRequest.response.getResponseContent();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() 
{ 
	header, value ->
		switch (header) 
		{
			case "Location": 
				contentLocation = value[0];
				break;
			case "#status#": 
				status = value[0]; 
				break;
			case "Connection": 
				connection = value[0]; 
				break;
			case "Content-Type": 
				contentType = value[0]; 
				break;
			case "Content-Length": 
				contentLength = value[0]; 
				break;
			case "Transfer-Encoding": 
				contentEncoding = value[0]; 
				break;
		}
}

def myXML = null;
if(responseXML != null)
{
	try
	{
		myXML = new XmlSlurper().parseText(responseXML);
	}
	catch(Throwable e)
	{
		log.info e;					
	}
}

String policyId = myXML.Policy[0].@PolicyID.toString();
String policyOid = "";
if(policyId != "" &amp;&amp; policyId != null)
{
	policyOid = policyId.split("urn:dece:policyid:org:dece:")[1];
}

tC.setPropertyValue("policyId", policyId);
tC.setPropertyValue("policyOid", policyOid);

//def myURLFunctions = new urlFunctions();

tC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
callTC.setPropertyValue("policyId", URLEncoder.encode(policyOid));
callTC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:0602CDAA8BD468E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>policyOid</con:name><con:value>0602CDAA8BD468E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>policyIdURL</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3A0602CDAA8BD468E5E0530F991F0AAE6E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGetAccountPolicyId" searchProperties="true" id="e21c1766-2f68-48b8-a61b-481b62eb5a55"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="23648deb-05bf-4734-837d-62c96cfe176b"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="cf53cdfb-fac0-4fc7-9bc9-8814402b32a6"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="b40b1cb7-4779-46ae-a1fd-77eeb4e70f19"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyGetAccountPolicyId" id="c20f9513-192c-4508-8521-7612e19c6903"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyId}" methodName="PolicyGetAccountPolicyId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyGetAccountPolicyId" mediaType="application/xml" postQueryString="false" id="5a7c02dc-07b1-4992-a215-b9dae1f16a11"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/urn:dece:policyid:org:dece:0084609DBA07424EE0530F991F0A2430</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="f1683350-113c-423b-aa12-1febd2d796ca"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyId" value="${#TestCase#policyId}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="532c384e-a3e1-4a35-9134-2d4f0f68a054"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyId to calling test case" id="b9515b92-51d6-4da7-91d5-8a1e1bc4d98a"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PolicyGetAccountPolicyId');
def responseXML = tStep.httpRequest.response.getResponseContent();

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() 
{ 
	header, value ->
		switch (header) 
		{
			case "Location": 
				contentLocation = value[0];
				break;
			case "#status#": 
				status = value[0]; 
				break;
			case "Connection": 
				connection = value[0]; 
				break;
			case "Content-Type": 
				contentType = value[0]; 
				break;
			case "Content-Length": 
				contentLength = value[0]; 
				break;
			case "Transfer-Encoding": 
				contentEncoding = value[0]; 
				break;
		}
}

def myXML = null;
if(responseXML != null)
{
	try
	{
		myXML = new XmlSlurper().parseText(responseXML);
	}
	catch(Throwable e)
	{
		log.info e;					
	}
}

String policyId = myXML.Policy[0].@PolicyID.toString();
String policyOid = "";
if(policyId != "" &amp;&amp; policyId != null)
{
	policyOid = policyId.split("urn:dece:policyid:org:dece:")[1];
}

tC.setPropertyValue("policyId", policyId);
tC.setPropertyValue("policyOid", policyOid);

//def myURLFunctions = new urlFunctions();

tC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:0602CDAA8BD468E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>policyOid</con:name><con:value>0602CDAA8BD468E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>policyIdURL</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3A0602CDAA8BD468E5E0530F991F0AAE6E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f72ddcad-4c43-42ae-bed9-aee27a7d5382</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGetListUserListId" searchProperties="true" id="c665dda8-b13e-4ecd-bdd1-612954c38bad"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="434a3e47-14e3-45a7-b29c-732b140dbdf4"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="ee588862-5a5e-444b-8f45-985b4a1d140b"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="47c803a7-b23d-47b7-be6c-f37e15e1a510"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyGetUserListId" id="e700d21e-331e-4770-b904-d54b31b8142c"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{ListId}" methodName="PolicyGetListUserListId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyGetUserListId" mediaType="application/xml" postQueryString="false" id="cfa7cdc0-f571-4432-b60d-c48d33e7043e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:policylistid:org:dece:00846D7F13634248E0530F991F0AB841</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="2c752ccd-9587-4abd-b7d5-e3ffca114e79"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="ListId" value="${#TestCase#policyListID}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="6d520513-ec18-43f0-a7e7-0fb8ff8f20e6"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Store and return the list response" id="f72ddcad-4c43-42ae-bed9-aee27a7d5382"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def tstep = testCase.getTestStepByName("PolicyGetUserListId"); 

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

def listResponse = tstep.testRequest.response.responseContent;
log.info listResponse.toString();

listResponse = listResponse.replace("PolicyListID="," ").replace("URN:DECE:POLICYLISTID:ORG:DECE:"," ");
log.info listResponse.indexOf("\"");
def string = listResponse.substring(12,48);
log.info "subString: "+string;
listResponse = listResponse.replace(string,"");
log.info listResponse;


testCase.setPropertyValue("PolicyListGetResponse",listResponse);
callTC.setPropertyValue("PolicyListGetResponse", listResponse);</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:04862E4AD91031A2E05307991F0A7FEF</con:value></con:property><con:property><con:name>PolicyListGetResponse</con:name><con:value><![CDATA[<PolicyList  xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:04862E4AD91131A2E05307991F0A7FEF">
      <PolicyClass>urn:dece:type:policy:ManageUserConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-10-03T14:05:02.000Z" CreatedBy="urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:04862E4AD91631A2E05307991F0A7FEF">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-10-03T14:05:02.000Z" CreatedBy="urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:04862E4AD91B31A2E05307991F0A7FEF">
      <PolicyClass>urn:dece:type:policy:UserDataUsageConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-10-03T14:05:02.000Z" CreatedBy="urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:04862215A39A784AE05305991F0A1AA5</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGetListAccountListId" searchProperties="true" id="4a1a28a1-cc47-46ca-8e10-29f579ab7727"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="6c5c3411-9bbc-4331-8aac-d5dab5052ccd"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="f241c8bc-31da-4a6b-b157-c242470a0071"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="99a08a35-3b0f-4db7-bbd6-448cb3c761c4"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyGetAccountListId" id="b02ef4ed-505d-43b0-b4fc-ba7a3102f548"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{ListId}" methodName="PolicyGetListAccountListId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyGetAccountListId" mediaType="application/json" postQueryString="false" id="2cf4bded-cef2-4f40-8e91-ea721d65e8d0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#schemaNameSpace} dece.xsd" 
xmlns:dece="${#Project#schemaNameSpace}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 
   
<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

<dece:Policy>
      <dece:PolicyClass>${#Project#Encoded_PolicyClass}UserDataUsageConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>

</dece:PolicyList>]]></con:request><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/urn:dece:policylistid:org:dece:0084609DBA0E424EE0530F991F0A2430</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ListId" value="${#TestCase#policyListID}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="aded964a-16d9-4bb6-827a-3a4412902132"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Store and return the list response" id="a1354d93-5376-4021-bf3e-e0a1e8f90d02"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def tstep = testCase.getTestStepByName("PolicyGetAccountListId"); 

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

def listResponse = tstep.testRequest.response.responseContent;
log.info listResponse.toString();

listResponse = listResponse.replace("PolicyListID="," ").replace("URN:DECE:POLICYLISTID:ORG:DECE:"," ");
log.info listResponse.indexOf("\"");
def string = listResponse.substring(12,48);
log.info "subString: "+string;
listResponse = listResponse.replace(string,"");
log.info listResponse;


testCase.setPropertyValue("PolicyListGetResponse",listResponse);
callTC.setPropertyValue("PolicyListGetResponse", listResponse);</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:0602CD69A4C368ABE0530F991F0A8C23</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>PolicyListGetResponse</con:name><con:value><![CDATA[<dece:Policy8C23" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Policy PolicyID="urn:dece:policyid:org:dece:0602CD69A4C468ABE0530F991F0A8C23">
      <dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:ISC_RET</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:role:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreationDate="2014-10-22T12:12:49.000Z" CreatedBy="urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGetAccountPolicyList" searchProperties="true" id="24c7d9bf-8679-4047-9c03-f5cf3bf645e0"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" disabled="true" id="f8fba60f-0748-436e-b1a9-989b47d775a0"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="387cd930-c3bb-465a-9825-e25441ad3ef0"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="1de41948-7ce8-4f87-9e21-b84d3f1b5e40"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyGetAccountListId" id="bce68b82-131b-45dd-bf12-f9b385755ada"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/List" methodName="PolicyGetAccountList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyGetAccountListId" mediaType="application/xml" postQueryString="false" id="2bc65fb5-b178-476c-b6af-5b9c7bd691d1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/List</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="a40fbe49-e5ec-46e2-86a2-28b1f2474d21"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="ListId" value="${#TestCase#policyListID}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="9b80eaf9-6180-4e59-9e89-b1f9206e6d52"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:FD32C7DAA3A02D04E0401F0A05995255</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:04862215A39A784AE05305991F0A1AA5</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGetUserPolicyList" searchProperties="true" id="c251cf5a-ebd0-4749-ae59-df3c3bdb8897"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" disabled="true" id="414df8db-be6e-404f-99d6-b5f1fcf62059"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="3439c266-c4d7-426b-a3c4-867dffbc3f64"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="58964b3a-9704-4c75-b3b7-93306cc9b57b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyGetUserListId" id="21517745-615c-4ddf-baf7-4c3df150c0d3"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/List" methodName="PolicyGetUserList" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyGetUserListId" mediaType="application/xml" postQueryString="false" id="e9a9817b-02c8-4646-a7f4-b1297a471885"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/List</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="44101150-5861-4fae-85f3-31e00f50e0f3"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="ListId" value="${#TestCase#policyListID}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="745f71c5-6ee1-4256-ae4c-79057b2f93ea"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:FD32C7D9A055EFA5E0401F0A05995249</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:04862215A39A784AE05305991F0A1AA5</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDeleteListUserListId" searchProperties="true" id="095954f0-9bce-4546-992c-6576586e5ac2"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" disabled="true" id="1677a584-1505-48b5-abd3-fdf75aa305f8"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="5dc69761-ab55-4112-b85d-17e13ba5651e"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="b37e1428-d2dc-48aa-92cf-cd7dc087c04f"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyDeleteListUserListId" id="82e01ab7-8f0f-413c-aa9e-a6ec62288907"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{ListId}" methodName="PolicyDeleteListUserListId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyDeleteListUserListId" mediaType="application/xml" postQueryString="false" id="90a4ece2-0752-49c2-96ec-205cd9235b58"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:policylistid:org:dece:00846D7F13634248E0530F991F0AB841</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="d5d378ca-1ab8-4acd-83b1-775e9bbe2995"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="ListId" value="${#TestCase#policyListID}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="34191715-8e8d-444d-a7ad-143c22df598d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:04862E4AD91031A2E05307991F0A7FEF</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:04862215A39A784AE05305991F0A1AA5</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDeleteListAccountListId" searchProperties="true" id="af3165c6-869f-41fe-b440-677915214a05"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" disabled="true" id="6dcafe1a-2efd-458b-a0ee-a8176d009c6b"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="40f8d946-6c30-4505-96aa-23fafe644237"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="171485f2-1984-421f-ae78-2e1dca7b6d04"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyDeleteListAccountListId" id="ae629e25-6f6b-4384-839c-bfa909154590"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{ListId}" methodName="PolicyDeleteListAccountListId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyDeleteListAccountListId" mediaType="application/xml" postQueryString="false" id="db8db46c-df3c-4595-a0f9-0e4ca175f8ff"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/urn:dece:policylistid:org:dece:0084609DBA0E424EE0530F991F0A2430</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="aaa49b74-24ce-44ff-b681-c9d9385bf42c"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="ListId" value="${#TestCase#policyListID}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="dbb0ba22-73d1-4b7e-a6cc-6543a422d073"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:04862F6D835531A0E05307991F0ABF1B</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:04862215A39A784AE05305991F0A1AA5</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDeleteSinglePolicyAccount" searchProperties="true" id="cb5ef3e1-c6db-45f2-8bda-14c33218dc45"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" id="cb941ceb-a1fd-4099-8fc8-77f6d14bc70c"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="d27ab9a5-fe37-4258-8ad8-fc12e864a596"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="6f69bcc5-cb72-416b-93b1-13283036ac94"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyDeleteSinglePolicyAccount" id="b1f8c745-04e6-40b3-8665-ee32252426c3"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyId}" methodName="PolicyDeleteSinglePolicyAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyDeleteSinglePolicyAccount" mediaType="application/xml" postQueryString="false" id="02472708-ee92-4bab-bcae-8b581d23fc4c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/urn:dece:policyid:org:dece:0084609DBA07424EE0530F991F0A2430</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="00ffe778-df18-497e-8584-d5376fc20cee"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyId" value="${#TestCase#policyId}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="d00adbf2-3580-4fff-81d4-e7f52bb373cd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyId to calling test case" disabled="true" id="98ad5929-b7ef-48c6-abdc-aeb0be77db60"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PolicyGetSinglePolicyUser');
def responseXML = tStep.httpRequest.response.getResponseContent();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() 
{ 
	header, value ->
		switch (header) 
		{
			case "Location": 
				contentLocation = value[0];
				break;
			case "#status#": 
				status = value[0]; 
				break;
			case "Connection": 
				connection = value[0]; 
				break;
			case "Content-Type": 
				contentType = value[0]; 
				break;
			case "Content-Length": 
				contentLength = value[0]; 
				break;
			case "Transfer-Encoding": 
				contentEncoding = value[0]; 
				break;
		}
}

def myXML = null;
if(responseXML != null)
{
	try
	{
		myXML = new XmlSlurper().parseText(responseXML);
	}
	catch(Throwable e)
	{
		log.info e;					
	}
}

String policyId = myXML.Policy[0].@PolicyID.toString();
String policyOid = "";
if(policyId != "" &amp;&amp; policyId != null)
{
	policyOid = policyId.split("urn:dece:policyid:org:dece:")[1];
}

tC.setPropertyValue("policyId", policyId);
tC.setPropertyValue("policyOid", policyOid);

//def myURLFunctions = new urlFunctions();

tC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
callTC.setPropertyValue("policyId", URLEncoder.encode(policyOid));
callTC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:0602CDAA8BD468E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>policyIdURL</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AFD32931146432BCCE0401F0A05997D0B</con:value></con:property><con:property><con:name>policyOid</con:name><con:value>FD32931146432BCCE0401F0A05997D0B</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDeleteSinglePolicyUser" searchProperties="true" id="4e051b0e-50df-4ea5-9b40-fb03607f2198"><con:settings/><con:testStep type="groovy" name="Extract Policy Class From Calling Test case" disabled="true" id="e8c27518-cc97-4428-8f65-b9486c5ea1e0"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyClass",callTC.getPropertyValue("PolicyClass"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="3f1702d1-f345-4116-9d82-25f0cad1117b"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="4fd814a9-a334-4567-88dc-4944853f3043"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyDeleteSinglePolicyUser" id="9a9c0819-708e-476d-8a14-99d58a67a312"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyId}" methodName="PolicyDeleteSinglePolicyUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyDeleteSinglePolicyUser" mediaType="application/xml" postQueryString="false" id="403c5ebe-9ab3-4675-9917-80bd09468b49"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:policyid:org:dece:00846D2272544256E0530F991F0AC54C</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0993b97f-17a9-4efa-b986-ad22bac1366f"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyId" value="${#TestCase#policyId}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}${#TestCase#PolicyClass}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="471e6b28-ab0b-43c4-b71d-a1448f993519"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyId to calling test case" disabled="true" id="c3f07b5e-9838-46a1-adbb-0ce4436b2aab"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PolicyGetSinglePolicyUser');
def responseXML = tStep.httpRequest.response.getResponseContent();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() 
{ 
	header, value ->
		switch (header) 
		{
			case "Location": 
				contentLocation = value[0];
				break;
			case "#status#": 
				status = value[0]; 
				break;
			case "Connection": 
				connection = value[0]; 
				break;
			case "Content-Type": 
				contentType = value[0]; 
				break;
			case "Content-Length": 
				contentLength = value[0]; 
				break;
			case "Transfer-Encoding": 
				contentEncoding = value[0]; 
				break;
		}
}

def myXML = null;
if(responseXML != null)
{
	try
	{
		myXML = new XmlSlurper().parseText(responseXML);
	}
	catch(Throwable e)
	{
		log.info e;					
	}
}

String policyId = myXML.Policy[0].@PolicyID.toString();
String policyOid = "";
if(policyId != "" &amp;&amp; policyId != null)
{
	policyOid = policyId.split("urn:dece:policyid:org:dece:")[1];
}

tC.setPropertyValue("policyId", policyId);
tC.setPropertyValue("policyOid", policyOid);

//def myURLFunctions = new urlFunctions();

tC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
callTC.setPropertyValue("policyId", URLEncoder.encode(policyOid));
callTC.setPropertyValue("policyIdURL", URLEncoder.encode(policyId));
</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:0602CDA74FC168DEE0530F991F0A5307</con:value></con:property><con:property><con:name>policyIdURL</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AFD32931146432BCCE0401F0A05997D0B</con:value></con:property><con:property><con:name>policyOid</con:name><con:value>FD32931146432BCCE0401F0A05997D0B</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyUpdateListUserListId" searchProperties="true" id="cb421643-aa34-4c6e-b086-17230de077ca"><con:settings/><con:testStep type="groovy" name="Extract properties from Calling Test case" id="f90a8271-77b1-420f-bb0b-8a8ccd46f19a"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyListGetResponse",callTC.getPropertyValue("PolicyListGetResponse"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="8a92c52b-0882-4de0-a3c9-8fb239dfa5a4"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="d6da5a7a-5000-41ff-a5c2-a36802e6d368"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyUpdateListUserListId" id="e2c69373-cf32-4b26-a971-c5492bd4a169"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{ListId}" methodName="PolicyUpdateListUserListId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyUpdateListUserListId" mediaType="application/xml" postQueryString="false" id="ceac01ec-9cfa-460a-bff6-f8539d9e2d02"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
${#TestCase#PolicyListGetResponse}</con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:policylistid:org:dece:00846D7F13634248E0530F991F0AB841</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="232204f8-a526-414f-8a69-5e795840e1a4"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="ListId" value="${#TestCase#policyListID}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="b0f2474c-3391-4789-be26-e5199c141eef"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:04862215A39A784AE05305991F0A1AA5</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:FD344F5834883FAFE0401F0A07996340</con:value></con:property><con:property><con:name>PolicyListGetResponse</con:name><con:value><![CDATA[<PolicyList  xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:04862E4AD91131A2E05307991F0A7FEF">
      <PolicyClass>urn:dece:type:policy:ManageUserConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-10-03T14:05:02.000Z" CreatedBy="urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:04862E4AD91631A2E05307991F0A7FEF">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-10-03T14:05:02.000Z" CreatedBy="urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:04862E4AD91B31A2E05307991F0A7FEF">
      <PolicyClass>urn:dece:type:policy:UserDataUsageConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-10-03T14:05:02.000Z" CreatedBy="urn:dece:userid:org:dece:04862216755E784EE05305991F0AC537">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:04862E4AD91031A2E05307991F0A7FEF</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>ListGetResponse</con:name><con:value><![CDATA[<PolicyList PolicyListID="URN:DECE:POLICYLISTID:ORG:DECE:FD33C6EE189E8A3DE0401F0A07991802" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE189F8A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:ManageUserConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE18A48A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE18A98A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:UserDataUsageConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyUpdateListAccountListId" searchProperties="true" id="d7ad892e-5178-4a4e-8f13-18f75e16e49a"><con:settings/><con:testStep type="groovy" name="Extract properties from Calling Test case" id="7f4c2ce4-e2ae-4263-8ae4-1bf67d227dad"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("PolicyListGetResponse",callTC.getPropertyValue("PolicyListGetResponse"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="d90a7367-92e6-4a33-abed-390cd7a17933"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

//def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
//if( testStep.disabled )
//  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="91b96080-6474-4e46-99ef-923ebb7883eb"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyUserPost");

//RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
//RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
//RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
//soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyUpdateListAccountListId" id="93dcd883-a9fa-4047-904e-e572274b8f44"><con:settings/><con:config service="Policy" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{ListId}" methodName="PolicyUpdateListAccountListId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyUpdateListAccountListId" mediaType="application/xml" postQueryString="false" id="58fb9ca9-b182-42ea-bfad-226977aaa63d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?>
${#TestCase#PolicyListGetResponse}</con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/Policy/urn:dece:policylistid:org:dece:0084609DBA0E424EE0530F991F0A2430</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="59dfab86-65df-427e-963c-3b4010baacfe"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="ListId" value="${#TestCase#policyListID}"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="8f61f44d-ac6e-4a42-bb37-d2ba7816b187"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

//testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>urn:dece:policyid:org:dece:FD344F5834883FAFE0401F0A07996340</con:value></con:property><con:property><con:name>PolicyListGetResponse</con:name><con:value><![CDATA[<dece:Policy8C23" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Policy PolicyID="urn:dece:policyid:org:dece:0602CD69A4C468ABE0530F991F0A8C23">
      <dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:ISC_RET</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:role:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreationDate="2014-10-22T12:12:49.000Z" CreatedBy="urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:0602CD69A4C368ABE0530F991F0A8C23</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>ListGetResponse</con:name><con:value><![CDATA[<PolicyList PolicyListID="URN:DECE:POLICYLISTID:ORG:DECE:FD33C6EE189E8A3DE0401F0A07991802" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE189F8A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:ManageUserConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE18A48A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE18A98A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:UserDataUsageConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42743b4b-a9e8-443c-a0ca-eed0903c1475</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TOU create" searchProperties="true" id="4d296be4-72d7-4b4a-bea0-6c268d596b45"><con:settings/><con:testStep type="groovy" name="Set Encoded NodeUserID" id="ccc81d0b-7eef-486b-9d0b-1ffa2b305980"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="421bc908-b93d-4a53-8719-512a66e35f99"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");

RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);


if(testCase.getPropertyValue("Count") != "1"){

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;	
}</script></con:config></con:testStep><con:testStep type="groovy" name="TOU" disabled="true" id="35d04664-1239-45ff-b378-d4b7de3fe641"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def policy_TOU = context.expand( '${#Project#Policy_TOU}' )
def dBHost = context.expand( '${#Project#targetsystem}' )
String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )
def targetPort = context.expand( '${#Project#targetPort}' )
def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
            consent_version            
            from
            CONSENT
            where
            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
            and
            COUNTRY = '""" + country + """'
            order by
            consent_version desc)
            where rownum &lt; 2"""; 

                                                
   log.info sql;   
   results = a.SelectFromDB(sql,dBHost);
assert results.length() > 0;
log.info "results" + results;

def myXML = new XmlSlurper().parseText(results);   
log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
def consent_Version = context.expand( '${#TestCase#Consent_Version}' )
testProject.setPropertyValue("policy_TOU",'https://'+ tOUUrl + ':' + targetPort + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');


</script></con:config></con:testStep><con:testStep type="groovy" name="Set_TOU_Policy_Resource" id="a5816588-afae-4ebe-a2df-ce323f8c7da3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="02d1ece9-6450-4c44-9507-85a93bf1fa8e"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="ISC_DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#Policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>${#TestCase#NODEUSERIDDecoded}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846D428C41424CE0530F991F0A3EE2/User/urn:dece:userid:org:dece:00846CBE1453424AE0530F991F0A5A94/Policy/urn:dece:type:policy:TermsOfUse</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetNodeID" id="5c74be1e-7917-4468-ba58-9573eba10625"><con:settings/><con:config><script>
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def loopuntil = testCase.getPropertyValue("loopuntil");
def Counter = testCase.getPropertyValue("Count");

Counter++;
testCase.setPropertyValue("Count",Counter);
if(testCase.getPropertyValue("Count") == "1")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdRTL"));	
}
if(testCase.getPropertyValue("Count") == "2")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdRTLCS"));
}
if(testCase.getPropertyValue("Count") == "3")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdDLASP"));
}

if( Counter &lt;= loopuntil){
    testRunner.gotoStepByName("Set pem");
}</script></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" id="bf385e09-fa0c-40cb-9a24-7c443feffde9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Verify All Policy APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_DLASP_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Verify All Policy APIs" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="52b88965-9b97-4e03-acd1-3019edc3e0cf"><con:settings/><con:testStep type="groovy" name="Setup_Node" id="e707be15-8f5d-4a9d-a53f-c76414bdd5e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidDLASP"));
//tP.setPropertyValue("audience","");

</script></con:config></con:testStep><con:testStep type="groovy" name="AccountCreate" id="1ffc11c4-c8c5-4c19-9172-039213c3afa0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="FirstUserCreate_FAU1" id="359df9df-d270-45ea-9c70-a319abefdc0f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName= "SanityFAU_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

//for UserUpdate
tP.setPropertyValue("UserName_FAU1",UserName);

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("FirstUserCreate");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridfull = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDFULL",nodeuseridfull);

</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_FAU1" id="177b1b33-a37e-4a4d-9e59-341d95acf7bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL","SAML2 Assertion="+samlfull); 
</script></con:config></con:testStep><con:testStep type="groovy" name="TOU create for FAU" id="6a29803e-3002-4620-8de4-9f37db10f7af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("TOU create");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Create Single - Account level" id="df160454-c94c-49b7-80f3-8dd26e03ecc7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("PolicyClass","ManageAccountConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyCreateSinglePolicyAccount");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Get Single - Account level" id="fa98a534-4caf-431b-8d29-37e90eddf74f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("PolicyClass","ManageAccountConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyGetSinglePolicyAccount");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Get Account by PolicyId" id="2700fd86-882b-4bb8-be2d-900ff2303516"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyGetAccountPolicyId");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyId","urn:dece:policyid:org:dece:"+tC.getPropertyValue("policyId"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Update Single - Account level" id="28e35e7a-7b07-46b9-ac5d-641a4900dafe"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyUpdateSinglePolicyAccount");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyId","urn:dece:policyid:org:dece:"+tC.getPropertyValue("policyId"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Delete Account by PolicyId" id="ee4447e4-a5af-48de-bee0-fb32b9260e44"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyDeleteSinglePolicyAccount");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyId","urn:dece:policyid:org:dece:"+tC.getPropertyValue("policyId"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Create Single - User level" id="8b36111a-42a2-44cd-aa49-fe5ce9a46864"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyCreateSinglePolicyUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Get Single - User level" id="71b9ecbb-b1aa-4fdc-a155-63577c4a326a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyGetSinglePolicyUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Get User by PolicyId" id="b601e293-1f7e-4827-8521-cc7c76fa46f9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyGetUserPolicyId");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyId","urn:dece:policyid:org:dece:"+tC.getPropertyValue("policyId"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Update Single - User level" id="6ee7465c-b480-4a98-98e9-6f44b37edc08"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyUpdateSinglePolicyUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyId","urn:dece:policyid:org:dece:"+tC.getPropertyValue("policyId"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Delete User by PolicyId" id="73755afb-82dd-4a0a-9608-b74a52314cd7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyDeleteSinglePolicyUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyId","urn:dece:policyid:org:dece:"+tC.getPropertyValue("policyId"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy create List- Account level" id="33ab3fc6-3b6c-4153-80be-e237e5a633ce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyCreateAccountList");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Get List by ListId - Account level" id="57dd31b9-a316-410c-89e0-aaf421a634da"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyGetListAccountListId");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyListID",tC.getPropertyValue("policyListID"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Update List - Account level" id="a20f2032-fb7a-448f-a3a6-439a08b7a27c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyUpdateListAccountListId");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyListID",tC.getPropertyValue("policyListID"));
myTC.setPropertyValue("ListGetResponse",tC.getPropertyValue("ListGetResponse"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Get List - Account level" id="39b15962-1989-4b7e-9235-e1b3e27a15f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyGetAccountPolicyList");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Delete List by ListId - Account level" id="0241dda5-97f1-49a6-80c1-996700aef74d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyDeleteListAccountListId");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyListID",tC.getPropertyValue("policyListID"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Create List - User level" id="86123aaf-4463-443f-9564-cc7727e578e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyCreateUserList");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Get List by ListId - User level" id="8116abd5-5566-40c4-9d1c-5e7338f5d6e6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyGetListUserListId");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyListID",tC.getPropertyValue("policyListID"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Get List - User level" id="f62e396f-a9cd-4e20-a600-57e195834439"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyGetUserPolicyList");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Update List - User level" id="7c65b5a1-9e0f-4b7f-85b4-95c92217fc89"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//tC.setPropertyValue("PolicyClass","UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyUpdateListUserListId");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyListID",tC.getPropertyValue("policyListID"));
myTC.setPropertyValue("ListGetResponse",tC.getPropertyValue("ListGetResponse"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Policy Delete List by ListId - User level" id="385f1677-85fd-4694-a1cd-23f5daefe582"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PolicyDeleteListUserListId");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("policyListID",tC.getPropertyValue("policyListID"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="AccountGet_for_Acct_Delete" disabled="true" id="694f726f-b365-4e8c-8aab-c4de955b7341"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Account_Get_API");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("UserCount","2");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="AccountDelete" disabled="true" id="28944ab5-5ba7-426a-b169-323c2e92bb88"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:RLGET_DOWNLOAD_R3_EXAMPLE_ALIDVersion_611142.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_4.txt:AUDIO_Number_4</con:value></con:property><con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:RLGET_DOWNLOAD_R3_EXAMPLE_CIDVersion_611142.txt</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-06-01</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>FD20E8035D2E072FE0401F0A05993E6F</con:value></con:property><con:property><con:name>decodedNodeUserID</con:name><con:value>urn:dece:userid:org:dece:FD201440EAA009A0E0401F0A079938EB</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:FD20148786FFB8D8E0401F0A079938ED</con:value></con:property><con:property><con:name>discreteMediaTokenOid</con:name><con:value>FD20148786FFB8D8E0401F0A079938ED</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>errorRespTypeStreamView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"ED683B3F58B9BE51E0401F0A0799277A:81423F5A"</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>3710</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectErrTypeRTCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectStreamStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>FeedRTCReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FeedRTDReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FeedRTUReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property><con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFManifestLocPreference2</con:name><con:value>3</con:value></con:property><con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>headersCount</con:name><con:value>13</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>urn:dece:userid:org:dece:FD2502C3659A9A4FE0401F0A05990C58</con:value></con:property><con:property><con:name>LICAcqBaseLoc</con:name><con:value>ns3.google.com</con:value></con:property><con:property><con:name>ListGetResponse</con:name><con:value><![CDATA[<PolicyList PolicyListID="URN:DECE:POLICYLISTID:ORG:DECE:FD33C6EE189E8A3DE0401F0A07991802" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE189F8A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:ManageUserConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE18A48A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:UserLinkConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:FD33C6EE18A98A3DE0401F0A07991802">
      <PolicyClass>urn:dece:type:policy:UserDataUsageConsent</PolicyClass>
      <Resource>urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2014-07-02T09:52:15.000Z" CreatedBy="urn:dece:userid:org:dece:FD33C6EFA4CC1458E0401F0A0599103D">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>nickname</con:name><con:value>Raju</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:FD20EE9A82BB28E1E0401F0A07996DEE</con:value></con:property><con:property><con:name>NodeUserId</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE2518F78DBE57FCEE0401F0A0799731F</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:FD20EA2423926657E0401F0A05991779</con:value></con:property><con:property><con:name>nodeId</con:name><con:value>RET</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:FD20EE9A82BB28E1E0401F0A07996DEE</con:value></con:property><con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property><con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:FD20EA2423926657E0401F0A05991779</con:value></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value>transcation</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>UserDataUsageConsent</con:value></con:property><con:property><con:name>policyId</con:name><con:value>0602CDA74FC168DEE0530F991F0A5307</con:value></con:property><con:property><con:name>policyIdURL</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3A0602CDA74FC168DEE0530F991F0A5307</con:value></con:property><con:property><con:name>PolicyListGetResponse</con:name><con:value><![CDATA[<dece:Policy8C23" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:Policy PolicyID="urn:dece:policyid:org:dece:0602CD69A4C468ABE0530F991F0A8C23">
      <dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:accountid:org:dece:0602CDA9A18568E7E0530F991F0A8003</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:ISC_RET</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:role:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreationDate="2014-10-22T12:12:49.000Z" CreatedBy="urn:dece:userid:org:dece:0602CDAA8BBE68E5E0530F991F0AAE6E">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:value></con:property><con:property><con:name>policyListID</con:name><con:value>urn:dece:policylistid:org:dece:0602CD69A4C368ABE0530F991F0A8C23</con:value></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value>1</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property><con:property><con:name>RightsLockerID</con:name><con:value>urn:dece:rightslockerid:org:dece:FD20140E3B60F110E0401F0A079938E5</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  xmlns:ns4="http://www.decellc.org/schema/2013/10/coordinator"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="urn:dece:alid:file:RLGET_DOWNLOAD_R3_EXAMPLE_ALIDVersion_611142.txt" ContentID="urn:dece:cid:file:RLGET_DOWNLOAD_R3_EXAMPLE_CIDVersion_611142.txt"> 	<ns4:SoldAs> 		<ns4:DisplayName Language="en">Avatar BestBuy Special Packaging</ns4:DisplayName> 		<ns4:ContentID>urn:dece:cid:file:RLGET_DOWNLOAD_R3_EXAMPLE_CIDVersion_611142.txt</ns4:ContentID> 	</ns4:SoldAs> 	<ns4:RightsProfiles> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:pd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 	</ns4:RightsProfiles> 	<ns4:LicenseAcqBaseLoc>ns3.google.com</ns4:LicenseAcqBaseLoc> 	<ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/aaa</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/bbb</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/ccc</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/ddd</ns4:Location> 		<ns4:Preference>3</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:PurchaseInfo> 		<ns4:NodeID>urn:dece:org:org:dece:RET</ns4:NodeID> 		<ns4:RetailerTransaction>transcation</ns4:RetailerTransaction> 		<ns4:PurchaseAccount>urn:dece:accountid:org:dece:FD20EE9A82BB28E1E0401F0A07996DEE</ns4:PurchaseAccount> 		<ns4:PurchaseUser>urn:dece:userid:org:dece:FD20EA2423926657E0401F0A05991779</ns4:PurchaseUser> 		<ns4:PurchaseTime>2011-06-24T15:12:03.000</ns4:PurchaseTime> 	</ns4:PurchaseInfo> </ns4:RightsTokenData>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>2860</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<RightsTokenList RightsLockerID="urn:dece:rightslockerid:org:dece:FD20EE9A82C328E1E0401F0A07996DEE" AccountID="urn:dece:accountid:org:dece:FD20EE9A82BB28E1E0401F0A07996DEE" FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1" FilterMoreAvailable="false" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RightsToken RightsTokenID="urn:dece:rightstokenid:org:dece:FD20E8035D2E072FE0401F0A05993E6F">
      <RightsTokenDetails ALID="urn:dece:alid:file:RLGET_DOWNLOAD_R3_EXAMPLE_ALIDVersion_611142.txt" ContentID="urn:dece:cid:file:RLGET_DOWNLOAD_R3_EXAMPLE_CIDVersion_611142.txt" Language="en-US">
         <TitleDisplay60>title_1_61</TitleDisplay60>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/D6C3F1EC7EE02B3BE0401F0A0599737A</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/D6C3F1EC7EE12B3BE0401F0A0599737A</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/D6C3F1EC7EE32B3BE0401F0A0599737A</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/D6C3F1EC7EE22B3BE0401F0A0599737A</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/D6C3F1EC7EDF2B3BE0401F0A0599737A</ArtReference>
         <ArtReference>https://d1aa09tqol6rcr.cloudfront.net/uvvu-images/D6C3F1EC7EE42B3BE0401F0A0599737A</ArtReference>
         <Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</Summary190>
         <Genre>Fantasy</Genre>
         <Genre>Adventure</Genre>
         <Genre>Comedy</Genre>
         <Genre>Family</Genre>
         <Genre>Animation</Genre>
         <RunLength>P0Y0M0DT1H43M0.000S</RunLength>
         <WorkType>Movie</WorkType>
         <RatingSet>
            <ns2:Rating>
               <ns2:Region>
                  <ns2:countryRegion>NL</ns2:countryRegion>
                  <ns2:country>NL</ns2:country>
               </ns2:Region>
               <ns2:System>Kijkwijzer</ns2:System>
               <ns2:Value>AL</ns2:Value>
               <ns2:LinkToLogo>http://www.kijkwijzer.nl/</ns2:LinkToLogo>
            </ns2:Rating>
            <ns2:AdultContent>false</ns2:AdultContent>
         </RatingSet>
      </RightsTokenDetails>
   </RightsToken>
</RightsTokenList>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:FD20E8035D2E072FE0401F0A05993E6F</con:value></con:property><con:property><con:name>RRSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:retailer</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property><con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>0</con:value></con:property><con:property><con:name>SoldAsBundleID</con:name><con:value/></con:property><con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:RLGET_DOWNLOAD_R3_EXAMPLE_CIDVersion_611142.txt</con:value></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>FD2014792D74EBD8E0401F0A059902C0</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:FD2014792D74EBD8E0401F0A059902C0</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:basic</con:value></con:property><con:property><con:name>UserName</con:name><con:value>SanityFAU_20141022_1413980002983</con:value></con:property><con:property><con:name>UserName_FAU1</con:name><con:value>SanityFAU_20140602_1401688279493</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>993282f6-9376-4ef1-a63a-3c8080ed376d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d586b16a-25ab-42e7-843f-4615e6e5b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eceab473-b205-4123-8cc3-1e3b1cc51d7f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8328e7ca-1a6e-4e28-8384-b121130eac4d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a27182fe-500c-4e26-993d-4cb19e21c90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08854fcf-8c23-4d91-8cb0-6eeba6e67202</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2b06ca0-8a78-484a-8a80-4f7e90347f6d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>34ab57d8-3b8f-411e-8680-2321b8738d02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a1adeb6b-cdb1-4626-b4e7-f9e0a0183d3e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c979bfff-1f78-4e6b-8918-15c2b7a131cb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fba942a3-9a63-4ca6-8e70-bec8c08037e3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e2d6d738-2e6e-4dde-8f2a-8fc6336dfdda</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cdae7e2a-7170-419e-bc22-f1c923e6450b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e520e83-1683-4a8f-91d3-34704132b3e9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6e1923d8-174f-4cdd-8702-b982fd605089</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c842eac7-32fb-4374-b04d-65e623e4ed47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36a165e-6dec-497b-8e32-8d14e29ac632</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5fbd9f8-d908-4272-a96e-d6e1075dff9f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e85e3845-3c37-4d2b-a7f6-32e6eac909d1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a06bc5cf-ed3a-4713-9a46-01e229ded4f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33d662c5-cf68-4bf1-84e2-f61756fd6850</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30ea4dcd-d69f-40cc-aff4-684ac9d09922</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a8566bf-47ae-4e10-b320-bbf09c40408a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3614d810-6385-4bea-8a78-1828e0491451</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e43a6cd6-fe21-4849-a310-232733748b49</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58c8ec97-8bb8-4c33-bfc5-5e1f7d477b5f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>845d4575-df4d-4969-943a-069a58ea7c22</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>641277d0-cf83-4521-a8f0-dad925ecef57</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>654fb05c-12b8-410b-8094-6c16f0c3dc54</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>26ce0eb2-48e9-4166-b1b1-b2e8c578d365</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee29dc64-dc2a-43ef-8c8e-a0a8fe20bd0c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57100200-80ad-4429-b054-c9c5bc20096e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c9f42c9-23c7-4942-a8a7-14e703ea1943</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad2ebec4-c400-4d5b-afd9-f4de7bc063ef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>54e78513-d465-44df-8252-92ee0978500c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fee93a4e-4d19-4cb9-8c5e-a2a69a33cb81</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>37b32451-bdd1-4bf2-8926-976a7d1361b4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8fa0af99-986c-4e0e-b456-ab093d385bc0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0bcd18d2-e5a2-4bc0-9ce0-4d733266cc91</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>de4341f4-5493-487f-9230-f65f6a55948f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5868ed5-35fd-406e-b5a1-de87607471fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca9cafd2-27b4-4550-b9d4-a3db56428b1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7db88c19-231b-43f2-94b8-bb5b7c90387e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03fed95b-2b03-4be0-a370-b942c71565c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4f6f150c-c986-4c9b-8795-24c3fffc1d54</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53a36455-4e2e-4148-9dbf-f29ccf9ce76c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42a14792-4f3b-4f05-8b37-74efb90f0a0c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8c35398c-cf4a-4276-9009-bc1a841891b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>05ba3b8b-4eea-43cb-93b8-42183164ce14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd2f19ee-9734-4ad4-82bd-8de96980e012</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8b6a8a72-1aa0-433b-8b67-f6265ad665eb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a6da0346-f0a2-4bd7-b89b-d8fd8b2f810a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8f993e64-d8e3-4657-94e3-55c8a4adb005</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b192b610-7aac-4e72-b1d8-e500d4101128</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27660d2c-3527-45e6-b0a1-353bf6fbb000</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b9c578e9-0534-49db-860c-24cf71ccd8c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa59c7b6-e502-41a8-9d23-98a2a151e080</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7be529f-62d1-41c8-b7f4-16ab0ea0e434</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4905801a-966f-48ae-9cc6-fdba3dcf454a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>387ecece-6dee-46e5-840b-f3d3ff80981e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee51222c-116f-4ff0-9742-738402d2a150</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30818245-c276-47a8-be96-34ba02a04f43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>359849aa-8ffc-4248-a32b-f8d07b4d4f4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79239680-7c43-47af-921d-fd7b512acafe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237bfab2-0573-4191-8244-97d01999e52f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fee30217-c044-4be0-ace7-a7418f5218c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>89847499-adb5-4015-8748-6fa4b1b90982</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0aa447b-9084-4f1d-9208-8532900c744a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce202508-1f69-4df9-a800-855eb1c3e279</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a3727d3-5d31-4d4e-8855-4bcdcfa4fcdb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>caa27362-f0a8-47ac-9e41-9930a7b160d5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b201f987-2f4b-4917-a114-b3bfb2d637ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa3d5c01-2a57-4835-b12c-b559c4b601af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3817c3b6-ea4f-49a6-9794-81daa434d9a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db0cc208-5d6d-403f-9145-9823e2d477f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>04ab471d-a06d-46d7-a01f-accc40b0bf59</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>569b0b2c-13dd-4b15-814b-2b5e7d71128a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f0325f93-5ed4-47a6-a37e-1e4942969608</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>23ea017c-e59d-434a-8878-0cf5fcd5754c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3c15292d-5043-4a53-bd78-705045cb7da1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0f92aac-134b-4c5c-a392-868370776c6f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>279a6e58-1705-4d37-85c7-872c9c2ccb34</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a9048c1-6888-4197-8fe9-5c515f5cd591</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ec83d703-da31-4486-a5fa-28abe01cfe3b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a9ca882d-21b9-4d25-8d6a-b714ac1e6a50</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6c6838a9-62c0-40ba-bd4d-654714cbebbf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cedfab02-55ad-4f6f-9fcb-ae71f44731f0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad58cc02-a3df-41c9-9281-26f1452234a2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6c6a79a6-0809-4c80-881f-9f93f4934e06</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4bd69546-7fc8-48be-ae8f-8b5842c31a5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd9804ab-f5ce-4ae2-b4fa-c454244a38e1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>21bb6d2d-7ea9-4cf2-8d06-bffc5e3c814f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4146782-f78f-403b-ac0a-ea1fee908d52</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>317cdaa0-7e94-4d21-944c-eca7711dc07c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b4c8abf7-2ea1-41ca-9953-e0b80b0feb69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6e5e640b-c6d9-4edb-bc48-ebf9f76751c9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>56047016-3afd-4319-9916-ed5770c2cab3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7b19f3bb-b5f8-4eb8-9207-f0958d92b91b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7801c9ce-9ca1-4dda-8206-bde874b023d0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4d7241f6-227c-4827-9e99-83c0b842350e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a45abd79-906b-4f64-b163-5f8df18c0039</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>66f669f1-a111-4061-bb08-22cbb6b266bc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBasicCreate-11" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d6c569d5-6e23-4ce9-985c-f25ec64e97db"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="7991c0f6-40a1-4042-945e-61952ea55350"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="42e29a1b-2b64-4f92-8bb6-fe24bee537ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("EncodedValueOfSpecialSymbols",callTC.getPropertyValue("EncodedValueOfSpecialSymbols"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true" id="054702c7-5298-4734-8512-8f067431fca6"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="49dc09fc-e0df-4b24-90b8-3a68013bf1a5"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate" id="b3cd383e-e7ee-4149-a9d2-93de512fed59"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="77b6fb3c-bcfc-40c6-ad30-8d3ca40d0c8a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="discardResponse">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xmlns:dece="${#Project#Coordinator_Schema}" xmlns:md="${#Project#md_schema}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} Coordinator-1.1.1-draft-20131021.xsd ">
<dece:BasicData ContentID="${#TestCase#CID}">
<md:UpdateNum>5</md:UpdateNum>
<md:LocalizedInfo default="true" language="EN">
<md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
<md:TitleDisplay60>A Beautiful Mind</md:TitleDisplay60>
<md:TitleDisplayUnlimited>Infinities and indivisibles transcend our finite understanding, the former on account of their magnitude, the latter because of their smallness; Imagine what they are when combined.
- Galileo Galilei</md:TitleDisplayUnlimited>
<md:TitleSort>Smurfs, The</md:TitleSort>
<md:ArtReference resolution="800x1200">http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200.jpg</md:ArtReference>
<md:Summary190 cast="true">When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</md:Summary190>
<md:Summary400 cast="true">When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</md:Summary400>
<md:Summary4000 cast="true">When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.0</md:Summary4000>
<md:DisplayIndicators>CC</md:DisplayIndicators>
<md:Genre id="1" level="0" source="">Comedy</md:Genre>
<md:Keyword>md:Keyword</md:Keyword>
<md:VersionNotes>md:VersionNotes</md:VersionNotes>
<md:Region>
<md:country>US</md:country>
</md:Region>
<md:OriginalTitle>The Smurf</md:OriginalTitle>
<md:CopyrightLine>Sony</md:CopyrightLine>
<md:PeopleLocal>
<md:Job>
<md:JobFunction scheme="">JobFunction</md:JobFunction>
<md:JobDisplay language="EN">JobDisplay</md:JobDisplay>
<md:BillingBlockOrder>11</md:BillingBlockOrder>
<md:Character>Character</md:Character>
<md:Guest>true</md:Guest>
</md:Job>
<md:Name>
<md:DisplayName language="EN">DisplayName</md:DisplayName>
<md:SortName language="EN">SortName</md:SortName>
<md:FirstGivenName>FirstGivenName</md:FirstGivenName>
<md:SecondGivenName>SecondGivenName</md:SecondGivenName>
<md:FamilyName>FamilyName</md:FamilyName>
<md:Suffix>Suffix</md:Suffix>
<md:Moniker>Moniker</md:Moniker>
</md:Name>
<md:Identifier>
<md:Identifier>Identifier</md:Identifier>
<md:Namespace>Namespace</md:Namespace>
<md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
</md:Identifier>
<md:Gender>male</md:Gender>
</md:PeopleLocal>
<md:TitleAlternate language="EN" type="">TitleAlternate</md:TitleAlternate>
</md:LocalizedInfo>
<md:RunLength>PT1H43M0.000S</md:RunLength>
<md:ReleaseYear>2001</md:ReleaseYear>
<md:ReleaseDate>2013-07-28</md:ReleaseDate>
<md:ReleaseHistory>
<md:ReleaseType wide="true">ReleaseType</md:ReleaseType>
<md:DistrTerritory>
<md:country>FR</md:country>
</md:DistrTerritory>
<md:Date scheduled="true">2011-07-28</md:Date>
<md:Description>Description</md:Description>
<md:ReleaseOrg idType="IdType-123" organizationID="xyz890" >
<md:DisplayName>DisplayName</md:DisplayName>
<md:SortName>SortName</md:SortName>
<md:AlternateName>AlternateNameString1</md:AlternateName>
<md:AlternateName>AlternateNameString2</md:AlternateName>
<md:AlternateName>AlternateNameString3</md:AlternateName>
</md:ReleaseOrg>
</md:ReleaseHistory>
<md:WorkType>Movie</md:WorkType>
<md:WorkTypeDetail>String1</md:WorkTypeDetail>
<md:PictureColorType>color</md:PictureColorType>
<md:PictureFormat>PictureFormat</md:PictureFormat>
<md:ThreeD>true</md:ThreeD>
<md:AspectRatio>String</md:AspectRatio>
<md:AltIdentifier>
<md:Namespace>Namespace</md:Namespace>
<md:Identifier>Identifier</md:Identifier>
<md:Location>http://tempuri.org</md:Location>
</md:AltIdentifier>
<md:RatingSet>
<md:NotRated condition="">true</md:NotRated>
<md:AdultContent>true</md:AdultContent>
</md:RatingSet>
<md:People>
<md:Job>
<md:JobFunction scheme="">JobFunction</md:JobFunction>
<md:JobDisplay language="EN">JobDisplay</md:JobDisplay>
<md:BillingBlockOrder>11</md:BillingBlockOrder>
<md:Character>Character</md:Character>
<md:Guest>true</md:Guest>
</md:Job>
<md:Name>
<md:DisplayName language="EN">DisplayName</md:DisplayName>
<md:SortName language="EN">SortName</md:SortName>
<md:FirstGivenName>FirstGivenName</md:FirstGivenName>
<md:SecondGivenName>SecondGivenName</md:SecondGivenName>
<md:FamilyName>FamilyName</md:FamilyName>
<md:Suffix>Suffix</md:Suffix>
<md:Moniker>Moniker</md:Moniker>
</md:Name>
<md:Identifier>
<md:Identifier>Identifier</md:Identifier>
<md:Namespace>Namespace</md:Namespace>
<md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
</md:Identifier>
<md:Gender>male</md:Gender>
</md:People>
<md:CountryOfOrigin>
<md:country>US</md:country>
</md:CountryOfOrigin>
<md:PrimarySpokenLanguage>EN</md:PrimarySpokenLanguage>
<md:OriginalLanguage>Us-en</md:OriginalLanguage>
<md:VersionLanguage>Fr</md:VersionLanguage>
<md:AssociatedOrg idType="abcd-1234" organizationID="xyz-890" role="String">
<md:DisplayName>DisplayName</md:DisplayName>
<md:SortName>SortName</md:SortName>
<md:AlternateName>AlternateNameString</md:AlternateName>
</md:AssociatedOrg>
<md:SequenceInfo>
<md:Number>5</md:Number>
<md:DistributionNumber domain="Domain-123">123</md:DistributionNumber>
<md:HouseSequence domain="Domain-456">House987</md:HouseSequence>
<md:AlternateNumber domain="Domain-345">AlterNo234</md:AlternateNumber>
</md:SequenceInfo>
<md:Parent relationshipType="ispieceof">
<md:Parent
ContentID="urn:dece:cid:ORG:mystudio6:${#TestCase#RandomNumberGenerated}">
<md:LocalizedInfo language="en-US">
<md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
<md:TitleDisplay60>String</md:TitleDisplay60>
<md:TitleSort>s</md:TitleSort>
<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
<md:Summary190>s</md:Summary190>
<md:Summary400 cast="true">String</md:Summary400>
<md:OriginalTitle>s</md:OriginalTitle>
<md:CopyrightLine>String</md:CopyrightLine>
</md:LocalizedInfo>
<md:RunLength>PT2H5M</md:RunLength>
<md:ReleaseYear>2001</md:ReleaseYear>
<md:WorkType>Album</md:WorkType>
</md:Parent>
</md:Parent>
</dece:BasicData>

</dece:BasicAsset>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Metadata/Basic</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="73bee7be-f80a-41f4-8b3c-79a4ac2339d8"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 202 Accepted")</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="761ea841-35bb-4812-98ef-cf4a3147f653"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" disabled="true" id="55d864de-acf5-4d4d-ae90-f9af4439b066"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Create CID-APID-ALID</con:value></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>295873655</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Create Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>checkdigit</con:name><con:value/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>EncodedValueOfSpecialSymbols</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBasicCreate-07" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="303e2f30-6f77-4806-b5d9-509a40b0f4d6"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="35b58a32-b9b5-444d-ad77-4446a4ddbc21"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="a0dddaed-d20c-4b95-816b-b25ddca99d07"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("EncodedValueOfSpecialSymbols",callTC.getPropertyValue("EncodedValueOfSpecialSymbols"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true" id="3c1fe7b2-8f6f-4f3b-b3ed-554a35c2aa03"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="ec5cabb4-c920-4ae1-b771-c582b88bff82"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBasicCreate" id="d156cf6a-f514-4bd0-890a-c13b446a34c3"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="POST MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="686df106-b120-4d00-aaad-c3062ff0e18f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="discardResponse">false</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">true</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<BasicAsset xmlns:ns2="${#Project#md_schema}" xmlns="${#Project#Coordinator_Schema}" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#">
    <BasicData ContentID="${#TestCase#CID}">
        <ns2:UpdateNum>8</ns2:UpdateNum>
        <ns2:LocalizedInfo default="true" language="en-US">
            <ns2:TitleDisplay19>Spider Man</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>A Beautiful Mind</ns2:TitleDisplay60>
            <ns2:TitleSort>Smurfs, The</ns2:TitleSort>
            
    <ns2:ArtReference resolution="800x1200">http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200.jpg</ns2:ArtReference>
    

            <ns2:Summary190>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours.</ns2:Summary190>
            <ns2:Summary400>When the evil wizard Gargamel chases the tiny blue Smurfs out of their village, they tumble from their magical world and into ours -- in fact, smack dab in the middle of Central Park. Just three apples high and stuck in the Big Apple, the Smurfs must find a way to get back to their village before Gargamel tracks them down.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:LocalizedInfo default="false" language="de">
            <ns2:TitleDisplay19>Die Schlümpfe</ns2:TitleDisplay19>
            <ns2:TitleDisplay60>Die Schlümpfe</ns2:TitleDisplay60>
            <ns2:TitleSort>Schlümpfe, Die</ns2:TitleSort>
            <ns2:ArtReference resolution="800x1200">http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200.jpg</ns2:ArtReference>
            <ns2:Summary190>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York.</ns2:Summary190>
            <ns2:Summary400>Die Schlümpfe verlassen ihre magische Welt &amp; erobern den Großstadt-Dschungel New York. Gejagt vom bösen Zauberer Gargamel müssen sie ein schlumpfiges Abenteuer bestehen.</ns2:Summary400>
            <ns2:Genre>Comedy</ns2:Genre>
            <ns2:Genre>Adventure</ns2:Genre>
            <ns2:Genre>Animation</ns2:Genre>
            <ns2:Genre>Fantasy</ns2:Genre>
            <ns2:Genre>Family</ns2:Genre>
            <ns2:VersionNotes>---</ns2:VersionNotes>
            <ns2:OriginalTitle>The Smurfs</ns2:OriginalTitle>
            <ns2:CopyrightLine>Sony</ns2:CopyrightLine>
        </ns2:LocalizedInfo>
        <ns2:RunLength>PT1H43M0.000S</ns2:RunLength>
        <ns2:ReleaseYear>2010</ns2:ReleaseYear>
        <ns2:ReleaseDate>2011-07-28</ns2:ReleaseDate>
        <ns2:ReleaseHistory>
            <ns2:ReleaseType>Premiere</ns2:ReleaseType>
            <ns2:Date scheduled="false">2011-07-28T10:10:10Z</ns2:Date>
        </ns2:ReleaseHistory>
        <ns2:WorkType>Movie</ns2:WorkType>
        <ns2:RatingSet>
            <ns2:Rating>
                <ns2:Region>
                    <ns2:country>US</ns2:country>
                </ns2:Region>
                <ns2:System>ALL</ns2:System>
                <ns2:Value>Exempt</ns2:Value>
            </ns2:Rating>
        </ns2:RatingSet>
    </BasicData>

</BasicAsset>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="56ee12e3-8f8e-4082-9933-f134605fffa2"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 202 Accepted")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="706c8046-57a2-4363-b8a3-241df673cffe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" disabled="true" id="67931a79-0c66-4c99-a388-1a8dda008191"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>261202580</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Create Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_261202580.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_261202580.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>checkdigit</con:name><con:value/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/CON_concat.pem</con:value></con:property><con:property><con:name>EncodedValueOfSpecialSymbols</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBasicUpdate-11" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c9fbdd2e-f624-4cac-8fcc-bbc29c294688"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="c99e0889-1dd7-408b-8c08-a54f0947ef94"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="2edb284a-22a3-4962-9097-a2b139c86931"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("EncodedValueOfSpecialSymbols",callTC.getPropertyValue("EncodedValueOfSpecialSymbols"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true" id="765e8938-baa9-4196-9249-f154ff4bf47f"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="cacc4e44-5cac-4843-bcf3-84538c03dfb2"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicCreate" id="734f9c28-7a64-4f94-99b7-fd730b105db5"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" methodName="PUT MetadataBasic" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" sslKeystore="CON_concat.pem" id="d85c1475-fc69-4b21-814c-a29415c24c24"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:BasicData ContentID="${#TestCase#CID}">
    <md:UpdateNum>76</md:UpdateNum>
    <md:LocalizedInfo default="true" language="en">
      <md:TitleDisplay19>TitleDisplay19</md:TitleDisplay19>
      <md:TitleDisplay60>md:TitleDisplay60_Update</md:TitleDisplay60>
      <md:TitleDisplayUnlimited>md:TitleDisplayUnlimited</md:TitleDisplayUnlimited>
      <md:TitleSort>md:TitleSort</md:TitleSort>
      <md:ArtReference resolution="800x1200">http://upload.wikimedia.org/wikipedia/commons/5/5d/City_Hall_in_Slupsk_MG_4151_800x1200.jpg</md:ArtReference>
      
      <md:Summary190 cast="true">md:Summary190</md:Summary190>
      <md:Summary400 cast="true">md:Summary400</md:Summary400>
      <md:Summary4000 cast="true">md:Summary4000</md:Summary4000>
      <md:DisplayIndicators>CC</md:DisplayIndicators>
      <md:Genre id="" level="0" source="http://tempuri.org">md:Genre</md:Genre>
      <md:Keyword>md:Keyword</md:Keyword>
      <md:VersionNotes>md:VersionNotes</md:VersionNotes>
      <md:Region>
        <md:country>US</md:country>
      </md:Region>
            <md:OriginalTitle>Spider Man</md:OriginalTitle>
      <md:CopyrightLine>Spider Man</md:CopyrightLine>
      <md:PeopleLocal>
        <md:Job>
          <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
          <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
          <md:BillingBlockOrder>0</md:BillingBlockOrder>
          <md:Character>md:Character</md:Character>
          <md:Guest>true</md:Guest>
        </md:Job>
        <md:Name>
          <md:DisplayName language="en">md:DisplayName</md:DisplayName>
          <md:SortName language="en">md:SortName</md:SortName>
          <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
          <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
          <md:FamilyName>md:FamilyName</md:FamilyName>
          <md:Suffix>md:Suffix</md:Suffix>
          <md:Moniker>md:Moniker</md:Moniker>
        </md:Name>
        <md:Identifier>
          <md:Identifier>md:Identifier</md:Identifier>
          <md:Namespace>md:Namespace</md:Namespace>
          <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
        </md:Identifier>
        <md:Gender>male</md:Gender>
      </md:PeopleLocal>
      <md:TitleAlternate language="en" type="">md:TitleAlternate</md:TitleAlternate>
    </md:LocalizedInfo>
    <md:RunLength>PT1H43M0.000S</md:RunLength>
    <md:ReleaseYear>2001</md:ReleaseYear>
    <md:ReleaseDate>2011-07-28T10:00:00Z</md:ReleaseDate>
    <md:ReleaseHistory>
      <md:ReleaseType wide="true">md:ReleaseType</md:ReleaseType>
      <md:DistrTerritory>
        <md:country>US</md:country>
      </md:DistrTerritory>
      <md:Date scheduled="true">2011-07-28T10:00:00Z</md:Date>
      <md:Description>md:Description</md:Description>
      <md:ReleaseOrg organizationID="">
        <md:DisplayName>md:DisplayName</md:DisplayName>
        <md:SortName>md:SortName</md:SortName>
      </md:ReleaseOrg>
    </md:ReleaseHistory>
    <md:WorkType>Movie</md:WorkType>
    <md:PictureColorType>color</md:PictureColorType>
    <md:PictureFormat>md:PictureFormat</md:PictureFormat>
    <md:ThreeD>true</md:ThreeD>
    <md:AltIdentifier>
      <md:Namespace>md:Namespace</md:Namespace>
      <md:Identifier>md:Identifier</md:Identifier>
      <md:Location>http://tempuri.org</md:Location>
    </md:AltIdentifier>
    <md:RatingSet>
      <md:NotRated condition="">true</md:NotRated>
      <md:AdultContent>true</md:AdultContent>
    </md:RatingSet>
    <md:People>
      <md:Job>
        <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
        <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
        <md:BillingBlockOrder>0</md:BillingBlockOrder>
        <md:Character>md:Character</md:Character>
        <md:Guest>true</md:Guest>
      </md:Job>
      <md:Name>
        <md:DisplayName language="en">md:DisplayName</md:DisplayName>
        <md:SortName language="en">md:SortName</md:SortName>
        <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
        <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
        <md:FamilyName>md:FamilyName</md:FamilyName>
        <md:Suffix>md:Suffix</md:Suffix>
        <md:Moniker>md:Moniker</md:Moniker>
      </md:Name>
      <md:Identifier>
        <md:Identifier>md:Identifier</md:Identifier>
        <md:Namespace>md:Namespace</md:Namespace>
        <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
      </md:Identifier>
      <md:Gender>male</md:Gender>
    </md:People>
    <md:CountryOfOrigin>
      <md:country>US</md:country>
    </md:CountryOfOrigin>
    <md:PrimarySpokenLanguage>en</md:PrimarySpokenLanguage>
    <md:AssociatedOrg organizationID="" role="">
      <md:DisplayName>md:DisplayName</md:DisplayName>
      <md:SortName>md:SortName</md:SortName>
    </md:AssociatedOrg>
    <md:SequenceInfo>
      <md:Number>0</md:Number>
      <md:HouseSequence>md:HouseSequence</md:HouseSequence>
    </md:SequenceInfo>
    
  </dece:BasicData>
 
</dece:BasicAsset>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_467084343.txt</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="6efecc9b-5e1c-47e4-9bf7-b33c4e63f49c"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 202 Accepted")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="0a4022f3-8660-4d56-b7fc-f87cedaa39fc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" disabled="true" id="977b1641-a652-4e75-8d88-211763422090"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>3543</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://lp3.qa-web-vip2-s02.uvvu.com:7003/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>589099830</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_96x144.jpg</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_192x288.jpg</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_840x1200.jpg</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_224x320.jpg</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_112x160.jpg</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200.jpg</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>EncodedValueOfSpecialSymbols</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBasicUpdate-07" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="097973e7-7883-465d-86a1-ab9e43d4b2d8"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="061f772d-e6c9-4d99-9959-28a236f48f82"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="d4fae955-3970-4e8d-a4b8-3e2617f3811e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("EncodedValueOfSpecialSymbols",callTC.getPropertyValue("EncodedValueOfSpecialSymbols"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true" id="015f8015-1c8b-40bd-832d-795ddc90158e"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="5036028e-411c-4c0b-a81a-d1e16e2c1860"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataBasicCreate" id="7f94befc-6d70-4b46-b04e-2d9b516a0461"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" methodName="PUT MetadataBasic" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" sslKeystore="CON_concat.pem" id="551f6333-70ce-44a3-ab04-9df339b51bfd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:BasicAsset xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:BasicData ContentID="${#TestCase#CID}">
    <md:UpdateNum>70</md:UpdateNum>
    <md:LocalizedInfo default="true" language="en">
      <md:TitleDisplay19>Spider Man</md:TitleDisplay19>
      <md:TitleDisplay60>md:TitleDisplay60_Update</md:TitleDisplay60>
      <md:TitleDisplayUnlimited>md:TitleDisplayUnlimited</md:TitleDisplayUnlimited>
      <md:TitleSort>md:TitleSort</md:TitleSort>
      <md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
      
      <md:Summary190 cast="true">md:Summary190</md:Summary190>
      <md:Summary400 cast="true">md:Summary400</md:Summary400>
      <md:Summary4000 cast="true">md:Summary4000</md:Summary4000>
      <md:DisplayIndicators>CC</md:DisplayIndicators>
      <md:Genre id="" level="0" source="http://tempuri.org">md:Genre</md:Genre>
      <md:Keyword>md:Keyword</md:Keyword>
      <md:VersionNotes>md:VersionNotes</md:VersionNotes>
      <md:Region>
        <md:country>US</md:country>
      </md:Region>
      <md:OriginalTitle>Spider Man</md:OriginalTitle>
      <md:CopyrightLine>Spider Man</md:CopyrightLine>
      <md:PeopleLocal>
        <md:Job>
          <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
          <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
          <md:BillingBlockOrder>0</md:BillingBlockOrder>
          <md:Character>md:Character</md:Character>
          <md:Guest>true</md:Guest>
        </md:Job>
        <md:Name>
          <md:DisplayName language="en">md:DisplayName</md:DisplayName>
          <md:SortName language="en">md:SortName</md:SortName>
          <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
          <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
          <md:FamilyName>md:FamilyName</md:FamilyName>
          <md:Suffix>md:Suffix</md:Suffix>
          <md:Moniker>md:Moniker</md:Moniker>
        </md:Name>
        <md:Identifier>
          <md:Identifier>md:Identifier</md:Identifier>
          <md:Namespace>Namespace</md:Namespace>
          <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
        </md:Identifier>
        <md:Gender>male</md:Gender>
      </md:PeopleLocal>
      <md:TitleAlternate language="en" type="">md:TitleAlternate</md:TitleAlternate>
    </md:LocalizedInfo>
    <md:RunLength>PT1H43M0.000S</md:RunLength>
    <md:ReleaseYear>2001</md:ReleaseYear>
    <md:ReleaseDate>2011-07-28T10:00:00Z</md:ReleaseDate>
    <md:ReleaseHistory>
      <md:ReleaseType wide="true">md:ReleaseType</md:ReleaseType>
      <md:DistrTerritory>
        <md:country>US</md:country>
      </md:DistrTerritory>
      <md:Date scheduled="true">2011-07-28T10:00:00Z</md:Date>
      <md:Description>md:Description</md:Description>
      <md:ReleaseOrg organizationID="">
        <md:DisplayName>md:DisplayName</md:DisplayName>
        <md:SortName>md:SortName</md:SortName>
      </md:ReleaseOrg>
    </md:ReleaseHistory>
    <md:WorkType>Movie</md:WorkType>
    <md:PictureColorType>color</md:PictureColorType>
    <md:PictureFormat>md:PictureFormat</md:PictureFormat>
    <md:ThreeD>true</md:ThreeD>
    <md:AltIdentifier>
      <md:Namespace>md:Namespace</md:Namespace>
      <md:Identifier>md:Identifier</md:Identifier>
      <md:Location>http://tempuri.org</md:Location>
    </md:AltIdentifier>
    <md:RatingSet>
      <md:NotRated condition="">true</md:NotRated>
      <md:AdultContent>true</md:AdultContent>
    </md:RatingSet>
    <md:People>
      <md:Job>
        <md:JobFunction scheme="">md:JobFunction</md:JobFunction>
        <md:JobDisplay language="en">md:JobDisplay</md:JobDisplay>
        <md:BillingBlockOrder>0</md:BillingBlockOrder>
        <md:Character>md:Character</md:Character>
        <md:Guest>true</md:Guest>
      </md:Job>
      <md:Name>
        <md:DisplayName language="en">md:DisplayName</md:DisplayName>
        <md:SortName language="en">md:SortName</md:SortName>
        <md:FirstGivenName>md:FirstGivenName</md:FirstGivenName>
        <md:SecondGivenName>md:SecondGivenName</md:SecondGivenName>
        <md:FamilyName>md:FamilyName</md:FamilyName>
        <md:Suffix>md:Suffix</md:Suffix>
        <md:Moniker>md:Moniker</md:Moniker>
      </md:Name>
      <md:Identifier>
        <md:Identifier>md:Identifier</md:Identifier>
        <md:Namespace>md:Namespace</md:Namespace>
        <md:ReferenceLocation>http://tempuri.org</md:ReferenceLocation>
      </md:Identifier>
      <md:Gender>male</md:Gender>
    </md:People>
    <md:CountryOfOrigin>
      <md:country>US</md:country>
    </md:CountryOfOrigin>
    <md:PrimarySpokenLanguage>en</md:PrimarySpokenLanguage>
    <md:AssociatedOrg organizationID="" role="">
      <md:DisplayName>md:DisplayName</md:DisplayName>
      <md:SortName>md:SortName</md:SortName>
    </md:AssociatedOrg>
    <md:SequenceInfo>
      <md:Number>0</md:Number>
      <md:HouseSequence>md:HouseSequence</md:HouseSequence>
    </md:SequenceInfo>
    
  </dece:BasicData>
 
</dece:BasicAsset>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5336463f-d58b-4864-90b3-bea5439fc858"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 202 Accepted")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="339a3232-d53e-4ec8-a22f-019db1dc9bc9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" disabled="true" id="0891eca6-a234-4c32-a8e3-2b44812b5925"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_102894147.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>98</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_102894147.txt</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 202 Accepted</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>102894147</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Update Request has been accepted for processing, but the processing has not been completed</con:value></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/CON_concat.pem</con:value></con:property><con:property><con:name>EncodedValueOfSpecialSymbols</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBasicGet" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0128629a-1b62-4a76-8cae-3b5fa68f5a52"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="f386c6a8-4147-47ce-9053-3ec5605faa5d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="510f8ade-aebf-4a7e-ba50-f8f6f1e5c6bb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("EncodedValueOfSpecialSymbols",callTC.getPropertyValue("EncodedValueOfSpecialSymbols"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true" id="46af007d-6c58-470c-924b-44c7bf551f87"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="ed0ef394-8cb4-4c21-8e60-55530ccb8ecf"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("REST Test Request");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="REST Test Request" id="414870e7-c3a5-4841-a07d-6429581fe7ce"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" methodName="GET MetadataBasic" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="REST Test Request" mediaType="application/xml" sslKeystore="CON_concat.pem" accept="" id="653f8b9b-fe96-4950-99e8-9ac3aad3e5ca"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_467084343.txt</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="6a9f95f3-b9b7-4765-9d56-1cb532edacb5"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataBasicCreate" id="3690d165-562a-4e13-8fe7-da732fb74b5f"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" methodName="GET MetadataBasic" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataBasicCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="3a1cc53b-07eb-40c3-a80c-8aeab55e2d0a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_467084343.txt</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="ce22ce04-52a7-4ecc-af58-803644e87acc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;

	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="c026709d-f400-4dc8-b0c4-3adf866fa357"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag" id="c832e153-e88b-45a2-b227-4fa2312411e9"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="106096f0-21ff-4b09-bbad-b0b7c3ad5b24"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBundleCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="9fedda48-aada-45d6-b4fd-017388bd95ff"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Validating -Body is null or not of get" id="5893ede2-b746-428c-bf25-c52a9d50fc92"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBasicCreate');
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if ( httpStatus  == 'HTTP/1.1 200 OK' )
{
//def responseAsXml = context.expand( '${GET - MapAPIDtoALIDCreate#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]}' )
def responseAsXml = tStep.httpRequest.response.getResponseContent();
def xml = new XmlSlurper().parseText(responseAsXml);
log.info xml.toString();

if (xml == "" )
{
		assert 1==2
}
}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>589099830</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_96x144.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_840x1200.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_192x288.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_112x160.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_224x320.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3543</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>UpdateNum</con:name><con:value>8</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0664D42407A45276E0530B345B0A1D04:651D8F7A"</con:value></con:property><con:property><con:name>Expires</con:name><con:value>Tue, 28 Oct 2014 09:24:54 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Mon, 27 Oct 2014 09:23:59 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1414401894 VE4PZgpbMo0AAGLyP28AAAAR urn:dece:org:org:dece:iot:soapui:contentprovider 10.91.50.141</con:value></con:property><con:property><con:name>Vary</con:name><con:value>Accept-Encoding</con:value></con:property><con:property><con:name>EncodedValueOfSpecialSymbols</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>0ddd1350-4382-42e4-a869-8a27e0f802c0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>29905f36-7c34-4c29-98c0-d0fe20b01942</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBasicDelete" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f58890be-eaa7-498e-a6b0-d86abd6df2a6"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="4a9e60ae-5335-4023-911d-dd52193f29df"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="172b66df-f215-4ed8-9d69-413e65de24ea"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
tC.setPropertyValue("EncodedValueOfSpecialSymbols",callTC.getPropertyValue("EncodedValueOfSpecialSymbols"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script RandomUpperLowerCase" disabled="true" id="caede899-6b8f-4c83-a705-f2547b227218"><con:settings/><con:config><script>import generalUtils.generalUtils;

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();


myGeneralUtils = new generalUtils(log);

//x = "abcd:ef:ghij";
x=tC.getPropertyValue("randomUpperLowerURN");

y = myGeneralUtils.randomizeStringCase(x);

tC.setPropertyValue("randomUpperLowerURN_ReturnValue", y);

 log.info "randomUpperLowerURN_ReturnValue is " + tC.getPropertyValue("randomUpperLowerURN_ReturnValue");
 </script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="4dc9fcd9-5e89-470e-8da0-3b33f4a5b6eb"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("DELETE-MetadataBasicCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE-MetadataBasicCreate" id="43f14025-58b0-4008-bf6d-7cc746270a7d"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/${#TestCase#CID_GET_DELETE}" methodName="DELETE MetadataBasic-1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE-MetadataBasicCreate" mediaType="application/json" sslKeystore="truststore-test-node-content-provider.jks" id="868a0af4-c8ff-49bc-8e8f-3e184f4774c1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Metadata/Basic/urn:dece:cid:file:A_File_Name_with_NUMBERS_360900162.txt</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="f7584611-040e-4ca2-8d41-de77e74eb9ce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE-MetadataBasicCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="b2e6eafb-2052-4c70-954d-e41617403bdc"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeDelete");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>245669567</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">MdBasic Delete Request has Processed Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">49</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_245669567.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/truststore-test-node-content-provider.jks</con:value></con:property><con:property><con:name>EncodedValueOfSpecialSymbols</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataDigitalCreate-07" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="84f86298-2edd-438c-a8ec-3e0065097350"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="8f02f0e8-4d3f-445c-8dfb-10a3003673f4"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="14d358a4-0fcd-4e11-86ca-d4a3706ccc68"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="43f2c765-275f-4da5-827f-3db8e4c20774"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataDigitalCreate" id="44992c08-8230-4a35-afad-65ac6a6cf81f"><con:settings/><con:config service="MetadataDigitalCreate_CTP" methodName="POST MetadataBasicPhysicalCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataDigitalCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="9870248e-8f46-4052-8fd4-0de28e0bac12"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!--
Sample XML file generated by XMLSpy v2009 sp1 (http://www.altova.com)
-->
<dece:DigitalAsset
APID="${#TestCase#APID}"
UpdateNum="1" ContentID="${#TestCase#CID}"
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd"
xmlns:dece="${#Project#Coordinator_Schema}"
xmlns:md="${#Project#md_schema}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Audio>
<md:Description>String1</md:Description>
<md:Type>String2</md:Type>
<md:Encoding>
<md:Codec>String3</md:Codec>
<md:CodecType>String4</md:CodecType>
<md:BitrateMax>11</md:BitrateMax>
<md:SampleRate>22</md:SampleRate>
<md:SampleBitDepth>33</md:SampleBitDepth>
</md:Encoding>
<md:Language dubbed="true">en-US</md:Language>
<md:Channels>String5</md:Channels>
<md:TrackReference>String6</md:TrackReference>
</dece:Audio>
</dece:DigitalAsset>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="94d7518d-fd9e-4b17-8acb-5e66c3f0cda4"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 201 Created")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="9bdcbf30-faad-4510-9ef5-8fae0a327d04"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataDigitalCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="df2d842c-2c76-4393-bdb1-02b970221367"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A366875753</con:value></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_997717078.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>200</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>34</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A366875753</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/CON_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>366875753</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value>Digital Asset Created Successfully</con:value></con:property><con:property><con:name>DMPID</con:name><con:value>urn:dece:dmpid:file:AUDIO_MetadataDigitalCreate.txt:563767279</con:value></con:property><con:property><con:name>PRESENTATIONID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataDigitalCreate-11" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5f22a91a-75e2-478a-98c0-4efd15b296f4"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="c2580207-367e-4deb-9949-8c375d29471e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="3679d209-4299-4d16-a4a7-d4a5518fdb10"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="8f18f37d-75ac-4988-825b-add25c0273eb"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataDigitalCreate" id="d9158bd7-8d31-491b-a53f-b71a916a5e98"><con:settings/><con:config service="MetadataDigitalCreate_CTP" methodName="POST MetadataBasicPhysicalCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataDigitalCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="b9c397a8-f23c-47fe-9f21-98362f441af5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:DigitalAsset
APID="${#TestCase#APID}"
UpdateNum="1" ContentID="${#Project#CID}"
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd"
xmlns:dece="${#Project#Coordinator_Schema}"
xmlns:md="${#Project#md_schema}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Audio>
<md:Description>Do you have any extraneous characters after the closing tag</md:Description>
<md:Type>Type</md:Type>
<md:Encoding>
<md:Codec>Codec</md:Codec>
<md:CodecType>CodecType</md:CodecType>
<md:BitrateMax>10</md:BitrateMax>
<md:BitrateAverage>11</md:BitrateAverage>
<md:VBR>VBR</md:VBR>
<md:SampleRate>55</md:SampleRate>
<md:SampleBitDepth>22</md:SampleBitDepth>
<md:ChannelMapping>ChannelMapping</md:ChannelMapping>
<md:Watermark guaranteedAbsent="true">
<md:Vendor>Vendor</md:Vendor>
<md:ProductAndVersionID>ProductAndVersionID</md:ProductAndVersionID>
<md:Data>Data</md:Data>
</md:Watermark>
<md:ActualLength>P0Y0M1DT0H0M0.000S</md:ActualLength>
</md:Encoding>
<md:Language dubbed="true">EN</md:Language>
      <md:Channels>string</md:Channels>
<md:TrackReference>TrackReference</md:TrackReference>
<md:TrackIdentifier>
<md:Namespace>Namespace</md:Namespace>
<md:Identifier>Identifier</md:Identifier>
<md:Location>http://tempuri.org</md:Location>
</md:TrackIdentifier>
<md:Private>
<md:Namespace>http://www.w3.org/2000/09/xmldsig#</md:Namespace>
</md:Private>
</dece:Audio>
</dece:DigitalAsset>
]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Metadata/Digital</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="f55bb3c2-9052-40b0-8321-8b776bfdd17e"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 201 Created")</scriptText></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="c3df3ee4-7e74-42d3-b9bc-8228bc68dd14"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataDigitalCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="8d54b613-5693-4089-bb91-255496eba49e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A653478442</con:value></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>34</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A309286894</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>309286894</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>tName</con:name><con:value>Create CID-APID-ALID</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value>Digital Asset Created Successfully</con:value></con:property><con:property><con:name>DMPID</con:name><con:value>urn:dece:dmpid:file:AUDIO_MetadataDigitalCreate.txt:563767279</con:value></con:property><con:property><con:name>PRESENTATIONID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataDigitalUpdate-07" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b5ca20aa-7b6d-4d5d-925a-ec38c201e318"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="1989b089-ec10-4caa-8064-e042822c0dd2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="9a454774-ae50-4b7a-b32c-26d927f708b4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="91d0427a-7485-41bc-9633-a1a24b62a333"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataDigitalCreate" id="5ea860d1-65c3-472c-beb1-31ea3a3a1572"><con:settings/><con:config service="MetadataDigitalCreate_CTP" methodName="PUT MetadataPhysicalGet" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital/${#TestCase#APID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataDigitalCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="69c4d9a4-1381-484a-b490-011c82ff2334"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!--
Sample XML file generated by XMLSpy v2009 sp1 (http://www.altova.com)
-->
<dece:DigitalAsset
APID="${#TestCase#APID}"
UpdateNum="2" ContentID="${#TestCase#CID}"
xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd"
xmlns:dece="${#Project#Coordinator_Schema}"
xmlns:md="${#Project#md_schema}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Audio>
<md:Description>String1</md:Description>
<md:Type>String2</md:Type>
<md:Encoding>
<md:Codec>String3</md:Codec>
<md:CodecType>String4</md:CodecType>
<md:BitrateMax>11</md:BitrateMax>
<md:SampleRate>22</md:SampleRate>
<md:SampleBitDepth>33</md:SampleBitDepth>
</md:Encoding>
<md:Language dubbed="true">en-US</md:Language>
<md:Channels>String5</md:Channels>
<md:TrackReference>String6</md:TrackReference>
</dece:Audio>
</dece:DigitalAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="596573a2-aaad-4916-b7c2-589e47f1c268"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataDigitalCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="b0812c37-5f6d-43b9-a71c-b2a49277629a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>329595103</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>Digital Asset Updated Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>34</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%253A329595103</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_997717078.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A329595103</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_997717078.txt</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A329595103</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataDigitalUpdate-11" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4fe20484-b81b-4d11-ad5b-c5cb4afa96ef"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="92c5e49c-3cbf-4779-9d6b-7a864bc90752"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="7198e07e-4628-4528-8cf2-4fc6da3cceeb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="d380cd4a-8d4d-4b90-99e1-3b701d83f674"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("PUT - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - MetadataDigitalCreate" id="2a53ddcb-1db7-40da-81cb-ffda3832921e"><con:settings/><con:config service="MetadataDigitalCreate_CTP" methodName="PUT MetadataPhysicalGet" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital/${#TestCase#APID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - MetadataDigitalCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="0832aae0-4555-4ad0-a2af-fe56cfb82ce5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<!--
Sample XML file generated by XMLSpy v2009 sp1 (http://www.altova.com)
--><dece:DigitalAsset APID="${#TestCase#APID}" UpdateNum="2" ContentID="${#TestCase#CID}" xsi:schemaLocation="${#Project#Coordinator_Schema} dece.xsd" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:md="${#Project#md_schema}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <dece:Audio>
    <md:Description>Description</md:Description>
    <md:Type>Type</md:Type>
    <md:Encoding>
      <md:Codec>Codec</md:Codec>
      <md:CodecType>CodecType</md:CodecType>
      <md:BitrateMax>15</md:BitrateMax>
      <md:BitrateAverage>85</md:BitrateAverage>
      <md:VBR>VBR</md:VBR>
      <md:SampleRate>45</md:SampleRate>
      <md:SampleBitDepth>99</md:SampleBitDepth>
      <md:ChannelMapping>ChannelMapping</md:ChannelMapping>
      <md:Watermark guaranteedAbsent="true">
        <md:Vendor>Vendor</md:Vendor>
        <md:ProductAndVersionID>ProductAndVersionID</md:ProductAndVersionID>
        <md:Data>Data</md:Data>
      </md:Watermark>
      <md:ActualLength>P0Y0M1DT0H0M0.000S</md:ActualLength>
    </md:Encoding>
    <md:Language dubbed="true">EN</md:Language>
    <md:Channels>Channels</md:Channels>
    <md:TrackReference>TrackReference</md:TrackReference>
    <md:TrackIdentifier>
      <md:Namespace>Namespace</md:Namespace>
      <md:Identifier>Identifier</md:Identifier>
      <md:Location>http://tempuri.org</md:Location>
    </md:TrackIdentifier>
    <md:Private/>
  </dece:Audio>

</dece:DigitalAsset>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A508229015</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="d229d5d8-ff1b-43e8-8d0c-cfef3d484796"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - MetadataDigitalCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="045dc582-dfe2-4070-b083-ab4f1b8548a7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>340910554</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_96x144.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:340910554</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_224x320.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:340910554</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_840x1200.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:340910554</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_192x288.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:340910554</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200_112x160.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:340910554</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
   <Error ErrorID="urn:dece:errorid:org:dece:PostProcessingNotCompleted">
      <Reason Language="en">Post-processing of the image was not completed. - http://o.homedsgn.com/wp-content/uploads/2012/09/dry-creek-outbuildings-08-800x1200.jpg</Reason>
      <OriginalRequest>http://chdecqavap2.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:340910554</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#PostProcessingNotCompleted</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>3579</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://lp3.qa-web-vip2-s02.uvvu.com:7003/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%253A340910554</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A340910554</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A340910554</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataDigitalGet" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3c282d82-84de-41d4-8320-3be3af4b3648"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="d3831f72-241f-44fe-b992-dad93cb6aca2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="8ca2500b-8355-423e-87cd-bb368cf63f1d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="729fd28f-446a-4d44-93ae-ce718194e879"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataDigitalCreate" id="8e385e96-e9cd-498b-b6ea-17daebd8d13f"><con:settings/><con:config service="MetadataDigitalCreate_CTP" methodName="GET MetadataPhysicalGet" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital/${#TestCase#APID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataDigitalCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="25d69adb-540c-44d9-b603-c5a4ddfed11e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A508229015</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="10e33ded-8550-4d42-a832-2ea3ac4dc369"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataDigitalCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="d12eb580-9947-4a0a-9b80-569ae7402f4f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="1e836959-189e-4215-bb1c-f7943f75820f"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataDigitalCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataDigitalCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="f5e65924-038f-407c-b24f-456abdc5a05e"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Validating -Body is null or not of get" id="76b628ee-ea26-4167-85e2-ad2e11b9bc1b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataDigitalCreate');
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if ( httpStatus  == 'HTTP/1.1 200 OK' )
{
//def responseAsXml = context.expand( '${GET - MapAPIDtoALIDCreate#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]}' )
def responseAsXml = tStep.httpRequest.response.getResponseContent();
def xml = new XmlSlurper().parseText(responseAsXml);
log.info xml.toString();

if (xml == "" )
{
		assert 1==2
}
}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>340910554</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:MdDigitalRecordDoesNotExist">
      <Reason Language="en">The digital metadata was not found.</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:340910554</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#MdDigitalRecordDoesNotExist</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">729</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A340910554</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP3LBSPC/CON_concat.pem</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0664EB81C9AB4CB7E0530B345B0AD67F:E6A64550"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Tue, 28 Oct 2014 09:25:00 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Mon, 27 Oct 2014 09:24:58 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1414401900 VE4PbApbMpUAAB0z@LEAAAAe urn:dece:org:org:dece:iot:soapui:contentprovider 10.91.50.149</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataDigitalDelete" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b061a1c0-0c9a-441b-9679-5837b1936070"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="0778a6a0-002e-42c9-b1f5-25cca1e59a60"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="a8ea40b6-48cd-416c-94c8-1f5daf483a9a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="9ebcafd2-1f08-42e2-bf6b-e4bdd5910b97"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("DELETE - MetadataDigitalCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - MetadataDigitalCreate" id="60650977-7633-4234-8a10-3db6f1360c6b"><con:settings/><con:config service="MetadataDigitalCreate_CTP" methodName="DELETE MetadataPhysicalGet" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital/${#TestCase#APID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - MetadataDigitalCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="truststore-test-node-content-provider.jks" id="6e545e4a-4877-4775-98e6-4f26dba6f5e7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Metadata/Digital/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A879549593</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="fe7792ad-ad92-4fdf-a21a-ca2620d1b12a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - MetadataDigitalCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="c927fcc6-0f6a-40fb-bd30-65cd14bc1c6c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeDelete");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>593532507</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Digital Asset Deleted Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">34</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_284938313.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A593532507</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/truststore-test-node-content-provider.jks</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBasicList" searchProperties="true" id="3ae9e215-a6f7-4070-afbd-8739b84e010e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="43aee007-d525-48f9-845c-3a869ed0ba34"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="550034bc-f01d-4e37-8dcc-c477b6944d8c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));
/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="2211600f-fd28-47a1-b4da-ba13de4755f2"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET-MetadataBasicList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET-MetadataBasicList" id="afd346b5-1e42-4e14-8553-6da87b09fdc7"><con:settings/><con:config service="MetadataBasicCreate_ContentProvider" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Basic/List" methodName="GET MetadataBasicCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET-MetadataBasicList" mediaType="application/xml" sslKeystore="truststore-test-node-content-provider.jks" accept="" id="4b90be77-9e94-4a3f-bae0-5d6e3bb4e6ba"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp3.qa-web-vip2-s01.uvvu.com/rest/1/11/Asset/Metadata/Basic/List</con:originalUri><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="494ae145-33b3-41d3-b57a-eee21d836654"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		/*case "ETag": 
			ETag = value[0]; 
			break;*/

	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
//tP.setPropertyValue("ETag", ETag);</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="9081c5f2-c549-4de1-b42b-63061d8fdbdf"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination" id="7e67a6e3-ff70-4caa-9221-f89ba7957f1e"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )
log.info response.size()

def filtercount = context.expand( '${GET-MetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/@FilterCount}' )

log.info filtercount

def responseAsXml = context.expand( '${GET-MetadataBasicList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]/ns1:BasicAssetReference[1]}' )

def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag" id="fb34c6e8-4853-40df-aa6e-af00127792f9"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates" id="122cd9a2-8a8f-4d80-8412-4ccfcfd3be50"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */

def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def response = context.expand( '${GET-MetadataBasicList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:BasicAssetList[1]}' )



//log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
//log.info records

for(int i=0;i&lt;=records.BasicAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.BasicAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.BasicAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.BasicAssetReference[i].@UpdatedDate);

}

//log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
//log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="9fd60045-3325-4b33-814d-6d2438a28084"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET-MetadataBasicList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="dfcf336f-05d6-4229-bf1c-f65fbc816731"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_284938313.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>607631293</con:value></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/truststore-test-node-content-provider.jks</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<dece:BasicAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1000" FilterMoreAvailable="true" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:607631293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:46.353Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:607631293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:46.353Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:607631293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:45.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:607631293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:45.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:607631293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:45.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:607631293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:45.543Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_284938313.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:25:23.048Z" UpdatedDate="2014-10-22T09:25:23.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:284938313" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:24:20.637Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:855338063" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:24:01.233Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:744960052" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:24:00.929Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_744960052.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:24:00.929Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:780184112" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:50.687Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:780184112" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:50.687Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:780184112" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:49.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:780184112" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:49.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:780184112" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:49.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:780184112" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:49.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_686648404.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:22:41.003Z" UpdatedDate="2014-10-22T09:22:41.003Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:686648404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:21:40.234Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:684323038" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:19:04.456Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_684323038.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:19:04.456Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Oct_22_14_48_20_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:18:25.997Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:656549960" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:14:35.274Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_656549960.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:14:35.274Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:913233072" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:13:04.247Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_913233072.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:13:04.247Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Oct_22_14_07_43_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T08:37:45.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Oct_22_14_07_04_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T08:37:08.340Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:274086731" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:58:34.645Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_274086731.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:58:34.645Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:684794592" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:56:15.116Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_684794592.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:56:15.116Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:793574932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:54:44.781Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_793574932.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:54:44.781Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:25353908884211585" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:28:30.383Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:215355495" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:15:46.395Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_215355495.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:15:46.395Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:735629574" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:13:26.029Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_735629574.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:13:26.029Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6660129919510187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:13:16.240Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:838958618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:11:52.526Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_838958618.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:11:52.526Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9559940506238068" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:01:42.081Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9640946907539334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T06:52:23.546Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:566820320" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:34:03.148Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_566820320.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:34:03.148Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:534263616" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:31:41.870Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_534263616.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:31:41.870Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:201688296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:30:09.417Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_201688296.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:30:09.417Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:244063717" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:17:02.896Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_244063717.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:17:02.896Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:933197700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:14:39.276Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_933197700.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:14:39.276Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:399735688" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:13:06.980Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_399735688.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-21T11:13:06.980Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Oct_17_13_46_12_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-17T08:16:17.145Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:736299695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:13:36.560Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_736299695.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:13:36.560Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:289041399" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T10:16:38.645Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_289041399.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T10:16:38.645Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:843147853" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T10:07:11.918Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_843147853.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T10:07:11.918Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:165670638" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:50:31.864Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_165670638.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:50:31.864Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Oct_09_15_20_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:50:21.146Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:845976754" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:23:02.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_845976754.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:23:02.715Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:756815543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:15:56.209Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_756815543.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:15:56.209Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:415296312" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T13:09:46.899Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_415296312.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T13:09:46.899Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:993764336" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T13:05:47.863Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_993764336.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T13:05:47.863Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7162425550064484" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:12:52.566Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:3614813853181672" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T07:48:56.219Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Mon_Oct_06_19_37_57_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T14:08:00.832Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Sat_Sep_27_17_40_56_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-27T12:27:11.637Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Sat_Sep_27_17_40_56_IST_2014    " CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-27T12:20:45.527Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Sat_Sep_27_16_56_02_IST_2014 " CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-27T11:26:01.594Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Sat_Sep_27_16_31_11_IST_2014 " CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-27T11:01:11.200Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:169643509" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T19:33:35.247Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_169643509.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T19:33:35.247Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:526953675" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T19:32:12.034Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_526953675.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T19:32:12.034Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:935885166" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T15:27:34.187Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_935885166.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T15:27:34.187Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:702083801" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T15:04:32.199Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_702083801.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T15:04:32.199Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Sep_26_20_25_26_IST_2014 " CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T14:55:26.185Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:2544476942511108" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T11:16:44.580Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:45602540755460685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T11:04:07.590Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:4832769697058641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T10:52:36.790Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9483192915446602" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T10:34:08.201Z" UpdatedDate="2014-09-26T10:34:08.201Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_25_22_05_06_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-25T16:35:08.412Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_25_22_02_46_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-25T16:32:48.634Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_25_21_56_31_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-25T16:26:38.453Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:704274794" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-24T21:19:01.427Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_704274794.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-24T21:19:01.427Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:865764413" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-24T21:17:00.862Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_865764413.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-24T21:17:00.862Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:983799594" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-24T21:16:00.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_983799594.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-24T21:16:00.646Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9120317664565772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T13:23:21.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:4494170193270939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T13:10:15.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7939674235103711" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T12:57:24.722Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9641525922573473" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T12:42:06.186Z" UpdatedDate="2014-09-18T12:42:06.186Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:846963831769308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T12:08:59.887Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9473500325489191" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:43:48.603Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9240244984546359" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:27:46.872Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_18_16_41_01_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:10:47.764Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9926465902736448" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:10:00.949Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_18_16_39_48_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:09:34.892Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:21470692310632755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T10:50:12.714Z" UpdatedDate="2014-09-18T10:50:12.714Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_18_15_45_27_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T10:16:49.172Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_18_13_09_25_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T07:39:10.745Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_18_13_02_52_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T07:32:37.592Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_18_13_00_31_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T07:30:18.451Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Sep_18_00_32_21_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T19:02:24.190Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:20317406461665977" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:34:51.119Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8745821327005338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:22:53.681Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8985579915875869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:11:47.894Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9431409419484629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:54:28.748Z" UpdatedDate="2014-09-17T14:54:28.748Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:08977918877902835" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:36:52.030Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:24693752463366425" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:21:26.470Z" UpdatedDate="2014-09-17T14:21:26.470Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:393502299" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:11:01.201Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:445187102" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:48.943Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:445187102" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:48.943Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:445187102" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:48.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:445187102" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:48.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:445187102" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:48.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:445187102" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:48.469Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_638359796.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:09:40.815Z" UpdatedDate="2014-09-17T14:09:40.815Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:638359796" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:08:39.649Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:442197670" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:05:28.101Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_442197670.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:05:28.101Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:304772534" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:25:14.824Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:550398846" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:57.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:550398846" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:57.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:550398846" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:56.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:550398846" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:56.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:550398846" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:56.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:550398846" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:56.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_717492773.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:23:45.658Z" UpdatedDate="2014-09-17T13:23:45.658Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:717492773" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:22:43.918Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:918661478" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:18:36.796Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_918661478.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:18:36.796Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Sep_17_18_39_51_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:09:54.174Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Sep_17_18_39_02_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:09:05.008Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Sep_17_18_37_54_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:07:58.054Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Sep_17_16_26_49_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T10:56:51.859Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Sep_17_16_21_56_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T10:51:59.127Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Sep_17_16_17_42_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T10:47:45.145Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Sep_17_16_16_02_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T10:46:04.965Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Sep_17_16_07_47_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T10:37:50.909Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Sep_16_16_23_42_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-16T10:54:11.184Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Sep_16_15_40_20_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-16T10:10:46.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Sep_16_15_38_02_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-16T10:08:30.440Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Sep_12_17_12_26_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-12T11:42:29.215Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:816273865402157" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T13:14:41.873Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:39713496206656107" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T13:01:55.062Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:3667262488026709" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T12:50:25.212Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:648803452066445" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T12:34:16.257Z" UpdatedDate="2014-09-09T12:34:16.257Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8998632776217067" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T11:13:33.484Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:40322665151595616" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:59:26.222Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:12665080170791687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:47:37.250Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:42930089607983013" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:30:08.526Z" UpdatedDate="2014-09-09T10:30:08.526Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:026435457967886267" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:58:17.589Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:5239877536398837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:45:55.056Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:271988108814059" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:30:07.101Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8876704878028023" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:09:59.402Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6503242576076852" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T08:56:14.217Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:005424671168779982" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T08:44:39.876Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:06858962557176251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T08:31:51.174Z" UpdatedDate="2014-09-09T08:31:51.174Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:11099829503871983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T17:53:46.588Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:012902566600199505" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T17:41:17.617Z" UpdatedDate="2014-09-08T17:41:17.617Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7356474737430746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:51:54.889Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:18575545664913562" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:39:55.139Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8807227925033746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:36:39.321Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:5268093973787147" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:33:06.007Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9281429137187995" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:20:15.866Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:3293790236811054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:04:18.562Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:3721237443157168" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:52:16.390Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:2349265387467787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:38:54.680Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8413632066163597" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:28:51.341Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8633994466350735" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:12:38.728Z" UpdatedDate="2014-09-08T15:12:38.728Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7698445393406907" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:37:01.919Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:654593284040326" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:27:00.235Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:20274740478575248" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:15:06.579Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:34562486296168293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:05:07.913Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:05094613968954276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T13:49:04.984Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:41364963406063393" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T13:30:00.242Z" UpdatedDate="2014-09-08T13:30:00.242Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:3495528335859651" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T12:52:14.981Z" UpdatedDate="2014-09-08T12:52:14.981Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6952810517510967" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T11:00:43.641Z" UpdatedDate="2014-09-08T11:00:43.641Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:45751084910810114" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T09:27:17.472Z" UpdatedDate="2014-09-08T09:27:17.472Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Sep_05_16_29_44_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-05T10:59:56.707Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Sep_05_15_27_52_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-05T09:58:04.721Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:org:lionsgate:9382431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-04T06:52:47.110Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:878414975" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-02T10:01:23.861Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_878414975.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-02T10:01:23.861Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:227387446" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-02T09:58:53.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_227387446.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-02T09:58:53.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:950653121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-02T09:57:46.306Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_950653121.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-02T09:57:46.306Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:225971311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:51.047Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:225971311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:51.047Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:225971311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:50.230Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:225971311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:50.230Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:225971311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:50.230Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:225971311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:50.230Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_487723191.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:18:37.163Z" UpdatedDate="2014-08-28T13:18:37.163Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:137909410" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:14:19.660Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:560058989" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:14:02.208Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:560058989" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:14:02.208Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:560058989" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:14:01.446Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:560058989" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:14:01.446Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:560058989" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:14:01.446Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:560058989" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:14:01.446Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_511370381.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:12:46.380Z" UpdatedDate="2014-08-28T13:12:46.380Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:511370381" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:11:44.822Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:397793021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:52.323Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:397793021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:52.323Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:397793021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:51.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:397793021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:51.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:397793021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:51.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:397793021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:51.253Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_931690249.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:01:36.792Z" UpdatedDate="2014-08-28T13:01:36.792Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:822718303" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:56:27.260Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:557349992" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:56:08.114Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:557349992" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:56:08.114Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:557349992" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:56:07.213Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:557349992" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:56:07.213Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:557349992" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:56:07.213Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:557349992" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:56:07.213Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_207388190.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:54:50.418Z" UpdatedDate="2014-08-28T12:54:50.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:207388190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:53:48.433Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:714942057" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:39.476Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:865019199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:27.353Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:865019199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:27.353Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:865019199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:26.324Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:865019199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:26.324Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:865019199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:26.324Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:865019199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:26.324Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_629511429.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:09:14.071Z" UpdatedDate="2014-08-26T22:09:14.071Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:629511429" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:08:11.076Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:336181203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:54:01.425Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:336181203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:54:01.425Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:336181203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:54:01.014Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:336181203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:54:01.014Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:336181203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:54:01.014Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:336181203" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:54:01.014Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_195988332.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:52:54.545Z" UpdatedDate="2014-08-22T07:52:54.545Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_496036720.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:49:07.425Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_308883087.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:47:54.835Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_862630592.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:46:42.728Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:978262427" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:44:11.672Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:878873665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:44:02.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:878873665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:44:02.287Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:878873665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:44:01.245Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:878873665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:44:01.245Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:878873665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:44:01.245Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:878873665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:44:01.245Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_468466885.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:42:53.457Z" UpdatedDate="2014-08-22T07:42:53.457Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:468466885" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:41:52.474Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:349059004" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:38:35.746Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_349059004.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:38:35.746Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR:10.123/1234-5678-9ABC-DEF0-K:81632396" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:33:30.693Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:355099465" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:30:25.736Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_355099465.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:30:25.736Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:599614856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:28:03.877Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_599614856.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:28:03.877Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:555094888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:26:13.293Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_555094888.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:26:13.293Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:864524746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:53.479Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:722004935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:44.904Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:722004935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:44.904Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:722004935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:44.526Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:722004935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:44.526Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:722004935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:44.526Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:722004935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:44.526Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_589725369.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:42:38.444Z" UpdatedDate="2014-08-21T21:42:38.444Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:589725369" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:41:37.547Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:859177019" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:38:52.616Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_859177019.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:38:52.616Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:692360939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:45.890Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:692360939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:45.890Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:692360939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:44.964Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:692360939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:44.964Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:692360939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:44.964Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:692360939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:44.964Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_453191612.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:30:38.478Z" UpdatedDate="2014-08-21T21:30:38.478Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_686655514.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:26:53.346Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:857623016" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:40.096Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:828479895" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:31.699Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:828479895" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:31.699Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:828479895" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:31.292Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:828479895" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:31.292Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:828479895" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:31.292Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:828479895" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:31.292Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_866483908.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:19:25.456Z" UpdatedDate="2014-08-21T21:19:25.456Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:866483908" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:18:24.681Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:544739182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:15:33.885Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_544739182.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:15:33.885Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:678932429" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:33.399Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:301549354" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:22.370Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:301549354" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:22.370Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:301549354" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:21.739Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:301549354" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:21.739Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:301549354" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:21.739Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:301549354" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:21.739Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_934022287.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T18:59:15.348Z" UpdatedDate="2014-08-21T18:59:15.348Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:934022287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T18:58:14.462Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:960075464" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T18:55:05.357Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_960075464.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T18:55:05.357Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:388779103" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:24.190Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:774889941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:12.596Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:774889941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:12.596Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:774889941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:12.067Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:774889941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:12.067Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:774889941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:12.067Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:774889941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:12.067Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_302913225.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:04:04.921Z" UpdatedDate="2014-08-21T14:04:04.921Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:302913225" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:03:04.108Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:723455466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:01:54.897Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_723455466.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:01:54.897Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:717271965" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:54.237Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_717271965.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:54.237Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:637384619" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:41.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:637384619" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:41.361Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:637384619" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:40.774Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:637384619" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:40.774Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:637384619" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:40.774Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:637384619" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:40.774Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_368596980.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:53:33.453Z" UpdatedDate="2014-08-21T13:53:33.453Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:368596980" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:52:32.590Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:895580850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:51:24.493Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_895580850.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:51:24.493Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:164403170" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:19.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:388776092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:06.858Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:388776092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:06.858Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:388776092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:06.208Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:388776092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:06.208Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:388776092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:06.208Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:388776092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:06.208Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_948068601.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:33:57.836Z" UpdatedDate="2014-08-21T13:33:57.836Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:948068601" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:32:57.044Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:979230523" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:31:48.070Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_979230523.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:31:48.070Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:363387211" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:21:59.452Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_363387211.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:21:59.452Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:256647480" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:22.557Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:256647480" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:22.557Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:256647480" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:21.957Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:256647480" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:21.957Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:256647480" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:21.957Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:256647480" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:21.957Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_422594890.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:08:15.701Z" UpdatedDate="2014-08-21T12:08:15.701Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_137495506.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:04:23.729Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:984961075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:28.398Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:822596329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:16.494Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:822596329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:16.494Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:822596329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:15.548Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:822596329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:15.548Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:822596329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:15.548Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:822596329" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:15.548Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_190927270.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:50:05.947Z" UpdatedDate="2014-08-21T11:50:05.947Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:190927270" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:49:04.888Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:215329091" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:47:52.551Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_215329091.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:47:52.551Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:945089799" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T23:46:45.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_945089799.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T23:46:45.735Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:759739391" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T21:26:38.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_759739391.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T21:26:38.058Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:783791778" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T21:10:21.103Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_783791778.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T21:10:21.103Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:990001590" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T17:55:09.204Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_990001590.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T17:55:09.204Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:679810199" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T17:50:02.140Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_679810199.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T17:50:02.140Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:314638823" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T16:04:10.706Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_314638823.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-20T16:04:10.706Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:486135390" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:43:05.490Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_486135390.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:43:05.490Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:761155161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:57.782Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_761155161.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:57.782Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:389505607" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:48.213Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_389505607.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:48.213Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:414859178" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:45.579Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_414859178.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:45.579Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:140123025" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:40.709Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_140123025.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:40.709Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:131817159" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:38.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_131817159.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:38.418Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:839214051" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:30.421Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_839214051.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:30.421Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:440703143" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:11.156Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_440703143.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:11.156Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:561720189" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:07.991Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_561720189.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:42:07.991Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:299229662" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:40:29.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_299229662.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:40:29.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:652277038" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:40:25.769Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_652277038.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:40:25.769Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:852516070" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:40:23.523Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_852516070.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:40:23.523Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:747449357" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:40:21.152Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_747449357.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:40:21.152Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:638956618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:39.610Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_638956618.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:39.610Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:858281290" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:36.689Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_858281290.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:36.689Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:758437190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:33.717Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_758437190.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:33.717Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:279570446" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:30.015Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_279570446.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:30.015Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:150755620" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:20.080Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_150755620.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:20.080Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:558682964" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:17.976Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_558682964.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:17.976Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:394606029" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:15.660Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_394606029.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:15.660Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:973362942" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:12.746Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_973362942.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:12.746Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:984405314" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:10.298Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_984405314.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:39:10.298Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:611035557" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:38:24.553Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_611035557.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:38:24.553Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:671174250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:38:23.330Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_671174250.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:38:23.330Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:379758722" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:38:21.638Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_379758722.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:38:21.638Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:522984015" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:38:19.899Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_522984015.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:38:19.899Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:942024260" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:34:55.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_942024260.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T21:34:55.048Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Aug_19_16_57_00_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T11:26:57.697Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:568814055" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T01:46:33.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_568814055.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T01:46:33.486Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:517677324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T01:40:33.721Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_517677324.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T01:40:33.721Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:767930115" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T01:38:33.762Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_767930115.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T01:38:33.762Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:351142186" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T01:31:37.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_351142186.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-19T01:31:37.655Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:723341852" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T21:54:20.849Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_723341852.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T21:54:20.849Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:436899439" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T13:03:09.387Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_436899439.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T13:03:09.387Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:529498621" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:37.534Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:296377401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:26.341Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:296377401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:26.341Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:296377401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:25.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:296377401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:25.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:296377401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:25.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:296377401" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:25.565Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_208902758.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:35:15.876Z" UpdatedDate="2014-08-18T12:35:15.876Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:208902758" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:34:14.585Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:895543928" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:32:40.277Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_895543928.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:32:40.277Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:439089691" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:22:31.086Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:634685473" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:18:48.791Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_634685473.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:18:48.791Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:100345249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:08:08.232Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_725382304.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:06:48.705Z" UpdatedDate="2014-08-18T10:06:48.705Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:725382304" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:05:47.745Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:265991523" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:04:39.490Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_265991523.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:04:39.490Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:212039730" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:47.338Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:475798144" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:37.804Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:475798144" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:37.804Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:475798144" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:37.442Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:475798144" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:37.442Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:475798144" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:37.442Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:475798144" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:37.442Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_491582406.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:51:30.032Z" UpdatedDate="2014-08-18T09:51:30.032Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:491582406" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:50:29.189Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:984545847" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:47:28.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_984545847.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:47:28.406Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:128222158" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:49:51.896Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:133880557" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T16:28:52.463Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_381351690.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-30T14:01:17.354Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:381351690" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-30T14:01:17.354Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_985947716.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-30T14:00:21.800Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:985947716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-30T14:00:21.800Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:18793310073394587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:46:25.517Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8066227970787608" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:33:04.274Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:11647567581415008" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:21:33.047Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7156747294991472" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T15:42:45.438Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7122133610989543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T14:21:18.347Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_44_04_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T08:14:07.747Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_27_19_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:57:21.686Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_27_13_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:57:15.896Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_59_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:57:01.637Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_53_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:55.775Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:testParent:Wed_Apr_23_13_26_53_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:55.775Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_46_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:49.172Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_39_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:42.547Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_25_59_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:01.873Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL:NUMBERS_|_96%3A1398239741596.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:55:45.998Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:26549496817188956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:38:59.869Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9598234403718587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:26:24.635Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:RIGHTS_EXAMPLE_CIDVersion_877956.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T12:42:49.339Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:RIGHTS_EXAMPLE_CIDVersion_276797.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T12:40:08.263Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:720325213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:18.865Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:720325213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:18.276Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:720325213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:18.276Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:720325213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:18.276Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:720325213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:18.276Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_652750736.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T16:59:38.923Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:652750736" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T16:59:38.923Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_351522010.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T19:15:30.610Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:351522010" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T19:15:30.610Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_181902921.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:43.997Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:181902921" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:43.997Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_498002598.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-30T13:33:25.400Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:498002598" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-30T13:33:25.400Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6811034408303325" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T11:04:10.909Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7994628111207294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T16:19:53.295Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:37493179668395504" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T10:45:00.695Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_823606374.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T21:23:36.186Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_224857572.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-19T21:21:27.383Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_798728040.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T21:20:23.655Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_623289458.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T21:14:42.912Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_642077081.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-19T21:12:34.679Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_347181317.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T21:11:30.554Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_231012883.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T20:37:06.224Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:16031117120836713" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T09:08:30.727Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:0953666546305485" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T13:59:12.905Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_20_10_32_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T14:40:36.708Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:34321665530498247" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T13:13:42.492Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6152864781988021" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:27:19.793Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7373044327271744" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T11:49:42.182Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_706483695.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:29:16.045Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:706483695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:29:16.045Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Jul_23_17_46_01_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-23T12:16:01.812Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_256091742.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-24T15:27:01.208Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:256091742" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-24T15:27:01.208Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_877669659.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:12:01.525Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_844601996.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:09:53.808Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_495819281.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:07:49.111Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_254872440.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:05:43.582Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_597034351.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:03:38.529Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_556509005.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:01:33.209Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_350937143.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:59:27.742Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_154173842.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:57:23.720Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_113517760.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:55:19.466Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_974775157.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:53:13.519Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_230923243.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:51:08.741Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_662962670.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:49:03.448Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_362063551.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:46:58.726Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_214857094.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:44:54.342Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_462492033.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:42:49.159Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_910736775.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:39:00.611Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_128519541.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:35:22.175Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_736229778.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:33:16.360Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_579499945.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T13:31:10.321Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_512930154.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-19T21:17:03.104Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_560743831.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T21:15:58.460Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_915483585.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-19T21:09:16.721Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_746226262.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T21:07:05.393Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Sat_Jul_05_14_16_55_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-05T08:46:57.180Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:22053639885027165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T11:18:43.947Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Apr_08_21_54_37_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-08T16:24:43.869Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_434086173.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-17T17:31:37.791Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:434086173" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-17T17:31:37.791Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_770321379.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T20:09:54.850Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_117910600.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T20:07:50.128Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:AL_WEB_PORTAL_NUMBERS_714195619.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T20:05:44.149Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_192948320.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-13T19:37:47.763Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:192948320" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-13T19:37:47.763Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_131418184.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-13T17:54:34.572Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:131418184" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-13T17:54:34.572Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_953694645.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T16:34:30.427Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:953694645" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T16:34:30.427Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_252384142.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T16:20:48.253Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:252384142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T16:20:48.253Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_220337933.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T16:19:56.092Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:220337933" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T16:19:56.092Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_873548807.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T16:29:37.830Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:873548807" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T16:29:37.830Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Jun_17_15_11_18_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T09:41:11.305Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:06887938700412588" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T18:33:52.281Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:047663561118047926" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T17:53:19.518Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:19741335310406438" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T17:37:40.635Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_825298282.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-29T02:31:54.771Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:825298282" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-29T02:31:54.771Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_20_06_13_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T14:36:18.016Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7808153112167289" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:20:29.866Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_779650036.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T18:15:04.269Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:779650036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T18:15:04.269Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_765204992.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-07T22:17:07.497Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:765204992" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-07T22:17:07.497Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Jul_04_13_21_02_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-04T07:51:29.718Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_371440630.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T18:47:33.937Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:371440630" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T18:47:33.937Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Mar_21_20_18_05_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T14:44:40.569Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_978637780.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T17:19:26.720Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:978637780" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T17:19:26.720Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_681162419.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:30:46.244Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:681162419" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:30:46.244Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:251741141" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-29T16:11:11.631Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_986600967.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T18:48:41.603Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:986600967" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T18:48:41.603Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_964464742.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-28T19:03:29.523Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:964464742" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-28T18:58:47.391Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_821690542.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-28T18:46:22.606Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:821690542" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-28T18:46:22.606Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:618854151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:24:09.769Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_471682924.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:23:01.107Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:471682924" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:23:01.107Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:861864765" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:45.234Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_939413669.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:11:38.754Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_435737245.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-07T19:39:53.016Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:435737245" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-07T19:39:53.016Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:24055017448436766" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T08:32:38.411Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:33459249377990685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T08:09:40.284Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_411797536.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T15:20:07.844Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:411797536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T15:20:07.844Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_965305195.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T16:21:24.957Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:965305195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T16:21:24.957Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_758947324.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T16:16:58.829Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:758947324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T16:16:58.829Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_365633036.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T16:14:37.280Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:365633036" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T16:14:37.280Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_360730288.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:40.032Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:360730288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:40.032Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_08_22_19_25_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T16:49:33.420Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_17_45_21_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:11:38.747Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:299435602" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:13:40.080Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:402849844" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:13:09.454Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:402849844" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:13:09.454Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:402849844" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:13:08.132Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:402849844" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:13:08.132Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:402849844" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:13:08.132Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:402849844" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:13:08.132Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_404937565.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-07T22:27:24.116Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:404937565" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-07T22:27:24.116Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6423184462202237" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:40:41.938Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6577756434670007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:15:34.143Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Mar_28_01_18_34_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-27T19:44:54.076Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_18_04_50_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:31:13.226Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_18_04_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:30:34.106Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_17_37_29_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:03:46.565Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_770113758.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T16:17:39.044Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:770113758" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T16:17:39.044Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_605292265.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T16:08:04.752Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:605292265" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T16:08:04.752Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_739445086.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T16:00:43.151Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:739445086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T16:00:43.151Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_642503142.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T15:15:33.174Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:642503142" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T15:15:33.174Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_18_08_53_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:35:17.054Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_17_51_32_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:17:55.667Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_17_34_05_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:00:34.538Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:276646983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:34:27.129Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_899571272.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:38:52.653Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:899571272" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:38:52.653Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:372416748" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:43.838Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:372416748" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:43.838Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:372416748" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:43.283Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:372416748" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:43.283Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:372416748" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:43.283Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:372416748" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:43.283Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_874963159.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:07:53.077Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:874963159" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:07:53.077Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_762595615.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:38.184Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:762595615" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:38.184Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_251741141.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-07-29T17:43:53.804Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test1111500:1" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T11:04:29.489Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_17_59_16_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:25:40.083Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_17_39_36_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:05:53.956Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:923793766" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:34.277Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:923793766" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:34.277Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:923793766" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:33.655Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:923793766" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:33.655Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:923793766" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:33.655Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:923793766" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:33.655Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_726326064.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:08:25.161Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR:10.123/1234-5678-9ABC-DEF0-K:31281918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-24T07:19:50.630Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:testEmu:1" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-12T10:01:54.279Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:5015914746792103" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T10:24:33.129Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_17_48_35_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:14:52.510Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:648709094" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:24.041Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Mon_Jun_16_19_02_11_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-16T13:32:12.987Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_254372549.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-09T01:55:04.988Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:254372549" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-09T01:55:04.988Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_771537519.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-02T15:55:53.044Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_463177264.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-02T15:49:40.064Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:463177264" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-02T15:43:10.008Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_663173949.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-02T15:40:46.873Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:663173949" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-02T15:40:46.873Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_426767001.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:34.045Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:426767001" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:34.045Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:testEmu:2" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-12T10:19:25.369Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:testEmu:2" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-06-12T10:16:44.670Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:33538489465985577" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T14:36:19.005Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_416844859.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-01T15:24:53.883Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:416844859" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-01T15:20:00.505Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_617593671.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-01T15:12:50.427Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:617593671" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-01T15:12:50.427Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_630027111.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-30T13:28:59.179Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:630027111" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-30T13:28:59.179Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_342059268.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-30T13:25:14.391Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:342059268" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-30T13:25:14.391Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_21_30_36_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T16:00:39.406Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:08190123613521205" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T08:29:16.409Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_14_52_32_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:22:32.490Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_14_50_57_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:20:57.192Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_14_50_15_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:20:15.252Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_14_49_33_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:19:33.439Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_14_48_54_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:18:54.760Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_14_48_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:18:17.419Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_14_47_30_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:17:30.217Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_14_46_40_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:16:44.849Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:560443918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:51:34.900Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_680102190.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:50:14.554Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:680102190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:50:14.554Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR:10.123/1234-5678-9ABC-DEF0-K:53581512" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-24T07:22:36.621Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR:10.123/1234-5678-9ABC-DEF0-K:901724743" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-23T11:49:42.645Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:3294342681405522" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T09:32:27.532Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7771553757250715" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T08:11:33.181Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_08_19_28_25_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T13:58:31.546Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_21_10_24_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T15:40:28.603Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:156114938" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:32:02.815Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_754963066.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:02:03.676Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:891623347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:29:57.957Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_42_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:44.961Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_35_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:38.489Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_25_55_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:55:57.931Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:467419474" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:00:16.393Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_385780339.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-29T18:14:30.757Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Jul_23_16_41_22_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-23T11:11:20.854Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6048692692415569" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T12:42:20.891Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:35936583088659624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T12:29:53.999Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_57_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:59.618Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_50_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:53.415Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:testParent:Wed_Apr_23_13_26_50_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:53.415Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_22_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:24.745Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Apr_08_21_58_24_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-08T16:28:32.349Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Mon_Apr_07_20_55_47_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T15:25:49.960Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_15_21_29_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T09:47:57.571Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:754963066" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:02:03.676Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_368509940.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:28:37.111Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_809248085.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-30T16:19:54.045Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:809248085" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-30T16:19:54.045Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:4326862492471343" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:30:10.726Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:32005336707982845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:19:53.715Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:06489933909827528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:10:01.513Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:4965962867009631" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T14:47:49.574Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:org:solekai:1398239849086%25" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:57:31.603Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_27_03_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:57:06.037Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_26_31_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:56:34.556Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_25_51_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:55:53.997Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_25_45_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:55:48.028Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_13_25_23_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:55:26.503Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:15204298034749908" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T11:34:58.794Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:5611778066760618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T10:05:48.718Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Mon_Apr_07_13_05_45_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T07:35:47.367Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_20_54_02_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T15:24:02.793Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_20_39_06_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T15:09:14.921Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:129078790" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-01T19:59:31.471Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:753188135" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-01T19:49:49.970Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_14_11_01_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T08:37:24.695Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Mar_21_20_18_31_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T14:44:52.145Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Mar_21_12_51_36_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T07:21:56.156Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_513465687.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-17T16:42:25.901Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:513465687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-17T16:40:08.366Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_957446968.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-17T21:59:33.711Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:957446968" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-17T21:59:33.711Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Jun_10_14_39_13_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-10T09:09:13.669Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Jun_10_14_39_09_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-10T09:09:10.409Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Jun_10_14_39_05_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-10T09:09:06.102Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Jun_10_14_38_58_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-10T09:09:00.929Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:4668211306641419" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T10:06:12.875Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:17259156074424287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T09:45:13.562Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:2563307026958995" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T09:29:12.910Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_19_38_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T14:08:19.595Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_16_05_19_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T10:35:20.087Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_16_04_11_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T10:34:12.631Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_13_57_48_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T08:24:05.675Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Mar_26_13_57_33_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T08:23:56.783Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_601609032.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-06T21:11:57.552Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_856073580.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T17:52:13.098Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:856073580" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T17:52:13.098Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR:10.123/1234-5678-9ABC-DEF0-K:29836374" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-24T07:50:55.292Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9483395729718255" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T10:48:33.138Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Jun_10_14_39_18_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-10T09:09:18.995Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Jun_10_14_39_14_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-10T09:09:15.554Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_Jun_05_19_03_33_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-05T13:33:40.447Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_29_21_50_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:20:33.134Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Mar_21_20_18_40_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T14:44:59.195Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_606456582.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T18:45:36.046Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:606456582" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T18:45:36.046Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Sat_Jul_05_14_21_15_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-05T08:51:42.660Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_316732704.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T20:18:26.635Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:316732704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T20:18:26.635Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_633200921.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T17:50:20.763Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:633200921" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-21T17:50:20.763Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:887965793" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:52:08.979Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:4279997615201119" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T08:46:31.613Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7517468240236537" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T10:58:34.248Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:8564210040148134" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T10:34:38.765Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_08_19_06_03_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T13:36:05.871Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_16_11_21_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T10:41:22.897Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:39465687274597916" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T08:28:50.765Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7353225958865687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T08:28:39.521Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_494841802.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-17T13:16:31.632Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:494841802" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-17T13:16:31.632Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_253858911.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-17T13:16:05.859Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:253858911" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-17T13:16:05.859Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_268686040.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:54:49.950Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:268686040" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:54:49.950Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_513082376.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T02:59:01.402Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:513082376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T02:59:01.402Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_267908959.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-29T16:10:32.641Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:267908959" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-29T16:10:32.641Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR:10.123/1234-5678-9ABC-DEF0-K:901724744" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-23T11:51:45.745Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Mon_Jul_14_16_50_00_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-14T11:20:04.575Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:EIDR:10.123/1234-5678-9ABC-DEF0-K:79655958" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-24T07:31:04.945Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Tue_Jun_10_19_39_34_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-10T19:39:58.607Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_16_27_54_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T10:57:52.097Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_16_27_51_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T10:57:48.935Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_16_27_48_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T10:57:45.949Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_16_27_42_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T10:57:43.044Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_16_23_45_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T10:53:42.144Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Thu_May_15_16_23_39_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T10:53:40.622Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_564252497.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T01:41:13.045Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:564252497" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T01:41:13.045Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Mon_Apr_07_13_11_30_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T07:41:32.554Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Mon_Apr_07_13_01_05_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T07:31:08.152Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_391982601.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T20:54:05.846Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Mar_28_01_25_05_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-27T19:51:28.341Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:975008428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:46.089Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:975008428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:46.089Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:975008428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:45.757Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:975008428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:45.757Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:975008428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:45.757Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:975008428" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:45.757Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_832851293.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:53:06.827Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:832851293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:53:06.827Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_699120888.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-15T03:43:05.274Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:699120888" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-15T03:43:05.274Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_415889755.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:04:10.375Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:415889755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:04:10.375Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:MYSTUDIO:053115" CurrentStatus="urn:dece:type:status:active" CreatedDate="2012-10-18T12:02:24.487Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:7991347202315856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-23T11:50:22.504Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:9461234235617896" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:54:26.523Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:5433121606384336" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:38:22.350Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:5255379985361398" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T10:59:20.400Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Mar_21_18_53_28_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T13:19:53.668Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_456596999.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T19:17:16.997Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:456596999" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T19:17:16.997Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_893808903.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:42.251Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:893808903" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-01T18:53:42.251Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:06494326456510358" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:54:03.538Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_20_03_23_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T14:33:23.859Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_19_43_54_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T14:13:55.129Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Fri_Apr_04_19_41_46_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-04T14:11:50.196Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:RIGHTS_EXAMPLE_CIDVersion_148365.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T12:30:04.017Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:RIGHTS_EXAMPLE_CIDVersion_592340.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T12:21:02.141Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:RIGHTS_EXAMPLE_CIDVersion_111702.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T11:37:46.162Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:306392780" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:15.531Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_977042099.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:14.835Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:977042099" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:14.835Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_641308544.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:13.052Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:641308544" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:13.052Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_531733065.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:11.874Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:531733065" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:11.874Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_920817621.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:10.772Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:920817621" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:10.772Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_520978494.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:09.601Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:520978494" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:09.601Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_704019165.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:08.488Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:704019165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:08.488Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_433049150.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:07.501Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:433049150" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:07.501Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_440932495.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:06.423Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:440932495" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:06.423Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_547627522.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:05.418Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:547627522" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:05.418Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_457216197.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:04.309Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:457216197" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:04.309Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_578547953.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:03.738Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:578547953" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:03.738Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_140971322.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:02.616Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:140971322" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:02.616Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_793285890.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:01.517Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:793285890" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:01.517Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_836357296.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:00.501Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:836357296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:15:00.501Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:816894769" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:45.635Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_176313758.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:44.819Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:176313758" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:44.819Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_844130731.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:43.773Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:844130731" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:43.773Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_234178431.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:43.359Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:234178431" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:43.359Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_971578875.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:42.402Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:971578875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:42.402Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_409310653.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:41.562Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:409310653" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:41.562Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_647292892.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:40.752Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:647292892" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:40.752Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_553379405.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:39.796Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:553379405" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:39.796Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_768441038.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:38.851Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:768441038" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:38.851Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_120158454.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:37.906Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:120158454" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:37.906Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_894306582.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:37.511Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:894306582" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:37.511Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_364582156.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:36.636Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:364582156" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:36.636Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_240560096.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:35.680Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:240560096" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:35.680Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_229465324.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:34.792Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:229465324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:34.792Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_242472816.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:33.742Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:242472816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:29:33.742Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_165336942.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:16:10.698Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:165336942" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:16:10.698Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_759190873.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-06T21:38:03.228Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:759190873" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-06T21:38:03.228Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:6959407188533311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T09:01:30.834Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:15554419139765918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T07:11:07.447Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:RIGHTS_EXAMPLE_CIDVersion_823460.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T07:34:04.484Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_291158195.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-16T01:41:49.866Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:291158195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-16T01:41:49.866Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_928993548.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:59.941Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:928993548" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:59.941Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_233699070.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:58.864Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:233699070" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:58.864Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_567884592.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:57.699Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:567884592" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:57.699Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_140840935.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:56.539Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:140840935" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:56.539Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_957640665.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:55.416Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:957640665" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:55.416Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_421066826.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:54.362Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:421066826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:54.362Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_720298759.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:53.458Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:720298759" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:53.458Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_211631488.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:52.900Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:211631488" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:52.900Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_629778702.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:51.566Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:629778702" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:51.566Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_644407310.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:50.496Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:644407310" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:50.496Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_626622295.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:49.504Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:626622295" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:49.504Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_133449514.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:48.615Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:133449514" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:48.615Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_568848538.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:48.040Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:568848538" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:48.040Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_331050916.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:47.029Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:331050916" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:47.029Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_855624696.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T22:14:46.002Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:636801738" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:29.720Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_215048512.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:28.625Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:215048512" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:28.625Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_947720506.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:28.139Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:947720506" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:28.139Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_705790218.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:27.105Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:705790218" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:27.105Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_147558831.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:26.735Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:147558831" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:26.735Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_472394404.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:25.915Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:472394404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:25.915Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_480633798.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:24.267Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:480633798" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:24.267Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_162731805.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:23.292Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:162731805" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:23.292Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_178948538.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:22.286Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:178948538" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:22.286Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_148233250.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:21.239Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:148233250" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:21.239Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_444429999.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:20.253Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:444429999" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:20.253Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_379062181.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:19.063Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:379062181" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:19.063Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_692796722.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:18.738Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:692796722" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:18.738Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_738194364.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:17.765Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:738194364" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:17.765Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_403170248.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:16.569Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:403170248" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-11T21:41:16.569Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_886311479.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T17:52:46.017Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:886311479" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-04T17:52:46.017Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:5364356992478578" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T08:54:08.395Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:test:Wed_Apr_23_18_39_41_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-23T13:09:46.023Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio5:286895551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T16:31:11.640Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:286895551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T16:31:11.640Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio1:286895551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T16:31:10.002Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio4:286895551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T16:31:10.002Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio3:286895551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T16:31:10.002Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio2:286895551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T16:31:10.002Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_758911085.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:54:10.596Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:758911085" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:54:10.596Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_779252734.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:52:58.333Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
   <dece:BasicAssetReference ContentID="urn:dece:cid:ORG:mystudio6:779252734" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T14:52:58.333Z" UpdatedDate="2014-08-18T09:04:39.000Z"/>
</dece:BasicAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"060082B11E2E6CDCE0530F991F0A63B0:26121DD1"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Thu, 23 Oct 2014 09:26:53 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Wed, 22 Oct 2014 09:26:53 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1413970013 VEd4XAofmQsAACP3EnwAAAAk urn:dece:org:org:dece:test-node-content-provider 10.31.153.42</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>66d88acf-0713-4166-9ed8-1652beb0bb30</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataDigitalList" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3b40220a-905f-412e-97aa-79de07a73b59"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="eac69ba8-3ecd-444b-84e3-5c027f9c298a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="fdc64382-399d-4f12-8927-356293a388ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("Altnode_oid",callTC.getPropertyValue("Altnode_oid"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="0925b779-fdef-4c63-9183-fff6c851590d"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - MetadataDigitalList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataDigitalList" id="e1243956-7d70-4505-ad38-aa0ddbfecebb"><con:settings/><con:config service="MetadataDigitalCreate_CTP" methodName="GET MetadataPhysicalGet" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Metadata/Digital/List" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataDigitalList" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="truststore-test-node-content-provider.jks" id="db9ed514-9306-4fac-8056-92ffded75207"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<!-- Build 7.8.4.1 Test Sample XML file generated by XMLSpy v2008 sp1 (http://www.altova.com)--><dece:BasicAsset 
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece Coordinator%20Interface%20Schema-v0171.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/md" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<!--<dece:BasicData ContentID="urn:dece:cid:FILE:STOPANDGO.TXT">-->
<dece:BasicData ContentID="${#TestCase#CID}">
		<md:UpdateNum>${#TestCase#RandomNumberGenerated}</md:UpdateNum>
		<md:LocalizedInfo default="true" language="en-US">
			<md:TitleDisplay19>StrngTitleDis3nd</md:TitleDisplay19>
			<md:TitleDisplay60>StringTitleDisplay60</md:TitleDisplay60>
			<md:TitleSort>StringTitleSort</md:TitleSort>
			<md:ArtReference resolution="13002x13002">http://www.altova2.com</md:ArtReference>
			<md:Summary190 cast="true">StringSummary190_${#TestCase#RandomNumberGenerated}</md:Summary190>
			<md:Summary400 cast="true">StringSummary400_${#TestCase#RandomNumberGenerated}</md:Summary400>
			<md:Summary4000 cast="true">StringSummary4000_${#TestCase#RandomNumberGenerated}</md:Summary4000>
			<md:DisplayIndicators>CC</md:DisplayIndicators>
			<md:DisplayIndicators>DD</md:DisplayIndicators>
			<md:Genre>Action</md:Genre>
			<md:Genre>Horror</md:Genre>
			<md:Keyword>StringKeyword</md:Keyword>
			<md:VersionNotes>String</md:VersionNotes>
			<md:Region>
				<md:country>AA</md:country>
			</md:Region>
			<md:Region>
				<md:country>US</md:country>
			</md:Region>
			<md:OriginalTitle>StringOriginalTitle</md:OriginalTitle>
			<md:CopyrightLine>StringCopyrightLine</md:CopyrightLine>
			<md:PeopleLocal>
				<md:Job>
					<md:JobFunction scheme="string">4.36</md:JobFunction>
					<md:JobDisplay>Visual Effects Artist</md:JobDisplay>
					<md:BillingBlockOrder>0</md:BillingBlockOrder>
					<md:Character>String1</md:Character>
					<md:Character>String122</md:Character>
					<md:Guest>true</md:Guest>
				</md:Job>
				<md:Name>
					<md:DisplayName>String</md:DisplayName>
					<md:SortName>String</md:SortName>
					<md:FirstGivenName>String</md:FirstGivenName>
					<md:SecondGivenName>String</md:SecondGivenName>
					<md:FamilyName>String</md:FamilyName>
					<md:Suffix>String</md:Suffix>
					<md:Moniker>String</md:Moniker>
				</md:Name>
				<md:Identifier>
					<md:Identifier>String1</md:Identifier>
					<md:Namespace>String1</md:Namespace>
					<md:ReferenceLocation>http://www.altova1.com</md:ReferenceLocation>
				</md:Identifier>
				<md:Gender>male</md:Gender>
			</md:PeopleLocal>
		</md:LocalizedInfo>
		<md:RunLength>P1Y2M3DT10H30M0S</md:RunLength>
		<md:ReleaseYear>2001</md:ReleaseYear>
		<md:ReleaseDate>2010-08-13</md:ReleaseDate>
		<md:ReleaseHistory>
			<md:ReleaseType>PurpleRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String324342342</md:Description>
			<md:ReleaseOrg organizationID="Stringggfsg">
				<md:DisplayName>Stringsgs</md:DisplayName>
				<md:SortName>Stringsdgsdf</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:ReleaseHistory>
			<md:ReleaseType>LightBlueRay</md:ReleaseType>
			<md:DistrTerritory>
				<md:country>AA</md:country>
			</md:DistrTerritory>
			<md:DateTime scheduled="true">2001-12-17T09:30:47.0Z</md:DateTime>
			<md:Date scheduled="true">2010-08-13</md:Date>
			<md:Description>String5465464</md:Description>
			<md:ReleaseOrg organizationID="String456456">
				<md:DisplayName>String45645633</md:DisplayName>
				<md:SortName>String34534533</md:SortName>
			</md:ReleaseOrg>
		</md:ReleaseHistory>
		<md:WorkType>Album</md:WorkType>
		<md:PictureColorType>color</md:PictureColorType>
		<md:PictureFormat>Letterbox</md:PictureFormat>
		<md:ThreeD>true</md:ThreeD>
		<md:AltIdentifier>
			<md:Namespace>String</md:Namespace>
			<md:Identifier>String</md:Identifier>
			<md:Location>http://www.altova.com</md:Location>
		</md:AltIdentifier>
		<md:AltIdentifier>
			<md:Namespace>String1221</md:Namespace>
			<md:Identifier>String1221</md:Identifier>
			<md:Location>http://www.altova122121.com</md:Location>
		</md:AltIdentifier>
		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>MPAA</md:System>
        			<md:Value>PG-13</md:Value>
        			<md:LinkToLogo>http://www.mpaa.org/_images/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet>
<!--		<md:RatingSet>
			<md:Rating>
        			<md:Region>
          			<md:country>US</md:country>
        			</md:Region>
        			<md:System>TVPG</md:System>
        			<md:Value>TV-Y7</md:Value>
        			<md:LinkToLogo>http://www.tvguidelines.org/parental-strongly.gif</md:LinkToLogo>
      			</md:Rating>
		</md:RatingSet> -->
<!--		<md:RatingSet>
			<md:NotRated>true</md:NotRated>
			<md:AdultContent>true</md:AdultContent>
		</md:RatingSet> -->
		<md:People>
			<md:Job>
				<md:JobFunction scheme="string">27.13</md:JobFunction>
				<md:JobDisplay>String55</md:JobDisplay>
				<md:BillingBlockOrder>55</md:BillingBlockOrder>
				<md:Character>String55</md:Character>
				<md:Character>String55222</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="string">28.2</md:JobFunction>
				<md:JobDisplay>String66</md:JobDisplay>
				<md:BillingBlockOrder>66</md:BillingBlockOrder>
				<md:Character>String66</md:Character>
				<md:Character>String62126</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String77</md:DisplayName>
				<md:SortName>String77</md:SortName>
				<md:FirstGivenName>String77</md:FirstGivenName>
				<md:SecondGivenName>String77</md:SecondGivenName>
				<md:FamilyName>String77</md:FamilyName>
				<md:Suffix>String77</md:Suffix>
				<md:Moniker>String77</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String88</md:Identifier>
				<md:Namespace>String</md:Namespace>
				<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:People>
			<md:Job>
				<md:JobFunction scheme="String">28</md:JobFunction>
				<md:JobDisplay>String99</md:JobDisplay>
				<md:BillingBlockOrder>99</md:BillingBlockOrder>
				<md:Character>String99</md:Character>
				<md:Character>Strindfsdffdg99</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Job>
				<md:JobFunction scheme="String">27.14</md:JobFunction>
				<md:JobDisplay>String111</md:JobDisplay>
				<md:BillingBlockOrder>111</md:BillingBlockOrder>
				<md:Character>String111</md:Character>
				<md:Character>String111wrwewewewe</md:Character>
				<md:Guest>true</md:Guest>
			</md:Job>
			<md:Name>
				<md:DisplayName>String222</md:DisplayName>
				<md:SortName>String222</md:SortName>
				<md:FirstGivenName>String222</md:FirstGivenName>
				<md:SecondGivenName>String222</md:SecondGivenName>
				<md:FamilyName>String222</md:FamilyName>
				<md:Suffix>String222</md:Suffix>
				<md:Moniker>String222</md:Moniker>
			</md:Name>
			<md:Identifier>
				<md:Identifier>String333</md:Identifier>
				<md:Namespace>String333</md:Namespace>
				<md:ReferenceLocation>http://www.altova333.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Identifier>
				<md:Identifier>String444</md:Identifier>
				<md:Namespace>String444</md:Namespace>
				<md:ReferenceLocation>http://www.altova444.com</md:ReferenceLocation>
			</md:Identifier>
			<md:Gender>male</md:Gender>
		</md:People>
		<md:CountryOfOrigin>
			<md:country>AA</md:country>
		</md:CountryOfOrigin>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:AssociatedOrg role="String" organizationID="String">
			<md:DisplayName>String</md:DisplayName>
			<md:SortName>String</md:SortName>
		</md:AssociatedOrg>
		<md:SequenceInfo>
			<md:Number>0</md:Number>
			<md:HouseSequence>String</md:HouseSequence>
		</md:SequenceInfo>
		<md:Parent relationshipType="ispieceof">
		<!--	<md:ParentContentID>urn:dece:cid:org:mystudio:0067</md:ParentContentID>-->
			<md:ParentContentID>urn:dece:cid:org:mystudio:0005</md:ParentContentID> 
		</md:Parent>
	</dece:BasicData>
	<dece:ResourceStatus>
		<dece:Current>
			<dece:Value>urn:dece:type:status:active</dece:Value>
			<dece:Description>2010-08-01T09:30:47.0Z</dece:Description>
		</dece:Current>
		<dece:History>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:suspended</dece:Value>
				<dece:Description>temp suspension</dece:Description>
			</dece:Prior>
			<dece:Prior>
				<dece:Value>urn:dece:type:status:active</dece:Value>
				<dece:Description>active</dece:Description>
			</dece:Prior>
		</dece:History>
	</dece:ResourceStatus>
</dece:BasicAsset>]]></con:request><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Asset/Metadata/Digital/List</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="f89ade2c-1d8e-44f3-96f8-f96a671b725d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataDigitalList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		

	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="cbc3d921-86d2-4467-8e45-e134cfd0603f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination" id="dfc55508-e1f1-471f-a7c6-6e0fdde36598"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET - MetadataDigitalList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:DigitalAssetList[1]}' )


log.info response.size()

//def filtercount = context.expand( '${GET - MetadataDigitalList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:DigitalAssetList[1]/@FilterCount}' )
def filtercount = context.expand( '${GET - MetadataDigitalList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:DigitalAssetList[1]/@FilterCount}' )

log.info filtercount

//def responseAsXml1 = context.expand( '${GET - OffsetAndFilterCount#ResponseAsXml#declare namespace ns1=\'http://www.decellc.org/schema/2012/12/coordinator\'; //ns1:LogicalAssetList[1]/ns1:LogicalAssetReference}' )
def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag" id="671b3e7e-6ea3-44e0-ad8c-e9e375bc159f"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataDigitalList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header Last Modified Date" id="a7d31f13-dfaa-4920-84b8-62b3c3b7cf4c"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataDigitalList');
def expXML = tStep.httpRequest.response.getResponseContent();

String Last_Modified = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;
	}
}

tP.setPropertyValue("Last-Modified", Last_Modified);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates" id="7739e6f9-c734-4ff4-a92b-e16323b808da"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def response = context.expand( '${GET - MetadataDigitalList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:DigitalAssetList[1]}' )


//log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
//log.info records

for(int i=0;i&lt;=records.DigitalAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.DigitalAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.DigitalAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.DigitalAssetReference[i].@UpdatedDate);
}

//log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
//log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="2efc4357-89da-4d70-8ced-10935314e7e6"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataDigitalList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataDigitalList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="2017a82b-9f26-4353-9f3c-ee8517721a1b"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2

	}


if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2
	}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>607631293</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:DigitalAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1000" FilterMoreAvailable="true" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:523412905" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:36.128Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:881770087" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:34.422Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:497932752" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:29.111Z" UpdatedDate="2014-10-22T09:26:30.855Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:234220118" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-10-22T09:24:00.006Z" UpdatedDate="2014-10-22T09:24:00.563Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:856009054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:46.721Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:258740459" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:46.036Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:569314995" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:43.700Z" UpdatedDate="2014-10-22T09:23:44.541Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:556956911" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:20:09.230Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:825252574" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:20:07.915Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:911334661" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:20:06.627Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:953828623" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:14:08.883Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:838601075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:14:07.704Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:384322466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:14:06.638Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:994146325" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:58:33.396Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:490028168" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:58:20.474Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:785691531" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:58:20.040Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:725878479" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:58:17.488Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:371612687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:55:49.401Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:408327804" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:55:48.168Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:441405033" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:55:46.988Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:36778679902002054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:33:44.117Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Wed_Oct_22_12_51_45_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:21:50.891Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:07355376897929944" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:19:25.123Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3262503552634419" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:07:19.785Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Wed_Oct_15_18_45_41_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T13:15:44.329Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:874431892" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:51:38.711Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:139958444" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:51:36.288Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:586933288" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:51:34.200Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:970102346" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:50:14.129Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:844964815" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T07:21:09.875Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:734649466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T07:21:07.909Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:617580364" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T07:21:01.100Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:775786531547419" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:18:39.231Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Sat_Sep_27_17_00_50_IST_2014  " CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-27T11:30:49.362Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Sat_Sep_27_16_57_50_IST_2014  " CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-27T11:27:49.510Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Sat_Sep_27_16_56_33_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-27T11:26:32.562Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6070819336190284" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T11:21:35.158Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:38693729233484053" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T11:08:57.185Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7939850673609785" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T10:57:29.237Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9050250736715658" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T10:38:02.881Z" UpdatedDate="2014-09-26T10:38:54.477Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8422994260900745" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T13:27:51.079Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7533100093838548" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T13:15:27.763Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:06381131047053779" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T13:02:47.735Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6151958492852305" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T12:44:50.821Z" UpdatedDate="2014-09-18T12:45:35.330Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6373744858825378" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T12:14:17.738Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:04824041178767513" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:49:21.292Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8663626101742266" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:33:24.466Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6347531173881292" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:15:47.472Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7097029473521075" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T10:54:09.272Z" UpdatedDate="2014-09-18T10:54:58.780Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Thu_Sep_18_16_09_54_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T10:39:40.634Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6681616638478692" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:39:31.018Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:23089666988839463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:27:34.113Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:1808801083238365" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:16:27.165Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9237752356431667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:57:43.302Z" UpdatedDate="2014-09-17T14:58:27.563Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8499605926101192" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:24:15.358Z" UpdatedDate="2014-09-17T14:24:59.316Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:206700484" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-09-17T14:10:59.605Z" UpdatedDate="2014-09-17T14:11:00.209Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:227793170" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:45.342Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:553168056" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:44.663Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:378004845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:42.900Z" UpdatedDate="2014-09-17T14:10:43.520Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:416979902" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:06:32.873Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:143235162" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:06:32.047Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:203234884" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:06:30.187Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:805394669" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-09-17T13:25:13.674Z" UpdatedDate="2014-09-17T13:25:14.206Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:644415637" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:52.312Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:620366301" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:51.680Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:458582261" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:49.040Z" UpdatedDate="2014-09-17T13:24:50.110Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:392822801" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:19:47.149Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:430689616" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:19:45.573Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:283999352" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:19:42.252Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:20351722836328767" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T13:19:37.180Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8550893598925225" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T13:07:00.365Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5877419189500059" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T12:56:01.318Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:880213881686707" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T12:36:48.742Z" UpdatedDate="2014-09-09T12:37:30.330Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6258777554638939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T11:19:33.216Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:228153786253398" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T11:05:26.932Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:09144010751197151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:53:27.433Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8331289085835543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:34:15.622Z" UpdatedDate="2014-09-09T10:35:04.587Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:019696641604807774" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:02:59.418Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5493721636004214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:52:05.949Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5838309665304229" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:34:48.839Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:23099741478643632" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:15:32.318Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8660669548693937" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:01:33.006Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:2898835851459276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T08:49:27.577Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5332364981905816" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T08:34:18.574Z" UpdatedDate="2014-09-09T08:34:57.647Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9066189356670667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T17:58:30.839Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7674461459357704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T17:43:42.500Z" UpdatedDate="2014-09-08T17:44:21.096Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4476591944379351" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:56:38.441Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5590148740771269" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:44:33.367Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7403656234108126" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:25:00.220Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:34495043139870574" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:09:01.894Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:840083341958595" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:56:59.990Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:615571893769249" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:43:36.224Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9368387717435002" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:33:29.660Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:21948482872652164" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:15:43.954Z" UpdatedDate="2014-09-08T15:16:28.322Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:438443500946054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:41:45.196Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9982332474204013" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:31:42.278Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:662942032738973" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:10:32.347Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8664512473910557" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T13:54:18.286Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5056383310558903" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T13:33:50.211Z" UpdatedDate="2014-09-08T13:34:37.382Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3046891208044742" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T12:54:38.429Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8364715608999574" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T11:03:23.807Z" UpdatedDate="2014-09-08T11:04:06.749Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:eidr-s:17ce-571a-b4ac-5c27-165c-d" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-04T07:20:03.104Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:775602671" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-28T13:20:08.051Z" UpdatedDate="2014-08-28T13:20:08.945Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:701624748" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:44.551Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:861777877" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:43.503Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:139813803" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:40.512Z" UpdatedDate="2014-08-28T13:19:41.415Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:575203085" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-28T13:14:17.751Z" UpdatedDate="2014-08-28T13:14:18.601Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:223390468" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:13:54.522Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:868217845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:13:53.593Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:946107138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:13:50.335Z" UpdatedDate="2014-08-28T13:13:51.675Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:364055218" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-28T13:03:09.093Z" UpdatedDate="2014-08-28T13:03:10.017Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:661476331" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:44.611Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:790664185" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:43.403Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A992837239" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:41.421Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:837307511" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-28T12:56:24.809Z" UpdatedDate="2014-08-28T12:56:26.124Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:489838066" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:55:59.833Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:793001293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:55:58.824Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:477959619" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:55:54.576Z" UpdatedDate="2014-08-28T12:55:56.095Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:431878810" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-26T22:10:38.175Z" UpdatedDate="2014-08-26T22:10:38.849Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:388415120" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:21.743Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:486660773" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:20.790Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:646034978" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:18.022Z" UpdatedDate="2014-08-26T22:10:19.038Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:469168737" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-22T07:54:10.770Z" UpdatedDate="2014-08-22T07:54:11.154Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:143875125" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:53:58.040Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:356009055" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:53:57.532Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:801079226" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:53:56.025Z" UpdatedDate="2014-08-22T07:53:56.544Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:749702578" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:50:11.239Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:861079287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:50:10.489Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:986008313" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:50:09.542Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:299651390" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:47:46.948Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:917298720" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:47:46.223Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:702282477" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:47:45.210Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:273996294" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-22T07:44:10.728Z" UpdatedDate="2014-08-22T07:44:11.090Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:754831850" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:43:58.080Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:837421134" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:43:57.491Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:466629880" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:43:55.602Z" UpdatedDate="2014-08-22T07:43:56.256Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:833122847" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:39:39.091Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:806232830" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:39:38.574Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:830825151" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:39:37.555Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:664494412" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T21:43:52.757Z" UpdatedDate="2014-08-21T21:43:53.087Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:856361855" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:42.327Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:301897144" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:41.936Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:531431887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:40.487Z" UpdatedDate="2014-08-21T21:43:41.076Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:192589513" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:39:55.704Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:112804977" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:39:55.136Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:900456131" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:39:54.169Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:579319523" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T21:31:53.961Z" UpdatedDate="2014-08-21T21:31:54.268Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:636285138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:42.339Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:479350163" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:41.938Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:544273219" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:40.118Z" UpdatedDate="2014-08-21T21:31:40.688Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:131157343" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:27:57.657Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:589739959" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:27:56.935Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:170360390" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:27:55.756Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:793631254" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T21:20:39.321Z" UpdatedDate="2014-08-21T21:20:39.605Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:197079387" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:28.783Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:443494205" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:28.343Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:300709590" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:27.026Z" UpdatedDate="2014-08-21T21:20:27.588Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:440893000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:16:37.464Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:217021877" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:16:36.652Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:631275635" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:16:35.455Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:161031393" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T19:00:32.415Z" UpdatedDate="2014-08-21T19:00:32.843Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:923495480" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:18.897Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:334508499" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:18.457Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:651864271" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:17.012Z" UpdatedDate="2014-08-21T19:00:17.498Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:277638599" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T18:56:09.677Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:488699852" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T18:56:08.981Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:960105783" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T18:56:08.030Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:573224152" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T14:05:22.769Z" UpdatedDate="2014-08-21T14:05:23.758Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:951230365" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:09.014Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:613968452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:08.532Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:896460602" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:06.936Z" UpdatedDate="2014-08-21T14:05:07.353Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:307235308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:02:58.918Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:120584719" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:02:58.004Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:409887817" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:02:56.710Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:309514599" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T13:54:52.845Z" UpdatedDate="2014-08-21T13:54:53.710Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:347409549" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:38.055Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:868955136" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:37.600Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:814630825" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:35.762Z" UpdatedDate="2014-08-21T13:54:36.551Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:531062932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:52:27.781Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:855994223" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:52:27.079Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:914348606" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:52:26.159Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:511502325" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T13:35:17.408Z" UpdatedDate="2014-08-21T13:35:18.120Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:430034120" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:02.751Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:247314666" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:02.284Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:487622551" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:00.169Z" UpdatedDate="2014-08-21T13:35:01.027Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:871218543" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:32:51.912Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:337355887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:32:51.287Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:775516107" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:32:50.195Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:848792255" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:23:03.117Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:589563218" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:23:02.256Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:851272197" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:23:01.317Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:237226313" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T12:09:31.573Z" UpdatedDate="2014-08-21T12:09:31.862Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:208695023" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:18.984Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:595700632" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:18.461Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:533362233" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:17.194Z" UpdatedDate="2014-08-21T12:09:17.627Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:483847126" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:05:28.102Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:491021478" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:05:27.005Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:216419902" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:05:25.646Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:896874632" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-21T11:51:27.328Z" UpdatedDate="2014-08-21T11:51:27.836Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:222939470" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:11.018Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:853099945" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:10.383Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:584040693" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:08.325Z" UpdatedDate="2014-08-21T11:51:09.013Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:223122595" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:48:58.562Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:362841352" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:48:57.769Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:961499519" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:48:55.757Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:194280312" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T13:04:16.417Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:798768419" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T13:04:14.289Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:354780222" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T13:04:12.158Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:580822302" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T12:36:36.431Z" UpdatedDate="2014-08-18T12:36:36.825Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:855276799" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:21.353Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:575861655" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:20.642Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:987142969" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:18.121Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:457037531" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:33:45.991Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:954149042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:33:44.889Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:506113883" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:33:42.902Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:630834161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:19:54.521Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:724685484" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:19:53.404Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:784635936" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:19:52.048Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:303758452" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T10:08:07.126Z" UpdatedDate="2014-08-18T10:08:07.612Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:364796886" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:07:54.177Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:569162086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:07:53.513Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:613271904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:05:43.702Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:175031830" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:05:42.771Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:251872101" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:05:41.473Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:948251284" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T09:52:46.400Z" UpdatedDate="2014-08-18T09:52:46.800Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:340224894" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:34.955Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:151212688" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:34.289Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:898826966" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:32.006Z" UpdatedDate="2014-08-18T09:52:32.806Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:348495596" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:48:32.677Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:962452939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:48:31.557Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:595612921" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:48:30.539Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:623648638" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T08:53:57.691Z" UpdatedDate="2014-08-18T08:53:58.007Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:960386161" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:41.331Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:360168875" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:40.501Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:486045545" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:38.396Z" UpdatedDate="2014-08-18T08:53:39.232Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:702214121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:51:24.373Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:228795932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:51:23.297Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:284225697" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:51:21.767Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:366628663" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T08:34:26.029Z" UpdatedDate="2014-08-18T08:34:26.460Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:415391495" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:34:09.422Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:527888083" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:34:08.247Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:843766750" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:34:05.842Z" UpdatedDate="2014-08-18T08:34:06.731Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:268303252" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:31:50.554Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:647793695" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:31:49.722Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:182545245" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:31:48.398Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:531391935" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T08:00:15.339Z" UpdatedDate="2014-08-18T08:00:15.724Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:221558080" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:00:02.855Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:246509648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:00:02.185Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:978954204" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:59:59.967Z" UpdatedDate="2014-08-18T08:00:00.742Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:776207138" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:55:55.017Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:517085221" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:55:53.937Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:393331638" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:55:52.502Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:916188628" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T07:26:22.744Z" UpdatedDate="2014-08-18T07:26:23.439Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:295312932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:15.062Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:923471606" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:14.471Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:861098651" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:12.652Z" UpdatedDate="2014-08-18T07:26:13.216Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:325406376" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:24:04.877Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:213894382" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:24:04.295Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:874039557" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:24:03.247Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:631138385" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:40:00.069Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:187146789" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:39:58.046Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:284296836" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:39:55.844Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:370864557" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T05:08:46.083Z" UpdatedDate="2014-08-18T05:08:46.770Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:822684213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:08:32.042Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:966823466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:08:31.435Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:693189449" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:08:29.700Z" UpdatedDate="2014-08-18T05:08:30.146Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:680002599" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:06:21.536Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:540089837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:06:20.818Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:377586040" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:06:19.426Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:697284109" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-18T04:56:47.469Z" UpdatedDate="2014-08-18T04:56:48.167Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:176307978" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:56:27.776Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:290522145" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:56:26.945Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:919229356" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:56:24.527Z" UpdatedDate="2014-08-18T04:56:25.302Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:142044369" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:54:13.888Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:139248536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:54:12.998Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:544965472" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:54:11.391Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:294685663" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-14T13:09:44.284Z" UpdatedDate="2014-08-14T13:09:44.654Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:733543812" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:29.973Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:578542774" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:29.304Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:714250627" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:27.327Z" UpdatedDate="2014-08-14T13:09:28.006Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:665072277" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:05:17.762Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:754596961" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:05:15.444Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:234234015" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:05:13.203Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:622988778" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:03:08.957Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:494296821" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:03:07.718Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:595654951" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:03:06.282Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:880441358" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-14T12:23:53.511Z" UpdatedDate="2014-08-14T12:23:53.909Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:720048473" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:39.742Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:761909732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:38.893Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:959848625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:36.629Z" UpdatedDate="2014-08-14T12:23:37.619Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:979810855" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:17:15.215Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:730862955" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:17:14.303Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:692157424" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:17:12.980Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:850904743" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:14:17.945Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:468159688" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:14:16.969Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:808764292" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:14:15.597Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:968750657" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:08:57.296Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:138555190" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:08:56.352Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:225705707" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:08:55.174Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:367274840" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-14T11:29:56.617Z" UpdatedDate="2014-08-14T11:29:57.257Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:432907900" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:29:42.327Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:307531179" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:29:41.593Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:335115487" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:29:39.264Z" UpdatedDate="2014-08-14T11:29:40.116Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:324498214" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:22:55.149Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:152028313" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:22:54.114Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:412161261" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:22:52.632Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:538661438" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:45:19.653Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:502291042" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:45:16.901Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:237826873" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:45:09.195Z" UpdatedDate="2014-08-14T10:45:12.538Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:249472379" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:42:18.938Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:154855156" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:42:15.948Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:428151320" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:42:13.356Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:300216840" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-08-14T03:13:35.449Z" UpdatedDate="2014-08-14T03:13:37.682Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:866822181" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:12:56.874Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:253151134" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:12:54.324Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:705080827" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:12:46.703Z" UpdatedDate="2014-08-14T03:12:49.631Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:525355837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:00:12.261Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:370317273" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:00:09.411Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:805722668" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:00:06.723Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:273607704" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-13T13:49:01.700Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:419788447" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-13T13:48:58.425Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:519134048" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-13T13:48:55.461Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:972607761" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T17:00:48.201Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:694819363" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T17:00:45.563Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:488534681" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T17:00:42.107Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6271967285804404" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T09:31:04.877Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9568185868594177" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T09:17:40.859Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:2929648706651997" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T09:06:13.687Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7025766394762213" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T08:49:01.361Z" UpdatedDate="2014-07-25T08:49:47.892Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:21498262966937542" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-23T11:53:33.355Z" UpdatedDate="2014-06-23T11:54:17.137Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7451510728163393" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-23T11:39:35.989Z" UpdatedDate="2014-06-23T11:40:19.003Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7649935365613796" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T11:06:26.042Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8030444830412381" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T10:53:19.149Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6825402414323954" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T10:42:44.066Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:05021286227013633" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T10:21:49.914Z" UpdatedDate="2014-06-17T10:22:40.259Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7853599283212523" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T09:13:51.226Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:03789827807551216" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T08:59:53.343Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:785077232562919" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T08:48:01.539Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6719836004265732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T08:32:09.327Z" UpdatedDate="2014-06-17T08:32:54.279Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:421" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-13T11:32:50.332Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:1613" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-13T09:38:21.222Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8128779188530302" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:45:53.247Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3662365371824251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:30:19.332Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4695575048921894" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:20:31.405Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9442012726212836" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:04:53.218Z" UpdatedDate="2014-06-06T13:05:34.123Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:14546005405844087" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T11:38:11.332Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7931288313550686" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T11:26:15.922Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9746325307032093" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T11:15:53.707Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:05026765158686641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T11:00:56.888Z" UpdatedDate="2014-06-06T11:01:39.171Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5267537081360466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:52:01.335Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8989434820376517" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:38:42.600Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:2574978117150081" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:26:55.813Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7412560012478109" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:07:13.289Z" UpdatedDate="2014-05-29T16:08:01.528Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6534232425288812" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T10:09:38.992Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:09132352625618156" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T09:58:18.529Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6692194611662301" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T09:48:44.598Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:31711248337040443" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T09:32:18.058Z" UpdatedDate="2014-05-29T09:33:05.229Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8078050556533347" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T08:36:05.521Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6326035058660432" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T08:13:01.335Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:1816971180040703" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T07:08:52.890Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3265337974768371" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T06:54:19.339Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:12186050487487865" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T06:44:37.557Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8153984879322599" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T06:28:02.931Z" UpdatedDate="2014-05-29T06:28:49.550Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9315691645959211" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T09:07:37.506Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5237045444804813" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T08:15:23.005Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8291582012428689" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T08:00:10.668Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4010841541095932" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T07:50:32.898Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7181164651987648" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T07:31:51.153Z" UpdatedDate="2014-05-23T07:32:39.973Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3890903589333149" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-22T14:46:55.002Z" UpdatedDate="2014-05-22T14:47:43.814Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:294993758604987" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-21T11:35:39.171Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5052869383513681" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-19T15:19:31.271Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5380705573628861" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-19T15:08:50.099Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3250545614736121" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-19T15:00:23.490Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:1030933660136053" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-19T14:45:06.874Z" UpdatedDate="2014-05-19T14:45:50.134Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:47055592066254603" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:33:09.268Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5844639394978397" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:22:40.697Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8540192021693884" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:13:17.917Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:43185050207577447" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T15:59:42.031Z" UpdatedDate="2014-05-14T16:00:22.144Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9933780861084452" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T15:09:23.949Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:011987063772125883" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T14:59:31.204Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:24200450482826463" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T14:52:04.285Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:27986592141640143" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T14:39:06.651Z" UpdatedDate="2014-05-14T14:39:44.159Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:16372757477054567" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T13:54:05.744Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:07525793940894676" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T13:39:14.571Z" UpdatedDate="2014-05-14T13:39:57.669Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:0989" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T11:43:16.577Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:35367264042870294" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T08:14:13.212Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:06664401323036495" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T08:04:22.922Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6728941431540201" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T07:56:14.184Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7145942420298472" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T07:39:00.534Z" UpdatedDate="2014-05-14T07:39:43.716Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9664597886953741" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T12:44:07.625Z" UpdatedDate="2014-05-12T12:44:54.509Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4494114678555441" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T12:32:17.141Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9543119261710252" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T11:38:05.144Z" UpdatedDate="2014-05-12T11:38:48.316Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:40597309506843904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T11:22:19.896Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3715342558476734" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T16:57:52.832Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7745218107926725" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T16:48:07.212Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6581897690123945" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T16:40:13.169Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:09714662358622261" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T16:19:30.772Z" UpdatedDate="2014-05-07T16:20:19.097Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:10862518791151654" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T14:02:57.091Z" UpdatedDate="2014-05-07T14:03:45.596Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:06333963952805999" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:56:55.975Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9474934166214269" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:45:56.955Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3798934172836159" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:36:39.453Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:39738231117529654" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:20:29.747Z" UpdatedDate="2014-04-28T08:21:18.951Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:2193182993970756" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T12:00:16.185Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7071189661881098" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T11:50:01.482Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9583706614775626" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T11:22:13.768Z" UpdatedDate="2014-04-22T11:22:58.242Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4361730879517135" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T11:08:26.528Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6602221533297011" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T16:24:32.272Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5792507353793173" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T11:59:20.031Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:23804828645952536" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T11:47:23.282Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:07917260747884647" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T11:24:18.840Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4237933682658864" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T10:49:04.533Z" UpdatedDate="2014-04-21T10:49:56.558Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Tue_Apr_08_21_58_34_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-08T16:28:35.465Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Tue_Apr_08_21_54_46_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-08T16:24:46.075Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9743726309187967" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T13:16:23.908Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:13211507553638158" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T13:05:22.554Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9808221600327883" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:56:47.047Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:8819594624629871" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:41:47.585Z" UpdatedDate="2014-03-31T12:42:30.101Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:15535681437279092" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:30:20.020Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6392121474655997" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:23:31.236Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:5436891567297156" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T11:54:05.369Z" UpdatedDate="2014-03-31T11:55:01.951Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4267163539491521" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T11:02:52.966Z" UpdatedDate="2014-03-31T11:03:47.406Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Fri_Mar_28_01_26_41_IST_2014" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-03-27T19:52:58.541Z" UpdatedDate="2014-03-27T19:53:02.227Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Fri_Mar_28_01_18_38_IST_2014" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-03-27T19:44:56.052Z" UpdatedDate="2014-03-27T19:45:04.692Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ANKIT_CID_DONT_TOUCH_9.txt:999413296" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:32.352Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-894888091-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:24.990Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-151471832-F5DD-:9ABC-DEF0-8" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:22.595Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD:479058046000H" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:19.488Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%2Fwww.example.org%2FresourceNumber165120919.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:17.230Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:cidf:hdl:1735.120A%2F890518313" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:15.180Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:smpte-umid:72.61.23.30.01.01.01.01.01.01.01.00.00.00.00.00" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:12.155Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:adid:Abcd12345678H" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-03T07:23:32.583Z" UpdatedDate="2014-03-26T14:53:08.708Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:gtin:1061414136732" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:06.982Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123%2F1234-5678-9ABC-DEF0-K:237847237" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:04.711Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_780028270" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:02.187Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysicalCreatebyMDP_348886035" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:59.914Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford+%26+Sons%3AMDPysicalCreatebyMDP_596133157" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:57.372Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISAN:1234-1234-1917-0200-8-0000-0000-F" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:54.417Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law+%26+Order+Criminal+Intent%3AMDPysicalCreatebyMDP_392631352" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:51.829Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo+%26+Juliet%3AMDPysicalCreatebyMDP_842235244" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:49.433Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone+with+the+Wind%3AMDPysicalCreatebyMDP_258285192" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:47.322Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:UUID:121AC628-D92E-1D6D-5224-288457972842" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:42.982Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:GRID:A12425GAB515965207" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:40.821Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_754266904" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:37.516Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_485384562" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:34.423Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:MDPysicalCreatebyMDP_174746511" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:31.700Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISRC:USS914061367" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:29.433Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent621604658" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:26.962Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISWC:T-111.468.001-2" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:23.922Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate:930793659.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:21.067Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:12345ABCDEFMDPysicalCreatebyMDP_237095135" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:16.675Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Wed_Mar_26_18_18_47_IST_2014" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-03-26T12:45:03.969Z" UpdatedDate="2014-03-26T12:45:14.841Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:Wed_Mar_26_18_04_18_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:30:35.631Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:77873388945659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:56:17.382Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7572630913669619" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:42:50.951Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9176552842392338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:30:51.582Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7025492937228895" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:02:05.839Z" UpdatedDate="2014-03-13T11:03:20.694Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4110940257748532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T11:20:29.588Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:37738875135621597" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T11:09:55.363Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:17837611791324115" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T11:01:17.667Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3692374783974073" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T10:45:41.812Z" UpdatedDate="2014-03-11T10:46:27.764Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7679592758420362" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T10:25:43.263Z" UpdatedDate="2014-03-11T10:26:34.052Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:4815160877439105" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T12:11:02.882Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3910560658448887" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T12:00:35.772Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:6953221512105785" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T11:52:02.234Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:9638517086471655" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T11:37:04.086Z" UpdatedDate="2014-02-24T11:37:46.767Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:05775410082813459" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T11:08:38.515Z" UpdatedDate="2014-02-24T11:09:20.256Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:7832736162304169" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T10:45:46.056Z" UpdatedDate="2014-02-24T10:46:26.164Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:3962495608130929" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T10:24:20.441Z" UpdatedDate="2014-02-24T10:25:06.827Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:2517642877066334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T10:04:33.280Z" UpdatedDate="2014-02-24T10:05:24.489Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:332798192" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T17:13:19.503Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:SUBTITLE_MetadataDigitalCreate.txt:479769039" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-20T17:13:15.703Z" UpdatedDate="2014-02-20T17:13:18.620Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:IMAGE_MetadataDigitalCreate.txt:990221669" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-20T17:13:12.485Z" UpdatedDate="2014-02-20T17:13:14.709Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:VIDEO_MetadataDigitalCreate.txt:952103543" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-20T17:13:05.918Z" UpdatedDate="2014-02-20T17:13:11.546Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:470084087" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-20T17:13:02.495Z" UpdatedDate="2014-02-20T17:13:05.144Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:100868567" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-20T16:54:30.723Z" UpdatedDate="2014-02-20T16:54:32.845Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:889805258" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-20T16:54:24.373Z" UpdatedDate="2014-02-20T16:54:29.331Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:562388047" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-20T16:54:13.777Z" UpdatedDate="2014-02-20T16:54:22.074Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:RIGHTS_EXAMPLE_APIDVersion_877956.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T12:43:04.980Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate_658951322.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-17T12:35:02.622Z" UpdatedDate="2014-02-17T12:35:08.285Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:511113975" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-17T12:33:38.690Z" UpdatedDate="2014-02-17T12:33:44.514Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:557722246" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-17T12:32:09.916Z" UpdatedDate="2014-02-17T12:32:16.491Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:645226400" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-17T07:30:09.325Z" UpdatedDate="2014-02-17T07:30:15.785Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:996704290" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-17T07:28:35.327Z" UpdatedDate="2014-02-17T07:28:41.441Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:723265163" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-17T07:27:53.741Z" UpdatedDate="2014-02-17T07:27:59.267Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:865384992" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-17T07:26:31.679Z" UpdatedDate="2014-02-17T07:26:37.194Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:789860303" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-17T07:25:14.249Z" UpdatedDate="2014-02-17T07:25:21.970Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_279319952.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:38:28.612Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_286955487.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T13:38:09.027Z" UpdatedDate="2014-02-12T13:38:15.293Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:739835958" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:37:50.840Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_478500763.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:37:21.326Z" UpdatedDate="2014-02-12T13:37:26.737Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_687713908.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:37:02.707Z" UpdatedDate="2014-02-12T13:37:08.193Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_299892264.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T13:36:43.849Z" UpdatedDate="2014-02-12T13:36:49.330Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:650599303" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:36:30.649Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:749379399" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:36:00.216Z" UpdatedDate="2014-02-12T13:36:08.341Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:536553142" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:35:44.078Z" UpdatedDate="2014-02-12T13:35:54.760Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:403922378" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:35:24.882Z" UpdatedDate="2014-02-12T13:35:35.752Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:470879359" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:21:14.489Z" UpdatedDate="2014-02-12T13:21:23.146Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:606441158" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:21:02.750Z" UpdatedDate="2014-02-12T13:21:11.183Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:197849361" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:19:53.281Z" UpdatedDate="2014-02-12T13:20:01.759Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:668677027" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:19:28.629Z" UpdatedDate="2014-02-12T13:19:37.252Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_603889100.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:16:38.206Z" UpdatedDate="2014-02-12T13:16:40.924Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_915932888.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:16:29.033Z" UpdatedDate="2014-02-12T13:16:31.729Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_919643628.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:16:18.830Z" UpdatedDate="2014-02-12T13:16:22.469Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_149989970.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:16:10.753Z" UpdatedDate="2014-02-12T13:16:15.106Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:test:393923988" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:58.885Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:671584604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:55.986Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:127503324" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:52.698Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:106662702" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:49.786Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:508140854" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:40.976Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:442748163" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:38.005Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:793160064" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:35.070Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:701304160" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:29.579Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:322171334" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:26.856Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:850461453" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:23.971Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:566338773" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:21.146Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:628793255" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:15.516Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:552218086" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:15:06.976Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:477391625" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:14:48.036Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:181903926" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:14:41.962Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:637757604" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:14:33.249Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:211805200" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:13:40.272Z" UpdatedDate="2014-02-12T13:13:49.070Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:SUBTITLE_MetadataDigitalCreate.txt:983780674" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:13:28.797Z" UpdatedDate="2014-02-12T13:13:37.506Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:IMAGE_MetadataDigitalCreate.txt:544578628" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:13:17.752Z" UpdatedDate="2014-02-12T13:13:26.078Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:VIDEO_MetadataDigitalCreate.txt:282730612" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:13:06.619Z" UpdatedDate="2014-02-12T13:13:14.862Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate_444583740.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:12:54.349Z" UpdatedDate="2014-02-12T13:13:02.984Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-132946706-F5DD-9ABC-DEF0-8" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:12:45.901Z" UpdatedDate="2014-02-12T13:12:48.695Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:939220470     " CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:12:34.377Z" UpdatedDate="2014-02-12T13:12:42.749Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt_401947300" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:12:20.179Z" UpdatedDate="2014-02-12T13:12:28.688Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt_510987971" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:12:08.694Z" UpdatedDate="2014-02-12T13:12:17.486Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt_805730657" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:11:57.871Z" UpdatedDate="2014-02-12T13:12:06.040Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt_414545582" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:11:45.388Z" UpdatedDate="2014-02-12T13:11:55.119Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_%25_378520630.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:11:33.844Z" UpdatedDate="2014-02-12T13:11:41.961Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_|_873979366.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:11:22.755Z" UpdatedDate="2014-02-12T13:11:30.736Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ _422256761.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:11:11.725Z" UpdatedDate="2014-02-12T13:11:19.767Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:963602808" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:11:08.618Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:363979689" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:11:05.928Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:225539466" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:10:46.869Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:557667687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:10:38.885Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:241856047" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:10:35.648Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:120234224" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:10:27.387Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:154708392" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:10:11.221Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:333355191" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:09:57.508Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:662946525" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:09:49.366Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:601544284" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T13:09:37.808Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-%3A444398319-F5DD-9ABC-DEF0-8:%3AABCD" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:09:04.569Z" UpdatedDate="2014-02-12T13:09:13.623Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-270287846-F5DD-9ABC-DEF0-8%3AABCD" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:08:53.514Z" UpdatedDate="2014-02-12T13:09:01.469Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-%3A179006350-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:08:41.881Z" UpdatedDate="2014-02-12T13:08:50.444Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-150924287-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:08:30.334Z" UpdatedDate="2014-02-12T13:08:38.439Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-%3A%3A555949919-F5DD-9ABC-DEF0:-8" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:08:08.280Z" UpdatedDate="2014-02-12T13:08:16.575Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-510381625-F5DD-9ABC-DEF0-8%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:07:56.917Z" UpdatedDate="2014-02-12T13:08:05.236Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234%3A-708471024-F5DD-9ABC-DEF0-:8" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:07:45.589Z" UpdatedDate="2014-02-12T13:07:53.935Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-932798599-F5DD-:9ABC-DEF0-8" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:07:34.308Z" UpdatedDate="2014-02-12T13:07:42.117Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD%3A%3A964439693:000H" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:07:12.067Z" UpdatedDate="2014-02-12T13:07:20.172Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD488373177000H%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:07:00.911Z" UpdatedDate="2014-02-12T13:07:09.103Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD%3A:486953447000H" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:06:49.598Z" UpdatedDate="2014-02-12T13:06:57.984Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD:903256088000H" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:06:37.846Z" UpdatedDate="2014-02-12T13:06:46.383Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2F:olympics%2F486876176%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:06:15.214Z" UpdatedDate="2014-02-12T13:06:23.453Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2Folympics%2F952100538%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:06:04.144Z" UpdatedDate="2014-02-12T13:06:12.267Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2F:olympics%2F366501429%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:05:51.997Z" UpdatedDate="2014-02-12T13:06:01.050Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2F:olympics%2F700755576" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:05:40.440Z" UpdatedDate="2014-02-12T13:05:49.052Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%3A%3A%2Fwww.example.org%2FresourceNumber474207224%3A.txt%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:05:18.166Z" UpdatedDate="2014-02-12T13:05:26.673Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http%3A%2F%2Fwww.example.org%2FresourceNumber492731948.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:05:06.999Z" UpdatedDate="2014-02-12T13:05:15.253Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%2F%2Fwww.example.org%2FresourceNumber%3A999153334.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:04:56.014Z" UpdatedDate="2014-02-12T13:05:03.991Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%2F%2Fwww.example.org%2FresourceNumber309948579.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T13:04:44.363Z" UpdatedDate="2014-02-12T13:04:52.908Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K:478994918%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:59:47.458Z" UpdatedDate="2014-02-12T12:59:55.857Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K%3A464389761" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:59:35.335Z" UpdatedDate="2014-02-12T12:59:44.266Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K:540274343%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:59:23.840Z" UpdatedDate="2014-02-12T12:59:32.177Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K:433188500" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:59:12.449Z" UpdatedDate="2014-02-12T12:59:20.777Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_479662386%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:58:49.676Z" UpdatedDate="2014-02-12T12:58:57.912Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5%3AMDPysicalCreatebyMDP_927593407" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:58:36.603Z" UpdatedDate="2014-02-12T12:58:45.547Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-%3A5:MDPysicalCreatebyMDP_706245770" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:58:24.624Z" UpdatedDate="2014-02-12T12:58:33.255Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_575187925" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:58:13.452Z" UpdatedDate="2014-02-12T12:58:21.597Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysical%3A%3ACreatebyMDP_482465206" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:57:50.513Z" UpdatedDate="2014-02-12T12:57:58.851Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet%3AMDPysicalCreatebyMDP_799318698" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:57:38.785Z" UpdatedDate="2014-02-12T12:57:47.468Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysical%3ACreatebyMDP_422717639" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:57:27.298Z" UpdatedDate="2014-02-12T12:57:35.229Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysicalCreatebyMDP_670936368" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:57:16.295Z" UpdatedDate="2014-02-12T12:57:24.265Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_985329010" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:56:54.171Z" UpdatedDate="2014-02-12T12:57:02.410Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_549663970" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:56:42.593Z" UpdatedDate="2014-02-12T12:56:51.174Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_224791595" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:56:31.032Z" UpdatedDate="2014-02-12T12:56:39.097Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_740927944" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:56:19.883Z" UpdatedDate="2014-02-12T12:56:27.852Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp;%3AOrder%3ACriminal Intent:MDPysicalCreatebyMDP_663834393" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:55:02.744Z" UpdatedDate="2014-02-12T12:55:10.941Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp; Order Criminal Intent%3AMDPysicalCreatebyMDP_380951451" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:54:51.138Z" UpdatedDate="2014-02-12T12:54:59.555Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp; Order Criminal%3AIntent:MDPysicalCreatebyMDP_138248027" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:54:39.435Z" UpdatedDate="2014-02-12T12:54:47.962Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp; Order Criminal Intent:MDPysicalCreatebyMDP_114591538" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:54:28.282Z" UpdatedDate="2014-02-12T12:54:36.482Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo %3A&amp; Juliet%3AMDPysicalCreatebyMDP:_514518974" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:54:06.165Z" UpdatedDate="2014-02-12T12:54:14.117Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo &amp; Juliet%3AMDPysicalCreatebyMDP_196732452" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:53:55.269Z" UpdatedDate="2014-02-12T12:54:03.131Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo &amp; Juliet:MDPysicalCreatebyMDP_%3A711666163" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:53:42.874Z" UpdatedDate="2014-02-12T12:53:52.252Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo &amp; Juliet:MDPysicalCreatebyMDP_441458704" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:53:31.684Z" UpdatedDate="2014-02-12T12:53:39.657Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone with%3Athe%3AWind:MDPysicalCreatebyMDP_498489958" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:53:09.126Z" UpdatedDate="2014-02-12T12:53:17.348Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone with the Wind%3AMDPysicalCreatebyMDP_269964971" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:52:57.316Z" UpdatedDate="2014-02-12T12:53:06.019Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone%3Awith the Wind:MDPysicalCreatebyMDP_358621072" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:52:45.899Z" UpdatedDate="2014-02-12T12:52:54.181Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone with the Wind:MDPysicalCreatebyMDP_739932561" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:52:32.794Z" UpdatedDate="2014-02-12T12:52:42.400Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_850907440%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:50:17.577Z" UpdatedDate="2014-02-12T12:50:26.478Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5%3AMDPysicalCreatebyMDP_645983646" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:50:05.855Z" UpdatedDate="2014-02-12T12:50:14.443Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_600325890%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:49:54.088Z" UpdatedDate="2014-02-12T12:50:02.799Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_401538923" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:49:41.916Z" UpdatedDate="2014-02-12T12:49:51.046Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_853288665%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:49:20.115Z" UpdatedDate="2014-02-12T12:49:28.228Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X%3AMDPysicalCreatebyMDP_829423152" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:49:08.375Z" UpdatedDate="2014-02-12T12:49:17.091Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_106562034%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:48:57.426Z" UpdatedDate="2014-02-12T12:49:05.390Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_856628474" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:48:45.576Z" UpdatedDate="2014-02-12T12:48:54.131Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:%3AMDPysicalCreatebyMDP_350131776%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:48:22.325Z" UpdatedDate="2014-02-12T12:48:31.130Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7%3AMDPysicalCreatebyMDP_780020526" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:48:10.789Z" UpdatedDate="2014-02-12T12:48:19.190Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:MDPysicalCreatebyMDP_984297185%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:47:59.542Z" UpdatedDate="2014-02-12T12:48:07.799Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:MDPysicalCreatebyMDP_527716129" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:47:48.496Z" UpdatedDate="2014-02-12T12:47:56.607Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent301187755%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:46:30.920Z" UpdatedDate="2014-02-12T12:46:39.758Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456%3AMDPysicalCreateMDAgent567965594" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:46:19.907Z" UpdatedDate="2014-02-12T12:46:27.874Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent722548923%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:46:07.932Z" UpdatedDate="2014-02-12T12:46:16.830Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent748692904" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:45:56.421Z" UpdatedDate="2014-02-12T12:46:04.861Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate%3A206151393.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:44:38.151Z" UpdatedDate="2014-02-12T12:44:46.852Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_Metadata%3APhysicalCreate%3A:271795869.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:44:27.046Z" UpdatedDate="2014-02-12T12:44:35.139Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_Metadata%3APhysicalCreate:425580224.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:44:15.505Z" UpdatedDate="2014-02-12T12:44:23.932Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate:483053193.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:44:04.059Z" UpdatedDate="2014-02-12T12:44:12.383Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO%3AMDPysicalCreatebyMDP_244458806" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:43:40.506Z" UpdatedDate="2014-02-12T12:43:49.154Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MY%3ASTUDIO:12345ABCDEF%3AMDPysicalCreatebyMDP_237460477" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:43:29.338Z" UpdatedDate="2014-02-12T12:43:37.420Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:12345ABCDEF%3AMDPysicalCreatebyMDP_415105429" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:43:18.174Z" UpdatedDate="2014-02-12T12:43:26.319Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:12345ABCDEFMDPysicalCreatebyMDP_470851515" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:43:07.072Z" UpdatedDate="2014-02-12T12:43:15.189Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_299898065" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:43:00.903Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:gtin:1061414425218" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:42:38.207Z" UpdatedDate="2014-02-12T12:42:47.302Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:cidf:hdl:1735.120A/219719654" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:40:34.749Z" UpdatedDate="2014-02-12T12:40:43.032Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2Folympics%2F2012081009658225951%2F" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:40:23.498Z" UpdatedDate="2014-02-12T12:40:31.538Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:smpte-umid:72.61.17.30.01.01.01.01.01.01.01.00.00.00.00.00" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:40:12.297Z" UpdatedDate="2014-02-12T12:40:20.287Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:gtin:1061414379139" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:39:48.674Z" UpdatedDate="2014-02-12T12:39:56.912Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:upc:036161749373" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:39:37.285Z" UpdatedDate="2014-02-12T12:39:45.602Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:820261997_Interactive" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:38:59.065Z" UpdatedDate="2014-02-12T12:39:07.524Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:605746145_Subtitle" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:38:48.145Z" UpdatedDate="2014-02-12T12:38:56.223Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:738522692_Video" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:38:37.225Z" UpdatedDate="2014-02-12T12:38:45.310Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:376376036_Image" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:38:26.708Z" UpdatedDate="2014-02-12T12:38:34.467Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:376581524_Audio" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:38:16.157Z" UpdatedDate="2014-02-12T12:38:24.000Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K:100882900" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:34:33.019Z" UpdatedDate="2014-02-12T12:34:40.999Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:152416019%3Aa" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:34:21.363Z" UpdatedDate="2014-02-12T12:34:29.511Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISAN:1234-1234-7950-0200-8-0000-0000-F" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:34:10.166Z" UpdatedDate="2014-02-12T12:34:18.394Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp; Order Criminal Intent:MDPysicalCreatebyMDP_387985193" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:33:58.928Z" UpdatedDate="2014-02-12T12:34:07.122Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysicalCreatebyMDP_588428526" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:33:47.119Z" UpdatedDate="2014-02-12T12:33:55.750Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone with the Wind:MDPysicalCreatebyMDP_650684622" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:33:35.531Z" UpdatedDate="2014-02-12T12:33:44.069Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_845213197" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:33:23.770Z" UpdatedDate="2014-02-12T12:33:32.207Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo &amp; Juliet:MDPysicalCreatebyMDP_972435298" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:33:11.357Z" UpdatedDate="2014-02-12T12:33:20.555Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:UUID:121AC628-D92E-1D6D-5224-443939448842" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:33:00.064Z" UpdatedDate="2014-02-12T12:33:08.319Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%2Fwww.example.org%2FresourceNumber430479559.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:32:48.698Z" UpdatedDate="2014-02-12T12:32:56.907Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:MDPysicalCreatebyMDP_245162456" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:32:37.151Z" UpdatedDate="2014-02-12T12:32:45.273Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:GRID:A12425GAB268533960" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:32:26.258Z" UpdatedDate="2014-02-12T12:32:34.171Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_680674609" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:32:13.300Z" UpdatedDate="2014-02-12T12:32:21.771Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_195796508" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:32:01.761Z" UpdatedDate="2014-02-12T12:32:10.168Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_310784321" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:31:50.429Z" UpdatedDate="2014-02-12T12:31:58.659Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISRC:USS316628075" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:31:38.741Z" UpdatedDate="2014-02-12T12:31:47.430Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISWC:T-111.413.001-2" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:31:27.673Z" UpdatedDate="2014-02-12T12:31:35.675Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent697569511" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:31:16.041Z" UpdatedDate="2014-02-12T12:31:24.634Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_540411981.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:31:04.469Z" UpdatedDate="2014-02-12T12:31:12.688Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_760925372.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:30:52.235Z" UpdatedDate="2014-02-12T12:31:01.040Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:234612810" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:30:31.802Z" UpdatedDate="2014-02-12T12:30:37.798Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-647308978-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:30:09.811Z" UpdatedDate="2014-02-12T12:30:12.929Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-272576630-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:29:52.156Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:331032518" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T12:29:39.157Z" UpdatedDate="2014-02-12T12:29:45.560Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:746807633" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:29:26.370Z" UpdatedDate="2014-02-12T12:29:32.739Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:648526415" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:29:13.812Z" UpdatedDate="2014-02-12T12:29:20.232Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:429879312" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:29:04.726Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:459076342" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:28:52.766Z" UpdatedDate="2014-02-12T12:28:59.037Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:339236020" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T12:28:40.908Z" UpdatedDate="2014-02-12T12:28:47.021Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:901767659" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:28:28.852Z" UpdatedDate="2014-02-12T12:28:34.864Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:717788834" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:28:19.455Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:758094563" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:28:07.800Z" UpdatedDate="2014-02-12T12:28:13.609Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:977083951" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T12:27:54.543Z" UpdatedDate="2014-02-12T12:28:00.118Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:338381291" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:27:42.254Z" UpdatedDate="2014-02-12T12:27:48.480Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_792825045.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:27:36.307Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_763294084.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:27:29.959Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:638611569" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:27:16.404Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:537122455" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:27:03.877Z" UpdatedDate="2014-02-12T12:27:10.066Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:654832195" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T12:26:50.357Z" UpdatedDate="2014-02-12T12:26:57.262Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:670296040" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:26:36.906Z" UpdatedDate="2014-02-12T12:26:43.519Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_327016782.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:26:30.943Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_109097896.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:26:24.000Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:739699453" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:26:11.377Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:271449436" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:26:04.408Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:SUBTITLE_MetadataDigitalCreate.txt:846991556" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:25:52.910Z" UpdatedDate="2014-02-12T12:26:01.568Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:IMAGE_MetadataDigitalCreate.txt:178426178" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:25:37.484Z" UpdatedDate="2014-02-12T12:25:46.496Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:VIDEO_MetadataDigitalCreate.txt:153992891" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:25:25.692Z" UpdatedDate="2014-02-12T12:25:34.630Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:922750633" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:25:15.744Z" UpdatedDate="2014-02-12T12:25:22.775Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate%3A703279741.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:14:00.266Z" UpdatedDate="2014-02-12T12:14:09.196Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_Metadata%3APhysicalCreate%3A:642874513.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:13:48.959Z" UpdatedDate="2014-02-12T12:13:57.225Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_Metadata%3APhysicalCreate:236108429.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:13:37.381Z" UpdatedDate="2014-02-12T12:13:45.772Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate:879683186.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:13:25.986Z" UpdatedDate="2014-02-12T12:13:34.359Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO%3AMDPysicalCreatebyMDP_843713733" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:13:02.314Z" UpdatedDate="2014-02-12T12:13:10.423Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MY%3ASTUDIO:12345ABCDEF%3AMDPysicalCreatebyMDP_435198533" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:12:50.369Z" UpdatedDate="2014-02-12T12:12:58.469Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:12345ABCDEF%3AMDPysicalCreatebyMDP_150555107" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:12:38.900Z" UpdatedDate="2014-02-12T12:12:47.286Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:12345ABCDEFMDPysicalCreatebyMDP_811210581" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:12:27.464Z" UpdatedDate="2014-02-12T12:12:35.747Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_686993209" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T12:12:21.320Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:gtin:1061414258052" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:11:58.252Z" UpdatedDate="2014-02-12T12:12:07.005Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:cidf:hdl:1735.120A/104785154" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:09:40.913Z" UpdatedDate="2014-02-12T12:09:51.366Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2Folympics%2F2012081009526488966%2F" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:09:26.912Z" UpdatedDate="2014-02-12T12:09:37.166Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:smpte-umid:72.61.52.30.01.01.01.01.01.01.01.00.00.00.00.00" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:09:14.664Z" UpdatedDate="2014-02-12T12:09:23.647Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:gtin:1061414443243" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:08:47.079Z" UpdatedDate="2014-02-12T12:08:56.667Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:upc:036161457124" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:08:34.352Z" UpdatedDate="2014-02-12T12:08:43.638Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:638274618_Interactive" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:07:53.165Z" UpdatedDate="2014-02-12T12:08:02.126Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:457931573_Subtitle" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:07:40.927Z" UpdatedDate="2014-02-12T12:07:49.910Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:870821437_Video" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:07:30.065Z" UpdatedDate="2014-02-12T12:07:38.242Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:983968869_Image" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:07:18.349Z" UpdatedDate="2014-02-12T12:07:27.139Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:671540486_Audio" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:07:05.829Z" UpdatedDate="2014-02-12T12:07:15.134Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K:862686070" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:03:13.747Z" UpdatedDate="2014-02-12T12:03:21.865Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:700176426%3Aa" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:03:02.600Z" UpdatedDate="2014-02-12T12:03:10.734Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISAN:1234-1234-3312-0200-8-0000-0000-F" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:02:50.628Z" UpdatedDate="2014-02-12T12:02:58.938Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp; Order Criminal Intent:MDPysicalCreatebyMDP_496706040" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:02:39.301Z" UpdatedDate="2014-02-12T12:02:47.500Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysicalCreatebyMDP_970891718" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:02:27.535Z" UpdatedDate="2014-02-12T12:02:36.226Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone with the Wind:MDPysicalCreatebyMDP_547347108" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:02:16.065Z" UpdatedDate="2014-02-12T12:02:24.316Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_713453487" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:02:04.361Z" UpdatedDate="2014-02-12T12:02:12.793Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo &amp; Juliet:MDPysicalCreatebyMDP_501740471" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:01:52.178Z" UpdatedDate="2014-02-12T12:02:01.237Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:UUID:121AC628-D92E-1D6D-5224-616994535842" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:01:40.826Z" UpdatedDate="2014-02-12T12:01:48.986Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%2Fwww.example.org%2FresourceNumber550552291.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:01:29.515Z" UpdatedDate="2014-02-12T12:01:37.811Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:MDPysicalCreatebyMDP_199375697" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:01:18.160Z" UpdatedDate="2014-02-12T12:01:26.513Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:GRID:A12425GAB589915669" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:01:07.264Z" UpdatedDate="2014-02-12T12:01:15.131Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_610102425" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:00:55.000Z" UpdatedDate="2014-02-12T12:01:04.224Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_388091344" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:00:43.739Z" UpdatedDate="2014-02-12T12:00:51.853Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_359134809" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:00:32.386Z" UpdatedDate="2014-02-12T12:00:40.784Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISRC:USS298840484" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:00:20.714Z" UpdatedDate="2014-02-12T12:00:29.279Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISWC:T-111.986.001-2" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T12:00:08.940Z" UpdatedDate="2014-02-12T12:00:17.471Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent674030421" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:59:56.709Z" UpdatedDate="2014-02-12T12:00:05.170Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_307723685.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:59:45.444Z" UpdatedDate="2014-02-12T11:59:53.738Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_790292478.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:59:33.083Z" UpdatedDate="2014-02-12T11:59:42.294Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:785559510" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:59:16.550Z" UpdatedDate="2014-02-12T11:59:22.243Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-203356814-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:58:56.851Z" UpdatedDate="2014-02-12T11:58:59.846Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-417507111-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:58:38.873Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:448215465" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T11:58:27.451Z" UpdatedDate="2014-02-12T11:58:33.163Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:919107833" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:58:16.294Z" UpdatedDate="2014-02-12T11:58:21.902Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:450928681" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:58:04.432Z" UpdatedDate="2014-02-12T11:58:10.307Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:816348000" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:57:54.603Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:229125222" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:57:42.536Z" UpdatedDate="2014-02-12T11:57:48.995Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:298725215" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T11:57:30.874Z" UpdatedDate="2014-02-12T11:57:36.775Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:560462696" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:57:18.869Z" UpdatedDate="2014-02-12T11:57:24.968Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:400859566" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:57:10.094Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:742004639" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:56:57.234Z" UpdatedDate="2014-02-12T11:57:04.265Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:920194114" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T11:56:44.746Z" UpdatedDate="2014-02-12T11:56:50.500Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:192782377" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:56:32.539Z" UpdatedDate="2014-02-12T11:56:38.526Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_522152570.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:56:26.728Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_341328177.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:56:20.592Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:476169737" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:56:09.235Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:181592214" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:55:57.360Z" UpdatedDate="2014-02-12T11:56:03.576Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:378432167" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-12T11:55:45.597Z" UpdatedDate="2014-02-12T11:55:51.317Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:931324993" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:55:32.977Z" UpdatedDate="2014-02-12T11:55:39.266Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_208573788.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:55:26.881Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_764181830.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:55:20.752Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:675043272" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:55:08.596Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:681092541" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-12T11:55:01.440Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:SUBTITLE_MetadataDigitalCreate.txt:356971026" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:54:49.585Z" UpdatedDate="2014-02-12T11:54:58.309Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:IMAGE_MetadataDigitalCreate.txt:655703066" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:54:38.132Z" UpdatedDate="2014-02-12T11:54:46.685Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:VIDEO_MetadataDigitalCreate.txt:247979099" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:54:25.456Z" UpdatedDate="2014-02-12T11:54:35.190Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:509718212" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:54:14.558Z" UpdatedDate="2014-02-12T11:54:22.430Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:954189852" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-12T11:50:25.706Z" UpdatedDate="2014-02-12T11:50:35.369Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:891973162" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:47.027Z" UpdatedDate="2014-02-04T05:44:47.788Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:729286364" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:45.804Z" UpdatedDate="2014-02-04T05:44:46.507Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:286660071" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:43.602Z" UpdatedDate="2014-02-04T05:44:45.209Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:276566836" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:40.876Z" UpdatedDate="2014-02-04T05:44:43.061Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:817915435" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:36.463Z" UpdatedDate="2014-02-04T05:44:38.712Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:673951771" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:32.440Z" UpdatedDate="2014-02-04T05:44:34.651Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:166079934" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:28.572Z" UpdatedDate="2014-02-04T05:44:30.669Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:561571733" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:24.333Z" UpdatedDate="2014-02-04T05:44:26.544Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:786575026" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:19.654Z" UpdatedDate="2014-02-04T05:44:22.270Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:857097365" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:15.577Z" UpdatedDate="2014-02-04T05:44:17.793Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:824201902" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:11.435Z" UpdatedDate="2014-02-04T05:44:13.695Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:582163450" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:07.337Z" UpdatedDate="2014-02-04T05:44:09.456Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:509050856" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:44:03.525Z" UpdatedDate="2014-02-04T05:44:05.374Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:107329613" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:58.960Z" UpdatedDate="2014-02-04T05:44:01.080Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:566280059" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:54.759Z" UpdatedDate="2014-02-04T05:43:57.030Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:140778112" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:50.171Z" UpdatedDate="2014-02-04T05:43:52.594Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:140929585" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:46.063Z" UpdatedDate="2014-02-04T05:43:48.219Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:574871043" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:40.034Z" UpdatedDate="2014-02-04T05:43:42.986Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:473971870" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:35.799Z" UpdatedDate="2014-02-04T05:43:37.993Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:167746941" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:31.387Z" UpdatedDate="2014-02-04T05:43:33.541Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:246213655" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:43:26.537Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:481289381" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:43:24.403Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:142138977" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:22.056Z" UpdatedDate="2014-02-04T05:43:22.701Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:531899097" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:20.764Z" UpdatedDate="2014-02-04T05:43:21.487Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:554304307" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:19.709Z" UpdatedDate="2014-02-04T05:43:20.228Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:763225522" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:18.291Z" UpdatedDate="2014-02-04T05:43:19.213Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:942446134" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:16.759Z" UpdatedDate="2014-02-04T05:43:17.554Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:953984599" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:15.556Z" UpdatedDate="2014-02-04T05:43:16.242Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:260721929" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:14.390Z" UpdatedDate="2014-02-04T05:43:15.139Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:432583793" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:13.035Z" UpdatedDate="2014-02-04T05:43:13.857Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:576577131" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:11.979Z" UpdatedDate="2014-02-04T05:43:12.630Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:342396090" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:10.975Z" UpdatedDate="2014-02-04T05:43:11.576Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:769338057" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:09.604Z" UpdatedDate="2014-02-04T05:43:10.523Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:676497771" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:08.545Z" UpdatedDate="2014-02-04T05:43:09.131Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:411494950" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:07.210Z" UpdatedDate="2014-02-04T05:43:07.996Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:559510979" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:05.958Z" UpdatedDate="2014-02-04T05:43:06.780Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:575145419" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:04.818Z" UpdatedDate="2014-02-04T05:43:05.439Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:369184848" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:03.751Z" UpdatedDate="2014-02-04T05:43:04.416Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:811598721" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:02.656Z" UpdatedDate="2014-02-04T05:43:03.272Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:701467174" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:01.539Z" UpdatedDate="2014-02-04T05:43:02.121Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:540863352" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:43:00.318Z" UpdatedDate="2014-02-04T05:43:01.117Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:824356573" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:59.280Z" UpdatedDate="2014-02-04T05:42:59.954Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:444311416" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:58.329Z" UpdatedDate="2014-02-04T05:42:58.920Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:934058328" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:57.126Z" UpdatedDate="2014-02-04T05:42:57.920Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:429487967" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:56.023Z" UpdatedDate="2014-02-04T05:42:56.636Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:741143346" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:54.779Z" UpdatedDate="2014-02-04T05:42:55.434Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:405790992" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:53.732Z" UpdatedDate="2014-02-04T05:42:54.358Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:686383431" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:52.486Z" UpdatedDate="2014-02-04T05:42:53.386Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:604831418" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:51.190Z" UpdatedDate="2014-02-04T05:42:51.930Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:469716826" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:50.215Z" UpdatedDate="2014-02-04T05:42:50.796Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:619124229" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:49.044Z" UpdatedDate="2014-02-04T05:42:49.707Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:558173049" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:48.004Z" UpdatedDate="2014-02-04T05:42:48.572Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:543470851" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:47.014Z" UpdatedDate="2014-02-04T05:42:47.594Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:521172190" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:45.980Z" UpdatedDate="2014-02-04T05:42:46.581Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:970125215" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:44.915Z" UpdatedDate="2014-02-04T05:42:45.485Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:130081031" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:43.352Z" UpdatedDate="2014-02-04T05:42:44.088Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:819534917" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:42.285Z" UpdatedDate="2014-02-04T05:42:42.925Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:443167248" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:41.284Z" UpdatedDate="2014-02-04T05:42:41.947Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:512006344" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:39.767Z" UpdatedDate="2014-02-04T05:42:40.715Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:847053435" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:38.492Z" UpdatedDate="2014-02-04T05:42:39.280Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:698652962" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:37.263Z" UpdatedDate="2014-02-04T05:42:37.968Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:484195081" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:35.822Z" UpdatedDate="2014-02-04T05:42:36.735Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:162057730" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:34.354Z" UpdatedDate="2014-02-04T05:42:35.309Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:588286804" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:33.178Z" UpdatedDate="2014-02-04T05:42:33.874Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:457204192" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:30.665Z" UpdatedDate="2014-02-04T05:42:32.706Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:259854665" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:26.930Z" UpdatedDate="2014-02-04T05:42:28.890Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:495984375" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:22.806Z" UpdatedDate="2014-02-04T05:42:24.971Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:902832276" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:18.846Z" UpdatedDate="2014-02-04T05:42:20.937Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:752729689" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:14.706Z" UpdatedDate="2014-02-04T05:42:16.878Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:809489388" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:10.742Z" UpdatedDate="2014-02-04T05:42:12.824Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:537835954" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:06.640Z" UpdatedDate="2014-02-04T05:42:08.833Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:842695749" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:42:02.537Z" UpdatedDate="2014-02-04T05:42:04.681Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:126896724" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:58.551Z" UpdatedDate="2014-02-04T05:42:00.628Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:700579108" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:54.645Z" UpdatedDate="2014-02-04T05:41:56.907Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:168152542" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:50.932Z" UpdatedDate="2014-02-04T05:41:52.894Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:277830938" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:46.946Z" UpdatedDate="2014-02-04T05:41:49.008Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:724465826" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:42.316Z" UpdatedDate="2014-02-04T05:41:44.924Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:475309251" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:38.645Z" UpdatedDate="2014-02-04T05:41:40.552Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:417413522" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:34.528Z" UpdatedDate="2014-02-04T05:41:36.765Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:345078567" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:30.734Z" UpdatedDate="2014-02-04T05:41:32.732Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:459549975" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:26.636Z" UpdatedDate="2014-02-04T05:41:28.824Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:905547743" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:23.930Z" UpdatedDate="2014-02-04T05:41:24.645Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:654562812_Interactive" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:22.277Z" UpdatedDate="2014-02-04T05:41:23.408Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:311459885_Subtitle" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:19.981Z" UpdatedDate="2014-02-04T05:41:21.734Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:233823384_Video" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:18.222Z" UpdatedDate="2014-02-04T05:41:19.503Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:242262962_Image" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:16.688Z" UpdatedDate="2014-02-04T05:41:17.869Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:422068983_Audio" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:14.227Z" UpdatedDate="2014-02-04T05:41:16.071Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:286974136" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:11.745Z" UpdatedDate="2014-02-04T05:41:13.672Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:988954700" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:41:08.620Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_310726996.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:41:06.907Z" UpdatedDate="2014-02-04T05:41:07.338Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_436815765.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:41:03.706Z" UpdatedDate="2014-02-04T05:41:04.228Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_746931459.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-04T05:41:00.838Z" UpdatedDate="2014-02-04T05:41:01.258Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:766598724" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:40:58.140Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_114700053.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:40:53.419Z" UpdatedDate="2014-02-04T05:40:53.804Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_241002012.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:40:50.376Z" UpdatedDate="2014-02-04T05:40:50.882Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_487977930.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-04T05:40:47.478Z" UpdatedDate="2014-02-04T05:40:48.005Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:461491354" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:40:45.202Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_620019547.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:40:40.278Z" UpdatedDate="2014-02-04T05:40:40.747Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_672713057.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:40:37.777Z" UpdatedDate="2014-02-04T05:40:38.329Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_453439800.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-04T05:40:34.844Z" UpdatedDate="2014-02-04T05:40:35.347Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:219142395" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:40:32.639Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_725633626.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:40:27.673Z" UpdatedDate="2014-02-04T05:40:28.185Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_751431250.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:40:24.711Z" UpdatedDate="2014-02-04T05:40:25.324Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_706859571.txt" CurrentStatus="urn:dece:type:status:pending" CreatedDate="2014-02-04T05:40:21.125Z" UpdatedDate="2014-02-04T05:40:22.286Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:730184583" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:40:18.861Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:351217546" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:40:07.967Z" UpdatedDate="2014-02-04T05:40:08.766Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:232685799" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:40:03.943Z" UpdatedDate="2014-02-04T05:40:06.618Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:933154586" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:39:57.094Z" UpdatedDate="2014-02-04T05:40:00.325Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:497979459" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:39:04.134Z" UpdatedDate="2014-02-04T05:39:04.913Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:710887624" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:39:03.043Z" UpdatedDate="2014-02-04T05:39:03.922Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:440518586" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:56.081Z" UpdatedDate="2014-02-04T05:38:56.729Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate.txt:626431685" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:53.947Z" UpdatedDate="2014-02-04T05:38:54.636Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:898153701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:38:36.318Z" UpdatedDate="2014-02-04T05:38:36.644Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_576883451.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:38:35.479Z" UpdatedDate="2014-02-04T05:38:35.735Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_202752002.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:38:34.550Z" UpdatedDate="2014-02-04T05:38:34.800Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_709748977.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:38:33.613Z" UpdatedDate="2014-02-04T05:38:33.847Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate_969477291.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:38:31.981Z" UpdatedDate="2014-02-04T05:38:32.555Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:alscheme@!:105.62145/8812-3A0B-80C6-6A96-0EBE-466267533" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:38:31.708Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-558452194-F5DD-9ABC-DEF0-8" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:38:30.006Z" UpdatedDate="2014-02-04T05:38:30.205Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate.txt:906705456     " CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:29.024Z" UpdatedDate="2014-02-04T05:38:29.786Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-%3A419658209-F5DD-9ABC-DEF0-8:%3AABCD" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:26.157Z" UpdatedDate="2014-02-04T05:38:27.918Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-741073174-F5DD-9ABC-DEF0-8%3AABCD" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:25.228Z" UpdatedDate="2014-02-04T05:38:25.825Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-%3A358505624-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:24.337Z" UpdatedDate="2014-02-04T05:38:25.028Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-X:1234-549083369-F5DD-9ABC-DEF0-8:ABCD" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:23.258Z" UpdatedDate="2014-02-04T05:38:24.123Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-%3A%3A707168117-F5DD-9ABC-DEF0:-8" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:21.505Z" UpdatedDate="2014-02-04T05:38:22.288Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-821834284-F5DD-9ABC-DEF0-8%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:20.625Z" UpdatedDate="2014-02-04T05:38:21.295Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234%3A-852841329-F5DD-9ABC-DEF0-:8" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:19.532Z" UpdatedDate="2014-02-04T05:38:20.340Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR-S:1234-652677190-F5DD-9ABC-:DEF0-8" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:18.608Z" UpdatedDate="2014-02-04T05:38:19.300Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD%3A%3A377227329:000H" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:16.611Z" UpdatedDate="2014-02-04T05:38:17.346Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD522584208000H%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:15.336Z" UpdatedDate="2014-02-04T05:38:16.180Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD%3A:159018406000H" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:14.213Z" UpdatedDate="2014-02-04T05:38:14.947Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:baseline:ABCD:420099318000H" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:13.222Z" UpdatedDate="2014-02-04T05:38:13.949Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2F:olympics%2F379643813%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:11.857Z" UpdatedDate="2014-02-04T05:38:12.443Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2Folympics%2F618228199%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:10.891Z" UpdatedDate="2014-02-04T05:38:11.628Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2F:olympics%2F748478268%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:09.861Z" UpdatedDate="2014-02-04T05:38:10.530Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:crid:%2F%2Fbbc.co.uk%2F:olympics%2F179555612" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:08.891Z" UpdatedDate="2014-02-04T05:38:09.643Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%3A%3A%2Fwww.example.org%2FresourceNumber802296079%3A.txt%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:05.978Z" UpdatedDate="2014-02-04T05:38:06.668Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http%3A%2F%2Fwww.example.org%2FresourceNumber835882837.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:05.273Z" UpdatedDate="2014-02-04T05:38:05.780Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%2F%2Fwww.example.org%2FresourceNumber%3A518376515.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:04.272Z" UpdatedDate="2014-02-04T05:38:05.040Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:URI:http:%2F%2Fwww.example.org%2FresourceNumber976744093.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:38:03.215Z" UpdatedDate="2014-02-04T05:38:03.955Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K:363690304%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:43.731Z" UpdatedDate="2014-02-04T05:37:44.533Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K%3A897309590" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:42.526Z" UpdatedDate="2014-02-04T05:37:43.369Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K:948624269%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:41.499Z" UpdatedDate="2014-02-04T05:37:42.230Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:EIDR:10.123/1234-5678-9ABC-DEF0-K:762981298" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:40.706Z" UpdatedDate="2014-02-04T05:37:41.224Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_223092962%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:39.049Z" UpdatedDate="2014-02-04T05:37:39.853Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5%3AMDPysicalCreatebyMDP_301094413" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:38.230Z" UpdatedDate="2014-02-04T05:37:38.878Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-%3A5:MDPysicalCreatebyMDP_448004343" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:37.155Z" UpdatedDate="2014-02-04T05:37:38.054Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISMN:979-0-060-11561-5:MDPysicalCreatebyMDP_628251417" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:35.864Z" UpdatedDate="2014-02-04T05:37:36.690Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysical%3A%3ACreatebyMDP_703549055" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:34.269Z" UpdatedDate="2014-02-04T05:37:34.971Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet%3AMDPysicalCreatebyMDP_434824047" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:33.246Z" UpdatedDate="2014-02-04T05:37:33.897Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysical%3ACreatebyMDP_118317160" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:32.185Z" UpdatedDate="2014-02-04T05:37:32.927Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:AMG:Romeo_Juliet:MDPysicalCreatebyMDP_160829941" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:31.270Z" UpdatedDate="2014-02-04T05:37:31.908Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_150196110" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:29.508Z" UpdatedDate="2014-02-04T05:37:30.182Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_215466151" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:28.683Z" UpdatedDate="2014-02-04T05:37:29.291Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_960677306" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:27.731Z" UpdatedDate="2014-02-04T05:37:28.385Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TRIB:Sanford &amp; Sons:MDPysicalCreatebyMDP_447018653" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:26.183Z" UpdatedDate="2014-02-04T05:37:27.491Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp;%3AOrder%3ACriminal Intent:MDPysicalCreatebyMDP_130170794" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:20.359Z" UpdatedDate="2014-02-04T05:37:21.038Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp; Order Criminal Intent%3AMDPysicalCreatebyMDP_382511366" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:19.516Z" UpdatedDate="2014-02-04T05:37:20.128Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp; Order Criminal%3AIntent:MDPysicalCreatebyMDP_149374952" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:18.538Z" UpdatedDate="2014-02-04T05:37:19.316Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:TVG:Law &amp; Order Criminal Intent:MDPysicalCreatebyMDP_230867686" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:17.326Z" UpdatedDate="2014-02-04T05:37:18.243Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo %3A&amp; Juliet%3AMDPysicalCreatebyMDP:_507041158" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:15.585Z" UpdatedDate="2014-02-04T05:37:16.232Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo &amp; Juliet%3AMDPysicalCreatebyMDP_745914798" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:14.767Z" UpdatedDate="2014-02-04T05:37:15.364Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo &amp; Juliet:MDPysicalCreatebyMDP_%3A738971161" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:13.766Z" UpdatedDate="2014-02-04T05:37:14.471Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:IMDB:Romeo &amp; Juliet:MDPysicalCreatebyMDP_630651695" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:12.048Z" UpdatedDate="2014-02-04T05:37:12.677Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone with%3Athe%3AWind:MDPysicalCreatebyMDP_585685888" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:10.352Z" UpdatedDate="2014-02-04T05:37:11.028Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone with the Wind%3AMDPysicalCreatebyMDP_315169523" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:09.357Z" UpdatedDate="2014-02-04T05:37:10.173Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone%3Awith the Wind:MDPysicalCreatebyMDP_159123752" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:08.485Z" UpdatedDate="2014-02-04T05:37:09.160Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:MUZE:Gone with the Wind:MDPysicalCreatebyMDP_112570167" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:37:07.245Z" UpdatedDate="2014-02-04T05:37:08.137Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_287070068%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:58.098Z" UpdatedDate="2014-02-04T05:36:58.956Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5%3AMDPysicalCreatebyMDP_266885928" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:57.017Z" UpdatedDate="2014-02-04T05:36:57.693Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_808124713%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:56.156Z" UpdatedDate="2014-02-04T05:36:56.799Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISBN:90-70002-34-5:MDPysicalCreatebyMDP_185227740" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:55.147Z" UpdatedDate="2014-02-04T05:36:55.947Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_932502463%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:53.589Z" UpdatedDate="2014-02-04T05:36:54.208Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X%3AMDPysicalCreatebyMDP_452523129" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:52.631Z" UpdatedDate="2014-02-04T05:36:53.361Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_519908516%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:51.829Z" UpdatedDate="2014-02-04T05:36:52.386Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISSN:0259-000X:MDPysicalCreatebyMDP_905353729" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:50.820Z" UpdatedDate="2014-02-04T05:36:51.532Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:%3AMDPysicalCreatebyMDP_463478724%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:49.181Z" UpdatedDate="2014-02-04T05:36:49.691Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7%3AMDPysicalCreatebyMDP_669733849" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:48.122Z" UpdatedDate="2014-02-04T05:36:48.759Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:MDPysicalCreatebyMDP_529865202%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:46.747Z" UpdatedDate="2014-02-04T05:36:47.693Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:ISTC:0A9-2002-12B4A105-7:MDPysicalCreatebyMDP_133030308" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:45.597Z" UpdatedDate="2014-02-04T05:36:46.353Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent984738102%3A%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:40.640Z" UpdatedDate="2014-02-04T05:36:41.228Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456%3AMDPysicalCreateMDAgent327015393" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:39.807Z" UpdatedDate="2014-02-04T05:36:40.419Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent696397262%3A" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:38.855Z" UpdatedDate="2014-02-04T05:36:39.532Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:DOI:10.1000%2F123456:MDPysicalCreateMDAgent102671923" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:38.027Z" UpdatedDate="2014-02-04T05:36:38.635Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate%3A710631150.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:32.596Z" UpdatedDate="2014-02-04T05:36:33.292Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_Metadata%3APhysicalCreate%3A:513504904.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:31.560Z" UpdatedDate="2014-02-04T05:36:32.233Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_Metadata%3APhysicalCreate:278057892.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:30.438Z" UpdatedDate="2014-02-04T05:36:31.286Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALs_MetadataPhysicalCreate:859495415.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:29.351Z" UpdatedDate="2014-02-04T05:36:30.151Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO%3AMDPysicalCreatebyMDP_574961616" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:27.466Z" UpdatedDate="2014-02-04T05:36:28.300Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MY%3ASTUDIO:12345ABCDEF%3AMDPysicalCreatebyMDP_472281294" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:25.690Z" UpdatedDate="2014-02-04T05:36:27.212Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:12345ABCDEF%3AMDPysicalCreatebyMDP_666787673" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:24.667Z" UpdatedDate="2014-02-04T05:36:25.392Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:org:MYSTUDIO:12345ABCDEFMDPysicalCreatebyMDP_165317466" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:23.715Z" UpdatedDate="2014-02-04T05:36:24.355Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ƒ_635693521.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:22.793Z" UpdatedDate="2014-02-04T05:36:23.476Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate__897212676.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:21.921Z" UpdatedDate="2014-02-04T05:36:22.506Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate__404351961.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:21.073Z" UpdatedDate="2014-02-04T05:36:21.655Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_}_952023951.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:20.275Z" UpdatedDate="2014-02-04T05:36:20.857Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_þ_583823584.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:19.301Z" UpdatedDate="2014-02-04T05:36:20.151Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ü_478661489.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:18.341Z" UpdatedDate="2014-02-04T05:36:19.078Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ú_818884294.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:17.505Z" UpdatedDate="2014-02-04T05:36:18.122Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ø_130133433.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:16.628Z" UpdatedDate="2014-02-04T05:36:17.321Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ö_107779370.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:15.876Z" UpdatedDate="2014-02-04T05:36:16.518Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ô_411323213.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:15.145Z" UpdatedDate="2014-02-04T05:36:15.756Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ò_401232819.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:14.292Z" UpdatedDate="2014-02-04T05:36:14.984Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ð_929172611.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:13.604Z" UpdatedDate="2014-02-04T05:36:14.165Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_î_821594210.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:12.986Z" UpdatedDate="2014-02-04T05:36:13.392Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ì_192224683.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:12.187Z" UpdatedDate="2014-02-04T05:36:12.730Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ê_833849480.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:11.202Z" UpdatedDate="2014-02-04T05:36:11.759Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_è_292288991.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:10.397Z" UpdatedDate="2014-02-04T05:36:10.970Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_æ_681988393.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:09.543Z" UpdatedDate="2014-02-04T05:36:10.221Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ä_972040502.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:08.923Z" UpdatedDate="2014-02-04T05:36:09.357Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_â_567479366.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:08.149Z" UpdatedDate="2014-02-04T05:36:08.707Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_à_501754111.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:07.195Z" UpdatedDate="2014-02-04T05:36:07.912Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Þ_691881536.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:06.473Z" UpdatedDate="2014-02-04T05:36:07.063Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ü_215102169.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:05.667Z" UpdatedDate="2014-02-04T05:36:06.304Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ú_475970394.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:04.985Z" UpdatedDate="2014-02-04T05:36:05.533Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ø_768709286.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:04.179Z" UpdatedDate="2014-02-04T05:36:04.859Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ö_277863492.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:03.430Z" UpdatedDate="2014-02-04T05:36:03.964Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ô_743006724.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:02.582Z" UpdatedDate="2014-02-04T05:36:03.255Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ò_352678206.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:01.996Z" UpdatedDate="2014-02-04T05:36:02.405Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ð_975037382.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:01.164Z" UpdatedDate="2014-02-04T05:36:01.777Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Î_937581839.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:36:00.534Z" UpdatedDate="2014-02-04T05:36:01.003Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ì_453378378.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:59.514Z" UpdatedDate="2014-02-04T05:36:00.369Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ê_298656151.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:58.833Z" UpdatedDate="2014-02-04T05:35:59.396Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_È_951737685.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:58.122Z" UpdatedDate="2014-02-04T05:35:58.612Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Æ_713301065.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:57.279Z" UpdatedDate="2014-02-04T05:35:57.872Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ä_978576354.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:56.592Z" UpdatedDate="2014-02-04T05:35:57.149Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Â_157256474.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:55.772Z" UpdatedDate="2014-02-04T05:35:56.389Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_À_821470102.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:54.976Z" UpdatedDate="2014-02-04T05:35:55.648Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¾_680055505.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:54.250Z" UpdatedDate="2014-02-04T05:35:54.833Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¼_774345465.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:53.479Z" UpdatedDate="2014-02-04T05:35:54.129Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_º_582467545.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:52.725Z" UpdatedDate="2014-02-04T05:35:53.286Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¸_139863699.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:52.019Z" UpdatedDate="2014-02-04T05:35:52.613Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¶_443549790.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:51.280Z" UpdatedDate="2014-02-04T05:35:51.826Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_´_890735035.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:50.471Z" UpdatedDate="2014-02-04T05:35:51.034Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_²_281452703.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:49.730Z" UpdatedDate="2014-02-04T05:35:50.249Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_°_742125754.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:48.810Z" UpdatedDate="2014-02-04T05:35:49.601Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_®_673140822.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:48.013Z" UpdatedDate="2014-02-04T05:35:48.579Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¬_583903341.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:47.213Z" UpdatedDate="2014-02-04T05:35:47.849Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ª_874581978.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:46.464Z" UpdatedDate="2014-02-04T05:35:46.983Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¨_632653208.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:45.688Z" UpdatedDate="2014-02-04T05:35:46.245Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¦_220963911.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:44.987Z" UpdatedDate="2014-02-04T05:35:45.519Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¤_588823670.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:44.242Z" UpdatedDate="2014-02-04T05:35:44.847Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_¢_836076485.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:43.417Z" UpdatedDate="2014-02-04T05:35:44.024Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ _622420521.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:42.832Z" UpdatedDate="2014-02-04T05:35:43.298Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_ž_198793799.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:41.901Z" UpdatedDate="2014-02-04T05:35:42.595Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_œ_176681299.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:41.295Z" UpdatedDate="2014-02-04T05:35:41.777Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_š_481495217.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:40.499Z" UpdatedDate="2014-02-04T05:35:41.079Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_˜_420655287.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:39.909Z" UpdatedDate="2014-02-04T05:35:40.357Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_–_940476125.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:39.141Z" UpdatedDate="2014-02-04T05:35:39.730Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_”_222300009.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:38.381Z" UpdatedDate="2014-02-04T05:35:38.939Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_’_293898756.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:37.577Z" UpdatedDate="2014-02-04T05:35:38.131Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate__467544776.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:36.935Z" UpdatedDate="2014-02-04T05:35:37.458Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Ž_969954733.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:36.360Z" UpdatedDate="2014-02-04T05:35:36.800Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Œ_575716376.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:35.637Z" UpdatedDate="2014-02-04T05:35:36.217Z"/>
   <dece:DigitalAssetReference APID="urn:dece:apid:file:ALsMetadataPhysicalCreate_Š_400389858.txt" CurrentStatus="urn:dece:type:status:deleted" CreatedDate="2014-02-04T05:35:34.668Z" UpdatedDate="2014-02-04T05:35:35.390Z"/>
</dece:DigitalAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_284938313.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A497932752</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Altnode_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/truststore-test-node-content-provider.jks</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"06008B57C8C1739BE0530F991F0A50F8:64D071A7"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Thu, 23 Oct 2014 09:27:05 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Wed, 22 Oct 2014 09:26:36 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1413970025 VEd4aQofmQsAACP5FCMAAAAm urn:dece:org:org:dece:test-node-content-provider 10.31.153.42</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>42c11bb0-645c-4232-86e3-7f2e859d6718</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBundleCreate-07" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="47d50bd9-384b-4dca-a234-423c923b790f"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="0851de05-a79a-4b27-b7e1-c09aa06c558e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("BID",null);
tC.setPropertyValue("BID_GET_DELETE",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("RandomNumberGenerated_1",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="0b83798c-d37c-48d1-a954-448dc1628050"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("BID",callTC.getPropertyValue("BID"));
tC.setPropertyValue("BID_GET_DELETE",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("RandomNumberGenerated_1",callTC.getPropertyValue("RandomNumberGenerated_1"));

tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="6bd70d4a-f17c-4cff-abcf-d73ece4404e5"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBundleCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBundleCreate" id="0e40e524-a1d1-4398-8c80-857e0b3aad11"><con:settings/><con:config service="BundleCreate_CTP" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Bundle" methodName="POST BundleCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBundleCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="f071d9f0-9548-4def-81f0-15a4600d4a1c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:Bundle BundleID="${#TestCase#BID}" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} Coordinator-1.0.7-draft-20130619.xsd ">
  <dece:DisplayName Language="EN">dece:DisplayName</dece:DisplayName>
  <dece:LogicalAssetReference ALID="${#TestCase#ALID}" ContentID="${#TestCase#CID}" CreatedDate="2001-12-31T12:00:00" CurrentStatus="urn:dece:type:status:active" UpdatedDate="2001-12-31T12:00:00"/>
   <dece:CompObj xsi:type="md:CompObj-type">


                                <md:Entry>
                                                <md:DisplayName language="en-us">String</md:DisplayName>
                                                <md:BasicMetadata
                                                                ContentID="urn:dece:cid:ORG:mystudio1:${#TestCase#RandomNumberGenerated}">
                                                                <md:UpdateNum>1</md:UpdateNum>
                                                                <md:LocalizedInfo default="true" language="en">
                                                                                <md:TitleDisplay19>TitleDisplay19</md:TitleDisplay19>
                                                                                <md:TitleDisplay60>String</md:TitleDisplay60>
                                                                                <md:TitleSort>String</md:TitleSort>
                                                                                 <md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
                                                                                <md:Summary190 cast="true">String</md:Summary190>
                                                                                <md:Summary400 cast="true">String</md:Summary400>
                                                                                <md:Summary4000 cast="true">String</md:Summary4000>
                                                                                <md:DisplayIndicators>P</md:DisplayIndicators>
                                                                                <md:Genre>Action</md:Genre>
                                                                                <md:Keyword>String</md:Keyword>
                                                                                <md:VersionNotes>String</md:VersionNotes>
                                                                                <md:Region>
                                                                                                <md:country>US</md:country>
                                                                                </md:Region>
                                                                                <md:OriginalTitle>String</md:OriginalTitle>
                                                                                <md:CopyrightLine>String</md:CopyrightLine>
                                                                                <md:PeopleLocal>
                                                                                                <md:Job>
                                                                                                                <md:JobFunction scheme="String">4.36</md:JobFunction>
                                                                                                                <md:JobDisplay>String</md:JobDisplay>
                                                                                                                <md:BillingBlockOrder>0</md:BillingBlockOrder>
                                                                                                                <md:Character>String</md:Character>
                                                                                                                <md:Guest>true</md:Guest>
                                                                                                </md:Job>
                                                                                                <md:Name>
                                                                                                                <md:DisplayName>String</md:DisplayName>
                                                                                                                <md:SortName>String</md:SortName>
                                                                                                                <md:FirstGivenName>String</md:FirstGivenName>
                                                                                                                <md:SecondGivenName>String</md:SecondGivenName>
                                                                                                                <md:FamilyName>String</md:FamilyName>
                                                                                                                <md:Suffix>String</md:Suffix>
                                                                                                                <md:Moniker>String</md:Moniker>
                                                                                                </md:Name>
                                                                                                <md:Identifier>
                                                                                                                <md:Identifier>String</md:Identifier>
                                                                                                                <md:Namespace>String</md:Namespace>
                                                                                                                <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
                                                                                                </md:Identifier>
                                                                                                <md:Gender>male</md:Gender>
                                                                                </md:PeopleLocal>
                                                                </md:LocalizedInfo>
                                                                <md:RunLength>PT2H5M</md:RunLength>
                                                                <md:ReleaseYear>2001</md:ReleaseYear>
                                                                <md:ReleaseDate>2002-05-30T09:30:10Z</md:ReleaseDate>
                                                                <md:ReleaseHistory>
                                                                                <md:ReleaseType>local</md:ReleaseType>
                                                                                <md:DistrTerritory>
                                                                                                <md:country>US</md:country>
                                                                                </md:DistrTerritory>

                                                                                <md:Date scheduled="true">2001-12-17T09:30:47Z</md:Date>
                                                                                <md:Description>String</md:Description>
                                                                                <md:ReleaseOrg organizationID="String">
                                                                                                <md:DisplayName>String</md:DisplayName>
                                                                                                <md:SortName>String</md:SortName>
                                                                                </md:ReleaseOrg>
                                                                </md:ReleaseHistory>
                                                                <md:WorkType>Album</md:WorkType>
                                                                <md:PictureColorType>bandw</md:PictureColorType>
                                                                <md:PictureFormat>Letterbox</md:PictureFormat>
                                                                <md:ThreeD>true</md:ThreeD>
                                                                <md:AltIdentifier>
                                                                                <md:Namespace>String</md:Namespace>
                                                                                <md:Identifier>String</md:Identifier>
                                                                                <md:Location>http://www.altova.com</md:Location>
                                                                </md:AltIdentifier>
                                                                <md:RatingSet>
                                                                                <md:NotRated>true</md:NotRated>
                                                                                <md:AdultContent>false</md:AdultContent>
                                                                </md:RatingSet>
                                                                <md:People>
                                                                                <md:Job>
                                                                                                <md:JobFunction scheme="String">4.36</md:JobFunction>
                                                                                                <md:JobDisplay>String</md:JobDisplay>
                                                                                                <md:BillingBlockOrder>0</md:BillingBlockOrder>
                                                                                                <md:Character>String</md:Character>
                                                                                                <md:Guest>true</md:Guest>
                                                                                </md:Job>
                                                                                <md:Name>
                                                                                                <md:DisplayName>String</md:DisplayName>
                                                                                                <md:SortName>String</md:SortName>
                                                                                                <md:FirstGivenName>String</md:FirstGivenName>
                                                                                                <md:SecondGivenName>String</md:SecondGivenName>
                                                                                                <md:FamilyName>String</md:FamilyName>
                                                                                                <md:Suffix>String</md:Suffix>
                                                                                                <md:Moniker>String</md:Moniker>
                                                                                </md:Name>
                                                                                <md:Identifier>
                                                                                                <md:Identifier>String</md:Identifier>
                                                                                                <md:Namespace>String</md:Namespace>
                                                                                                <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
                                                                                </md:Identifier>
                                                                                <md:Gender>plural</md:Gender>
                                                                </md:People>
                                                                <md:CountryOfOrigin>
                                                                                <md:country>US</md:country>
                                                                </md:CountryOfOrigin>
                                                                <md:AssociatedOrg role="String" organizationID="String">
                                                                                <md:DisplayName>String</md:DisplayName>
                                                                                <md:SortName>String</md:SortName>
                                                                </md:AssociatedOrg>
                                                                <md:SequenceInfo>
                                                                                <md:Number>0</md:Number>
                                                                                <md:HouseSequence>String</md:HouseSequence>
                                                                </md:SequenceInfo>
                                                                <md:Parent relationshipType="ispieceof">
                                                                                <md:Parent
                                                                                                ContentID="urn:dece:cid:ORG:mystudio2:${#TestCase#RandomNumberGenerated}">
                                                                                                <md:LocalizedInfo language="es">
                                                                                                                <md:TitleDisplay19>TitleDisplay19</md:TitleDisplay19>
																												<md:TitleDisplay60>String</md:TitleDisplay60>
                                                                                                                <md:TitleSort>s</md:TitleSort>
																												<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
                                                                                                                <md:Summary190>s</md:Summary190>
                                                                                                                <md:Summary400 cast="true">String</md:Summary400>
                                                                                                                <md:OriginalTitle>s</md:OriginalTitle>
                                                                                                                <md:CopyrightLine>String</md:CopyrightLine>
                                                                                                </md:LocalizedInfo>
                                                                                                <md:RunLength>PT2H5M</md:RunLength>
                                                                                                <md:ReleaseYear>2001</md:ReleaseYear>
                                                                                                <md:WorkType>Album</md:WorkType>
                                                                                                <md:Parent relationshipType="ispieceof">
                                                                                                                <md:Parent
                                                                                                                                ContentID="urn:dece:cid:ORG:mystudio3:${#TestCase#RandomNumberGenerated}">
                                                                                                                                <md:LocalizedInfo language="fr">
                                                                                                                                                <md:TitleDisplay19>TitleDisplay19</md:TitleDisplay19>
																																				<md:TitleDisplay60>String</md:TitleDisplay60>
                                                                                                                                                <md:TitleSort>s</md:TitleSort>
																																				<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
                                                                                                                                                <md:Summary190>s</md:Summary190>
                                                                                                                                                <md:Summary400 cast="true">String</md:Summary400>
                                                                                                                                                <md:OriginalTitle>s</md:OriginalTitle>
                                                                                                                                                <md:CopyrightLine>String</md:CopyrightLine>
                                                                                                                                </md:LocalizedInfo>
                                                                                                                                <md:RunLength>PT2H5M</md:RunLength>
                                                                                                                                <md:ReleaseYear>2001</md:ReleaseYear>
                                                                                                                                <md:WorkType>Album</md:WorkType>
                                                                                                                                <md:Parent relationshipType="ispieceof">
                                                                                                                                                <md:Parent
                                                                                                                                                                ContentID="urn:dece:cid:ORG:mystudio4:${#TestCase#RandomNumberGenerated}">
                                                                                                                                                                <md:LocalizedInfo language="en-US">
                                                                                                                                                                                <md:TitleDisplay19>TitleDisplay19</md:TitleDisplay19>
																																												<md:TitleDisplay60>String</md:TitleDisplay60>
                                                                                                                                                                                <md:TitleSort>s</md:TitleSort>
																																												<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
                                                                                                                                                                                <md:Summary190>s</md:Summary190>
                                                                                                                                                                                <md:Summary400 cast="true">String</md:Summary400>
                                                                                                                                                                                <md:OriginalTitle>s</md:OriginalTitle>
                                                                                                                                                                                <md:CopyrightLine>String</md:CopyrightLine>
                                                                                                                                                                </md:LocalizedInfo>
                                                                                                                                                                <md:RunLength>PT2H5M</md:RunLength>
                                                                                                                                                                <md:ReleaseYear>2001</md:ReleaseYear>
                                                                                                                                                                <md:WorkType>Album</md:WorkType>
                                                                                                                                                </md:Parent>
                                                                                                                                </md:Parent>
                                                                                                                </md:Parent>
                                                                                                </md:Parent>
                                                                                </md:Parent>
                                                                </md:Parent>
                                                </md:BasicMetadata>
                                </md:Entry>
                                <md:Entry>
                                                <md:DisplayName language="en-US">String</md:DisplayName>
                                                <md:BasicMetadata
                                                                ContentID="urn:dece:cid:ORG:mystudio5:${#TestCase#RandomNumberGenerated}">
                                                                <md:UpdateNum>1</md:UpdateNum>
                                                                <md:LocalizedInfo default="true" language="en-GB">
                                                                                <md:TitleDisplay19>TitleDisplay19</md:TitleDisplay19>
                                                                                <md:TitleDisplay60>String</md:TitleDisplay60>
                                                                                <md:TitleSort>String</md:TitleSort>
                                                                                 <md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
                                                                                <md:Summary190 cast="true">String</md:Summary190>
                                                                                <md:Summary400 cast="true">String</md:Summary400>
                                                                                <md:Summary4000 cast="true">String</md:Summary4000>
                                                                                <md:DisplayIndicators>P</md:DisplayIndicators>
                                                                                <md:Genre>Action</md:Genre>
                                                                                <md:Keyword>String</md:Keyword>
                                                                                <md:VersionNotes>String</md:VersionNotes>
                                                                                <md:Region>
                                                                                                <md:country>US</md:country>
                                                                                </md:Region>
                                                                                <md:OriginalTitle>String</md:OriginalTitle>
                                                                                <md:CopyrightLine>String</md:CopyrightLine>
                                                                                <md:PeopleLocal>
                                                                                                <md:Job>
                                                                                                                <md:JobFunction scheme="String">4.36</md:JobFunction>
                                                                                                                <md:JobDisplay>String</md:JobDisplay>
                                                                                                                <md:BillingBlockOrder>0</md:BillingBlockOrder>
                                                                                                                <md:Character>String</md:Character>
                                                                                                                <md:Guest>true</md:Guest>
                                                                                                </md:Job>
                                                                                                <md:Name>
                                                                                                                <md:DisplayName>String</md:DisplayName>
                                                                                                                <md:SortName>String</md:SortName>
                                                                                                                <md:FirstGivenName>String</md:FirstGivenName>
                                                                                                                <md:SecondGivenName>String</md:SecondGivenName>
                                                                                                                <md:FamilyName>String</md:FamilyName>
                                                                                                                <md:Suffix>String</md:Suffix>
                                                                                                                <md:Moniker>String</md:Moniker>
                                                                                                </md:Name>
                                                                                                <md:Identifier>
                                                                                                                <md:Identifier>String</md:Identifier>
                                                                                                                <md:Namespace>String</md:Namespace>
                                                                                                                <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
                                                                                                </md:Identifier>
                                                                                                <md:Gender>male</md:Gender>
                                                                                </md:PeopleLocal>
                                                                </md:LocalizedInfo>
                                                                <md:RunLength>PT3H7M</md:RunLength>
                                                                <md:ReleaseYear>2001</md:ReleaseYear>
                                                                <md:ReleaseDate>2002-05-30T09:30:10Z</md:ReleaseDate>
                                                                <md:ReleaseHistory>
                                                                                <md:ReleaseType>local</md:ReleaseType>
                                                                                <md:DistrTerritory>
                                                                                                <md:country>US</md:country>
                                                                                </md:DistrTerritory>

                                                                                <md:Date scheduled="true">2001-12-17T09:30:47Z</md:Date>
                                                                                <md:Description>String</md:Description>
                                                                                <md:ReleaseOrg organizationID="String">
                                                                                                <md:DisplayName>String</md:DisplayName>
                                                                                                <md:SortName>String</md:SortName>
                                                                                </md:ReleaseOrg>
                                                                </md:ReleaseHistory>
                                                                <md:WorkType>Album</md:WorkType>
                                                                <md:PictureColorType>bandw</md:PictureColorType>
                                                                <md:PictureFormat>Letterbox</md:PictureFormat>
                                                                <md:ThreeD>true</md:ThreeD>
                                                                <md:AltIdentifier>
                                                                                <md:Namespace>String</md:Namespace>
                                                                                <md:Identifier>String</md:Identifier>
                                                                                <md:Location>http://www.altova.com</md:Location>
                                                                </md:AltIdentifier>
                                                                <md:RatingSet>
                                                                                <md:NotRated>true</md:NotRated>
                                                                                <md:AdultContent>false</md:AdultContent>
                                                                </md:RatingSet>
                                                                <md:People>
                                                                                <md:Job>
                                                                                                <md:JobFunction scheme="String">4.36</md:JobFunction>
                                                                                                <md:JobDisplay>String</md:JobDisplay>
                                                                                                <md:BillingBlockOrder>0</md:BillingBlockOrder>
                                                                                                <md:Character>String</md:Character>
                                                                                                <md:Guest>true</md:Guest>
                                                                                </md:Job>
                                                                                <md:Name>
                                                                                                <md:DisplayName>String</md:DisplayName>
                                                                                                <md:SortName>String</md:SortName>
                                                                                                <md:FirstGivenName>String</md:FirstGivenName>
                                                                                                <md:SecondGivenName>String</md:SecondGivenName>
                                                                                                <md:FamilyName>String</md:FamilyName>
                                                                                                <md:Suffix>String</md:Suffix>
                                                                                                <md:Moniker>String</md:Moniker>
                                                                                </md:Name>
                                                                                <md:Identifier>
                                                                                                <md:Identifier>String</md:Identifier>
                                                                                                <md:Namespace>String</md:Namespace>
                                                                                                <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
                                                                                </md:Identifier>
                                                                                <md:Gender>plural</md:Gender>
                                                                </md:People>
                                                                <md:CountryOfOrigin>
                                                                                <md:country>US</md:country>
                                                                </md:CountryOfOrigin>
                                                                <md:AssociatedOrg role="String" organizationID="String">
                                                                                <md:DisplayName>String</md:DisplayName>
                                                                                <md:SortName>String</md:SortName>
                                                                </md:AssociatedOrg>
                                                                <md:SequenceInfo>
                                                                                <md:Number>0</md:Number>
                                                                                <md:HouseSequence>String</md:HouseSequence>
                                                                </md:SequenceInfo>
                                                                <md:Parent relationshipType="ispieceof">
                                                                                <md:Parent
                                                                                                ContentID="urn:dece:cid:ORG:mystudio6:${#TestCase#RandomNumberGenerated}">
                                                                                                <md:LocalizedInfo language="en-US">
                                                                                                                <md:TitleDisplay19>TitleDisplay19</md:TitleDisplay19>
																												<md:TitleDisplay60>String</md:TitleDisplay60>
                                                                                                                <md:TitleSort>s</md:TitleSort>
																												<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
                                                                                                                <md:Summary190>s</md:Summary190>
                                                                                                                <md:Summary400 cast="true">String</md:Summary400>
                                                                                                                <md:OriginalTitle>s</md:OriginalTitle>
                                                                                                                <md:CopyrightLine>String</md:CopyrightLine>
                                                                                                </md:LocalizedInfo>
                                                                                                <md:RunLength>PT2H5M</md:RunLength>
                                                                                                <md:ReleaseYear>2001</md:ReleaseYear>
                                                                                                <md:WorkType>Album</md:WorkType>
                                                                                </md:Parent>
                                                                </md:Parent>
                                                </md:BasicMetadata>
                                </md:Entry>


                </dece:CompObj>

  
</dece:Bundle>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="7d4d6752-e72b-4638-9e32-0fbb7c430c75"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBundleCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="ef43ff31-5fd6-441e-9828-32f68daf558c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>162352564</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bundle Created Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>27</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Bundle/urn:dece:bid:file:EXAMPLE_BID_Version_162352564.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_997717078.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A329595103</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_987174620.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>BID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_162352564.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBundleCreate-11" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6d5d23c3-aa03-42dd-9d33-601162b92f87"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="f2e41429-108b-4170-acfe-eb7f7172d10a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("BID",null);
tC.setPropertyValue("BID_GET_DELETE",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("RandomNumberGenerated_1",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="a6ec7d63-f64f-4e6f-b446-bad35f9f9169"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("BID",callTC.getPropertyValue("BID"));
tC.setPropertyValue("BID_GET_DELETE",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("RandomNumberGenerated_1",callTC.getPropertyValue("RandomNumberGenerated_1"));

tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="b5f72bc7-3143-475e-9741-1c72cafccc0a"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MetadataBundleCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MetadataBundleCreate" id="2d2cfa5d-294c-4ebf-a72c-3bda615c7fe2"><con:settings/><con:config service="BundleCreate_CTP" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Bundle" methodName="POST BundleCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MetadataBundleCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="1ea6ae88-6847-42e9-918c-d06c8d9227eb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:Bundle BundleID="${#TestCase#BID}" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} Coordinator-1.0.7-draft-20130619.xsd ">
<dece:DisplayName Language="EN">dece:DisplayName</dece:DisplayName>
<dece:LogicalAssetReference ALID="${#TestCase#ALID}" ContentID="${#TestCase#CID}" CreatedDate="2001-12-31T12:00:00" CurrentStatus="urn:dece:type:status:active" UpdatedDate="2001-12-31T12:00:00"/>
<dece:CompObj xsi:type="md:CompObj-type">

<md:Entry>
<md:DisplayName language="en-us">String1</md:DisplayName>
<md:DisplayName language="fr">String2</md:DisplayName>
<md:DisplayName language="de">String3</md:DisplayName>
 <md:EntryNumber>String123</md:EntryNumber>
 <md:EntryClass>String456</md:EntryClass>
<md:BasicMetadata
ContentID="urn:dece:cid:ORG:mystudio1:${#TestCase#RandomNumberGenerated}">
<md:UpdateNum>1</md:UpdateNum>
<md:LocalizedInfo default="true" language="en">
<md:TitleDisplay19>String</md:TitleDisplay19>
<md:TitleDisplay60>String</md:TitleDisplay60>
<md:TitleSort>String</md:TitleSort>
<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
<md:Summary190 cast="true">String</md:Summary190>
<md:Summary400 cast="true">String</md:Summary400>
<md:Summary4000 cast="true">String</md:Summary4000>
<md:DisplayIndicators>P</md:DisplayIndicators>
<md:Genre>Action</md:Genre>
<md:Keyword>String</md:Keyword>
<md:VersionNotes>String</md:VersionNotes>
<md:Region>
<md:country>US</md:country>
</md:Region>
<md:OriginalTitle>String</md:OriginalTitle>
<md:CopyrightLine>String</md:CopyrightLine>
<md:PeopleLocal>
<md:Job>
<md:JobFunction scheme="String">4.36</md:JobFunction>
<md:JobDisplay>String</md:JobDisplay>
<md:BillingBlockOrder>0</md:BillingBlockOrder>
<md:Character>String</md:Character>
<md:Guest>true</md:Guest>
</md:Job>
<md:Name>
<md:DisplayName>String</md:DisplayName>
<md:SortName>String</md:SortName>
<md:FirstGivenName>String</md:FirstGivenName>
<md:SecondGivenName>String</md:SecondGivenName>
<md:FamilyName>String</md:FamilyName>
<md:Suffix>String</md:Suffix>
<md:Moniker>String</md:Moniker>
</md:Name>
<md:Identifier>
<md:Identifier>String</md:Identifier>
<md:Namespace>String</md:Namespace>
<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
</md:Identifier>
<md:Gender>male</md:Gender>
</md:PeopleLocal>
</md:LocalizedInfo>
<md:RunLength>PT2H5M</md:RunLength>
<md:ReleaseYear>2001</md:ReleaseYear>
<md:ReleaseDate>2002-05-30T09:30:10Z</md:ReleaseDate>
<md:ReleaseHistory>
<md:ReleaseType>local</md:ReleaseType>
<md:DistrTerritory>
<md:country>US</md:country>
</md:DistrTerritory>

<md:Date scheduled="true">2001-12-17T09:30:47Z</md:Date>
<md:Description>String</md:Description>
<md:ReleaseOrg organizationID="String">
<md:DisplayName>String</md:DisplayName>
<md:SortName>String</md:SortName>
</md:ReleaseOrg>
</md:ReleaseHistory>
<md:WorkType>Album</md:WorkType>
<md:PictureColorType>bandw</md:PictureColorType>
<md:PictureFormat>Letterbox</md:PictureFormat>
<md:ThreeD>true</md:ThreeD>
<md:AltIdentifier>
<md:Namespace>String</md:Namespace>
<md:Identifier>String</md:Identifier>
<md:Location>http://www.altova.com</md:Location>
</md:AltIdentifier>
<md:RatingSet>
<md:NotRated>true</md:NotRated>
<md:AdultContent>false</md:AdultContent>
</md:RatingSet>
<md:People>
<md:Job>
<md:JobFunction scheme="String">4.36</md:JobFunction>
<md:JobDisplay>String</md:JobDisplay>
<md:BillingBlockOrder>0</md:BillingBlockOrder>
<md:Character>String</md:Character>
<md:Guest>true</md:Guest>
</md:Job>
<md:Name>
<md:DisplayName>String</md:DisplayName>
<md:SortName>String</md:SortName>
<md:FirstGivenName>String</md:FirstGivenName>
<md:SecondGivenName>String</md:SecondGivenName>
<md:FamilyName>String</md:FamilyName>
<md:Suffix>String</md:Suffix>
<md:Moniker>String</md:Moniker>
</md:Name>
<md:Identifier>
<md:Identifier>String</md:Identifier>
<md:Namespace>String</md:Namespace>
<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
</md:Identifier>
<md:Gender>plural</md:Gender>
</md:People>
<md:CountryOfOrigin>
<md:country>US</md:country>
</md:CountryOfOrigin>
<md:AssociatedOrg role="String" organizationID="String">
<md:DisplayName>String</md:DisplayName>
<md:SortName>String</md:SortName>
</md:AssociatedOrg>
<md:SequenceInfo>
<md:Number>0</md:Number>
<md:HouseSequence>String</md:HouseSequence>
</md:SequenceInfo>
<md:Parent relationshipType="ispieceof">
<md:Parent
ContentID="urn:dece:cid:ORG:mystudio2:${#TestCase#RandomNumberGenerated}">
<md:LocalizedInfo language="es">
<md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
<md:TitleDisplay60>String</md:TitleDisplay60>
<md:TitleSort>s</md:TitleSort>
<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
<md:Summary190>s</md:Summary190>
<md:Summary400 cast="true">String</md:Summary400>
<md:OriginalTitle>s</md:OriginalTitle>
<md:CopyrightLine>String</md:CopyrightLine>
</md:LocalizedInfo>
<md:RunLength>PT2H5M</md:RunLength>
<md:ReleaseYear>2001</md:ReleaseYear>
<md:WorkType>Album</md:WorkType>
<md:Parent relationshipType="ispieceof">
<md:Parent
ContentID="urn:dece:cid:ORG:mystudio3:${#TestCase#RandomNumberGenerated}">
<md:LocalizedInfo language="fr">
<md:TitleDisplay19>String</md:TitleDisplay19>
<md:TitleDisplay60>String</md:TitleDisplay60>
<md:TitleSort>s</md:TitleSort>
<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
<md:Summary190>s</md:Summary190>
<md:Summary400 cast="true">String</md:Summary400>
<md:OriginalTitle>s</md:OriginalTitle>
<md:CopyrightLine>String</md:CopyrightLine>
</md:LocalizedInfo>
<md:RunLength>PT2H5M</md:RunLength>
<md:ReleaseYear>2001</md:ReleaseYear>
<md:WorkType>Album</md:WorkType>
<md:Parent relationshipType="ispieceof">
<md:Parent
ContentID="urn:dece:cid:ORG:mystudio4:${#TestCase#RandomNumberGenerated}">
<md:LocalizedInfo language="en-US">
<md:TitleDisplay19>String</md:TitleDisplay19>
<md:TitleDisplay60>String</md:TitleDisplay60>
<md:TitleSort>s</md:TitleSort>
<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
<md:Summary190>s</md:Summary190>
<md:Summary400 cast="true">String</md:Summary400>
<md:OriginalTitle>s</md:OriginalTitle>
<md:CopyrightLine>String</md:CopyrightLine>
</md:LocalizedInfo>
<md:RunLength>PT2H5M</md:RunLength>
<md:ReleaseYear>2001</md:ReleaseYear>
<md:WorkType>Album</md:WorkType>
</md:Parent>
</md:Parent>
</md:Parent>
</md:Parent>
</md:Parent>
</md:Parent>
</md:BasicMetadata>
</md:Entry>

<md:Entry>
<md:DisplayName language="en-US">String</md:DisplayName>
<md:BasicMetadata
ContentID="urn:dece:cid:ORG:mystudio5:${#TestCase#RandomNumberGenerated}">
<md:UpdateNum>1</md:UpdateNum>
<md:LocalizedInfo default="true" language="en-GB">
<md:TitleDisplay19>String</md:TitleDisplay19>
<md:TitleDisplay60>String</md:TitleDisplay60>
<md:TitleSort>String</md:TitleSort>
<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
<md:Summary190 cast="true">String</md:Summary190>
<md:Summary400 cast="true">String</md:Summary400>
<md:Summary4000 cast="true">String</md:Summary4000>
<md:DisplayIndicators>P</md:DisplayIndicators>
<md:Genre>Action</md:Genre>
<md:Keyword>String</md:Keyword>
<md:VersionNotes>String</md:VersionNotes>
<md:Region>
<md:country>US</md:country>
</md:Region>
<md:OriginalTitle>String</md:OriginalTitle>
<md:CopyrightLine>String</md:CopyrightLine>
<md:PeopleLocal>
<md:Job>
<md:JobFunction scheme="String">4.36</md:JobFunction>
<md:JobDisplay>String</md:JobDisplay>
<md:BillingBlockOrder>0</md:BillingBlockOrder>
<md:Character>String</md:Character>
<md:Guest>true</md:Guest>
</md:Job>
<md:Name>
<md:DisplayName>String</md:DisplayName>
<md:SortName>String</md:SortName>
<md:FirstGivenName>String</md:FirstGivenName>
<md:SecondGivenName>String</md:SecondGivenName>
<md:FamilyName>String</md:FamilyName>
<md:Suffix>String</md:Suffix>
<md:Moniker>String</md:Moniker>
</md:Name>
<md:Identifier>
<md:Identifier>String</md:Identifier>
<md:Namespace>String</md:Namespace>
<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
</md:Identifier>
<md:Gender>male</md:Gender>
</md:PeopleLocal>
</md:LocalizedInfo>
<md:RunLength>PT3H7M</md:RunLength>
<md:ReleaseYear>2001</md:ReleaseYear>
<md:ReleaseDate>2002-05-30T09:30:10Z</md:ReleaseDate>
<md:ReleaseHistory>
<md:ReleaseType>local</md:ReleaseType>
<md:DistrTerritory>
<md:country>US</md:country>
</md:DistrTerritory>

<md:Date scheduled="true">2001-12-17T09:30:47Z</md:Date>
<md:Description>String</md:Description>
<md:ReleaseOrg organizationID="String">
<md:DisplayName>String</md:DisplayName>
<md:SortName>String</md:SortName>
</md:ReleaseOrg>
</md:ReleaseHistory>
<md:WorkType>Album</md:WorkType>
<md:PictureColorType>bandw</md:PictureColorType>
<md:PictureFormat>Letterbox</md:PictureFormat>
<md:ThreeD>true</md:ThreeD>
<md:AltIdentifier>
<md:Namespace>String</md:Namespace>
<md:Identifier>String</md:Identifier>
<md:Location>http://www.altova.com</md:Location>
</md:AltIdentifier>
<md:RatingSet>
<md:NotRated>true</md:NotRated>
<md:AdultContent>false</md:AdultContent>
</md:RatingSet>
<md:People>
<md:Job>
<md:JobFunction scheme="String">4.36</md:JobFunction>
<md:JobDisplay>String</md:JobDisplay>
<md:BillingBlockOrder>0</md:BillingBlockOrder>
<md:Character>String</md:Character>
<md:Guest>true</md:Guest>
</md:Job>
<md:Name>
<md:DisplayName>String</md:DisplayName>
<md:SortName>String</md:SortName>
<md:FirstGivenName>String</md:FirstGivenName>
<md:SecondGivenName>String</md:SecondGivenName>
<md:FamilyName>String</md:FamilyName>
<md:Suffix>String</md:Suffix>
<md:Moniker>String</md:Moniker>
</md:Name>
<md:Identifier>
<md:Identifier>String</md:Identifier>
<md:Namespace>String</md:Namespace>
<md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
</md:Identifier>
<md:Gender>plural</md:Gender>
</md:People>
<md:CountryOfOrigin>
<md:country>US</md:country>
</md:CountryOfOrigin>
<md:AssociatedOrg role="String" organizationID="String">
<md:DisplayName>String</md:DisplayName>
<md:SortName>String</md:SortName>
</md:AssociatedOrg>
<md:SequenceInfo>
<md:Number>0</md:Number>
<md:HouseSequence>String</md:HouseSequence>
</md:SequenceInfo>
<md:Parent relationshipType="ispieceof">
<md:Parent
ContentID="urn:dece:cid:ORG:mystudio6:${#TestCase#RandomNumberGenerated}">
<md:LocalizedInfo language="en-US">
<md:TitleDisplay19>${#Project#TitleDisplay19}</md:TitleDisplay19>
<md:TitleDisplay60>String</md:TitleDisplay60>
<md:TitleSort>s</md:TitleSort>
<md:ArtReference resolution="800x1200">http://havadenglish.files.wordpress.com/2013/03/a-beautiful-mind-movie-poster.jpg</md:ArtReference>
<md:Summary190>s</md:Summary190>
<md:Summary400 cast="true">String</md:Summary400>
<md:OriginalTitle>s</md:OriginalTitle>
<md:CopyrightLine>String</md:CopyrightLine>
</md:LocalizedInfo>
<md:RunLength>PT2H5M</md:RunLength>
<md:ReleaseYear>2001</md:ReleaseYear>
<md:WorkType>Album</md:WorkType>
</md:Parent>
</md:Parent>
</md:BasicMetadata>
</md:Entry>

<md:CompilationClass hasOtherInclusions="true">Stringcompilation class</md:CompilationClass>
</dece:CompObj>


</dece:Bundle>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Bundle</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="61e6c877-5cfe-4beb-84d0-4145739afe11"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MetadataBundleCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="b5de6120-91e8-4310-942c-adc6dcf3f113"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>707846667</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2010/10/dece">
   <Error ErrorID="urn:dece:error:MalformedRequest">
      <Reason Language="en-us">405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.</Reason>
      <OriginalRequest>urn:dece:type:null</OriginalRequest>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>356</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_988034556.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A332492308</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_212878881.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>BID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_707846667.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBundleUpdate-07" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e4065537-bb8f-488f-bda8-dce59eebf990"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="879e4da2-ad73-441f-a958-53a0f9f08fc1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("BID",null);
tC.setPropertyValue("BID_GET_DELETE",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("RandomNumberGenerated_1",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="b3817957-1da2-4668-87fd-38fa0c97cc0e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("BID",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("BID_GET_DELETE",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("RandomNumberGenerated_1",callTC.getPropertyValue("RandomNumberGenerated_1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="af4ba3e8-cf3b-490b-a5ca-26c8a4ffc31d"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("UPDATE - MetadataBundleCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UPDATE - MetadataBundleCreate" id="85a1e950-b8b5-4398-87ef-78504ed36abd"><con:settings/><con:config service="BundleCreate_CTP" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Bundle/${#TestCase#BID_GET_DELETE}" methodName="PUT BundleCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UPDATE - MetadataBundleCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="5e562916-1638-44c4-aa88-2f39f5555be8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:Bundle BundleID="${#TestCase#BID}" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} Coordinator-1.0.7-draft-20130619.xsd ">
  <dece:DisplayName Language="EN">dece:DisplayName</dece:DisplayName>
  <dece:LogicalAssetReference ALID="${#TestCase#ALID}" ContentID="${#TestCase#CID}" CreatedDate="2001-12-31T12:00:00" CurrentStatus="urn:dece:type:status:active" UpdatedDate="2001-12-31T12:00:00"/>
  <dece:CompObj xsi:type="md:CompObj-type">
    <md:Entry>
      <md:DisplayName language="en">md:DisplayName</md:DisplayName>
     
      <md:ContentID>${#TestCase#CID}</md:ContentID>
    </md:Entry>
  </dece:CompObj>
  
</dece:Bundle>

]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="2f614a99-8595-439b-be4e-3a11d149e064"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UPDATE - MetadataBundleCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="1eb77b09-1456-496e-aad3-f0ca0f1a2bb9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>162352564</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bundle Updated Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>27</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Bundle/urn:dece:bid:file:EXAMPLE_BID_Version_162352564.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_997717078.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A329595103</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_987174620.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>BID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_162352564.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_162352564.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBundleUpdate-11" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9e4071a2-6283-444a-a1e0-fcfc6bbfcbe6"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="c6962ddf-4be4-40b4-b8bf-0a89b9d93f32"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("BID",null);
tC.setPropertyValue("BID_GET_DELETE",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("RandomNumberGenerated_1",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="de01b752-266b-480a-ab9e-f9ef95b2ab15"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("BID",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("BID_GET_DELETE",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("RandomNumberGenerated_1",callTC.getPropertyValue("RandomNumberGenerated_1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="79d46059-b04f-4988-9e4d-6a7cdb5488e1"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("UPDATE - MetadataBundleCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UPDATE - MetadataBundleCreate" id="1a38b729-9daf-4783-8444-506c72c4186e"><con:settings/><con:config service="BundleCreate_CTP" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Bundle/${#TestCase#BID_GET_DELETE}" methodName="PUT BundleCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UPDATE - MetadataBundleCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="8997bda8-46ea-4401-84b0-61bf9ae9eb31"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:Bundle BundleID="${#TestCase#BID}" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} Coordinator-1.0.7-draft-20130619.xsd ">
  <dece:DisplayName Language="EN">dece:DisplayName</dece:DisplayName>
  <dece:LogicalAssetReference ALID="${#TestCase#ALID}" ContentID="${#TestCase#CID}" CreatedDate="2001-12-31T12:00:00" CurrentStatus="urn:dece:type:status:active" UpdatedDate="2001-12-31T12:00:00"/>
  <dece:CompObj xsi:type="md:CompObj-type">
    <md:Entry>
      <md:DisplayName language="en">DisplayName</md:DisplayName>
     
      <md:ContentID>${#TestCase#CID}</md:ContentID>
    </md:Entry>
  </dece:CompObj>
  
</dece:Bundle>

]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Bundle/urn:dece:bid:file:EXAMPLE_BID_Version_734484691.txt</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="3f636056-fd4c-47f0-a5ac-7af4e9560050"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UPDATE - MetadataBundleCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="a720c7a0-4910-4270-8918-636390bb00af"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>707846667</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2010/10/dece">
   <Error ErrorID="urn:dece:error:MalformedRequest">
      <Reason Language="en-us">405 Method Not Allowed. The request cannot be fulfilled because the method is unknown or not supported at the requested server.</Reason>
      <OriginalRequest>urn:dece:type:null</OriginalRequest>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 405 Method Not Allowed</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>356</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_988034556.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A332492308</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_212878881.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>BID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_707846667.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_707846667.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\QALP1/CON_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBundleGet" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="56d43063-9f12-4e2c-8132-b595530dd6ac"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="9055ded2-8a5e-48cb-aee1-87a875ca566f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("BID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("RandomNumberGenerated_1",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="5d935044-3dbf-4afe-bb27-ddbc5c55afab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("BID",callTC.getPropertyValue("BID"));
tC.setPropertyValue("BID_GET_DELETE",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("RandomNumberGenerated_1",callTC.getPropertyValue("RandomNumberGenerated_1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="ba5dc3ab-1679-4364-b848-b167bec20f54"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - MetadataBundleCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MetadataBundleCreate" id="77587b0a-d8be-41f8-b753-76d558a00075"><con:settings/><con:config service="BundleCreate_CTP" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Bundle/${#TestCase#BID_GET_DELETE}" methodName="GET BundleCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MetadataBundleCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="truststore-test-node-content-provider.jks" id="cc5aef7f-481c-44ad-9649-bc99e95a70f3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2010 rel. 3 (http://www.altova.com)-->
<dece:Bundle 
BundleID="urn:dece:bid:FILE:mystudio Version${#TestCase#RandomNumberGenerated}.txt" 
xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/schema/md/v1.07/md" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:DisplayName Language="en-US">String</dece:DisplayName>
   <dece:LogicalAssetReference>
      <dece:ContentID>urn:dece:cid:file:WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</dece:ContentID>
      <dece:ALID>urn:dece:alid:file:WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</dece:ALID>
   </dece:LogicalAssetReference>
   <dece:CompObj>
      <md:Entry>
         <md:DisplayName language="en-US">String</md:DisplayName>
         <md:BasicMetadata ContentID="urn:dece:cid:ORG:mystudio1:${Groovy Script#result}">
            <md:UpdateNum>1</md:UpdateNum>
            <md:LocalizedInfo default="true" language="en-US">
               <md:TitleDisplay19>String</md:TitleDisplay19>
               <md:TitleDisplay60>String</md:TitleDisplay60>
               <md:TitleSort>String</md:TitleSort>
               <md:ArtReference resolution="x">http://www.altova.com</md:ArtReference>
               <md:Summary190 cast="true">String</md:Summary190>
               <md:Summary400 cast="true">String</md:Summary400>
               <md:Summary4000 cast="true">String</md:Summary4000>
               <md:DisplayIndicators>P</md:DisplayIndicators>
               <md:Genre>Action</md:Genre>
               <md:Keyword>String</md:Keyword>
               <md:VersionNotes>String</md:VersionNotes>
               <md:Region>
                  <md:country>AA</md:country>
               </md:Region>
               <md:OriginalTitle>String</md:OriginalTitle>
               <md:CopyrightLine>String</md:CopyrightLine>
               <md:PeopleLocal>
                  <md:Job>
                     <md:JobFunction scheme="String">4.36</md:JobFunction>
                     <md:JobDisplay>String</md:JobDisplay>
                     <md:BillingBlockOrder>0</md:BillingBlockOrder>
                     <md:Character>String</md:Character>
                     <md:Guest>true</md:Guest>
                  </md:Job>
                  <md:Name>
                     <md:DisplayName>String</md:DisplayName>
                     <md:SortName>String</md:SortName>
                     <md:FirstGivenName>String</md:FirstGivenName>
                     <md:SecondGivenName>String</md:SecondGivenName>
                     <md:FamilyName>String</md:FamilyName>
                     <md:Suffix>String</md:Suffix>
                     <md:Moniker>String</md:Moniker>
                  </md:Name>
                  <md:Identifier>
                     <md:Identifier>String</md:Identifier>
                     <md:Namespace>String</md:Namespace>
                     <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
                  </md:Identifier>
                  <md:Gender>male</md:Gender>
               </md:PeopleLocal>
            </md:LocalizedInfo>
            <md:RunLength>PT2H5M</md:RunLength>
            <md:ReleaseYear>2001</md:ReleaseYear>            
            <md:ReleaseDateTime>2002-05-30T09:30:10Z</md:ReleaseDateTime>
            <md:ReleaseHistory>
               <md:ReleaseType>local</md:ReleaseType>
               <md:DistrTerritory>
                  <md:country>AA</md:country>
               </md:DistrTerritory>
               <md:DateTime scheduled="true">2001-12-17T09:30:47Z</md:DateTime>
               <md:Date scheduled="true">1967-08-13</md:Date>
               <md:Description>String</md:Description>
               <md:ReleaseOrg organizationID="String">
                  <md:DisplayName>String</md:DisplayName>
                  <md:SortName>String</md:SortName>
               </md:ReleaseOrg>
            </md:ReleaseHistory>
            <md:WorkType>Album</md:WorkType>
            <md:PictureColorType>bandw</md:PictureColorType>
            <md:PictureFormat>Letterbox</md:PictureFormat>
            <md:ThreeD>true</md:ThreeD>
            <md:AltIdentifier>
               <md:Namespace>String</md:Namespace>
               <md:Identifier>String</md:Identifier>
               <md:Location>http://www.altova.com</md:Location>
            </md:AltIdentifier>
            <md:RatingSet>
               <md:NotRated>true</md:NotRated>
               <md:AdultContent>false</md:AdultContent>
            </md:RatingSet>
            <md:People>
               <md:Job>
                  <md:JobFunction scheme="String">4.36</md:JobFunction>
                  <md:JobDisplay>String</md:JobDisplay>
                  <md:BillingBlockOrder>0</md:BillingBlockOrder>
                  <md:Character>String</md:Character>
                  <md:Guest>true</md:Guest>
               </md:Job>
               <md:Name>
                  <md:DisplayName>String</md:DisplayName>
                  <md:SortName>String</md:SortName>
                  <md:FirstGivenName>String</md:FirstGivenName>
                  <md:SecondGivenName>String</md:SecondGivenName>
                  <md:FamilyName>String</md:FamilyName>
                  <md:Suffix>String</md:Suffix>
                  <md:Moniker>String</md:Moniker>
               </md:Name>
               <md:Identifier>
                  <md:Identifier>String</md:Identifier>
                  <md:Namespace>String</md:Namespace>
                  <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
               </md:Identifier>
               <md:Gender>plural</md:Gender>
            </md:People>
            <md:CountryOfOrigin>
               <md:country>AA</md:country>
            </md:CountryOfOrigin>
            <md:AssociatedOrg role="String" organizationID="String">
               <md:DisplayName>String</md:DisplayName>
               <md:SortName>String</md:SortName>
            </md:AssociatedOrg>
            <md:SequenceInfo>
               <md:Number>0</md:Number>
               <md:HouseSequence>String</md:HouseSequence>
            </md:SequenceInfo>
            <md:Parent relationshipType="ispieceof">
               <md:Parent ContentID="urn:dece:cid:ORG:mystudio2:${Groovy Script#result}">
                  <md:LocalizedInfo language="en-US">
                     <md:TitleDisplay19>S</md:TitleDisplay19>
                     <md:TitleSort>s</md:TitleSort>
                     <md:Summary190>s</md:Summary190>
                     <md:OriginalTitle>s</md:OriginalTitle>
                  </md:LocalizedInfo>
                  <md:ReleaseYear>2001</md:ReleaseYear>
                  <md:WorkType>Album</md:WorkType>
                  <md:Parent relationshipType="ispieceof">
                     <md:Parent ContentID="urn:dece:cid:ORG:mystudio3:${Groovy Script#result}">
                        <md:LocalizedInfo language="en-US">
                           <md:TitleDisplay19>s</md:TitleDisplay19>
                           <md:TitleSort>s</md:TitleSort>
                           <md:Summary190>s</md:Summary190>
                           <md:OriginalTitle>s</md:OriginalTitle>
                        </md:LocalizedInfo>
                        <md:ReleaseYear>2001</md:ReleaseYear>
                        <md:WorkType>Album</md:WorkType>
                        <md:Parent relationshipType="ispieceof">
                           <md:Parent ContentID="urn:dece:cid:ORG:mystudio4:${Groovy Script#result}">
                              <md:LocalizedInfo language="en-US">
                                 <md:TitleDisplay19>s</md:TitleDisplay19>
                                 <md:TitleSort>s</md:TitleSort>
                                 <md:Summary190>s</md:Summary190>
                                 <md:OriginalTitle>s</md:OriginalTitle>
                              </md:LocalizedInfo>
                              <md:ReleaseYear>2001</md:ReleaseYear>
                              <md:WorkType>Album</md:WorkType>
                           </md:Parent>
                        </md:Parent>
                     </md:Parent>
                  </md:Parent>
               </md:Parent>
            </md:Parent>
         </md:BasicMetadata>
      </md:Entry>
      <md:Entry>
         <md:DisplayName language="en-US">String</md:DisplayName>
         <md:BasicMetadata ContentID="urn:dece:cid:ORG:mystudio5:${Groovy Script#result}">
            <md:UpdateNum>1</md:UpdateNum>
            <md:LocalizedInfo default="true" language="en-US">
               <md:TitleDisplay19>String</md:TitleDisplay19>
               <md:TitleDisplay60>String</md:TitleDisplay60>
               <md:TitleSort>String</md:TitleSort>
               <md:ArtReference resolution="x">http://www.altova.com</md:ArtReference>
               <md:Summary190 cast="true">String</md:Summary190>
               <md:Summary400 cast="true">String</md:Summary400>
               <md:Summary4000 cast="true">String</md:Summary4000>
               <md:DisplayIndicators>P</md:DisplayIndicators>
               <md:Genre>Action</md:Genre>
               <md:Keyword>String</md:Keyword>
               <md:VersionNotes>String</md:VersionNotes>
               <md:Region>
                  <md:country>AA</md:country>
               </md:Region>
               <md:OriginalTitle>String</md:OriginalTitle>
               <md:CopyrightLine>String</md:CopyrightLine>
               <md:PeopleLocal>
                  <md:Job>
                     <md:JobFunction scheme="String">4.36</md:JobFunction>
                     <md:JobDisplay>String</md:JobDisplay>
                     <md:BillingBlockOrder>0</md:BillingBlockOrder>
                     <md:Character>String</md:Character>
                     <md:Guest>true</md:Guest>
                  </md:Job>
                  <md:Name>
                     <md:DisplayName>String</md:DisplayName>
                     <md:SortName>String</md:SortName>
                     <md:FirstGivenName>String</md:FirstGivenName>
                     <md:SecondGivenName>String</md:SecondGivenName>
                     <md:FamilyName>String</md:FamilyName>
                     <md:Suffix>String</md:Suffix>
                     <md:Moniker>String</md:Moniker>
                  </md:Name>
                  <md:Identifier>
                     <md:Identifier>String</md:Identifier>
                     <md:Namespace>String</md:Namespace>
                     <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
                  </md:Identifier>
                  <md:Gender>male</md:Gender>
               </md:PeopleLocal>
            </md:LocalizedInfo>
            <md:RunLength>PT3H7M</md:RunLength>
            <md:ReleaseYear>2001</md:ReleaseYear>             
            <md:ReleaseDateTime>2002-05-30T09:30:10Z</md:ReleaseDateTime>
            <md:ReleaseHistory>
               <md:ReleaseType>local</md:ReleaseType>
               <md:DistrTerritory>
                  <md:country>AA</md:country>
               </md:DistrTerritory>
               <md:DateTime scheduled="true">2001-12-17T09:30:47Z</md:DateTime>
               <md:Date scheduled="true">1967-08-13</md:Date>
               <md:Description>String</md:Description>
               <md:ReleaseOrg organizationID="String">
                  <md:DisplayName>String</md:DisplayName>
                  <md:SortName>String</md:SortName>
               </md:ReleaseOrg>
            </md:ReleaseHistory>
            <md:WorkType>Album</md:WorkType>
            <md:PictureColorType>bandw</md:PictureColorType>
            <md:PictureFormat>Letterbox</md:PictureFormat>
            <md:ThreeD>true</md:ThreeD>
            <md:AltIdentifier>
               <md:Namespace>String</md:Namespace>
               <md:Identifier>String</md:Identifier>
               <md:Location>http://www.altova.com</md:Location>
            </md:AltIdentifier>
            <md:RatingSet>
               <md:NotRated>true</md:NotRated>
               <md:AdultContent>false</md:AdultContent>
            </md:RatingSet>
            <md:People>
               <md:Job>
                  <md:JobFunction scheme="String">4.36</md:JobFunction>
                  <md:JobDisplay>String</md:JobDisplay>
                  <md:BillingBlockOrder>0</md:BillingBlockOrder>
                  <md:Character>String</md:Character>
                  <md:Guest>true</md:Guest>
               </md:Job>
               <md:Name>
                  <md:DisplayName>String</md:DisplayName>
                  <md:SortName>String</md:SortName>
                  <md:FirstGivenName>String</md:FirstGivenName>
                  <md:SecondGivenName>String</md:SecondGivenName>
                  <md:FamilyName>String</md:FamilyName>
                  <md:Suffix>String</md:Suffix>
                  <md:Moniker>String</md:Moniker>
               </md:Name>
               <md:Identifier>
                  <md:Identifier>String</md:Identifier>
                  <md:Namespace>String</md:Namespace>
                  <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
               </md:Identifier>
               <md:Gender>plural</md:Gender>
            </md:People>
            <md:CountryOfOrigin>
               <md:country>AA</md:country>
            </md:CountryOfOrigin>
            <md:AssociatedOrg role="String" organizationID="String">
               <md:DisplayName>String</md:DisplayName>
               <md:SortName>String</md:SortName>
            </md:AssociatedOrg>
            <md:SequenceInfo>
               <md:Number>0</md:Number>
               <md:HouseSequence>String</md:HouseSequence>
            </md:SequenceInfo>
            <md:Parent relationshipType="ispieceof">
               <md:Parent ContentID="urn:dece:cid:ORG:mystudio6:${Groovy Script#result}">
                  <md:LocalizedInfo language="en-US">
                     <md:TitleDisplay19>S</md:TitleDisplay19>
                     <md:TitleSort>s</md:TitleSort>
                     <md:Summary190>s</md:Summary190>
                     <md:OriginalTitle>s</md:OriginalTitle>
                  </md:LocalizedInfo>
                  <md:ReleaseYear>2001</md:ReleaseYear>
                  <md:WorkType>Album</md:WorkType>
               </md:Parent>
            </md:Parent>
         </md:BasicMetadata>
      </md:Entry>
   </dece:CompObj>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2001-12-17T09:30:47.0Z" CreatedBy="urn:dece:" DeletionDate="2001-12-17T09:30:47.0Z" DeletedBy="urn:dece:">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>String</dece:Description>
      </dece:Current>
      <dece:History>
         <dece:Prior ModificationDate="2001-12-17T09:30:47.0Z" ModifiedBy="urn:dece:">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>String</dece:Description>
         </dece:Prior>
      </dece:History>
   </dece:ResourceStatus>
</dece:Bundle>

]]></con:request><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Asset/Bundle/urn:dece:bid:file:EXAMPLE_BID_Version_734484691.txt</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="c1e76da0-be9f-437a-84d8-f1999ff033e5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBundleCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="e626acf8-2ca2-4942-828e-51cc59eae77a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag" id="6cb67581-cf85-412c-8fa2-4d20032bfd73"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBundleCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="28288ea4-a588-4798-b563-d9f4d7d4ad9e"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBundleCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MetadataBundleCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="14f76320-a9e6-4e59-8854-0e8e984d5234"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Validating -Body is null or not of get" id="60cb13d3-d506-4740-9242-18f01556b7f4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MetadataBundleCreate');
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if ( httpStatus  == 'HTTP/1.1 200 OK' )
{
//def responseAsXml = context.expand( '${GET - MapAPIDtoALIDCreate#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]}' )
def responseAsXml = tStep.httpRequest.response.getResponseContent();
def xml = new XmlSlurper().parseText(responseAsXml);
log.info xml.toString();

if (xml == "" )
{
		assert 1==2
}
}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>607631293</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:Bundle BundleID="urn:dece:bid:file:EXAMPLE_BID_Version_607631293.txt" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:DisplayName Language="EN">dece:DisplayName</dece:DisplayName>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_718125343.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_284938313.txt"/>
   <dece:CompObj>
      <md:Entry>
         <md:DisplayName language="en">DisplayName</md:DisplayName>
         <md:ContentID>urn:dece:cid:file:A_File_Name_with_NUMBERS_284938313.txt</md:ContentID>
      </md:Entry>
   </dece:CompObj>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2014-10-22T09:26:45.541Z" CreatedBy="urn:dece:org:org:dece:test-node-content-provider" ModificationDate="2014-10-22T09:26:48.365Z" ModifiedBy="urn:dece:org:org:dece:test-node-content-provider">
         <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      <dece:History>
         <dece:Prior ModificationDate="2014-10-22T09:26:45.541Z" ModifiedBy="urn:dece:org:org:dece:test-node-content-provider">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Prior>
      </dece:History>
   </dece:ResourceStatus>
</dece:Bundle>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>BID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_607631293.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/truststore-test-node-content-provider.jks</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"06008C126D5D7260E0530F991F0AE6D7:4700E527"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Thu, 23 Oct 2014 09:26:50 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Wed, 22 Oct 2014 09:26:48 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1413970010 VEd4WQofmQsAABV1IBEAAAA9 urn:dece:org:org:dece:test-node-content-provider 10.31.153.42</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MetadataBundleDelete" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="21b7c8fe-19b7-48e4-8b60-f2846e5bc7b9"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="45e54c00-ac24-4cd5-b4b3-dc945615c957"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("BID",null);
tC.setPropertyValue("BID_GET_DELETE",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("RandomNumberGenerated_1",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="9fb066f7-a3ac-4364-b6bd-5bc386878ab1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("BID",callTC.getPropertyValue("BID"));
tC.setPropertyValue("BID_GET_DELETE",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("RandomNumberGenerated_1",callTC.getPropertyValue("RandomNumberGenerated_1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="79022788-65b1-485f-9a08-9f3a196d195e"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("DELETE - MetadataBundleCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - MetadataBundleCreate" id="17e3aabe-dceb-4467-878a-556264635759"><con:settings/><con:config service="BundleCreate_CTP" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Bundle/${#TestCase#BID_GET_DELETE}" methodName="DELETE BundleCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - MetadataBundleCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="truststore-test-node-content-provider.jks" id="83beb5ae-e388-4ab7-bdd0-5f4a1848724f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!--Sample XML file generated by XMLSpy v2010 rel. 3 (http://www.altova.com)-->
<dece:Bundle 
BundleID="urn:dece:bid:FILE:mystudio Version${#TestCase#RandomNumberGenerated}.txt" 
xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:md="http://www.movielabs.com/schema/md/v1.07/md" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:DisplayName Language="en-US">String</dece:DisplayName>
   <dece:LogicalAssetReference>
      <dece:ContentID>urn:dece:cid:file:WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</dece:ContentID>
      <dece:ALID>urn:dece:alid:file:WEB_PORTAL_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</dece:ALID>
   </dece:LogicalAssetReference>
   <dece:CompObj>
      <md:Entry>
         <md:DisplayName language="en-US">String</md:DisplayName>
         <md:BasicMetadata ContentID="urn:dece:cid:ORG:mystudio1:${Groovy Script#result}">
            <md:UpdateNum>1</md:UpdateNum>
            <md:LocalizedInfo default="true" language="en-US">
               <md:TitleDisplay19>String</md:TitleDisplay19>
               <md:TitleDisplay60>String</md:TitleDisplay60>
               <md:TitleSort>String</md:TitleSort>
               <md:ArtReference resolution="x">http://www.altova.com</md:ArtReference>
               <md:Summary190 cast="true">String</md:Summary190>
               <md:Summary400 cast="true">String</md:Summary400>
               <md:Summary4000 cast="true">String</md:Summary4000>
               <md:DisplayIndicators>P</md:DisplayIndicators>
               <md:Genre>Action</md:Genre>
               <md:Keyword>String</md:Keyword>
               <md:VersionNotes>String</md:VersionNotes>
               <md:Region>
                  <md:country>AA</md:country>
               </md:Region>
               <md:OriginalTitle>String</md:OriginalTitle>
               <md:CopyrightLine>String</md:CopyrightLine>
               <md:PeopleLocal>
                  <md:Job>
                     <md:JobFunction scheme="String">4.36</md:JobFunction>
                     <md:JobDisplay>String</md:JobDisplay>
                     <md:BillingBlockOrder>0</md:BillingBlockOrder>
                     <md:Character>String</md:Character>
                     <md:Guest>true</md:Guest>
                  </md:Job>
                  <md:Name>
                     <md:DisplayName>String</md:DisplayName>
                     <md:SortName>String</md:SortName>
                     <md:FirstGivenName>String</md:FirstGivenName>
                     <md:SecondGivenName>String</md:SecondGivenName>
                     <md:FamilyName>String</md:FamilyName>
                     <md:Suffix>String</md:Suffix>
                     <md:Moniker>String</md:Moniker>
                  </md:Name>
                  <md:Identifier>
                     <md:Identifier>String</md:Identifier>
                     <md:Namespace>String</md:Namespace>
                     <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
                  </md:Identifier>
                  <md:Gender>male</md:Gender>
               </md:PeopleLocal>
            </md:LocalizedInfo>
            <md:RunLength>PT2H5M</md:RunLength>
            <md:ReleaseYear>2001</md:ReleaseYear>            
            <md:ReleaseDateTime>2002-05-30T09:30:10Z</md:ReleaseDateTime>
            <md:ReleaseHistory>
               <md:ReleaseType>local</md:ReleaseType>
               <md:DistrTerritory>
                  <md:country>AA</md:country>
               </md:DistrTerritory>
               <md:DateTime scheduled="true">2001-12-17T09:30:47Z</md:DateTime>
               <md:Date scheduled="true">1967-08-13</md:Date>
               <md:Description>String</md:Description>
               <md:ReleaseOrg organizationID="String">
                  <md:DisplayName>String</md:DisplayName>
                  <md:SortName>String</md:SortName>
               </md:ReleaseOrg>
            </md:ReleaseHistory>
            <md:WorkType>Album</md:WorkType>
            <md:PictureColorType>bandw</md:PictureColorType>
            <md:PictureFormat>Letterbox</md:PictureFormat>
            <md:ThreeD>true</md:ThreeD>
            <md:AltIdentifier>
               <md:Namespace>String</md:Namespace>
               <md:Identifier>String</md:Identifier>
               <md:Location>http://www.altova.com</md:Location>
            </md:AltIdentifier>
            <md:RatingSet>
               <md:NotRated>true</md:NotRated>
               <md:AdultContent>false</md:AdultContent>
            </md:RatingSet>
            <md:People>
               <md:Job>
                  <md:JobFunction scheme="String">4.36</md:JobFunction>
                  <md:JobDisplay>String</md:JobDisplay>
                  <md:BillingBlockOrder>0</md:BillingBlockOrder>
                  <md:Character>String</md:Character>
                  <md:Guest>true</md:Guest>
               </md:Job>
               <md:Name>
                  <md:DisplayName>String</md:DisplayName>
                  <md:SortName>String</md:SortName>
                  <md:FirstGivenName>String</md:FirstGivenName>
                  <md:SecondGivenName>String</md:SecondGivenName>
                  <md:FamilyName>String</md:FamilyName>
                  <md:Suffix>String</md:Suffix>
                  <md:Moniker>String</md:Moniker>
               </md:Name>
               <md:Identifier>
                  <md:Identifier>String</md:Identifier>
                  <md:Namespace>String</md:Namespace>
                  <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
               </md:Identifier>
               <md:Gender>plural</md:Gender>
            </md:People>
            <md:CountryOfOrigin>
               <md:country>AA</md:country>
            </md:CountryOfOrigin>
            <md:AssociatedOrg role="String" organizationID="String">
               <md:DisplayName>String</md:DisplayName>
               <md:SortName>String</md:SortName>
            </md:AssociatedOrg>
            <md:SequenceInfo>
               <md:Number>0</md:Number>
               <md:HouseSequence>String</md:HouseSequence>
            </md:SequenceInfo>
            <md:Parent relationshipType="ispieceof">
               <md:Parent ContentID="urn:dece:cid:ORG:mystudio2:${Groovy Script#result}">
                  <md:LocalizedInfo language="en-US">
                     <md:TitleDisplay19>S</md:TitleDisplay19>
                     <md:TitleSort>s</md:TitleSort>
                     <md:Summary190>s</md:Summary190>
                     <md:OriginalTitle>s</md:OriginalTitle>
                  </md:LocalizedInfo>
                  <md:ReleaseYear>2001</md:ReleaseYear>
                  <md:WorkType>Album</md:WorkType>
                  <md:Parent relationshipType="ispieceof">
                     <md:Parent ContentID="urn:dece:cid:ORG:mystudio3:${Groovy Script#result}">
                        <md:LocalizedInfo language="en-US">
                           <md:TitleDisplay19>s</md:TitleDisplay19>
                           <md:TitleSort>s</md:TitleSort>
                           <md:Summary190>s</md:Summary190>
                           <md:OriginalTitle>s</md:OriginalTitle>
                        </md:LocalizedInfo>
                        <md:ReleaseYear>2001</md:ReleaseYear>
                        <md:WorkType>Album</md:WorkType>
                        <md:Parent relationshipType="ispieceof">
                           <md:Parent ContentID="urn:dece:cid:ORG:mystudio4:${Groovy Script#result}">
                              <md:LocalizedInfo language="en-US">
                                 <md:TitleDisplay19>s</md:TitleDisplay19>
                                 <md:TitleSort>s</md:TitleSort>
                                 <md:Summary190>s</md:Summary190>
                                 <md:OriginalTitle>s</md:OriginalTitle>
                              </md:LocalizedInfo>
                              <md:ReleaseYear>2001</md:ReleaseYear>
                              <md:WorkType>Album</md:WorkType>
                           </md:Parent>
                        </md:Parent>
                     </md:Parent>
                  </md:Parent>
               </md:Parent>
            </md:Parent>
         </md:BasicMetadata>
      </md:Entry>
      <md:Entry>
         <md:DisplayName language="en-US">String</md:DisplayName>
         <md:BasicMetadata ContentID="urn:dece:cid:ORG:mystudio5:${Groovy Script#result}">
            <md:UpdateNum>1</md:UpdateNum>
            <md:LocalizedInfo default="true" language="en-US">
               <md:TitleDisplay19>String</md:TitleDisplay19>
               <md:TitleDisplay60>String</md:TitleDisplay60>
               <md:TitleSort>String</md:TitleSort>
               <md:ArtReference resolution="x">http://www.altova.com</md:ArtReference>
               <md:Summary190 cast="true">String</md:Summary190>
               <md:Summary400 cast="true">String</md:Summary400>
               <md:Summary4000 cast="true">String</md:Summary4000>
               <md:DisplayIndicators>P</md:DisplayIndicators>
               <md:Genre>Action</md:Genre>
               <md:Keyword>String</md:Keyword>
               <md:VersionNotes>String</md:VersionNotes>
               <md:Region>
                  <md:country>AA</md:country>
               </md:Region>
               <md:OriginalTitle>String</md:OriginalTitle>
               <md:CopyrightLine>String</md:CopyrightLine>
               <md:PeopleLocal>
                  <md:Job>
                     <md:JobFunction scheme="String">4.36</md:JobFunction>
                     <md:JobDisplay>String</md:JobDisplay>
                     <md:BillingBlockOrder>0</md:BillingBlockOrder>
                     <md:Character>String</md:Character>
                     <md:Guest>true</md:Guest>
                  </md:Job>
                  <md:Name>
                     <md:DisplayName>String</md:DisplayName>
                     <md:SortName>String</md:SortName>
                     <md:FirstGivenName>String</md:FirstGivenName>
                     <md:SecondGivenName>String</md:SecondGivenName>
                     <md:FamilyName>String</md:FamilyName>
                     <md:Suffix>String</md:Suffix>
                     <md:Moniker>String</md:Moniker>
                  </md:Name>
                  <md:Identifier>
                     <md:Identifier>String</md:Identifier>
                     <md:Namespace>String</md:Namespace>
                     <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
                  </md:Identifier>
                  <md:Gender>male</md:Gender>
               </md:PeopleLocal>
            </md:LocalizedInfo>
            <md:RunLength>PT3H7M</md:RunLength>
            <md:ReleaseYear>2001</md:ReleaseYear>             
            <md:ReleaseDateTime>2002-05-30T09:30:10Z</md:ReleaseDateTime>
            <md:ReleaseHistory>
               <md:ReleaseType>local</md:ReleaseType>
               <md:DistrTerritory>
                  <md:country>AA</md:country>
               </md:DistrTerritory>
               <md:DateTime scheduled="true">2001-12-17T09:30:47Z</md:DateTime>
               <md:Date scheduled="true">1967-08-13</md:Date>
               <md:Description>String</md:Description>
               <md:ReleaseOrg organizationID="String">
                  <md:DisplayName>String</md:DisplayName>
                  <md:SortName>String</md:SortName>
               </md:ReleaseOrg>
            </md:ReleaseHistory>
            <md:WorkType>Album</md:WorkType>
            <md:PictureColorType>bandw</md:PictureColorType>
            <md:PictureFormat>Letterbox</md:PictureFormat>
            <md:ThreeD>true</md:ThreeD>
            <md:AltIdentifier>
               <md:Namespace>String</md:Namespace>
               <md:Identifier>String</md:Identifier>
               <md:Location>http://www.altova.com</md:Location>
            </md:AltIdentifier>
            <md:RatingSet>
               <md:NotRated>true</md:NotRated>
               <md:AdultContent>false</md:AdultContent>
            </md:RatingSet>
            <md:People>
               <md:Job>
                  <md:JobFunction scheme="String">4.36</md:JobFunction>
                  <md:JobDisplay>String</md:JobDisplay>
                  <md:BillingBlockOrder>0</md:BillingBlockOrder>
                  <md:Character>String</md:Character>
                  <md:Guest>true</md:Guest>
               </md:Job>
               <md:Name>
                  <md:DisplayName>String</md:DisplayName>
                  <md:SortName>String</md:SortName>
                  <md:FirstGivenName>String</md:FirstGivenName>
                  <md:SecondGivenName>String</md:SecondGivenName>
                  <md:FamilyName>String</md:FamilyName>
                  <md:Suffix>String</md:Suffix>
                  <md:Moniker>String</md:Moniker>
               </md:Name>
               <md:Identifier>
                  <md:Identifier>String</md:Identifier>
                  <md:Namespace>String</md:Namespace>
                  <md:ReferenceLocation>http://www.altova.com</md:ReferenceLocation>
               </md:Identifier>
               <md:Gender>plural</md:Gender>
            </md:People>
            <md:CountryOfOrigin>
               <md:country>AA</md:country>
            </md:CountryOfOrigin>
            <md:AssociatedOrg role="String" organizationID="String">
               <md:DisplayName>String</md:DisplayName>
               <md:SortName>String</md:SortName>
            </md:AssociatedOrg>
            <md:SequenceInfo>
               <md:Number>0</md:Number>
               <md:HouseSequence>String</md:HouseSequence>
            </md:SequenceInfo>
            <md:Parent relationshipType="ispieceof">
               <md:Parent ContentID="urn:dece:cid:ORG:mystudio6:${Groovy Script#result}">
                  <md:LocalizedInfo language="en-US">
                     <md:TitleDisplay19>S</md:TitleDisplay19>
                     <md:TitleSort>s</md:TitleSort>
                     <md:Summary190>s</md:Summary190>
                     <md:OriginalTitle>s</md:OriginalTitle>
                  </md:LocalizedInfo>
                  <md:ReleaseYear>2001</md:ReleaseYear>
                  <md:WorkType>Album</md:WorkType>
               </md:Parent>
            </md:Parent>
         </md:BasicMetadata>
      </md:Entry>
   </dece:CompObj>
   <dece:ResourceStatus>
      <dece:Current CreationDate="2001-12-17T09:30:47.0Z" CreatedBy="urn:dece:" DeletionDate="2001-12-17T09:30:47.0Z" DeletedBy="urn:dece:">
         <dece:Value>urn:dece:type:status:active</dece:Value>
         <dece:Description>String</dece:Description>
      </dece:Current>
      <dece:History>
         <dece:Prior ModificationDate="2001-12-17T09:30:47.0Z" ModifiedBy="urn:dece:">
            <dece:Value>urn:dece:type:status:active</dece:Value>
            <dece:Description>String</dece:Description>
         </dece:Prior>
      </dece:History>
   </dece:ResourceStatus>
</dece:Bundle>

]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Bundle/urn:dece:bid:file:EXAMPLE_BID_Version_734484691.txt</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="4a6889e0-c25e-4c97-a559-46a9bdfaa8c2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - MetadataBundleCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="6ba28c75-2c4c-46d0-89f0-67b6b6dac5dd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeDelete");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>607631293</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bundle Deleted Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">27</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>BID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:bid:file:EXAMPLE_BID_Version_607631293.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/truststore-test-node-content-provider.jks</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MapALIDtoAPIDCreate-07" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="dc60303b-a593-4e93-99be-5fa67dcacfc8"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="3906b7e2-d9f5-47e7-a5ef-201c34cf3c36"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("ALID_GET_DELETE",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="2206bbe8-cf34-4a64-b78a-ab9621536a48"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("APID_GET_DELETE_REPLACED",callTC.getPropertyValue("APID_GET_DELETE_REPLACED"));
tC.setPropertyValue("APID_GET_DELETE_RECALLED",callTC.getPropertyValue("APID_GET_DELETE_RECALLED"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("ALID_GET_DELETE",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="7bd6b87c-7850-4b6a-a2ac-6d9dcae8a20b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MapALIDtoAPIDCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MapALIDtoAPIDCreate" id="9fb79478-5652-4025-b9dd-e53a0f7a0cf3"><con:settings/><con:config service="MapALIDtoAPIDCreate_CTP" methodName="POST MapALIDtoAPIDCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MapALIDtoAPIDCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="64953cd6-b41f-4101-aa84-afaeb457e090"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:LogicalAsset ALID="${#TestCase#ALID}" AssentStreamAllowed="true" AssentStreamLoc="http://tempuri.org" ContentID="${#TestCase#CID}" MediaProfile="urn:dece:type:mediaprofile:hd" Version="0" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:AssetFulfillmentGroup FulfillmentGroupID="" LatestContainerVersion="0">
    <dece:DigitalAssetGroup CanDownload="true" CanStream="true" DiscreteMediaFulfillmentMethods="urn:dece:type:discretemediaformat:dvd:cssrecordable">
      <dece:ActiveAPID>${#TestCase#APID_GET_DELETE}</dece:ActiveAPID>
      
      <dece:ReplacedAPID>${#TestCase#APID_GET_DELETE_REPLACED}</dece:ReplacedAPID>
      <dece:RecalledAPID ReasonURL="http://tempuri.org">${#TestCase#APID_GET_DELETE_RECALLED}</dece:RecalledAPID>
    </dece:DigitalAssetGroup>
  </dece:AssetFulfillmentGroup>
  <dece:AssetRestriction>
    <dece:Region>
      <md:country>US</md:country>
    </dece:Region>
    <dece:Start>2001-12-31T12:00:00</dece:Start>
    <dece:End>2003-12-31T12:00:00</dece:End>
    <dece:Restriction>urn:dece:contentrestriction:nodownload</dece:Restriction>
  </dece:AssetRestriction>
  </dece:LogicalAsset>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="101781a8-34de-4ccf-a0fa-498262d7a3ae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MapALIDtoAPIDCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="001de263-779b-4c9d-93cf-fa7b93273b37"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def callTestStep =  callTC.getTestStepByName("MDAssetMap-Create");
log.info callTestStep.getName()
/*
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath 
def logFile = new File(projectPath +"\\" +tS.project.name +".xls")
def expected = tC.getPropertyValue("ExpectedReturnCodeCreate")

logFile.append(callTC.getName()+"\t"+callTestStep.getName()+"\t"+expected+"\t"+httpStatus+"\t"+"\n");
*/</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>987174620</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>Logical Asset Created Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>34</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Map/urn:dece:type:mediaprofile:hd/urn:dece:alid:file:EXAMPLE_ALID_Version_987174620.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_997717078.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_987174620.txt</con:value></con:property><con:property><con:name>Profile1</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/CON_concat.pem</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A329595103</con:value></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A389324911</con:value></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A797879869</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MapALIDtoAPIDCreate-11" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="313e94bf-44c3-468f-801b-638cfab3dfad"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="11a8dd94-293d-4568-b44c-26816f9a06b5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("ALID_GET_DELETE",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="8e37a7b9-30ab-4c1c-be7f-d69985c105c1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("APID_GET_DELETE_REPLACED",callTC.getPropertyValue("APID_GET_DELETE_REPLACED"));
tC.setPropertyValue("APID_GET_DELETE_RECALLED",callTC.getPropertyValue("APID_GET_DELETE_RECALLED"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("ALID_GET_DELETE",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="ec4f9af5-ae07-45ab-a02a-29c0bb7a0c18"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("CREATE - MapALIDtoAPIDCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="CREATE - MapALIDtoAPIDCreate" id="8ec660f5-b6ab-452d-ae92-ba5338bdb085"><con:settings/><con:config service="MapALIDtoAPIDCreate_CTP" methodName="POST MapALIDtoAPIDCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="CREATE - MapALIDtoAPIDCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="d6265bc3-ac6e-46d6-8e1a-dc42108b033b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:LogicalAsset ALID="${#TestCase#ALID}" AssentStreamAllowed="true" AssentStreamLoc="http://tempuri.org" ContentID="${#Project#CID}" MediaProfile="urn:dece:type:mediaprofile:hd" Version="0" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
<dece:AssetFulfillmentGroup FulfillmentGroupID="XYZ123" LatestContainerVersion="ABC456" LatestSpecVersion="fgh890">
<dece:DigitalAssetGroup CanDownload="true" CanStream="true" DiscreteMediaFulfillmentMethods=" urn:dece:type:discretemediaformat:dvd:cssrecordable" IsDMP="false">

<dece:ActiveAPID>${#Project#APID_GET_DELETE}</dece:ActiveAPID>

<dece:ReplacedAPID>${#Project#APID_GET_DELETE_REPLACED}</dece:ReplacedAPID>
<dece:RecalledAPID ReasonURL="http://tempuri.org">${#Project#APID_GET_DELETE_RECALLED}</dece:RecalledAPID>
</dece:DigitalAssetGroup>
</dece:AssetFulfillmentGroup>
<dece:AssetRestriction>
<dece:Region>
<md:country>US</md:country>
</dece:Region>
<dece:Start>2001-12-31T12:00:00</dece:Start>
<dece:End>2003-12-31T12:00:00</dece:End>
<dece:Restriction>urn:dece:contentrestriction:nodownload</dece:Restriction>
</dece:AssetRestriction>
</dece:LogicalAsset>



]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Map</con:originalUri><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="c31e4b3c-78d4-457f-9bae-350416957fdc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('CREATE - MapALIDtoAPIDCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="217dbf9f-4536-482a-8ea8-f64b660a79e1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = tC.getPropertyValue("ExpectedReturnCodeCreate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def callTestStep =  callTC.getTestStepByName("MDAssetMap-Create");
log.info callTestStep.getName()
//
//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def projectPath = groovyUtils.projectPath 
//def logFile = new File(projectPath +"\\" +tS.project.name +".xls")
//def expected = tC.getPropertyValue("ExpectedReturnCodeCreate")
//
//logFile.append(callTC.getName()+"\t"+callTestStep.getName()+"\t"+expected+"\t"+httpStatus+"\t"+"\n");
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Create CID-APID-ALID</con:value></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>786957482</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value>Logical Asset Created Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>34</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Asset/Map/urn:dece:type:mediaprofile:hd/urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property><con:property><con:name>Profile1</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/CON_concat.pem</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A653478442</con:value></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A715043276</con:value></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A309286894</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MapALIDtoAPIDUpdate-07" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="9f74816c-0ec7-4ed9-a075-79008fb7f4ba"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="280343a8-2aca-4469-8118-17d42991262c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("ALID_GET_DELETE",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="6a8f4cc1-768c-4d89-8951-4d3e2777f929"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("APID_GET_DELETE_REPLACED",callTC.getPropertyValue("APID_GET_DELETE_REPLACED"));
tC.setPropertyValue("APID_GET_DELETE_RECALLED",callTC.getPropertyValue("APID_GET_DELETE_RECALLED"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("ALID_GET_DELETE",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));

/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="e0e56912-665c-470d-a638-be9795d587a6"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("UPDATE - MapALIDtoAPIDCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UPDATE - MapALIDtoAPIDCreate" id="56d3ea28-52e7-486a-a1ee-8abbf3ceb9e0"><con:settings/><con:config service="MapALIDtoAPIDCreate_CTP" methodName="PUT MapALIDtoAPIDCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/${#Project#Profile}/${#TestCase#ALID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UPDATE - MapALIDtoAPIDCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="CON_concat.pem" id="6409dad7-f43e-4ad8-b15e-cfadb4fb903d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:LogicalAsset ALID="${#TestCase#ALID}" AssentStreamAllowed="true" AssentStreamLoc="http://tempuri.org" ContentID="${#TestCase#CID}" MediaProfile="${#TestCase#Profile}" Version="2" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:AssetFulfillmentGroup FulfillmentGroupID="" LatestContainerVersion="2">
    <dece:DigitalAssetGroup CanDownload="true" CanStream="true" DiscreteMediaFulfillmentMethods="urn:dece:type:discretemediaformat:dvd:cssrecordable">
      <dece:ActiveAPID>${#TestCase#APID_GET_DELETE}</dece:ActiveAPID>
      
      <dece:ReplacedAPID>${#TestCase#APID_GET_DELETE_REPLACED}</dece:ReplacedAPID>
      <dece:RecalledAPID ReasonURL="http://tempuri.org">${#TestCase#APID_GET_DELETE_RECALLED}</dece:RecalledAPID>
    </dece:DigitalAssetGroup>
  </dece:AssetFulfillmentGroup>
  <dece:AssetRestriction>
    <dece:Region>
      <md:country>NZ</md:country>
    </dece:Region>
    <dece:Start>2001-12-31T12:00:00</dece:Start>
    <dece:End>2005-12-31T12:00:00</dece:End>
    <dece:Restriction>urn:dece:contentrestriction:nodownload</dece:Restriction>
  </dece:AssetRestriction>
</dece:LogicalAsset>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="928fd523-4eba-416f-9311-5abce8423d1c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UPDATE - MapALIDtoAPIDCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="06595afe-a9e6-40c5-872b-7137697fac4c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def callTestStep =  callTC.getTestStepByName("MDAssetMap-Update");
log.info callTestStep.getName()

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def projectPath = groovyUtils.projectPath 
//def logFile = new File(projectPath +"\\" +tS.project.name +".xls")
//def expected = tC.getPropertyValue("ExpectedReturnCodeUpdate")
//logFile.append(callTC.getName()+"\t"+callTestStep.getName()+"\t"+expected+"\t"+httpStatus+"\t"+"\n");
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>987174620</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Logical Asset Updated Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>34</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Asset/Map/urn:dece:type:mediaprofile:hd/urn:dece:alid:file:EXAMPLE_ALID_Version_987174620.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_997717078.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_987174620.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/CON_concat.pem</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A329595103</con:value></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A389324911</con:value></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A797879869</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MapALIDtoAPIDUpdate-11" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2eddd40e-9af7-4033-ae93-0c14c2929d7a"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="e8054353-d0b1-48b6-82ec-b4cadcdc6904"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("ALID_GET_DELETE",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="3834db8b-ece4-4bca-992a-cb4cd68db35f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("APID_GET_DELETE_REPLACED",callTC.getPropertyValue("APID_GET_DELETE_REPLACED"));
tC.setPropertyValue("APID_GET_DELETE_RECALLED",callTC.getPropertyValue("APID_GET_DELETE_RECALLED"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("ALID_GET_DELETE",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));

/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="204769df-f320-46f6-b7aa-8412cc02e065"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("UPDATE - MapALIDtoAPIDCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="UPDATE - MapALIDtoAPIDCreate" id="8dbca767-c5c5-49b7-b1d1-098c3ff96041"><con:settings/><con:config service="MapALIDtoAPIDCreate_CTP" methodName="PUT MapALIDtoAPIDCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/${#Project#Profile}/${#TestCase#ALID_GET_DELETE}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UPDATE - MapALIDtoAPIDCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="IOT_SoapUI_contentprovider.pem" id="c644bace-fe36-414a-b425-092944195cf7"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="If-Match" value="*" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:LogicalAsset ALID="${#TestCase#ALID}" AssentStreamAllowed="true" AssentStreamLoc="http://tempuri.org" ContentID="${#TestCase#CID}" MediaProfile="urn:dece:type:mediaprofile:hd" Version="2" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="${#Project#md_schema}" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#Coordinator_Schema} NewXMLSchema.xsd ">
  <dece:AssetFulfillmentGroup FulfillmentGroupID="" LatestContainerVersion="2">
    <dece:DigitalAssetGroup CanDownload="true" CanStream="true" DiscreteMediaFulfillmentMethods="urn:dece:type:discretemediaformat:dvd:cssrecordable">
      <dece:ActiveAPID>${#TestCase#APID_GET_DELETE}</dece:ActiveAPID>
      
      <dece:ReplacedAPID>${#TestCase#APID_GET_DELETE_REPLACED}</dece:ReplacedAPID>
      <dece:RecalledAPID ReasonURL="http://tempuri.org">${#TestCase#APID_GET_DELETE_RECALLED}</dece:RecalledAPID>
    </dece:DigitalAssetGroup>
  </dece:AssetFulfillmentGroup>
  <dece:AssetRestriction>
    <dece:Region>
      <md:country>NZ</md:country>
    </dece:Region>
    <dece:Start>2001-12-31T12:00:00</dece:Start>
    <dece:End>2005-12-31T12:00:00</dece:End>
    <dece:Restriction>urn:dece:contentrestriction:nodownload</dece:Restriction>
  </dece:AssetRestriction>
</dece:LogicalAsset>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Asset/Map/urn:dece:type:mediaprofile:hd/urn:dece:alid:file:EXAMPLE_ALID_Version_771476730.txt</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="a7c40241-273d-4d17-a275-192059ee91a8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UPDATE - MapALIDtoAPIDCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="7939638e-04b4-4ce1-be14-9317e98d45bb"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeUpdate");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def callTestStep =  callTC.getTestStepByName("MDAssetMap-Update");
log.info callTestStep.getName()

//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def projectPath = groovyUtils.projectPath 
//def logFile = new File(projectPath +"\\" +tS.project.name +".xls")
//def expected = tC.getPropertyValue("ExpectedReturnCodeUpdate")
//logFile.append(callTC.getName()+"\t"+callTestStep.getName()+"\t"+expected+"\t"+httpStatus+"\t"+"\n");
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>780228570</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Logical Asset Updated Successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>34</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://iot.q.uvvu.com:7001/rest/1/11/Asset/Map/urn:dece:type:mediaprofile:hd/urn:dece:alid:file:EXAMPLE_ALID_Version_780228570.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_418968275.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_780228570.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\IOT1/IOT_SoapUI_contentprovider.pem</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A707922945</con:value></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A869273793</con:value></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A499645257</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MapALIDtoAPIDGet" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5fd29d2b-94f8-419e-a8f4-1bdb572d3e76"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="2abe5f58-693c-48b5-a78f-4b9893de77ee"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("ALID_GET_DELETE",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="f856ecc0-2e7c-4062-9449-bea56b630ae2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("ALID_GET_DELETE",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="be0b1d8a-e2c9-4168-a2e2-c24f60572eee"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - MapALIDtoAPIDCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MapALIDtoAPIDCreate" id="4da74305-431f-48c0-824e-9de6aee057f1"><con:settings/><con:config service="MapALIDtoAPIDCreate_CTP" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/${#TestCase#Profile}/${#TestCase#ALID_GET_DELETE}" methodName="Get MapALIDtoAPIDCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MapALIDtoAPIDCreate" mediaType="application/json" sslKeystore="IOT_SoapUI_contentprovider.pem" id="ecfb3a10-a3b2-4b55-bd3b-5f92afd113b6"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Asset/Map/urn:dece:type:mediaprofile:hd/urn:dece:alid:file:EXAMPLE_ALID_Version_771476730.txt</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="888e6be7-cd9d-4885-b32e-7b27f6cd3fd6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MapALIDtoAPIDCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
//			case "ETag": 
//			ETag = value[0]; 
//			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
//tP.setPropertyValue("ETag", ETag);</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="4216d93b-b77e-4ba1-b361-8f06245694b4"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def callTestStep =  callTC.getTestStepByName("MDAssetMap-ALIDtoAPIDGet");
log.info callTestStep.getName()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath 
def logFile = new File(projectPath +"\\" +tS.project.name +".xls")
def expected = tC.getPropertyValue("ExpectedReturnCodeGet")
logFile.append(callTC.getName()+"\t"+callTestStep.getName()+"\t"+expected+"\t"+httpStatus+"\t"+"\n");

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag" id="e81b9b3b-b342-4cb9-ab92-4c6fea6af2c9"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )


if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MapALIDtoAPIDCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="58f11914-ee49-4336-a38c-fff752e22bf2"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MapALIDtoAPIDCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MapALIDtoAPIDCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="335a0211-9ebb-40af-8673-084fd77e4197"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Validating -Body is null or not of get" id="227a1f82-50ff-4975-9cd1-66a26239ee5e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MapALIDtoAPIDCreate');
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if ( httpStatus  == 'HTTP/1.1 200 OK' )
{
//def responseAsXml = context.expand( '${GET - MapAPIDtoALIDCreate#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]}' )
def responseAsXml = tStep.httpRequest.response.getResponseContent();
def xml = new XmlSlurper().parseText(responseAsXml);
log.info xml.toString();

if (xml == "" )
{
		assert 1==2
}
}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">780228570</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<LogicalAsset Version="2" ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_780228570.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_418968275.txt" MediaProfile="urn:dece:type:mediaprofile:hd" AssentStreamAllowed="true" AssentStreamLoc="http://tempuri.org" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <AssetFulfillmentGroup LatestContainerVersion="2">
      <DigitalAssetGroup DiscreteMediaFulfillmentMethods="urn:dece:type:discretemediaformat:dvd:cssrecordable" CanDownload="true" CanStream="true">
         <ActiveAPID>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A707922945</ActiveAPID>
         <ReplacedAPID>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A869273793</ReplacedAPID>
      </DigitalAssetGroup>
   </AssetFulfillmentGroup>
   <AssetRestriction>
      <Region>
         <ns2:country>NZ</ns2:country>
      </Region>
      <Start>2001-12-31T12:00:00.000Z</Start>
      <End>2005-12-31T12:00:00.000Z</End>
      <Restriction>urn:dece:contentrestriction:nodownload</Restriction>
   </AssetRestriction>
</LogicalAsset>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:cid:file:A_File_Name_with_NUMBERS_418968275.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A707922945</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_780228570.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_780228570.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\IOT1/IOT_SoapUI_contentprovider.pem</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0664D3F2AB4E56E9E0530B345B0AB6FA:CE752EE3"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Tue, 28 Oct 2014 09:25:09 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Mon, 27 Oct 2014 09:25:07 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1414401909 VE4PdApbMpUAAApeIdkAAAAJ urn:dece:org:org:dece:iot:soapui:contentprovider 10.91.50.149</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="MapAPIDtoALIDGet" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ffa5c230-7e45-4c14-81b5-7215bbdf390e"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="d3b1489c-d6c1-4bdc-8bc3-3f052ea28cc0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("ALID_GET_DELETE",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="bc3c40cc-622b-46f7-b270-0ecb87dcf1fe"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("ALID_GET_DELETE",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="369da059-0892-40eb-9c4d-574830d423ba"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - MapAPIDtoALIDCreate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - MapAPIDtoALIDCreate" id="f62368ef-f421-4a1e-8d21-2caa331040d8"><con:settings/><con:config service="MapALIDtoAPIDCreate_CTP" methodName="Delete MapALIDtoAPIDCreate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/${#Project#Profile}/${#TestCase#APID}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - MapAPIDtoALIDCreate" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="IOT_SoapUI_contentprovider.pem" id="c54ece0d-b4ff-4d0f-9379-3e08b9d79e26"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--Build 7.8.4.1 Sample XML file -->
<LogicalAsset AssentStreamAllowed="true" 
DiscreteMediaFulfillmentsMethods="NMTOKEN" 
ContentProfile="urn:dece:type:mediaprofile:hd" 
ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" 
ALID="${#TestCase#ALID}" 
Version="0" xmlns:ns2="http://www.movielabs.com/md" 
xmlns="http://www.decellc.org/schema/2010/10/dece">
	<AssetFulfillmentGroup LatestContainerVersion="String" 
		FulfillmentGroupID="String">
		<DigitalAssetGroup CanStream="true" CanDownload="true" DiscreteMediaFulfillmentsMethods="NMTOKEN">
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:SUBTITLE_Number_1</ActiveAPID>
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:VIDEO_Number_1</ActiveAPID>
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:INTERACTIVE_Number_1</ActiveAPID>
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:IMAGE_Number_1</ActiveAPID>
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:AUDIO_Number_1</ActiveAPID>
		</DigitalAssetGroup>
	</AssetFulfillmentGroup>
	<AssetWindow>
			<Region>
				<ns2:country>AA</ns2:country>
			</Region>
		<DateTimeRange>
			<ns2:Start>2009-12-17T09:30:47Z</ns2:Start>
			<ns2:End>2020-12-17T09:30:47Z</ns2:End>
		</DateTimeRange>
		<CanDownload>true</CanDownload>
		<CanLicense>true</CanLicense>
		<CanStream>true</CanStream>
		<AllowedDiscreteMediaProfiles>urn:dece:type:discretemediaformat:dvd:packaged</AllowedDiscreteMediaProfiles>
	</AssetWindow>
</LogicalAsset>]]></con:request><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Asset/Map/urn:dece:type:mediaprofile:hd/urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A508229015</con:originalUri><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="ca9aeace-818c-46c5-935e-41cd134d8fcb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MapAPIDtoALIDCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="c96881b0-31b1-40f4-9369-02b26f681989"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeDelete");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def callTestStep =  callTC.getTestStepByName("MDAssetMap-APIDtoALIDGet");
log.info callTestStep.getName()

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath 
def logFile = new File(projectPath +"\\" +tS.project.name +".xls")
def expected = tC.getPropertyValue("ExpectedReturnCodeDelete")
logFile.append(callTC.getName()+"\t"+callTestStep.getName()+"\t"+expected+"\t"+httpStatus+"\t"+"\n");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag" id="e0ce57b6-dcaa-408f-bb85-056b79ffddb6"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/

def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MapAPIDtoALIDCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="9e4c25c1-da71-4e50-84ef-68e524e0b253"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MapAPIDtoALIDCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - MapAPIDtoALIDCreate');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="cc4a0ec9-f6af-4d72-b687-935d6dc66d26"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:testStep type="groovy" name="Validating -Body is null or not of get" id="70006ba4-b801-41d3-bcf4-8783f5aedcf5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - MapAPIDtoALIDCreate');
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if ( httpStatus  == 'HTTP/1.1 200 OK' )
{
//def responseAsXml = context.expand( '${GET - MapAPIDtoALIDCreate#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]}' )
def responseAsXml = tStep.httpRequest.response.getResponseContent();
def xml = new XmlSlurper().parseText(responseAsXml);
log.info xml.toString();

if (xml == "" )
{
		assert 1==2
}
}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">780228570</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<LogicalAssetList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <LogicalAsset Version="2" ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_780228570.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_418968275.txt" MediaProfile="urn:dece:type:mediaprofile:hd" AssentStreamAllowed="true" AssentStreamLoc="http://tempuri.org">
      <AssetFulfillmentGroup LatestContainerVersion="2">
         <DigitalAssetGroup DiscreteMediaFulfillmentMethods="urn:dece:type:discretemediaformat:dvd:cssrecordable" CanDownload="true" CanStream="true">
            <ActiveAPID>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A707922945</ActiveAPID>
            <ReplacedAPID>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A869273793</ReplacedAPID>
         </DigitalAssetGroup>
      </AssetFulfillmentGroup>
      <AssetRestriction>
         <Region>
            <ns2:country>NZ</ns2:country>
         </Region>
         <Start>2001-12-31T12:00:00.000Z</Start>
         <End>2005-12-31T12:00:00.000Z</End>
         <Restriction>urn:dece:contentrestriction:nodownload</Restriction>
      </AssetRestriction>
   </LogicalAsset>
</LogicalAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:cid:file:A_File_Name_with_NUMBERS_418968275.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A707922945</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_780228570.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\IOT1/IOT_SoapUI_contentprovider.pem</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"0664C7C6BC884CB1E0530B345B0A8A72:A1B366D8"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Tue, 28 Oct 2014 09:25:10 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Mon, 27 Oct 2014 09:25:07 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1414401910 VE4PdgpbMo0AAGLzQUgAAAAT urn:dece:org:org:dece:iot:soapui:contentprovider 10.91.50.141</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LogicAssetList" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="00ec2914-9a43-42fb-bb8c-9773432cc9f2"><con:settings/><con:testStep type="groovy" name="Copy of Establish Test Case Properties" id="a904aca3-dacb-455a-8366-f75a5e94eaef"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("ALID_GET_DELETE",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Extract required Properties from calling Test Case" id="c1216dec-674c-4cf6-8d09-1e3046fbad67"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("ALID_GET_DELETE",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");


}
*/	
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set pem" id="e3f34b48-190e-40eb-b178-8a5884ce464a"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("GET - LogicaAssetList");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - LogicaAssetList" id="67b34ce3-2794-44cb-92e1-e0cc9c589501"><con:settings/><con:config service="MapALIDtoAPIDCreate_CTP" methodName="GET LogicAssetList" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Asset/Map/List" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - LogicaAssetList" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="ISC_RET_concat.pem" id="d494dfa7-eb5d-4080-b8ec-234316d0f3df"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--Build 7.8.4.1 Sample XML file -->
<LogicalAsset AssentStreamAllowed="true" 
DiscreteMediaFulfillmentsMethods="NMTOKEN" 
ContentProfile="urn:dece:type:mediaprofile:hd" 
ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" 
ALID="${#TestCase#ALID}" 
Version="0" xmlns:ns2="http://www.movielabs.com/md" 
xmlns="http://www.decellc.org/schema/2010/10/dece">
	<AssetFulfillmentGroup LatestContainerVersion="String" 
		FulfillmentGroupID="String">
		<DigitalAssetGroup CanStream="true" CanDownload="true" DiscreteMediaFulfillmentsMethods="NMTOKEN">
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:SUBTITLE_Number_1</ActiveAPID>
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:VIDEO_Number_1</ActiveAPID>
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:INTERACTIVE_Number_1</ActiveAPID>
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:IMAGE_Number_1</ActiveAPID>
				<ActiveAPID>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:AUDIO_Number_1</ActiveAPID>
		</DigitalAssetGroup>
	</AssetFulfillmentGroup>
	<AssetWindow>
			<Region>
				<ns2:country>AA</ns2:country>
			</Region>
		<DateTimeRange>
			<ns2:Start>2009-12-17T09:30:47Z</ns2:Start>
			<ns2:End>2020-12-17T09:30:47Z</ns2:End>
		</DateTimeRange>
		<CanDownload>true</CanDownload>
		<CanLicense>true</CanLicense>
		<CanStream>true</CanStream>
		<AllowedDiscreteMediaProfiles>urn:dece:type:discretemediaformat:dvd:packaged</AllowedDiscreteMediaProfiles>
	</AssetWindow>
</LogicalAsset>]]></con:request><con:originalUri>https://lp3.qa-web-vip2-s01.uvvu.com/rest/1/11/Asset/Map/List</con:originalUri><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="dbdad106-8690-4da2-bb86-d047beb129f6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - LogicaAssetList');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="60c8ce69-6e33-47d1-a0e4-f487ca4fb985"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode        = tC.getPropertyValue("ExpectedReturnCodeGet");
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}
//def callTSname = tC.getPropertyValue("sName");
//def callTCname = tC.getPropertyValue("tName");
//def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
//def callTestStep =  callTC.getTestStepByName("GET - LogicaAssetList");
//log.info callTestStep.getName()
//
//def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def projectPath = groovyUtils.projectPath 
//def logFile = new File(projectPath +"\\" +tS.project.name +".xls")
//def expected = tC.getPropertyValue("ExpectedReturnCodeGet")
//logFile.append(callTC.getName()+"\t"+callTestStep.getName()+"\t"+expected+"\t"+httpStatus+"\t"+"\n");
//
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion for threshold Pagination" id="efc199c6-07ad-458c-ab53-1805de346d4f"><con:settings/><con:config><script>/*checking in response the GetList contains maximum  values 1000 */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET - LogicaAssetList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]}' )
log.info response.size()

def filtercount = context.expand( '${GET - LogicaAssetList#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]/@FilterCount}' )

log.info filtercount

def responseAsXml1 = context.expand( '${GET - OffsetAndFilterCount#ResponseAsXml#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]/ns1:LogicalAssetReference}' )
def records = new XmlParser().parseText(response);
log.info records.value().size()

if(records.value().size().toString()!= filtercount.toString())
{
	assert 1==2;
}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag" id="864632ad-1db1-401a-9797-23c9b6c03945"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - LogicaAssetList');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assertion For  Order of dates" id="b656d74c-7f50-4542-aa9e-7d8bfe7788f7"><con:settings/><con:config><script>/*Asserting weather the updated dates in the GetList response are in descending order */
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def response = context.expand( '${GET - LogicaAssetList#Response#declare namespace ns1=\'${#Project#Coordinator_Schema}\'; //ns1:LogicalAssetList[1]}' )


//log.info response
def possiblySorted = []
def records = new XmlParser().parseText(response);
//log.info records
//log.info records.LogicalAssetReference
for(int i=0;i&lt;=records.LogicalAssetReference.size()-1;i++){
//log.info records.DigitalAssetReference[i].@UpdatedDate;
if(records.LogicalAssetReference[i].@UpdatedDate==null)
	possiblySorted.add(records.LogicalAssetReference[i].@CreatedDate);
else
	possiblySorted.add(records.LogicalAssetReference[i].@UpdatedDate);

}

//log.info possiblySorted;
def sortedCopy = new ArrayList&lt;>(possiblySorted)
//log.info sortedCopy.sort().reverse();
if( possiblySorted != sortedCopy.sort().reverse())
{
assert 1==2
}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="8200ce8a-d984-4dab-9480-1139f82c11c9"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - LogicaAssetList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		
		String Cache_Control = null;
		String ETag = null;
		String Expires   = null;
		String Last_Modified = null;
		String x_Transaction_Info = null;
		String Vary=null;
		tStep.httpRequest.response.responseHeaders.each() {	 header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					}
		}

			tC.setPropertyValue("Cache-Control", Cache_Control);
			tC.setPropertyValue("ETag", ETag);
			tC.setPropertyValue("Expires", Expires);
			tC.setPropertyValue("Last-Modified", Last_Modified);
			tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
			tC.setPropertyValue("Vary", Vary);
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		def tStep  = tC.getTestStepByName('GET - LogicaAssetList');
		def expXML = tStep.httpRequest.response.getResponseContent();
		String Vary=null;
		String Cache_Control = null;
		String ETag = null;
		//String Expires   = null;
		//String Last_Modified = null;
		String x_Transaction_Info = null;
		
		tStep.httpRequest.response.responseHeaders.each() { header, value ->
			switch (header) {
				case "Cache-Control": 
					Cache_Control = value[0];
					break;
				case "ETag": 
					ETag = value[0]; 
					break;
				/*case "Expires": 
					Expires = value[0]; 
					break;
				case "Last-Modified": 
					Last_Modified = value[0]; 
					break;*/
				case "x-Transaction-Info": 
					x_Transaction_Info = value[0]; 
					break;
				case "Vary": 
					Vary = value[0]; 
					break;
					
			}
		}
		
		tC.setPropertyValue("Cache-Control", Cache_Control);
		tC.setPropertyValue("ETag", ETag);
		//tC.setPropertyValue("Expires", Expires);
		//tC.setPropertyValue("Last-Modified", Last_Modified);
		tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
		tC.setPropertyValue("Vary", Vary);
	}


</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="c1e058ac-a203-4bfb-b076-0862f4c8fe9a"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==null)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==null)
		assert 1==2
		
		def Expires=tC.getPropertyValue("Expires")
		if(Expires==null)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==null)
		assert 1==2
		
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==null)
		assert 1==2
	}

if(httpStatus=='HTTP/1.1 304 Not Modified')
	{
		def tC  = testRunner.getTestCase();
		def tS = tC.getTestSuite();
		def tP = tS.getProject();
		
		def Cache_Control=tC.getPropertyValue("Cache-Control")
		if(Cache_Control==false)
		assert 1==2
		
		def ETag=tC.getPropertyValue("ETag")
		if(ETag==false)
		assert 1==2
		
		/*def Expires=tC.getPropertyValue("Expires")
		if(Expires==false)
		assert 1==2
		
		def Last_Modified=tC.getPropertyValue("Last-Modified")
		if(Last_Modified==false)
		assert 1==2
		*/
		def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
		if(Lx_Transaction_Info==false)
		assert 1==2

		def Vary=tC.getPropertyValue("Vary")
		if(Vary==null)
		assert 1==2

	}</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">245669567</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<dece:LogicalAssetList FilterClass="urn:dece:type:viewfilter:lastmodifieddate" FilterOffset="0" FilterCount="1000" FilterMoreAvailable="true" xmlns:dece="http://www.decellc.org/schema/2015/03/coordinator" xmlns:md="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#">
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_718125343.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_284938313.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:26:39.485Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_701012367.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_686648404.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:23:47.215Z" UpdatedDate="2014-10-22T09:23:47.796Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_157653432.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_684323038.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:20:10.353Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Oct_22_14_48_55_IST_2014" ContentID="urn:dece:cid:test:Wed_Oct_22_14_48_20_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:18:59.741Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_418784562.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_913233072.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T09:14:10.004Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Oct_22_14_07_37_IST_2014" ContentID="urn:dece:cid:test:Wed_Oct_22_14_07_04_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T08:37:41.327Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_793761835.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_793574932.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:58:20.954Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_866657354.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_793574932.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:55:50.657Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:032749270274474385" ContentID="urn:dece:cid:test:25353908884211585" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:34:20.298Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8602624441152972" ContentID="urn:dece:cid:test:6660129919510187" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:20:04.754Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:12982832192100735" ContentID="urn:dece:cid:test:9559940506238068" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-22T07:08:01.226Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Oct_17_13_46_48_IST_2014" ContentID="urn:dece:cid:test:Fri_Oct_17_13_46_12_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-17T08:16:51.245Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_Oct_16_14_30_56_IST_2014" ContentID="urn:dece:cid:test:Thu_Oct_09_15_20_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-16T09:00:57.210Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Oct_15_18_45_48_IST_2014" ContentID="urn:dece:cid:test:Thu_Oct_09_15_20_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T13:15:46.912Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Oct_15_16_14_35_IST_2014" ContentID="urn:dece:cid:test:Thu_Oct_09_15_20_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:44:44.153Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Oct_15_16_14_35_IST_2014" ContentID="urn:dece:cid:test:Thu_Oct_09_15_20_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:44:40.711Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Oct_15_16_12_10_IST_2014" ContentID="urn:dece:cid:test:Thu_Oct_09_15_20_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:42:12.240Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Oct_15_16_11_04_IST_2014" ContentID="urn:dece:cid:test:Thu_Oct_09_15_20_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:41:05.581Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Oct_15_15_45_07_IST_2014" ContentID="urn:dece:cid:test:Thu_Oct_09_15_20_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-15T10:15:09.914Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_189067540.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_165670638.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:51:40.862Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:200002" ContentID="urn:dece:cid:org:200002" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-09T09:18:53.000Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6209228915246768" ContentID="urn:dece:cid:test:7162425550064484" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-08T08:19:16.727Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:uccache1" ContentID="urn:dece:cid:test:cache001" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T17:10:49.345Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:121212122test" ContentID="urn:dece:cid:test:1061RR" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-07T17:05:54.652Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:802_1" ContentID="urn:dece:cid:test:Sat_Sep_27_17_40_56_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T16:00:36.521Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_Oct_06_19_40_47_IST_2014" ContentID="urn:dece:cid:test:Mon_Oct_06_19_37_57_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-10-06T14:10:50.078Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Sat_Sep_27_17_34_31_IST_2014  " ContentID="urn:dece:cid:test:Sat_Sep_27_16_31_11_IST_2014  " CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-27T12:04:30.420Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:4787289402943218" ContentID="urn:dece:cid:test:2544476942511108" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T11:22:06.105Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:44298958343517325" ContentID="urn:dece:cid:test:45602540755460685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T11:09:28.894Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5698817345802253" ContentID="urn:dece:cid:test:4832769697058641" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T10:57:59.453Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:09961163159795516" ContentID="urn:dece:cid:test:9483192915446602" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-26T10:48:08.839Z" UpdatedDate="2014-09-26T10:49:00.267Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_Sep_25_22_05_39_IST_2014" ContentID="urn:dece:cid:test:Thu_Sep_25_22_05_06_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-25T16:35:40.772Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_Sep_25_22_03_19_IST_2014" ContentID="urn:dece:cid:test:Thu_Sep_25_22_02_46_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-25T16:33:21.033Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_Sep_25_21_57_10_IST_2014" ContentID="urn:dece:cid:test:Thu_Sep_25_21_56_31_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-25T16:27:11.898Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:48413140829656975" ContentID="urn:dece:cid:test:9120317664565772" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T13:28:16.159Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:07621353565544087" ContentID="urn:dece:cid:test:4494170193270939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T13:16:05.653Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8296857661820791" ContentID="urn:dece:cid:test:7939674235103711" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T13:03:26.641Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8859860105074252" ContentID="urn:dece:cid:test:9641525922573473" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T12:52:15.933Z" UpdatedDate="2014-09-18T12:53:13.957Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:4176418676558802" ContentID="urn:dece:cid:test:846963831769308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T12:15:01.646Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:951017603309953" ContentID="urn:dece:cid:test:9473500325489191" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:50:02.144Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:955055813296789" ContentID="urn:dece:cid:test:9240244984546359" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:34:09.800Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:11490625942118415" ContentID="urn:dece:cid:test:9926465902736448" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:16:34.763Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8585549908040873" ContentID="urn:dece:cid:test:21470692310632755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T11:03:09.888Z" UpdatedDate="2014-09-18T11:04:13.788Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_Sep_18_16_19_57_IST_2014" ContentID="urn:dece:cid:test:Thu_Sep_18_13_09_25_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-18T10:49:42.636Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:670639640654713" ContentID="urn:dece:cid:test:20317406461665977" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:39:58.541Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:24963422169065141" ContentID="urn:dece:cid:test:8745821327005338" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:28:01.938Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:03437138026340303" ContentID="urn:dece:cid:test:8985579915875869" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:16:55.420Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:09284553928491501" ContentID="urn:dece:cid:test:9431409419484629" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T15:07:42.922Z" UpdatedDate="2014-09-17T15:08:29.576Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5296170312986672" ContentID="urn:dece:cid:test:24693752463366425" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:31:12.624Z" UpdatedDate="2014-09-17T14:32:02.436Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_373333224.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_638359796.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:10:45.783Z" UpdatedDate="2014-09-17T14:10:46.317Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_472705226.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_442197670.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T14:06:34.100Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_159144450.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_717492773.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:24:52.767Z" UpdatedDate="2014-09-17T13:24:53.528Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_499444991.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_918661478.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T13:19:49.008Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Sep_17_16_27_22_IST_2014" ContentID="urn:dece:cid:test:Wed_Sep_17_16_26_49_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T10:57:24.123Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Sep_17_16_22_29_IST_2014" ContentID="urn:dece:cid:test:Wed_Sep_17_16_21_56_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-17T10:52:31.293Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7433116357709891" ContentID="urn:dece:cid:test:816273865402157" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T13:20:08.522Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:052144685273473934" ContentID="urn:dece:cid:test:39713496206656107" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T13:07:34.621Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5185710019143743" ContentID="urn:dece:cid:test:3667262488026709" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T12:56:37.631Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6649796736581979" ContentID="urn:dece:cid:test:648803452066445" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T12:46:19.944Z" UpdatedDate="2014-09-09T12:47:06.843Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3317717657428142" ContentID="urn:dece:cid:test:8998632776217067" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T11:20:04.697Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:413298638749527" ContentID="urn:dece:cid:test:40322665151595616" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T11:05:59.792Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7092721964174116" ContentID="urn:dece:cid:test:12665080170791687" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:54:00.096Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6757507990206274" ContentID="urn:dece:cid:test:42930089607983013" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:42:59.579Z" UpdatedDate="2014-09-09T10:43:45.379Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:2080744880950619" ContentID="urn:dece:cid:test:026435457967886267" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T10:03:27.004Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:34402212992916203" ContentID="urn:dece:cid:test:5239877536398837" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:52:38.165Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5823190254090008" ContentID="urn:dece:cid:test:271988108814059" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:35:16.147Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:19374439035918922" ContentID="urn:dece:cid:test:8876704878028023" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:16:03.058Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9510012680170524" ContentID="urn:dece:cid:test:6503242576076852" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T09:02:03.920Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:0500792069920184" ContentID="urn:dece:cid:test:005424671168779982" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T08:49:56.272Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:01381180527789938" ContentID="urn:dece:cid:test:06858962557176251" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-09T08:40:28.571Z" UpdatedDate="2014-09-09T08:41:16.998Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6779159520953882" ContentID="urn:dece:cid:test:11099829503871983" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T17:58:58.544Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:890981507068028" ContentID="urn:dece:cid:test:012902566600199505" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T17:49:51.606Z" UpdatedDate="2014-09-08T17:50:37.016Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3168719566476291" ContentID="urn:dece:cid:test:7356474737430746" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:57:06.827Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:32457764696752556" ContentID="urn:dece:cid:test:18575545664913562" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:45:00.621Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9341927942041809" ContentID="urn:dece:cid:test:9281429137187995" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:25:28.921Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6161013572121873" ContentID="urn:dece:cid:test:3293790236811054" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T16:09:30.837Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:282382589306176" ContentID="urn:dece:cid:test:3721237443157168" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:57:28.575Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9795717629471623" ContentID="urn:dece:cid:test:2349265387467787" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:44:04.646Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:08729783811712144" ContentID="urn:dece:cid:test:8413632066163597" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:33:57.404Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:04197052012595048" ContentID="urn:dece:cid:test:8633994466350735" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T15:24:47.598Z" UpdatedDate="2014-09-08T15:25:33.475Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6549078969102465" ContentID="urn:dece:cid:test:7698445393406907" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:42:13.900Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9022560131142007" ContentID="urn:dece:cid:test:654593284040326" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:32:10.123Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5722389845700029" ContentID="urn:dece:cid:test:34562486296168293" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T14:11:04.841Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:198308298338839" ContentID="urn:dece:cid:test:05094613968954276" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T13:54:51.362Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9061651929540693" ContentID="urn:dece:cid:test:41364963406063393" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T13:43:43.754Z" UpdatedDate="2014-09-08T13:44:32.015Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3094296383578504" ContentID="urn:dece:cid:test:6952810517510967" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-09-08T11:12:57.325Z" UpdatedDate="2014-09-08T11:13:48.012Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_669513775.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_487723191.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:19:45.389Z" UpdatedDate="2014-08-28T13:19:46.216Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_248285952.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_511370381.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:13:55.729Z" UpdatedDate="2014-08-28T13:13:57.336Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_889336512.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_931690249.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T13:02:45.566Z" UpdatedDate="2014-08-28T13:02:46.517Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_349501910.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_207388190.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-28T12:56:00.996Z" UpdatedDate="2014-08-28T12:56:02.312Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_105897576.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_629511429.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-26T22:10:22.665Z" UpdatedDate="2014-08-26T22:10:23.488Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_664245972.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_195988332.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:53:58.430Z" UpdatedDate="2014-08-22T07:53:58.996Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_748455739.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_496036720.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:50:12.124Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_602112218.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_862630592.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:47:47.874Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_844907418.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_468466885.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:43:58.534Z" UpdatedDate="2014-08-22T07:43:59.152Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_980529725.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_349059004.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-22T07:39:39.828Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_843010492.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_589725369.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:43:42.616Z" UpdatedDate="2014-08-21T21:43:42.987Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_397984458.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_859177019.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:39:56.408Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_930984115.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_453191612.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:31:42.686Z" UpdatedDate="2014-08-21T21:31:43.137Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_635688801.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_686655514.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:27:58.633Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_450735154.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_866483908.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:20:29.088Z" UpdatedDate="2014-08-21T21:20:29.481Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_306151931.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_544739182.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T21:16:38.290Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_841357694.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_934022287.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T19:00:19.345Z" UpdatedDate="2014-08-21T19:00:19.901Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_468795956.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_960075464.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T18:56:10.520Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_916290457.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_302913225.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:05:09.472Z" UpdatedDate="2014-08-21T14:05:09.931Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_456986537.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_723455466.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T14:02:59.745Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_152026537.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_368596980.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:54:38.449Z" UpdatedDate="2014-08-21T13:54:38.947Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_565673291.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_895580850.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:52:28.657Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_450042802.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_948068601.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:35:03.191Z" UpdatedDate="2014-08-21T13:35:03.781Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_846933374.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_979230523.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T13:32:52.818Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_331279716.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_363387211.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:23:04.517Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_169872064.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_422594890.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:09:19.283Z" UpdatedDate="2014-08-21T12:09:19.901Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_237442369.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_137495506.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T12:05:28.960Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_812215794.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_190927270.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:51:11.416Z" UpdatedDate="2014-08-21T11:51:12.299Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_879707157.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_215329091.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-21T11:48:59.775Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_229147847.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_436899439.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T13:04:18.361Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_288204702.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_208902758.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:36:21.730Z" UpdatedDate="2014-08-18T12:36:22.318Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_519555516.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_895543928.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:33:46.777Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_824031089.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_634685473.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T12:19:55.683Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_297859587.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_265991523.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T10:05:44.435Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_575426027.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_491582406.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:52:35.318Z" UpdatedDate="2014-08-18T09:52:35.751Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_527779456.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_984545847.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T09:48:33.640Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_627131520.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_560443918.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:53:41.733Z" UpdatedDate="2014-08-18T08:53:42.305Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_910559055.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_884828734.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:51:25.413Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_210120578.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_156114938.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:34:09.941Z" UpdatedDate="2014-08-18T08:34:10.630Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_355834965.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_681162419.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:31:51.294Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_728601571.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_736880953.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T08:00:03.175Z" UpdatedDate="2014-08-18T08:00:03.690Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_592364762.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_268686040.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:55:56.087Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_282076337.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_618854151.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:26:15.694Z" UpdatedDate="2014-08-18T07:26:16.242Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_140170929.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_471682924.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T07:24:05.951Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_173334994.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_899571272.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:40:02.054Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_932024997.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_893528287.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:08:32.636Z" UpdatedDate="2014-08-18T05:08:33.339Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_381478385.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_425126373.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T05:06:22.741Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_438729802.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_601152775.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:56:28.308Z" UpdatedDate="2014-08-18T04:56:29.295Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_382967289.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_832851293.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-18T04:54:15.439Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_211422677.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_726326064.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:09:30.408Z" UpdatedDate="2014-08-14T13:09:30.965Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_146192404.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_415889755.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:05:19.717Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_619604136.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_754963066.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T13:03:09.720Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_654647767.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_764556971.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:23:40.221Z" UpdatedDate="2014-08-14T12:23:40.786Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_919015250.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_165336942.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:17:16.132Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_195116084.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_835239002.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:14:18.844Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_260752932.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_874963159.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T12:08:58.169Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_779419330.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_368509940.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:29:42.810Z" UpdatedDate="2014-08-14T11:29:43.401Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_502666010.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_451000022.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T11:22:56.027Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_704697542.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_802145178.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:45:21.568Z" UpdatedDate="2014-08-14T10:45:23.514Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_738056712.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_704468677.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T10:42:21.843Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_678241981.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_939413669.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:12:59.087Z" UpdatedDate="2014-08-14T03:13:01.209Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_158917048.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_513082376.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-14T03:00:14.573Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_608919375.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_861963685.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-13T13:49:03.648Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_782272457.txt" ContentID="urn:dece:cid:file:A_File_Name_with_NUMBERS_652750736.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-08-12T17:00:50.390Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:46671210655978757" ContentID="urn:dece:cid:test:6395818316887755" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T09:31:32.930Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9287477679998063" ContentID="urn:dece:cid:test:6503354124925667" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T09:18:09.569Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7528376671046091" ContentID="urn:dece:cid:test:6959407188533311" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T09:06:46.869Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9363589741067366" ContentID="urn:dece:cid:test:4279997615201119" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-07-25T08:57:18.430Z" UpdatedDate="2014-07-25T08:58:09.562Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3725260318013214" ContentID="urn:dece:cid:test:7991347202315856" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-23T12:01:48.285Z" UpdatedDate="2014-06-23T12:02:37.286Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6342750938677101" ContentID="urn:dece:cid:test:7393583935673104" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T11:06:57.859Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8452367396234389" ContentID="urn:dece:cid:test:9483395729718255" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T10:53:55.686Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6881104364409774" ContentID="urn:dece:cid:test:6962849078341671" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T10:43:12.844Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:2232555992172629" ContentID="urn:dece:cid:test:25958355921534204" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T10:32:39.317Z" UpdatedDate="2014-06-17T10:33:31.170Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9229076587892033" ContentID="urn:dece:cid:test:16031117120836713" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T09:14:21.005Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:985013474001839" ContentID="urn:dece:cid:test:5364356992478578" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T09:00:23.519Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:20067697684310382" ContentID="urn:dece:cid:test:9637740463954299" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T08:48:35.490Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8507869477487702" ContentID="urn:dece:cid:test:08190123613521205" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-17T08:39:21.118Z" UpdatedDate="2014-06-17T08:40:08.925Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:31485682627174105" ContentID="urn:dece:cid:test:6423184462202237" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:46:21.289Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6948302845672492" ContentID="urn:dece:cid:test:7332086296382532" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:31:20.758Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:17462701486108712" ContentID="urn:dece:cid:test:6577756434670007" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:20:59.950Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:4807449454305168" ContentID="urn:dece:cid:test:04138547757279554" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T13:11:36.207Z" UpdatedDate="2014-06-06T13:12:26.337Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7620275517827287" ContentID="urn:dece:cid:test:9480235072995618" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T11:38:39.539Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:92854840665256" ContentID="urn:dece:cid:test:17595050352115182" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T11:26:45.093Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3829822042486929" ContentID="urn:dece:cid:test:060925019219788545" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T11:16:24.964Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7403831100161526" ContentID="urn:dece:cid:test:7517468240236537" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-06-06T11:07:10.719Z" UpdatedDate="2014-06-06T11:07:59.208Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9643544816746022" ContentID="urn:dece:cid:test:18793310073394587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:52:33.134Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3773466911350456" ContentID="urn:dece:cid:test:8066227970787608" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:39:16.100Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:39248453455457355" ContentID="urn:dece:cid:test:11647567581415008" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:27:24.201Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_29_21_55_34_IST_2014" ContentID="urn:dece:cid:test:Thu_May_29_21_54_54_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:25:32.138Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_29_21_51_07_IST_2014" ContentID="urn:dece:cid:test:Thu_May_29_21_50_17_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:21:05.759Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5070793801665515" ContentID="urn:dece:cid:test:4692584724009847" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T16:16:40.077Z" UpdatedDate="2014-05-29T16:17:28.485Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:1083067939723591" ContentID="urn:dece:cid:test:4668211306641419" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T10:10:11.340Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9415533249537708" ContentID="urn:dece:cid:test:754225708964051" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T09:58:48.457Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:08289287680036506" ContentID="urn:dece:cid:test:17259156074424287" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T09:49:13.779Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:1955124426648246" ContentID="urn:dece:cid:test:2563307026958995" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T09:40:24.288Z" UpdatedDate="2014-05-29T09:41:12.090Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:24492507456387802" ContentID="urn:dece:cid:test:24055017448436766" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T08:36:35.207Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:07259816639932626" ContentID="urn:dece:cid:test:33459249377990685" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T08:13:30.989Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:823168210355439" ContentID="urn:dece:cid:test:9529182223025959" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T07:09:20.985Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:046231230429686576" ContentID="urn:dece:cid:test:07411414650010406" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T06:54:47.633Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7350057355988154" ContentID="urn:dece:cid:test:30551799302038396" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T06:45:07.609Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:20643402284911738" ContentID="urn:dece:cid:test:8634794345818073" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-29T06:36:51.630Z" UpdatedDate="2014-05-29T06:37:40.597Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9135360886747644" ContentID="urn:dece:cid:test:01623047336391814" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T09:08:10.652Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5973007802643773" ContentID="urn:dece:cid:test:005872098850207563" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T08:15:53.567Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:396519367021139" ContentID="urn:dece:cid:test:0992494910954308" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T08:00:41.363Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:4969417115618905" ContentID="urn:dece:cid:test:20158013781687656" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T07:51:02.233Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:1757929563922611" ContentID="urn:dece:cid:test:5152084320483701" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-23T07:41:04.114Z" UpdatedDate="2014-05-23T07:41:53.216Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:652442923512992" ContentID="urn:dece:cid:test:30081825844515897" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-21T11:36:13.537Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:15282657767553698" ContentID="urn:dece:cid:test:1469828717093392" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-19T15:19:58.272Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:1928364007477431" ContentID="urn:dece:cid:test:7462549177296101" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-19T15:09:21.840Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7106996175693865" ContentID="urn:dece:cid:test:14456367245705826" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-19T15:00:51.327Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8119628225697093" ContentID="urn:dece:cid:test:4434004291425804" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-19T14:52:37.656Z" UpdatedDate="2014-05-19T14:53:26.077Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_15_18_22_05_IST_2014" ContentID="urn:dece:cid:test:Thu_May_15_18_21_20_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T12:52:05.398Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_15_16_52_17_IST_2014" ContentID="urn:dece:cid:test:Thu_May_15_16_51_45_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T11:22:17.908Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_15_16_51_00_IST_2014" ContentID="urn:dece:cid:test:Thu_May_15_16_50_27_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T11:21:00.444Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_15_14_53_05_IST_2014" ContentID="urn:dece:cid:test:Thu_May_15_14_52_32_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:23:04.289Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_15_14_51_29_IST_2014" ContentID="urn:dece:cid:test:Thu_May_15_14_50_57_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:21:28.968Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_15_14_39_32_IST_2014" ContentID="urn:dece:cid:test:Thu_May_15_14_38_59_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:09:31.669Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_15_14_37_25_IST_2014" ContentID="urn:dece:cid:test:Thu_May_15_14_36_51_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-15T09:07:24.536Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:13578909910066472" ContentID="urn:dece:cid:test:4326862492471343" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:33:37.277Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:17415849216765822" ContentID="urn:dece:cid:test:32005336707982845" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:23:09.360Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:39722283302393335" ContentID="urn:dece:cid:test:06489933909827528" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:13:50.733Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:054441559298678" ContentID="urn:dece:cid:test:7733303839645593" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T16:05:45.599Z" UpdatedDate="2014-05-14T16:06:31.988Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:20178615873706696" ContentID="urn:dece:cid:test:5403209441889274" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T15:09:50.766Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3939787955018468" ContentID="urn:dece:cid:test:5820846802260072" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T14:59:58.511Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:4638346326938442" ContentID="urn:dece:cid:test:6474925133208458" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T14:52:31.636Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:934102481471246" ContentID="urn:dece:cid:test:33538489465985577" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T14:45:51.184Z" UpdatedDate="2014-05-14T14:46:36.258Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:2744534883613219" ContentID="urn:dece:cid:test:7532009684082558" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T13:54:37.072Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6120228250967533" ContentID="urn:dece:cid:test:4361527308214941" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T13:46:42.646Z" UpdatedDate="2014-05-14T13:47:30.543Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:14303136658831883" ContentID="urn:dece:cid:test:7771553757250715" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T08:14:40.921Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:07070136044610875" ContentID="urn:dece:cid:test:06682327638550156" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T08:04:50.874Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8510946060451101" ContentID="urn:dece:cid:test:21538595169807195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T07:56:44.338Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:41744630289798834" ContentID="urn:dece:cid:test:3294342681405522" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-14T07:48:25.670Z" UpdatedDate="2014-05-14T07:49:15.163Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_May_12_20_21_34_IST_2014" ContentID="urn:dece:cid:test:Mon_May_12_20_21_02_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T14:51:34.987Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_May_12_19_55_18_IST_2014" ContentID="urn:dece:cid:test:Mon_May_12_19_54_45_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T14:25:18.655Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9858525103167182" ContentID="urn:dece:cid:test:6048692692415569" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T12:45:23.864Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3563644362921662" ContentID="urn:dece:cid:test:35936583088659624" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T12:34:17.182Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8335491348914666" ContentID="urn:dece:cid:test:6860896953112637" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T11:47:12.299Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:2695079437359238" ContentID="urn:dece:cid:test:7551530981526982" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-12T11:22:53.751Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_08_22_22_57_IST_2014" ContentID="urn:dece:cid:test:Thu_May_08_22_22_29_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T16:52:58.152Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_08_22_19_54_IST_2014" ContentID="urn:dece:cid:test:Thu_May_08_22_19_25_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T16:49:55.884Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_08_19_28_52_IST_2014" ContentID="urn:dece:cid:test:Thu_May_08_19_28_25_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T13:58:53.866Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_May_08_19_09_14_IST_2014" ContentID="urn:dece:cid:test:Thu_May_08_19_08_51_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-08T13:39:15.186Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:1536198829449722" ContentID="urn:dece:cid:test:9977444738581481" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T16:58:20.158Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:08909313791392781" ContentID="urn:dece:cid:test:6654785936864607" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T16:48:34.593Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7851480872465963" ContentID="urn:dece:cid:test:549139462645974" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T16:40:40.043Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:07462723970810514" ContentID="urn:dece:cid:test:4155777840219711" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T16:29:20.826Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:10516071896389234" ContentID="urn:dece:cid:test:0953666546305485" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-07T14:12:05.770Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Tue_May_06_19_29_00_IST_2014" ContentID="urn:dece:cid:test:Tue_May_06_18_36_10_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-06T13:59:06.001Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Tue_May_06_19_26_08_IST_2014" ContentID="urn:dece:cid:test:Tue_May_06_18_36_10_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-05-06T13:56:14.704Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9650198142081394" ContentID="urn:dece:cid:test:06494326456510358" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:57:29.277Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:39740446022910825" ContentID="urn:dece:cid:test:20193708515171405" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:46:30.021Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7976379462643547" ContentID="urn:dece:cid:test:20453060940816836" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:37:12.647Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8862700866425424" ContentID="urn:dece:cid:test:9327280897662666" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-28T08:28:55.106Z" UpdatedDate="2014-04-28T08:29:47.865Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5869391100524203" ContentID="urn:dece:cid:test:15554419139765918" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T12:00:49.009Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:2706555547353231" ContentID="urn:dece:cid:test:6016710933251905" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T11:50:31.256Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9959446092874635" ContentID="urn:dece:cid:test:22053639885027165" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T11:32:27.781Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5758583036470502" ContentID="urn:dece:cid:test:6811034408303325" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-22T11:08:59.640Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6172753498963569" ContentID="urn:dece:cid:test:249197245473761" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T11:59:53.857Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5266119728737588" ContentID="urn:dece:cid:test:5277510006961493" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T11:47:57.418Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8390103884349663" ContentID="urn:dece:cid:test:9899538999400399" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T11:24:52.014Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:29230502624345833" ContentID="urn:dece:cid:test:37493179668395504" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-21T11:00:09.440Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_Apr_07_22_43_41_IST_2014" ContentID="urn:dece:cid:test:Mon_Apr_07_22_43_33_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T17:13:41.417Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_Apr_07_22_42_07_IST_2014" ContentID="urn:dece:cid:test:Mon_Apr_07_22_41_48_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T17:12:07.242Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_Apr_07_20_55_51_IST_2014" ContentID="urn:dece:cid:test:Mon_Apr_07_20_55_47_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T15:25:51.207Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_Apr_07_16_16_08_IST_2014" ContentID="urn:dece:cid:test:Mon_Apr_07_16_16_00_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T10:46:08.636Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_Apr_07_16_15_05_IST_2014" ContentID="urn:dece:cid:test:Mon_Apr_07_16_14_56_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-04-07T10:45:06.191Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5927140408027848" ContentID="urn:dece:cid:test:34321665530498247" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T13:16:57.875Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7511200297133233" ContentID="urn:dece:cid:test:43404060755265605" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T13:05:51.935Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:3422928159970351" ContentID="urn:dece:cid:test:9461234235617896" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:57:17.111Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5040923378307332" ContentID="urn:dece:cid:test:5433121606384336" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-31T12:49:45.253Z" UpdatedDate="2014-03-31T12:50:34.954Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_28_01_25_12_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_28_01_25_05_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-27T19:51:29.917Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_28_01_16_36_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_28_01_16_30_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-27T19:42:53.548Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_999413296.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:32.884Z" UpdatedDate="2014-03-26T14:53:44.433Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_939159356.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:27.439Z" UpdatedDate="2014-03-26T14:53:28.236Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:alschema!@:5E7D87C1F5DDFD866A7B8_605286962" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:27.076Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_283603587.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:25.488Z" UpdatedDate="2014-03-26T14:53:25.811Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_371700622.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:23.291Z" UpdatedDate="2014-03-26T14:53:23.759Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_274793318.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:20.090Z" UpdatedDate="2014-03-26T14:53:20.671Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_758007192.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:17.775Z" UpdatedDate="2014-03-26T14:53:18.206Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_511843089.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:15.724Z" UpdatedDate="2014-03-26T14:53:16.139Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_891749823.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:13.061Z" UpdatedDate="2014-03-26T14:53:13.872Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_450693142.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:09.418Z" UpdatedDate="2014-03-26T14:53:09.984Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_288913634.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:07.393Z" UpdatedDate="2014-03-26T14:53:07.810Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_891193387.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:05.517Z" UpdatedDate="2014-03-26T14:53:05.918Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_647108172.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:02.612Z" UpdatedDate="2014-03-26T14:53:03.471Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_201502667.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:53:00.700Z" UpdatedDate="2014-03-26T14:53:01.195Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_545052200.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:58.014Z" UpdatedDate="2014-03-26T14:52:58.594Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_512091972.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:54.911Z" UpdatedDate="2014-03-26T14:52:56.063Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_765345956.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:52.640Z" UpdatedDate="2014-03-26T14:52:53.014Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_802033815.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:49.918Z" UpdatedDate="2014-03-26T14:52:50.531Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_104793198.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:47.846Z" UpdatedDate="2014-03-26T14:52:48.394Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_305339664.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:44.218Z" UpdatedDate="2014-03-26T14:52:44.881Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_855292164.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:41.256Z" UpdatedDate="2014-03-26T14:52:41.965Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_798623905.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:38.507Z" UpdatedDate="2014-03-26T14:52:39.252Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_500951290.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:35.391Z" UpdatedDate="2014-03-26T14:52:35.940Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_298848000.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:32.453Z" UpdatedDate="2014-03-26T14:52:33.009Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_315789455.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:30.223Z" UpdatedDate="2014-03-26T14:52:30.576Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_560809328.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:27.623Z" UpdatedDate="2014-03-26T14:52:28.106Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_157467878.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:24.780Z" UpdatedDate="2014-03-26T14:52:25.189Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_783992286.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:22.011Z" UpdatedDate="2014-03-26T14:52:22.354Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_322018160.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:19.170Z" UpdatedDate="2014-03-26T14:52:19.829Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234-352652154-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:52:03.085Z" UpdatedDate="2014-03-26T14:52:03.787Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234-254868563-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:51:52.418Z" UpdatedDate="2014-03-26T14:51:52.877Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_117445708.txt   " ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:51:41.012Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-898848445-%3AF5DD%3A-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:51:14.571Z" UpdatedDate="2014-03-26T14:51:15.199Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-561323859-F5DD-9ABC-DEF0-8%3AABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:51:02.016Z" UpdatedDate="2014-03-26T14:51:02.556Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-%3A359668611-F5DD-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:50:49.696Z" UpdatedDate="2014-03-26T14:50:50.126Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-923266826-F5DD-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:50:37.547Z" UpdatedDate="2014-03-26T14:50:38.053Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:%3A1234-%3A958677809-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:50:14.985Z" UpdatedDate="2014-03-26T14:50:15.545Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234-240978080-F5DD-9ABC-DEF0-8%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:50:03.898Z" UpdatedDate="2014-03-26T14:50:04.438Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234%3A-764272032-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:49:52.842Z" UpdatedDate="2014-03-26T14:49:53.294Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234-541786788-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:49:40.133Z" UpdatedDate="2014-03-26T14:49:40.713Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:baseline:ABCD:%3A659508176000H%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:49:15.827Z" UpdatedDate="2014-03-26T14:49:16.259Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:baseline:ABCD602758728000H%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:49:02.759Z" UpdatedDate="2014-03-26T14:49:03.192Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:baseline:ABCD%3A450107836000H:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:48:50.089Z" UpdatedDate="2014-03-26T14:48:50.576Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:baseline:ABCD831527092000H:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:48:37.683Z" UpdatedDate="2014-03-26T14:48:38.154Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.co.uk%3A%2Folympics%3A%2F:222420382" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:48:15.055Z" UpdatedDate="2014-03-26T14:48:15.557Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.co.uk%2F%3Aolympics%2F326515032" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:48:04.441Z" UpdatedDate="2014-03-26T14:48:04.873Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:%3A978-%3A1-74492-479-1235983455:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:32:25.858Z" UpdatedDate="2014-03-26T14:32:26.220Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:978-1-74492-479-1250091068%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:32:17.576Z" UpdatedDate="2014-03-26T14:32:18.033Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:978-1-74492-479-%3A1658593170:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:32:06.807Z" UpdatedDate="2014-03-26T14:32:07.499Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:978-1-74492-479-1499130338:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:31:57.476Z" UpdatedDate="2014-03-26T14:31:57.862Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:%3A0317-6177%3A236399843:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:31:38.075Z" UpdatedDate="2014-03-26T14:31:38.871Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:0317-6177713608830:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:31:29.382Z" UpdatedDate="2014-03-26T14:31:29.694Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:%3A0317-6177783243114:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:31:18.609Z" UpdatedDate="2014-03-26T14:31:19.029Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:0317-6177953071567:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:31:07.959Z" UpdatedDate="2014-03-26T14:31:08.829Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:%3A0A9-%3A261092309-12B4A105-7:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:30:45.213Z" UpdatedDate="2014-03-26T14:30:45.765Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:0A9-%3A914989048-12B4A105-7" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:30:31.683Z" UpdatedDate="2014-03-26T14:30:32.822Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:%3A0A9-373914181-12B4A105-7:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:30:20.089Z" UpdatedDate="2014-03-26T14:30:20.508Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:0A9-719320781-12B4A105-7:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:30:06.806Z" UpdatedDate="2014-03-26T14:30:07.765Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F%3A964022983:%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:28:40.623Z" UpdatedDate="2014-03-26T14:28:41.473Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F53A971318428" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:28:29.139Z" UpdatedDate="2014-03-26T14:28:29.837Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F%3A978357365:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:28:18.216Z" UpdatedDate="2014-03-26T14:28:18.542Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F206634966:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:28:06.979Z" UpdatedDate="2014-03-26T14:28:07.309Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version%3A965891842.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:26:50.325Z" UpdatedDate="2014-03-26T14:26:51.160Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE:ALID%3AVersion%3A663696163.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:26:39.636Z" UpdatedDate="2014-03-26T14:26:40.036Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE%3AALID:Version_840829540.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:26:27.976Z" UpdatedDate="2014-03-26T14:26:28.500Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID:Version_302948623.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:26:15.742Z" UpdatedDate="2014-03-26T14:26:16.406Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:ALSTUDIO%3AVersion931360059" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:25:52.548Z" UpdatedDate="2014-03-26T14:25:53.300Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:AL%3ASTUDIO:Version%3A166585921" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:25:40.107Z" UpdatedDate="2014-03-26T14:25:40.986Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:ALSTUDIO:Version%3A641983001" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:25:28.236Z" UpdatedDate="2014-03-26T14:25:29.430Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:ALSTUDIO:Version520632387" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:25:16.657Z" UpdatedDate="2014-03-26T14:25:17.682Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ÿ_489772032.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:25:06.171Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ý_963497801.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:24:54.543Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_û_551070653.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:24:44.153Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ù_496045170.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:24:35.717Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_÷_624471921.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:24:24.153Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_õ_809533790.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:24:13.619Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ó_221925460.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:24:03.241Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ñ_957603196.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:23:51.793Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ï_950182826.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:23:41.296Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_í_490303911.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:23:27.092Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ë_750752137.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:23:15.448Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_é_947196401.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:23:03.549Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ç_507306881.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:22:52.911Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_å_127373510.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:22:42.522Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ã_332848576.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:22:32.245Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_á_870356213.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:22:19.738Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ß_567898603.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:22:07.542Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ý_309422058.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:21:57.200Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Û_821101579.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:21:45.891Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ù_524060335.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:21:32.073Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_×_939452015.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:21:20.460Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Õ_608184152.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:21:11.105Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ó_244324473.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:20:59.354Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ñ_164788236.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:20:48.473Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ï_348810321.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:20:37.846Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Í_626109247.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:20:26.691Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ë_314456137.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:20:15.364Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_É_278886660.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:20:03.811Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ç_220909566.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:19:52.480Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Å_136110702.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:19:41.292Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ã_255586064.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:19:30.301Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Á_925673092.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:19:20.033Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¿_890329780.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:19:08.671Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_½_116936854.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:18:57.177Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_»_288961845.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:18:45.587Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¹_217286270.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:18:35.602Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_•_726398837.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:18:25.249Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_µ_350896440.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:18:14.645Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_³_245268102.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:18:04.076Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_±_235111275.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:17:52.506Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¯_209807090.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:17:42.635Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¬_198376919.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:17:31.559Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_«_946043282.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:17:19.758Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_©_394235401.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:17:06.743Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_§_229089202.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:16:55.674Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¥_772770186.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:16:44.779Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_£_120122859.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:16:34.497Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¡_510855017.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:16:24.363Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ÿ_632435609.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:16:13.133Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__154456232.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:16:00.079Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_›_461638256.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:15:48.603Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_™_938195186.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:15:37.257Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_—_966019385.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:15:24.753Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_•_596877215.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:15:12.625Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_“_455346620.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:14:59.041Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‘_211086798.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:14:47.088Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__286800948.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:14:35.677Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__870681769.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:14:25.030Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‹_628245515.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:14:14.360Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‰_176831921.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:14:02.831Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‡_437682916.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:13:50.894Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_…_790763385.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:13:38.820Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ƒ_172144101.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:13:28.264Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__634279532.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:13:17.803Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__380147574.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:13:07.113Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_}_604641359.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:12:57.994Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_þ_264680332.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:12:47.689Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ü_743514093.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:12:36.901Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ú_937184254.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:12:27.682Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ø_875886853.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:12:17.149Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ö_190685137.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:12:07.233Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ô_959162249.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:11:56.962Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ò_562998180.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:11:47.029Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ð_499416459.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:11:36.948Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_î_276202040.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:11:26.827Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ì_510994702.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:11:15.787Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ê_678244966.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:11:03.691Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_è_679464400.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:10:53.284Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_æ_581085697.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:10:42.954Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ä_784386708.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:10:33.629Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_â_980931098.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:10:23.370Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_à_175213394.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:10:13.342Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Þ_443191782.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:10:01.317Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ü_441593590.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:09:52.306Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ú_186572459.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:09:42.318Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ø_349667050.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:09:33.537Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ö_400148967.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:09:23.163Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ô_448908897.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:09:13.706Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ò_952335443.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:09:04.124Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ð_703209216.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:08:53.672Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Î_363009692.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:08:43.727Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ì_881627782.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:08:34.222Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ê_324536835.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:08:24.064Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_È_341566984.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:08:14.418Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Æ_948109284.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:08:04.740Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ä_446610136.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:07:53.104Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Â_301838716.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:07:43.723Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_À_723646159.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:07:33.280Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¾_726252954.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:07:23.378Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¼_377260679.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:07:14.875Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_º_561542554.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:07:04.812Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¸_794546797.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:06:52.234Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¶_481908379.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:06:40.647Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_´_116472402.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:06:28.079Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_²_941178641.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:06:16.201Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_°_813496473.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:06:06.355Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_®_691760817.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:05:56.531Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¬_359898188.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:05:46.798Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ª_417107511.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:05:35.571Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¨_295831363.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:05:26.750Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¦_123061195.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:05:15.801Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¤_479689244.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:05:05.606Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¢_916355093.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:04:56.284Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ _939878091.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:04:46.902Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ž_109096791.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:04:37.205Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_œ_177483729.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:04:27.474Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_š_150728625.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:04:18.786Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_˜_110828967.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:04:09.092Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_–_973558998.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:03:59.890Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_”_999187142.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:03:51.617Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_’_523042636.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:03:39.989Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__693392581.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:03:29.773Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ž_663272013.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:03:19.969Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Œ_612642965.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:03:11.584Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Š_655147807.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:03:02.124Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ˆ_758912554.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:02:52.476Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_†_373420883.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:02:40.257Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_„_358442360.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:02:29.739Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‚_424553446.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:02:20.622Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_€_185826106.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:02:09.641Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_~_899801093.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:01:59.804Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_π_679604459.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:01:50.083Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_{_758574928.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:01:40.377Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_|_743643004.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:01:29.942Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_%25_285343799.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:01:20.456Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ _224274549.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:01:10.137Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_320538863.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:01:08.248Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:upc:036000354768" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:00:40.391Z" UpdatedDate="2014-03-26T14:00:41.079Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:cidf:hdl:1735.00A0%2F518529807FF" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:00:30.248Z" UpdatedDate="2014-03-26T14:00:31.056Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:smpte-umid:47.65.86.38.01.01.01.01.01.01.01.00.00.00.00.00" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:00:18.198Z" UpdatedDate="2014-03-26T14:00:18.664Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:gtin:10614141261953" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T14:00:07.456Z" UpdatedDate="2014-03-26T14:00:07.985Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.co.uk%2Folympics%2F729054612" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:59:58.317Z" UpdatedDate="2014-03-26T13:59:58.786Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:gtin:10614141747044" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:59:47.503Z" UpdatedDate="2014-03-26T13:59:48.044Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR:10.123%2F1234-5678-9ABC-DEF0-K:840140155" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:59:11.236Z" UpdatedDate="2014-03-26T13:59:11.853Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISMN:979-0-439499618-0043-8" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:59:01.097Z" UpdatedDate="2014-03-26T13:59:01.533Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:WBUK:2003261x6000008936xEST_921112865" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:58:51.212Z" UpdatedDate="2014-03-26T13:58:52.191Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:AMG:Romeo%20%26%20Juliet:MDPysicalCreatebyMDP_759345477" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:58:40.413Z" UpdatedDate="2014-03-26T13:58:40.973Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TRIB:Sanford%20%26%20Sons:MDPysicalCreatebyMDP_736791384" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:58:29.032Z" UpdatedDate="2014-03-26T13:58:29.840Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISAN:1234-1234-7623-0200-8-0000-0000-F" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:58:16.752Z" UpdatedDate="2014-03-26T13:58:17.373Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TVG:Law%20%26%20Order%20Criminal%20Intent:MDPysicalCreatebyMDP_367680500" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:58:06.169Z" UpdatedDate="2014-03-26T13:58:06.614Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:IMDB:Romeo%20%26%20Juliet:MDPysicalCreatebyMDP_970170022" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:57:55.258Z" UpdatedDate="2014-03-26T13:57:55.991Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:MUZE:Gone%20with%20the%20Wind:MDPysicalCreatebyMDP_862099673" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:57:43.327Z" UpdatedDate="2014-03-26T13:57:43.775Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:UUID:121AC628-D92E-1D6D-7580-25DC4075D842" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:57:31.372Z" UpdatedDate="2014-03-26T13:57:31.982Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:GRID:A1-2425G-A515286186-M" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:57:19.598Z" UpdatedDate="2014-03-26T13:57:20.061Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:URI:http:%2F%2Fwww.example.org%2FresourceNumber218969597.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:57:09.691Z" UpdatedDate="2014-03-26T13:57:10.168Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:978-1-74492-479-1759477865" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:57:00.030Z" UpdatedDate="2014-03-26T13:57:00.469Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:0317-6177160039954" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:56:48.439Z" UpdatedDate="2014-03-26T13:56:48.827Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:0A9-493514235-12B4A105-7" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:56:37.894Z" UpdatedDate="2014-03-26T13:56:38.660Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISRC:ARF440500549" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:56:27.068Z" UpdatedDate="2014-03-26T13:56:27.530Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F699624927" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:56:14.869Z" UpdatedDate="2014-03-26T13:56:15.637Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISWC:T-111.433.001-2" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:56:04.123Z" UpdatedDate="2014-03-26T13:56:05.178Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_822869879.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:55:54.075Z" UpdatedDate="2014-03-26T13:55:54.673Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_194342377.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:55:42.419Z" UpdatedDate="2014-03-26T13:55:42.877Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_319664863.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:55:30.910Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_927441505.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:55:19.600Z" UpdatedDate="2014-03-26T13:55:20.236Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_735622986.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:55:09.165Z" UpdatedDate="2014-03-26T13:55:09.850Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_383355691.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:54:04.960Z" UpdatedDate="2014-03-26T13:54:05.812Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-692583114-F5DD-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:40.790Z" UpdatedDate="2014-03-26T13:51:41.150Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-994995621-F5DD-9ABC" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:39.882Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-117420962-F5DD-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:37.773Z" UpdatedDate="2014-03-26T13:51:38.740Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_388245104.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:35.642Z" UpdatedDate="2014-03-26T13:51:36.861Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_288998789.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:25.118Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_635055146.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:23.989Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_226188324.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:22.123Z" UpdatedDate="2014-03-26T13:51:23.022Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_190370792.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:12.354Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID &amp; /Version_468554347.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:10.747Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_494530756.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:08.305Z" UpdatedDate="2014-03-26T13:51:09.388Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_429815268.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:07.285Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_339803061.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:51:06.487Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_954556241.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:50:47.984Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_750042677.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:50:36.769Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_712197887.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:50:34.914Z" UpdatedDate="2014-03-26T13:50:35.979Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_181303898.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:50:34.136Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_624056127.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:50:32.922Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_646635660.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:50:13.441Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_638142341.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:50:00.192Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_162732073.txt" ContentID="urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T13:49:41.636Z" UpdatedDate="2014-03-26T13:49:43.178Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_18_09_01_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_18_08_53_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:35:18.044Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_18_04_57_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_18_04_50_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:31:14.176Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_18_04_21_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_18_04_09_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:30:37.634Z" UpdatedDate="2014-03-26T12:30:45.831Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_18_00_16_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_18_00_09_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:26:33.322Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_17_59_24_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_17_59_16_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:25:41.044Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_17_57_07_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_17_56_59_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:23:23.949Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_17_51_40_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_17_51_32_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:17:56.723Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_17_48_28_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_17_48_20_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:14:44.642Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_17_45_14_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_17_45_06_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:11:30.894Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_17_39_29_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_17_39_21_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:05:46.201Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_17_37_22_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_17_37_14_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:03:38.766Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_17_34_19_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_17_34_05_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T12:00:35.972Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_15_21_42_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_15_21_29_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T09:47:58.653Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_15_07_54_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_15_07_46_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T09:34:10.567Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_14_11_09_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_14_11_01_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T08:37:25.933Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_13_57_41_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_13_57_33_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T08:23:58.088Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Wed_Mar_26_13_40_10_IST_2014" ContentID="urn:dece:cid:test:Wed_Mar_26_13_39_54_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-26T08:06:27.424Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_20_34_24_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_20_34_03_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T15:00:42.336Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_20_18_32_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_20_18_20_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T14:44:51.364Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_20_18_23_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_20_18_05_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T14:44:42.202Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_18_53_36_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_18_53_28_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T13:19:54.919Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_18_51_14_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_18_51_00_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T13:18:54.929Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_17_16_06_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_17_15_57_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T11:42:24.282Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_17_05_07_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_17_04_53_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T11:31:25.276Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_15_18_46_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_15_18_37_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T09:45:03.962Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_14_40_26_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_14_40_14_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T09:10:37.826Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_14_37_02_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_14_36_53_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T09:07:13.741Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_14_35_10_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_14_34_55_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T09:05:21.860Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_12_51_45_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_12_51_36_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T07:21:57.303Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_12_45_45_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_12_45_37_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T07:12:03.412Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_12_42_58_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_12_42_50_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T07:09:16.262Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Fri_Mar_21_12_34_41_IST_2014" ContentID="urn:dece:cid:test:Fri_Mar_21_12_34_26_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-21T07:00:59.202Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Thu_Mar_20_20_53_09_IST_2014" ContentID="urn:dece:cid:test:Thu_Mar_20_20_52_55_IST_2014" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-20T15:19:27.514Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:6204472683440786" ContentID="urn:dece:cid:test:5905044911295939" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:56:51.748Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5322428797836917" ContentID="urn:dece:cid:test:26549496817188956" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:43:29.118Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:7245172395341153" ContentID="urn:dece:cid:test:9598234403718587" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:31:27.176Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5573078132025232" ContentID="urn:dece:cid:test:5874381151414891" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-13T11:19:28.529Z" UpdatedDate="2014-03-13T11:20:31.466Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:8040954239217754" ContentID="urn:dece:cid:test:5988982690384339" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T11:21:01.337Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9060476158100425" ContentID="urn:dece:cid:test:07664997363935344" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T11:10:23.015Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:062382120196172064" ContentID="urn:dece:cid:test:8919326962546033" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T11:01:44.767Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:9422689402138719" ContentID="urn:dece:cid:test:579152257355062" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-03-11T10:54:37.299Z" UpdatedDate="2014-03-11T10:55:24.510Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_418144150.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_664544019.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-26T11:44:26.117Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:016232272094259703" ContentID="urn:dece:cid:test:3422541682055734" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T12:11:33.313Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:35013885666567635" ContentID="urn:dece:cid:test:013758319025033439" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T12:01:06.783Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:5996287788011536" ContentID="urn:dece:cid:test:7444898515077062" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T11:52:36.674Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:38305770813816375" ContentID="urn:dece:cid:test:5259121291394716" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T11:45:11.197Z" UpdatedDate="2014-02-24T11:45:59.316Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:48982213604210223" ContentID="urn:dece:cid:test:738433021707645" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-24T11:16:59.125Z" UpdatedDate="2014-02-24T11:17:49.135Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_197247372.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T17:33:03.023Z" UpdatedDate="2014-02-20T17:33:03.930Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_672364730.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T17:32:56.445Z" UpdatedDate="2014-02-20T17:32:57.229Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_870241289.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T17:32:46.149Z" UpdatedDate="2014-02-20T17:32:46.822Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_572969591.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-20T17:32:20.660Z" UpdatedDate="2014-02-20T17:32:22.414Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ô_807044953.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:57:06.124Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ò_356825456.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:56:54.149Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ð_541993910.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:56:43.234Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Î_981801969.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:56:31.958Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ì_698395841.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:56:20.042Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ê_877980118.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:56:07.533Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_È_607068096.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:55:56.295Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Æ_355023939.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:55:46.446Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ä_730228170.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:55:35.464Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Â_824627002.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:55:22.239Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_À_879124640.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:55:11.054Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¾_353760302.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:54:59.662Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¼_141854735.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:54:49.268Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_º_838118078.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:54:38.237Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¸_980280615.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:54:28.297Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¶_522154285.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:54:17.130Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_´_489948005.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:54:06.874Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_²_133475917.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:53:57.502Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_°_398179494.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:53:44.425Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_®_833657260.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:53:33.356Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¬_820570291.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:53:22.886Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ª_450268871.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:53:11.882Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¨_565882944.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:53:01.793Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¦_686143262.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:52:51.961Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¤_825316173.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:52:38.982Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¢_869758984.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:52:28.199Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ _968330362.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:52:17.353Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ž_465763249.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:52:05.414Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_œ_907644051.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:51:54.737Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_š_696812828.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:51:44.292Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_˜_454926651.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:51:32.323Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_–_569735186.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:51:19.817Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_”_763673858.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:51:08.555Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_’_861879802.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:50:57.402Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__250348172.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:50:46.685Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ž_398834052.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:50:36.560Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Œ_441503951.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:50:26.645Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Š_279278135.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:50:15.863Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ˆ_773094436.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:50:05.965Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_†_297229118.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:49:56.077Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_„_765728132.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:49:44.870Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‚_114217164.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:49:32.588Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_€_696708509.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:49:21.117Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_~_407246867.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:49:11.280Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_π_178734039.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:49:00.404Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_{_761619237.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:48:50.572Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_|_997123212.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:48:38.932Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_%25_726705571.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:48:27.261Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ _937453398.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:48:17.242Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_680426016.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:48:14.593Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:upc:036000389838" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:47:37.078Z" UpdatedDate="2014-02-19T19:47:37.888Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:cidf:hdl:1735.00A0%2F781704970FF" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:47:24.315Z" UpdatedDate="2014-02-19T19:47:25.128Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:smpte-umid:81.32.14.14.01.01.01.01.01.01.01.00.00.00.00.00" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:47:12.857Z" UpdatedDate="2014-02-19T19:47:13.641Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:gtin:10614141720207" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:47:00.399Z" UpdatedDate="2014-02-19T19:47:01.139Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.co.uk%2Folympics%2F710571036" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:46:48.190Z" UpdatedDate="2014-02-19T19:46:49.188Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:gtin:10614141125736" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:46:35.656Z" UpdatedDate="2014-02-19T19:46:36.374Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR:10.123%2F1234-5678-9ABC-DEF0-K:140302555" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:45:36.281Z" UpdatedDate="2014-02-19T19:45:37.229Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISMN:979-0-308162631-0043-8" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:45:24.668Z" UpdatedDate="2014-02-19T19:45:25.332Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:WBUK:2003261x6000008936xEST_969872043" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:45:12.415Z" UpdatedDate="2014-02-19T19:45:13.941Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:AMG:Romeo%20%26%20Juliet:MDPysicalCreatebyMDP_334947066" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:45:01.512Z" UpdatedDate="2014-02-19T19:45:02.268Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TRIB:Sanford%20%26%20Sons:MDPysicalCreatebyMDP_215399517" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:44:49.250Z" UpdatedDate="2014-02-19T19:44:49.908Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISAN:1234-1234-1624-0200-8-0000-0000-F" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:44:38.375Z" UpdatedDate="2014-02-19T19:44:39.104Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TVG:Law%20%26%20Order%20Criminal%20Intent:MDPysicalCreatebyMDP_858701196" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:44:28.103Z" UpdatedDate="2014-02-19T19:44:28.830Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:IMDB:Romeo%20%26%20Juliet:MDPysicalCreatebyMDP_869215136" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:44:15.552Z" UpdatedDate="2014-02-19T19:44:16.399Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:MUZE:Gone%20with%20the%20Wind:MDPysicalCreatebyMDP_599868226" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:44:03.522Z" UpdatedDate="2014-02-19T19:44:04.276Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:UUID:121AC628-D92E-1D6D-4894-25DC4075D842" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:43:51.135Z" UpdatedDate="2014-02-19T19:43:52.273Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:GRID:A1-2425G-A119394717-M" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:43:39.716Z" UpdatedDate="2014-02-19T19:43:40.632Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:URI:http:%2F%2Fwww.example.org%2FresourceNumber665208685.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:43:28.532Z" UpdatedDate="2014-02-19T19:43:29.327Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:978-1-74492-479-1345746449" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:43:17.242Z" UpdatedDate="2014-02-19T19:43:17.833Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:0317-6177565663711" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:43:05.454Z" UpdatedDate="2014-02-19T19:43:06.225Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:0A9-233663491-12B4A105-7" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:42:53.754Z" UpdatedDate="2014-02-19T19:42:54.436Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISRC:ARF381468665" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:42:41.462Z" UpdatedDate="2014-02-19T19:42:42.346Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F836942723" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:42:30.179Z" UpdatedDate="2014-02-19T19:42:31.020Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISWC:T-111.666.001-2" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:42:18.011Z" UpdatedDate="2014-02-19T19:42:18.815Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_479034213.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:42:06.629Z" UpdatedDate="2014-02-19T19:42:07.359Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_923411869.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:41:54.273Z" UpdatedDate="2014-02-19T19:41:55.213Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_204338623.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:41:42.887Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_779843914.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:31:52.345Z" UpdatedDate="2014-02-19T19:31:52.992Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_407139857.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:31:37.674Z" UpdatedDate="2014-02-19T19:31:38.517Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_488153456.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:30:20.078Z" UpdatedDate="2014-02-19T19:30:21.277Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-172691710-F5DD-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:18:02.689Z" UpdatedDate="2014-02-19T19:18:03.670Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-700600512-F5DD-9ABC" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:18:00.961Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-571498863-F5DD-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:57.869Z" UpdatedDate="2014-02-19T19:17:58.620Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_433934804.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:54.741Z" UpdatedDate="2014-02-19T19:17:56.353Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_110031440.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:43.564Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_635845094.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:41.646Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_739337670.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:37.999Z" UpdatedDate="2014-02-19T19:17:39.709Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_740816725.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:27.599Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID &amp; /Version_127059242.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:25.583Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_179891773.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:22.929Z" UpdatedDate="2014-02-19T19:17:24.264Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_506874202.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:21.209Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_363811040.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:19.929Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_675583393.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:17:00.892Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_693574227.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:16:49.893Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_570591447.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:16:47.129Z" UpdatedDate="2014-02-19T19:16:48.621Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_798332354.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:16:45.919Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_429368182.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:16:44.370Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_649503994.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:16:23.959Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_867731570.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:16:11.808Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_774969604.txt" ContentID="urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-19T19:15:21.907Z" UpdatedDate="2014-02-19T19:15:24.117Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_298020826.txt" ContentID="urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-18T05:27:44.130Z" UpdatedDate="2014-02-18T05:27:47.916Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:RIGHTS_EXAMPLE_ALIDVersion_877956.txt" ContentID="urn:dece:cid:file:RIGHTS_EXAMPLE_CIDVersion_877956.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T12:43:06.021Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:test:Mon_Feb_17_16_42_26_IST_2014" ContentID="urn:dece:cid:ORG:mystudio6:291158195" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T11:12:19.531Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_190328560.txt" ContentID="urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T07:24:07.765Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_704567652.txt" ContentID="urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-17T07:18:11.491Z" UpdatedDate="2014-02-17T07:18:16.869Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_290907442.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:50:12.958Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_191910949.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:50:09.936Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_860098685.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:50:06.634Z" UpdatedDate="2014-02-04T05:50:06.915Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_235204245.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:50:05.834Z" UpdatedDate="2014-02-04T05:50:06.012Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_434300866.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:50:04.460Z" UpdatedDate="2014-02-04T05:50:04.802Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_465115864.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:50:03.294Z" UpdatedDate="2014-02-04T05:50:03.577Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_382520057.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:50:02.163Z" UpdatedDate="2014-02-04T05:50:02.433Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_121433865.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:50:00.797Z" UpdatedDate="2014-02-04T05:50:01.058Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_643257425.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:59.180Z" UpdatedDate="2014-02-04T05:49:59.506Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_248554947.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:58.177Z" UpdatedDate="2014-02-04T05:49:58.364Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_299095382.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:57.185Z" UpdatedDate="2014-02-04T05:49:57.414Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_771885844.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:56.189Z" UpdatedDate="2014-02-04T05:49:56.421Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_670914664.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:54.911Z" UpdatedDate="2014-02-04T05:49:55.200Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_282564591.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:53.506Z" UpdatedDate="2014-02-04T05:49:53.939Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_671803860.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:52.272Z" UpdatedDate="2014-02-04T05:49:52.749Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_665502591.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:50.950Z" UpdatedDate="2014-02-04T05:49:51.251Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_530100298.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:49.974Z" UpdatedDate="2014-02-04T05:49:50.212Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_408798091.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:49.199Z" UpdatedDate="2014-02-04T05:49:49.390Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_978149019.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:48.062Z" UpdatedDate="2014-02-04T05:49:48.319Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_982428652.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:47.175Z" UpdatedDate="2014-02-04T05:49:47.449Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_428055602.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:46.068Z" UpdatedDate="2014-02-04T05:49:46.298Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_208883874.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:44.999Z" UpdatedDate="2014-02-04T05:49:45.287Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_461151978.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:44.003Z" UpdatedDate="2014-02-04T05:49:44.206Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_996576942.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:42.755Z" UpdatedDate="2014-02-04T05:49:43.054Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_257585203.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:41.461Z" UpdatedDate="2014-02-04T05:49:41.783Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_159297286.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:40.354Z" UpdatedDate="2014-02-04T05:49:40.663Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_632318657.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:39.263Z" UpdatedDate="2014-02-04T05:49:39.506Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_598110337.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:38.154Z" UpdatedDate="2014-02-04T05:49:38.328Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_582703150.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:36.898Z" UpdatedDate="2014-02-04T05:49:37.107Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_548711717.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:35.637Z" UpdatedDate="2014-02-04T05:49:35.955Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_950101866.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:34.355Z" UpdatedDate="2014-02-04T05:49:34.630Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_536934522.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:32.944Z" UpdatedDate="2014-02-04T05:49:33.360Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_752833835.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:31.703Z" UpdatedDate="2014-02-04T05:49:32.059Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_728112962.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:30.570Z" UpdatedDate="2014-02-04T05:49:30.781Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_820341604.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:29.366Z" UpdatedDate="2014-02-04T05:49:29.730Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_624263686.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:27.763Z" UpdatedDate="2014-02-04T05:49:28.131Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_294984937.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:26.208Z" UpdatedDate="2014-02-04T05:49:26.452Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_398739433.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:24.770Z" UpdatedDate="2014-02-04T05:49:25.087Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_254706473.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:22.935Z" UpdatedDate="2014-02-04T05:49:23.155Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_143442565.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:21.933Z" UpdatedDate="2014-02-04T05:49:22.143Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_466039560.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:20.767Z" UpdatedDate="2014-02-04T05:49:20.983Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_208307791.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:19.443Z" UpdatedDate="2014-02-04T05:49:19.723Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_191613499.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:18.149Z" UpdatedDate="2014-02-04T05:49:18.579Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_820305457.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:16.964Z" UpdatedDate="2014-02-04T05:49:17.206Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_353573038.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:15.725Z" UpdatedDate="2014-02-04T05:49:16.032Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_782839460.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:14.099Z" UpdatedDate="2014-02-04T05:49:14.418Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_130727714.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:11.486Z" UpdatedDate="2014-02-04T05:49:11.678Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_840843300.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:07.116Z" UpdatedDate="2014-02-04T05:49:07.429Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_881245702.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:49:02.516Z" UpdatedDate="2014-02-04T05:49:02.828Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_428321656.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:58.101Z" UpdatedDate="2014-02-04T05:48:58.435Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_333580777.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:53.769Z" UpdatedDate="2014-02-04T05:48:54.087Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_763869189.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:49.244Z" UpdatedDate="2014-02-04T05:48:49.562Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_232404193.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:45.270Z" UpdatedDate="2014-02-04T05:48:45.477Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_115198647.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:40.979Z" UpdatedDate="2014-02-04T05:48:41.312Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_127095386.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:36.621Z" UpdatedDate="2014-02-04T05:48:36.916Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_925759140.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:32.390Z" UpdatedDate="2014-02-04T05:48:32.603Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_955954857.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:27.887Z" UpdatedDate="2014-02-04T05:48:28.187Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_206495564.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:23.128Z" UpdatedDate="2014-02-04T05:48:23.427Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_416253870.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:18.744Z" UpdatedDate="2014-02-04T05:48:19.064Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_484752917.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:13.915Z" UpdatedDate="2014-02-04T05:48:14.230Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_459476556.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:09.985Z" UpdatedDate="2014-02-04T05:48:10.281Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_648769571.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:05.589Z" UpdatedDate="2014-02-04T05:48:05.872Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_706512954.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:02.736Z" UpdatedDate="2014-02-04T05:48:03.035Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_880935269.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:01.432Z" UpdatedDate="2014-02-04T05:48:01.714Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_488283540.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:48:00.318Z" UpdatedDate="2014-02-04T05:48:00.717Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_202107478.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:59.327Z" UpdatedDate="2014-02-04T05:47:59.668Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_907039182.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:58.430Z" UpdatedDate="2014-02-04T05:47:58.628Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_330683627.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:56.950Z" UpdatedDate="2014-02-04T05:47:57.369Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_308511128.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:55.865Z" UpdatedDate="2014-02-04T05:47:56.130Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_450545831.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:54.249Z" UpdatedDate="2014-02-04T05:47:54.512Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_686594066.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:53.155Z" UpdatedDate="2014-02-04T05:47:53.412Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_749885029.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:49.906Z" UpdatedDate="2014-02-04T05:47:50.172Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_565175057.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:44.677Z" UpdatedDate="2014-02-04T05:47:45.099Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_715452682.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:38.735Z" UpdatedDate="2014-02-04T05:47:39.085Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_874381370.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:32.888Z" UpdatedDate="2014-02-04T05:47:33.194Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_794574863.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:27.278Z" UpdatedDate="2014-02-04T05:47:27.545Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_297824001.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:22.123Z" UpdatedDate="2014-02-04T05:47:22.421Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_585431857.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:16.566Z" UpdatedDate="2014-02-04T05:47:16.876Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_800896175.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:10.995Z" UpdatedDate="2014-02-04T05:47:11.320Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_104464319.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:47:05.388Z" UpdatedDate="2014-02-04T05:47:05.650Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_541445967.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:59.987Z" UpdatedDate="2014-02-04T05:47:00.202Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_159482859.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:54.396Z" UpdatedDate="2014-02-04T05:46:54.788Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_803339324.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:48.581Z" UpdatedDate="2014-02-04T05:46:48.997Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_812788899.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:43.425Z" UpdatedDate="2014-02-04T05:46:43.885Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_454088648.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:39.897Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_899000881.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:32.562Z" UpdatedDate="2014-02-04T05:46:33.151Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_568202188.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:28.896Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_242249681.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:21.872Z" UpdatedDate="2014-02-04T05:46:22.460Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_801399898.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:18.516Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_966855391.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:10.355Z" UpdatedDate="2014-02-04T05:46:11.443Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_839174532.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:46:06.932Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_487406906.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:45:51.090Z" UpdatedDate="2014-02-04T05:45:51.524Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_251750410.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:45:47.210Z" UpdatedDate="2014-02-04T05:45:47.537Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_629059675.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:45:39.124Z" UpdatedDate="2014-02-04T05:45:39.947Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_436243791.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:30:42.694Z" UpdatedDate="2014-02-04T05:30:43.005Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_191075760.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:30:35.511Z" UpdatedDate="2014-02-04T05:30:35.749Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_211132070.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:29:53.335Z" UpdatedDate="2014-02-04T05:29:53.618Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_525036366.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:29:46.644Z" UpdatedDate="2014-02-04T05:29:46.931Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:alschema!@:5E7D87C1F5DDFD866A7B8_780418188" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:28:22.084Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234-384312084-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:28:15.400Z" UpdatedDate="2014-02-04T05:28:15.671Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234-754313979-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:28:08.678Z" UpdatedDate="2014-02-04T05:28:08.912Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_971477107.txt   " ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:28:01.966Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-726572215-%3AF5DD%3A-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:27:54.188Z" UpdatedDate="2014-02-04T05:27:54.480Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-459703522-F5DD-9ABC-DEF0-8%3AABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:27:47.181Z" UpdatedDate="2014-02-04T05:27:47.840Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-%3A184632799-F5DD-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:27:40.376Z" UpdatedDate="2014-02-04T05:27:40.816Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-X:1234-921743881-F5DD-9ABC-DEF0-8:ABCD" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:27:32.831Z" UpdatedDate="2014-02-04T05:27:33.332Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:%3A1234-%3A476369413-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:27:25.483Z" UpdatedDate="2014-02-04T05:27:25.745Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234-794570515-F5DD-9ABC-DEF0-8%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:27:19.183Z" UpdatedDate="2014-02-04T05:27:19.670Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234%3A-945672384-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:27:12.070Z" UpdatedDate="2014-02-04T05:27:12.490Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR-S:1234-162788662-F5DD-9ABC-DEF0-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:27:05.666Z" UpdatedDate="2014-02-04T05:27:06.141Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:baseline:ABCD:%3A929389885000H%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:26:57.654Z" UpdatedDate="2014-02-04T05:26:58.729Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:baseline:ABCD742807863000H%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:26:51.098Z" UpdatedDate="2014-02-04T05:26:51.427Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:baseline:ABCD%3A516063279000H:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:26:44.313Z" UpdatedDate="2014-02-04T05:26:44.711Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:baseline:ABCD444432050000H:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:26:36.995Z" UpdatedDate="2014-02-04T05:26:37.368Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.co.uk%3A%2Folympics%3A%2F:790567201" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:26:28.453Z" UpdatedDate="2014-02-04T05:26:28.957Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.co.uk%2F%3Aolympics%2F643212867" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:26:21.804Z" UpdatedDate="2014-02-04T05:26:22.302Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.co.uk%3A%2Folympics:%2F908467183" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:26:14.844Z" UpdatedDate="2014-02-04T05:26:15.170Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.:co.uk%2Folympics%2F512887019" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:26:07.600Z" UpdatedDate="2014-02-04T05:26:08.117Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:URI:http:%2F%2F%3A%3Awww.example.org%2FresourceNumber841772996.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:25:59.631Z" UpdatedDate="2014-02-04T05:26:00.144Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:URI:http%3A%2F%2Fwww.example.org%2FresourceNumber641460237.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:25:53.109Z" UpdatedDate="2014-02-04T05:25:53.497Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:URI:http:%2F%2F%3Awww.example.org%2FresourceNumber361092609.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:25:46.164Z" UpdatedDate="2014-02-04T05:25:46.548Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:URI:http:%2F%2Fwww.example.org%2FresourceNumber877009349.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:25:39.277Z" UpdatedDate="2014-02-04T05:25:39.631Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR:10.123%2F1234-5678-9ABC-DEF0-K:880822483%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:59.288Z" UpdatedDate="2014-02-04T05:24:59.644Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR:10.123%2F1234-5678-9ABC-DEF0-K:705689797" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:52.362Z" UpdatedDate="2014-02-04T05:24:52.700Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR:10.123%2F1234-5678-%3A9ABC-DEF0-K:571284206" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:45.672Z" UpdatedDate="2014-02-04T05:24:45.872Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR:10.123%2F1234-5678-9ABC-DEF0-K:787342472" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:38.362Z" UpdatedDate="2014-02-04T05:24:38.567Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISMN:979%3A-0-%3A795650244-0043-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:30.670Z" UpdatedDate="2014-02-04T05:24:31.158Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISMN:979-0-792823042-0043-8%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:23.247Z" UpdatedDate="2014-02-04T05:24:23.619Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISMN:979-0-:504858101-0043-8%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:16.631Z" UpdatedDate="2014-02-04T05:24:17.081Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISMN:979-0-837820964-0043-8:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:09.982Z" UpdatedDate="2014-02-04T05:24:10.366Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:AMG:Romeo%20%26%20Juliet:MD%3APysical%3ACreatebyMDP_825000567" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:24:01.770Z" UpdatedDate="2014-02-04T05:24:02.388Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:AMG:Romeo%20%26%20Juliet%3AMDPysicalCreatebyMDP_367329324" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:23:55.873Z" UpdatedDate="2014-02-04T05:23:56.113Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:AMG:Romeo%20%26%20Juliet:MD%3APysicalCreatebyMDP_589286277" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:23:49.110Z" UpdatedDate="2014-02-04T05:23:49.413Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:AMG:Romeo%20%26%20Juliet:MDPysicalCreatebyMDP_412246035" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:23:42.221Z" UpdatedDate="2014-02-04T05:23:42.481Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TRIB:Sanford%20%26%20Sons:MDPysicalCreatebyMDP_%3A823384220%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:23:34.958Z" UpdatedDate="2014-02-04T05:23:35.208Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TRIB:Sanford%20%26%20Sons%3AMDPysicalCreatebyMDP_171527620" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:23:28.505Z" UpdatedDate="2014-02-04T05:23:28.819Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TRIB:Sanford%20%26%20Sons:%3AMDPysicalCreatebyMDP_511883799" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:23:21.027Z" UpdatedDate="2014-02-04T05:23:21.511Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TRIB:Sanford%20%26%20Sons:MDPysicalCreatebyMDP_140446448" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:23:14.253Z" UpdatedDate="2014-02-04T05:23:14.671Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TVG:Law%20%26%20Order%20%3ACriminal%3A%20Intent:MDPysicalCreatebyMDP_555263591" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:23:00.219Z" UpdatedDate="2014-02-04T05:23:00.605Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TVG:Law%20%26%20Order%20Criminal%20Intent%3AMDPysicalCreatebyMDP_259698153" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:54.248Z" UpdatedDate="2014-02-04T05:22:54.457Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TVG:Law%20%26%20Order%20Criminal%3A%20Intent:MDPysicalCreatebyMDP_785466334" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:47.584Z" UpdatedDate="2014-02-04T05:22:47.850Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TVG:Law%20%26%20Order%20Criminal%20Intent:MDPysicalCreatebyMDP_206807745" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:41.452Z" UpdatedDate="2014-02-04T05:22:41.723Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:IMDB:Romeo%20%26%20Juliet%3AMD%3APysicalCreatebyMDP_480519935" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:33.617Z" UpdatedDate="2014-02-04T05:22:33.902Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:IMDB:Romeo%20%26%20Juliet%3AMDPysicalCreatebyMDP_290298509" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:26.902Z" UpdatedDate="2014-02-04T05:22:27.280Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:IMDB:Romeo%20%26%20Juliet:MDPysical%3ACreatebyMDP_546677457" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:20.541Z" UpdatedDate="2014-02-04T05:22:20.881Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:IMDB:Romeo%20%26%20Juliet:MDPysicalCreatebyMDP_239653588" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:12.922Z" UpdatedDate="2014-02-04T05:22:13.190Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:MUZE:Gone%20with%3A%20the%3A%20Wind:MDPysicalCreatebyMDP_399708928" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:05.814Z" UpdatedDate="2014-02-04T05:22:06.107Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:MUZE:Gone%20with%20the%20Wind%3AMDPysicalCreatebyMDP_609842478" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:22:00.038Z" UpdatedDate="2014-02-04T05:22:00.519Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:MUZE:Gone%20%3Awith%20the%20Wind:MDPysicalCreatebyMDP_478813415%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:21:53.665Z" UpdatedDate="2014-02-04T05:21:54.034Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:MUZE:Gone%20with%20the%20Wind:MDPysicalCreatebyMDP_308338916" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:21:46.680Z" UpdatedDate="2014-02-04T05:21:46.977Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:%3A978-%3A1-74492-479-1970323098:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:21:27.223Z" UpdatedDate="2014-02-04T05:21:27.489Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:978-1-74492-479-1232001605%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:21:20.529Z" UpdatedDate="2014-02-04T05:21:20.831Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:978-1-74492-479-%3A1952926937:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:21:13.296Z" UpdatedDate="2014-02-04T05:21:13.798Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISBN:978-1-74492-479-1156915020:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:21:06.978Z" UpdatedDate="2014-02-04T05:21:07.521Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:%3A0317-6177%3A196960639:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:20:59.129Z" UpdatedDate="2014-02-04T05:20:59.380Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:0317-6177157220294:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:20:52.252Z" UpdatedDate="2014-02-04T05:20:52.580Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:%3A0317-6177340026794:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:20:45.785Z" UpdatedDate="2014-02-04T05:20:46.231Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISSN:0317-6177296779617:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:20:39.317Z" UpdatedDate="2014-02-04T05:20:39.717Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:%3A0A9-%3A580227534-12B4A105-7:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:20:31.463Z" UpdatedDate="2014-02-04T05:20:31.821Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:0A9-%3A652741751-12B4A105-7" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:20:25.456Z" UpdatedDate="2014-02-04T05:20:26.028Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:%3A0A9-954413723-12B4A105-7:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:20:19.054Z" UpdatedDate="2014-02-04T05:20:19.323Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISTC:0A9-875202618-12B4A105-7:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:20:12.969Z" UpdatedDate="2014-02-04T05:20:13.455Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F%3A111851920:%3A" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:19:58.748Z" UpdatedDate="2014-02-04T05:19:59.027Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F53A718660145" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:19:50.832Z" UpdatedDate="2014-02-04T05:19:51.299Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F%3A435944703:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:19:44.616Z" UpdatedDate="2014-02-04T05:19:45.086Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:DOI:10.1000%2F899547730:" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:19:38.410Z" UpdatedDate="2014-02-04T05:19:38.717Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version%3A814131370.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:19:24.866Z" UpdatedDate="2014-02-04T05:19:25.152Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE:ALID%3AVersion%3A206298232.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:19:18.910Z" UpdatedDate="2014-02-04T05:19:19.180Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE%3AALID:Version_247014044.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:19:12.023Z" UpdatedDate="2014-02-04T05:19:12.513Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID:Version_791317329.txt" ContentID="urn:dece:cid:file:WEB_PORTAL_NUMBERS_502442.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:19:05.638Z" UpdatedDate="2014-02-04T05:19:06.091Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:ALSTUDIO%3AVersion460677939" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:57.776Z" UpdatedDate="2014-02-04T05:18:58.874Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:AL%3ASTUDIO:Version%3A133696285" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:51.756Z" UpdatedDate="2014-02-04T05:18:52.457Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:ALSTUDIO:Version%3A158677851" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:45.300Z" UpdatedDate="2014-02-04T05:18:45.864Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:ALSTUDIO:Version271199351" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:39.703Z" UpdatedDate="2014-02-04T05:18:40.187Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ÿ_504724371.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:33.617Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ý_226344345.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:28.160Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_û_728643627.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:22.565Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ù_633692677.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:16.907Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_÷_534864682.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:10.987Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_õ_801011422.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:18:04.960Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ó_269370693.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:59.090Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ñ_833112639.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:51.456Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ï_131864253.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:44.628Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_í_974491493.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:39.068Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ë_959545775.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:33.786Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_é_574710226.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:27.199Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ç_992316634.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:21.724Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_å_891907838.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:15.741Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ã_498907112.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:09.899Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_á_846468869.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:17:04.617Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ß_239841829.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:58.683Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ý_993956244.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:52.356Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Û_844980495.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:46.732Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ù_975353117.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:41.056Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_×_784689603.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:35.780Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Õ_858678777.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:30.454Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ó_133074636.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:24.940Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ñ_259425970.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:19.194Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ï_534556385.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:13.628Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Í_754504110.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:08.495Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ë_242086251.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:16:03.225Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_É_162829782.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:57.806Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ç_316903933.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:51.531Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Å_567633518.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:46.029Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ã_265879425.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:40.710Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Á_915447046.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:34.814Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¿_829633530.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:29.408Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_½_781386426.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:23.403Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_»_491222532.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:18.468Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¹_872014448.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:13.279Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_•_296340578.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:08.109Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_µ_891768768.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:15:02.285Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_³_146770249.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:56.385Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_±_936689613.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:50.506Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¯_497805652.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:45.077Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¬_374158989.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:39.731Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_«_165058236.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:34.131Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_©_834031047.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:28.573Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_§_406129940.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:23.196Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¥_332497140.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:17.729Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_£_404100041.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:12.380Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¡_618822712.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:07.213Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ÿ_550918993.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:14:01.408Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__759684485.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:56.301Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_›_439796239.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:50.957Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_™_815141400.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:45.891Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_—_284136414.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:40.880Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_•_766239611.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:35.661Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_“_670353410.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:29.894Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‘_389149366.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:24.418Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__385156986.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:19.268Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__760043177.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:13.621Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‹_711990996.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:07.948Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‰_795068684.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:13:02.258Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‡_635472278.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:57.131Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_…_544469488.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:52.410Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ƒ_799710352.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:46.921Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__777833782.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:42.003Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__339007868.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:36.552Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_}_752734770.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:31.409Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_þ_528924438.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:26.319Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ü_987073079.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:20.778Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ú_217103139.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:15.772Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ø_115993984.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:10.226Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ö_701395157.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:12:03.872Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ô_770702325.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:58.883Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ò_500692834.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:53.606Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ð_318051471.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:48.736Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_î_437791394.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:43.110Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ì_935453776.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:37.531Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ê_455916754.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:32.200Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_è_470597162.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:27.038Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_æ_878200344.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:22.483Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ä_943924822.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:17.154Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_â_136140819.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:11.605Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_à_714933584.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:06.365Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Þ_388208113.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:11:01.328Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ü_950412519.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:56.535Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ú_268642493.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:51.763Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ø_859549958.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:46.309Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ö_516898803.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:40.960Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ô_404039359.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:36.265Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ò_696945919.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:31.229Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ð_597456129.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:26.739Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Î_103676552.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:22.066Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ì_895701220.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:17.478Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ê_439760231.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:12.568Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_È_518831380.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:07.640Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Æ_452593217.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:10:02.717Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ä_380457448.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:57.771Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Â_728995890.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:52.701Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_À_572177388.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:47.530Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¾_803283382.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:43.132Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¼_832774541.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:38.558Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_º_223569022.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:33.920Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¸_357934722.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:29.261Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¶_499859416.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:24.310Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_´_330755021.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:19.676Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_²_190316011.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:14.656Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_°_474098505.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:10.346Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_®_406551779.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:05.544Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¬_157730322.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:09:00.912Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ª_595308420.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:56.347Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¨_627912056.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:51.706Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¦_198094147.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:46.863Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¤_377624850.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:42.149Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_¢_722427535.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:37.743Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ _809286203.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:33.386Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ž_969711063.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:28.880Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_œ_451484277.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:24.299Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_š_654457668.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:19.566Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_˜_807932536.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:14.628Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_–_832735782.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:10.284Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_”_543484517.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:05.964Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_’_290150135.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:08:01.419Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version__772214388.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:56.561Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Ž_495450913.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:52.484Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Œ_322751950.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:48.140Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_Š_687834601.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:43.670Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ˆ_474529896.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:38.886Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_†_772677029.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:34.616Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_„_231795135.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:29.833Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_‚_187633752.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:25.758Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_€_373001584.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:21.283Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_~_587431499.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:16.922Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_π_470940763.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:12.478Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_{_131578924.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:08.140Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_|_694241277.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:07:01.806Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_%25_578496834.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:57.042Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_ _626998235.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:52.654Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:file:EXAMPLE_ALID_Version_831958202.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:47.664Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:upc:036000932850" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:33.336Z" UpdatedDate="2014-02-04T05:06:33.759Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:cidf:hdl:1735.00A0%2F913296615FF" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:27.467Z" UpdatedDate="2014-02-04T05:06:27.857Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:smpte-umid:78.47.69.79.01.01.01.01.01.01.01.00.00.00.00.00" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:22.449Z" UpdatedDate="2014-02-04T05:06:22.979Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:gtin:10614141551887" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:17.435Z" UpdatedDate="2014-02-04T05:06:17.978Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:crid:%2F%2Fbbc.co.uk%2Folympics%2F911652654" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:12.474Z" UpdatedDate="2014-02-04T05:06:12.855Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:gtin:10614141719447" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:06:07.878Z" UpdatedDate="2014-02-04T05:06:08.272Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:EIDR:10.123%2F1234-5678-9ABC-DEF0-K:250449670" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:47.034Z" UpdatedDate="2014-02-04T05:05:47.242Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISMN:979-0-842466442-0043-8" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:41.553Z" UpdatedDate="2014-02-04T05:05:42.003Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:org:WBUK:2003261x6000008936xEST_730844711" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:36.090Z" UpdatedDate="2014-02-04T05:05:36.753Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:AMG:Romeo%20%26%20Juliet:MDPysicalCreatebyMDP_949444667" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:30.867Z" UpdatedDate="2014-02-04T05:05:31.190Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TRIB:Sanford%20%26%20Sons:MDPysicalCreatebyMDP_169708787" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:26.194Z" UpdatedDate="2014-02-04T05:05:26.690Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:ISAN:1234-1234-7962-0200-8-0000-0000-F" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:20.815Z" UpdatedDate="2014-02-04T05:05:21.333Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:TVG:Law%20%26%20Order%20Criminal%20Intent:MDPysicalCreatebyMDP_107243895" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:16.012Z" UpdatedDate="2014-02-04T05:05:16.599Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:IMDB:Romeo%20%26%20Juliet:MDPysicalCreatebyMDP_567579267" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:10.876Z" UpdatedDate="2014-02-04T05:05:11.275Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:MUZE:Gone%20with%20the%20Wind:MDPysicalCreatebyMDP_911820363" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:06.006Z" UpdatedDate="2014-02-04T05:05:06.698Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:UUID:121AC628-D92E-1D6D-4971-25DC4075D842" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:05:01.343Z" UpdatedDate="2014-02-04T05:05:01.779Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:GRID:A1-2425G-A297827719-M" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:04:55.927Z" UpdatedDate="2014-02-04T05:04:56.589Z"/>
   <dece:LogicalAssetReference ALID="urn:dece:alid:URI:http:%2F%2Fwww.example.org%2FresourceNumber104451958.txt" ContentID="urn:dece:cid:file:METADATA_CID_DONT_TOUCH_1.txt" CurrentStatus="urn:dece:type:status:active" CreatedDate="2014-02-04T05:04:51.488Z" UpdatedDate="2014-02-04T05:04:51.773Z"/>
</dece:LogicalAssetList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:cid:file:A_File_Name_with_NUMBERS_245669567.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A593532507</con:value></con:property><con:property><con:name>ALID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:alid:file:EXAMPLE_ALID_Version_718125343.txt</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\ALL_CODES\Git\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"06008ACD4C1673A1E0530F991F0AB87D:5E119B9F"</con:value></con:property><con:property><con:name>Expires</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Thu, 23 Oct 2014 09:28:18 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Wed, 22 Oct 2014 09:26:39 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">t=1413970098 VEd4sgofmQsAACP2EcgAAAAj urn:dece:org:org:dece:ISC_RET 10.31.153.42</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Accept-Encoding</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>35c507bc-8728-42fa-b491-a4a7652cd49b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Random_Number_Generator_CID" searchProperties="true" id="e32f0de0-eba0-4211-b6cc-df6ba1cbab14"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="176221f8-e2c8-4118-b7a7-b1a179f2c7c8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("CID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("randomUpperLowerURN",null);
tC.setPropertyValue("randomUpperLowerURN_ReturnValue",null);


tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="8f47531e-7326-43c8-a0fd-b79b1d0ae492"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("CID_GET_DELETE",callTC.getPropertyValue("CID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("randomUpperLowerURN",callTC.getPropertyValue("randomUpperLowerURN"));

tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("encodedparam1",callTC.getPropertyValue("encodedparam1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Number" id="d6752163-f326-45db-bdfd-0e15cb845d84"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
log.info callTCname
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
log.info callTC
def random = new Random();
def randomIntId = random.nextInt(999999999-100000001+1)+100000001;
log.info randomIntId
tC.setPropertyValue("RandomNumberGenerated", randomIntId.toString());
def randomNumberGenerated = context.expand( '${#TestCase#RandomNumberGenerated}' )
callTC.setPropertyValue("RandomNumberGenerated", randomNumberGenerated);

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )
//
//def r4Profile = context.expand( '${#Project#R4Profile}' )
//def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
//def r3Profile = context.expand( '${#Project#R3Profile}' )
//def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def cID = context.expand( '${#TestCase#CID}' )
log.info cID;


if(rEST_API_Version=="1/07" || rEST_API_Version=="1/11" || rEST_API_Version=="2015/02")

{

//tP.setPropertyValue("Profile", r4Profile);
//tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "CID = "+cID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<cID.length(); j++ )
		{
   				if( cID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=cID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitcid=cID.split(":",2);
log.info splitcid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: cID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("CID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def cID_GET_DELETE = context.expand( '${#TestCase#CID_GET_DELETE}' )
log.info cID_GET_DELETE
callTC.setPropertyValue("CID_GET_DELETE", cID_GET_DELETE);
tP.setPropertyValue("CID", cID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("CID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def cID_GET_DELETE = context.expand( '${#TestCase#CID_GET_DELETE}' )
log.info cID_GET_DELETE
callTC.setPropertyValue("CID_GET_DELETE", cID_GET_DELETE);
tP.setPropertyValue("CID", cID_GET_DELETE);     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
//	tP.setPropertyValue("Profile", r3Profile);
//	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "CID = "+cID

String container = cID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("CID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def cID_GET_DELETE = context.expand( '${#TestCase#CID_GET_DELETE}' )
log.info cID_GET_DELETE
callTC.setPropertyValue("CID_GET_DELETE", cID_GET_DELETE);
	
}
else {

tC.setPropertyValue("CID_GET_DELETE", URLEncoder.encode (cID, "UTF-8"));
def cID_GET_DELETE = context.expand( '${#TestCase#CID_GET_DELETE}' )
log.info cID_GET_DELETE
callTC.setPropertyValue("CID_GET_DELETE", cID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Create CID-APID-ALID</con:value></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>295873655</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Altnode_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value>urn:dece:bid:FILE:mystudioVersion_170997.txt</con:value></con:property><con:property><con:name>BID</con:name><con:value>urn:dece:bid:FILE:mystudioVersion_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated_1</con:name><con:value>48</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>randomUpperLowerURN</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>randomUpperLowerURN_ReturnValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c6f668e7-5a8a-413b-a9f8-cedb5aab295d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Random_Number_Generator_APID" searchProperties="true" id="11a86067-4931-4d8d-a9af-42be0534503b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e70bedb4-e692-4f3d-b594-2c979989af25"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="83dc9020-09e2-4768-a927-0c3ddf69c1d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));


tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("Altnode_oid",callTC.getPropertyValue("Altnode_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Number" id="9f8d5737-3bea-4642-b6a7-027c4f655ed5"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
log.info callTCname
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
log.info callTC
def random = new Random();
def randomIntId = random.nextInt(999999999-100000001+1)+100000001;
log.info randomIntId
tC.setPropertyValue("RandomNumberGenerated", randomIntId.toString());
def randomNumberGenerated = context.expand( '${#TestCase#RandomNumberGenerated}' )
callTC.setPropertyValue("RandomNumberGenerated", randomNumberGenerated);

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )
//
//def r4Profile = context.expand( '${#Project#R4Profile}' )
//def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
//def r3Profile = context.expand( '${#Project#R3Profile}' )
//def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aPID = context.expand( '${#TestCase#APID}' )


if(rEST_API_Version=="1/07" || rEST_API_Version=="1/11" || rEST_API_Version=="2015/02")

{

//tP.setPropertyValue("Profile", r4Profile);
//tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "APID = "+aPID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aPID.length(); j++ )
		{
   				if( aPID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aPID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitapid=aPID.split(":",2);
log.info splitapid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aPID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("APID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aPID_GET_DELETE = context.expand( '${#TestCase#APID_GET_DELETE}' )
log.info aPID_GET_DELETE
callTC.setPropertyValue("APID_GET_DELETE", aPID_GET_DELETE);
tP.setPropertyValue("APID_GET_DELETE", aPID_GET_DELETE);

 
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("APID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aPID_GET_DELETE = context.expand( '${#TestCase#APID_GET_DELETE}' )
log.info aPID_GET_DELETE
callTC.setPropertyValue("APID_GET_DELETE", aPID_GET_DELETE);
tP.setPropertyValue("APID_GET_DELETE", aPID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
//	tP.setPropertyValue("Profile", r3Profile);
//	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "APID = "+aPID

String container = aPID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("APID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aPID_GET_DELETE = context.expand( '${#TestCase#APID_GET_DELETE}' )
log.info aPID_GET_DELETE
callTC.setPropertyValue("APID_GET_DELETE", aPID_GET_DELETE);
	
}
else {

tC.setPropertyValue("APID_GET_DELETE", URLEncoder.encode (aPID, "UTF-8"));
def aPID_GET_DELETE = context.expand( '${#TestCase#APID_GET_DELETE}' )
log.info aPID_GET_DELETE
callTC.setPropertyValue("APID_GET_DELETE", aPID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Create CID-APID-ALID</con:value></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>653478442</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_251063.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A653478442</con:value></con:property><con:property><con:name>Altnode_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c6f668e7-5a8a-413b-a9f8-cedb5aab295d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Random_Number_Generator_ReplacedAPID" searchProperties="true" id="026aee24-d668-42d1-ba06-783e84939710"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ed89468e-644a-4710-b7d5-78e745576998"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="c16c58e9-4752-44a0-863e-bf1a4472ed86"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));


tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("Altnode_oid",callTC.getPropertyValue("Altnode_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Number" id="ce65ecfb-7a62-4ebf-9ac3-7a7f20df696b"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
log.info callTCname
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
log.info callTC
def random = new Random();
def randomIntId = random.nextInt(999999999-100000001+1)+100000001;
log.info randomIntId
tC.setPropertyValue("RandomNumberGenerated", randomIntId.toString());
def randomNumberGenerated = context.expand( '${#TestCase#RandomNumberGenerated}' )
callTC.setPropertyValue("RandomNumberGenerated", randomNumberGenerated);

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )
//
//def r4Profile = context.expand( '${#Project#R4Profile}' )
//def r4APID_GET_DELETE_REPLACED = context.expand( '${#Project#R4APID_GET_DELETE_REPLACED}' )
//def r3Profile = context.expand( '${#Project#R3Profile}' )
//def r3APID_GET_DELETE_REPLACED = context.expand( '${#Project#R3APID_GET_DELETE_REPLACED}' )
def aPID = context.expand( '${#TestCase#APID}' )


if(rEST_API_Version=="1/07" || rEST_API_Version=="1/11" || rEST_API_Version=="2015/02")

{
//tP.setPropertyValue("Profile", r4Profile);
//tP.setPropertyValue("APID_GET_DELETE_REPLACED", r4APID_GET_DELETE_REPLACED)	
//${Groovy Script to encode R4-APID}
log.info "APID = "+aPID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aPID.length(); j++ )
		{
   				if( aPID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aPID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitapid=aPID.split(":",2);
log.info splitapid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aPID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("APID_GET_DELETE_REPLACED",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def APID_GET_DELETE_REPLACED = context.expand( '${#TestCase#APID_GET_DELETE_REPLACED}' )
log.info APID_GET_DELETE_REPLACED
callTC.setPropertyValue("APID_GET_DELETE_REPLACED", APID_GET_DELETE_REPLACED);
tP.setPropertyValue("APID_GET_DELETE_REPLACED", APID_GET_DELETE_REPLACED);

 
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("APID_GET_DELETE_REPLACED",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def APID_GET_DELETE_REPLACED = context.expand( '${#TestCase#APID_GET_DELETE_REPLACED}' )
log.info APID_GET_DELETE_REPLACED
callTC.setPropertyValue("APID_GET_DELETE_REPLACED", APID_GET_DELETE_REPLACED);
tP.setPropertyValue("APID_GET_DELETE_REPLACED", APID_GET_DELETE_REPLACED);

     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
//	tP.setPropertyValue("Profile", r3Profile);
//	tP.setPropertyValue("APID_GET_DELETE_REPLACED", r3APID_GET_DELETE_REPLACED);	
//ALID (not encoded) to be used in the request xml
log.info "APID = "+aPID

String container = aPID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("APID_GET_DELETE_REPLACED", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def APID_GET_DELETE_REPLACED = context.expand( '${#TestCase#APID_GET_DELETE_REPLACED}' )
log.info APID_GET_DELETE_REPLACED
callTC.setPropertyValue("APID_GET_DELETE_REPLACED", APID_GET_DELETE_REPLACED);
	
}
else {

tC.setPropertyValue("APID_GET_DELETE_REPLACED", URLEncoder.encode (aPID, "UTF-8"));
def APID_GET_DELETE_REPLACED = context.expand( '${#TestCase#APID_GET_DELETE_REPLACED}' )
log.info APID_GET_DELETE_REPLACED
callTC.setPropertyValue("APID_GET_DELETE_REPLACED", APID_GET_DELETE_REPLACED);
}
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Create CID-APID-ALID</con:value></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>715043276</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_251063.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A653478442</con:value></con:property><con:property><con:name>Altnode_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A715043276</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c6f668e7-5a8a-413b-a9f8-cedb5aab295d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Random_Number_Generator_RecalledAPID" searchProperties="true" id="8f9c008c-c603-40e8-a814-7e48eb02226e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="af54eedf-3375-4d16-81f4-a560262c8688"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("APID_GET_DELETE",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="fa9efdc0-db11-4689-8415-1c48a49183c7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("APID_GET_DELETE",callTC.getPropertyValue("APID_GET_DELETE"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));


tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("Altnode_oid",callTC.getPropertyValue("Altnode_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Number" id="df3b47e9-4843-46ec-a77c-db9ad75db6f6"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
log.info callTCname
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
log.info callTC
def random = new Random();
def randomIntId = random.nextInt(999999999-100000001+1)+100000001;
log.info randomIntId
tC.setPropertyValue("RandomNumberGenerated", randomIntId.toString());
def randomNumberGenerated = context.expand( '${#TestCase#RandomNumberGenerated}' )
callTC.setPropertyValue("RandomNumberGenerated", randomNumberGenerated);

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )
//
//def r4Profile = context.expand( '${#Project#R4Profile}' )
//def r4APID_GET_DELETE_RECALLED = context.expand( '${#Project#R4APID_GET_DELETE_RECALLED}' )
//def r3Profile = context.expand( '${#Project#R3Profile}' )
//def r3APID_GET_DELETE_RECALLED = context.expand( '${#Project#R3APID_GET_DELETE_RECALLED}' )
def aPID = context.expand( '${#TestCase#APID}' )


if(rEST_API_Version=="1/07" || rEST_API_Version=="1/11" || rEST_API_Version=="2015/02")

{

//tP.setPropertyValue("Profile", r4Profile);
//tP.setPropertyValue("APID_GET_DELETE_RECALLED", r4APID_GET_DELETE_RECALLED)	
//${Groovy Script to encode R4-APID}
log.info "APID = "+aPID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aPID.length(); j++ )
		{
   				if( aPID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aPID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitapid=aPID.split(":",2);
log.info splitapid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aPID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("APID_GET_DELETE_RECALLED",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def APID_GET_DELETE_RECALLED = context.expand( '${#TestCase#APID_GET_DELETE_RECALLED}' )
log.info APID_GET_DELETE_RECALLED
callTC.setPropertyValue("APID_GET_DELETE_RECALLED", APID_GET_DELETE_RECALLED);
tP.setPropertyValue("APID_GET_DELETE_RECALLED", APID_GET_DELETE_RECALLED);

 
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("APID_GET_DELETE_RECALLED",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def APID_GET_DELETE_RECALLED = context.expand( '${#TestCase#APID_GET_DELETE_RECALLED}' )
log.info APID_GET_DELETE_RECALLED
callTC.setPropertyValue("APID_GET_DELETE_RECALLED", APID_GET_DELETE_RECALLED);
tP.setPropertyValue("APID_GET_DELETE_RECALLED", APID_GET_DELETE_RECALLED);

     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
//	tP.setPropertyValue("Profile", r3Profile);
//	tP.setPropertyValue("APID_GET_DELETE_RECALLED", r3APID_GET_DELETE_RECALLED);	
//ALID (not encoded) to be used in the request xml
log.info "APID = "+aPID

String container = aPID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("APID_GET_DELETE_RECALLED", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def APID_GET_DELETE_RECALLED = context.expand( '${#TestCase#APID_GET_DELETE_RECALLED}' )
log.info APID_GET_DELETE_RECALLED
callTC.setPropertyValue("APID_GET_DELETE_RECALLED", APID_GET_DELETE_RECALLED);
	
}
else {

tC.setPropertyValue("APID_GET_DELETE_RECALLED", URLEncoder.encode (aPID, "UTF-8"));
def APID_GET_DELETE_RECALLED = context.expand( '${#TestCase#APID_GET_DELETE_RECALLED}' )
log.info APID_GET_DELETE_RECALLED
callTC.setPropertyValue("APID_GET_DELETE_RECALLED", APID_GET_DELETE_RECALLED);
}
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Create CID-APID-ALID</con:value></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>309286894</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_251063.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A653478442</con:value></con:property><con:property><con:name>Altnode_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A309286894</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c6f668e7-5a8a-413b-a9f8-cedb5aab295d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Random_Number_Generator_ALID" searchProperties="true" id="6bd109c3-8fcf-4f8c-b314-7d6f0ee41e7f"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ba2d9ba4-e49b-47f9-b744-8f7ba6e4c02d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("ALID_GET_DELETE",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="0c521f25-43d0-49a1-8e98-84c9a1713496"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("ALID_GET_DELETE",callTC.getPropertyValue("ALID_GET_DELETE"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));


/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "07178681") {
	tC.setPropertyValue("nodeid","07178681");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Number" id="c1903956-c9ba-4690-852f-d75f357328cb"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
log.info callTCname
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
log.info callTC
def random = new Random();
def randomIntId = random.nextInt(999999999-100000001+1)+100000001;
log.info randomIntId
tC.setPropertyValue("RandomNumberGenerated", randomIntId.toString());
def randomNumberGenerated = context.expand( '${#TestCase#RandomNumberGenerated}' )
callTC.setPropertyValue("RandomNumberGenerated", randomNumberGenerated);

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )

//def r4Profile = context.expand( '${#Project#R4Profile}' )
//def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
//def r3Profile = context.expand( '${#Project#R3Profile}' )
//def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def aLID = context.expand( '${#TestCase#ALID}' )


if(rEST_API_Version=="1/07" || rEST_API_Version=="1/11" || rEST_API_Version=="2015/02")

{

//tP.setPropertyValue("Profile", r4Profile);
//tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "ALID = "+aLID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<aLID.length(); j++ )
		{
   				if( aLID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=aLID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitalid=aLID.split(":",2);
log.info splitalid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: aLID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
callTC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("ALID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
callTC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
	tP.setPropertyValue("Profile", r3Profile);
	//tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "ALID = "+aLID

String container = aLID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
callTC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
	
}
else {

tC.setPropertyValue("ALID_GET_DELETE", URLEncoder.encode (aLID, "UTF-8"));
def aLID_GET_DELETE = context.expand( '${#TestCase#ALID_GET_DELETE}' )
log.info aLID_GET_DELETE
callTC.setPropertyValue("ALID_GET_DELETE", aLID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Create CID-APID-ALID</con:value></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>786957482</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c6f668e7-5a8a-413b-a9f8-cedb5aab295d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Random_Number_Generator_BID" searchProperties="true" id="248ffb3d-e999-421a-853b-dd04a235873b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="61d54d90-adaa-461b-8953-e213d232f7da"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("rtrnodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("BID",null);
tC.setPropertyValue("BID_GET_DELETE",null);
tC.setPropertyValue("CID",null);
tC.setPropertyValue("APID",null);
tC.setPropertyValue("ALID",null);
tC.setPropertyValue("Profile",null);
tC.setPropertyValue("RandomNumberGenerated",null);
tC.setPropertyValue("RandomNumberGenerated_1",null);

tC.setPropertyValue("ExpectedReturnCodeCreate",null);
tC.setPropertyValue("ExpectedReturnCodeUpdate",null);
tC.setPropertyValue("ExpectedReturnCodeGet",null);
tC.setPropertyValue("ExpectedReturnCodeDelete",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="8987c1b1-ce29-4317-b5eb-616a72bc1898"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("rtrnodeid",callTC.getPropertyValue("rtrnodeid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("AccountID",callTC.getPropertyValue("AccountID"));
tC.setPropertyValue("BID",callTC.getPropertyValue("BID"));
tC.setPropertyValue("BID_GET_DELETE",callTC.getPropertyValue("BID_GET_DELETE"));
tC.setPropertyValue("CID",callTC.getPropertyValue("CID"));
tC.setPropertyValue("APID",callTC.getPropertyValue("APID"));
tC.setPropertyValue("ALID",callTC.getPropertyValue("ALID"));
tC.setPropertyValue("Profile",callTC.getPropertyValue("Profile"));
tC.setPropertyValue("RandomNumberGenerated",callTC.getPropertyValue("RandomNumberGenerated"));
tC.setPropertyValue("RandomNumberGenerated_1",callTC.getPropertyValue("RandomNumberGenerated_1"));
tC.setPropertyValue("encodedparam",callTC.getPropertyValue("encodedparam"));
tC.setPropertyValue("ExpectedReturnCodeCreate",callTC.getPropertyValue("expectedreturncodeCREATE"));
tC.setPropertyValue("ExpectedReturnCodeUpdate",callTC.getPropertyValue("expectedreturncodeUPDATE"));
tC.setPropertyValue("ExpectedReturnCodeGet",callTC.getPropertyValue("expectedreturncodeGET"));
tC.setPropertyValue("ExpectedReturnCodeDelete",callTC.getPropertyValue("expectedreturncodeDELETE"));
tC.setPropertyValue("TitleDisplay19",callTC.getPropertyValue("TitleDisplay19"));



</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Number" id="ed6640ec-3814-4a05-bb25-38e073eaddba"><con:settings/><con:config><script><![CDATA[//Random Number Generator

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
log.info callTCname
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
log.info callTC
def random = new Random();
def randomIntId = random.nextInt(999999999-100000001+1)+100000001;
log.info randomIntId
tC.setPropertyValue("RandomNumberGenerated", randomIntId.toString());
def randomNumberGenerated = context.expand( '${#TestCase#RandomNumberGenerated}' )
callTC.setPropertyValue("RandomNumberGenerated", randomNumberGenerated);

/* ${Groovy Script to encode ALID} */


import org.apache.commons.lang.StringUtils;
def rEST_API_Version = context.expand( '${#Project#versionMajor}/${#Project#versionMinor}' )
//
//def r4Profile = context.expand( '${#Project#R4Profile}' )
//def r4APID_GET_DELETE = context.expand( '${#Project#R4APID_GET_DELETE}' )
//def r3Profile = context.expand( '${#Project#R3Profile}' )
//def r3APID_GET_DELETE = context.expand( '${#Project#R3APID_GET_DELETE}' )
def bID = context.expand( '${#TestCase#BID}' )


if(rEST_API_Version=="1/07" || rEST_API_Version=="1/11" || rEST_API_Version=="2015/02")

{

//tP.setPropertyValue("Profile", r4Profile);
//tP.setPropertyValue("APID_GET_DELETE", r4APID_GET_DELETE)	
//${Groovy Script to encode R4-APID}
log.info "BID = "+bID

int indexofforthcolon;
int counter = 0;
		for( int j=0; j<bID.length(); j++ )
		{
   				if( bID.charAt(j) == ':' ) 
   				{
       					 counter++;
						if(counter==4)
						{
							indexofforthcolon=j;
						}	 
   				} 
		}
		
String firstsubpart;
firstsubpart=bID.substring(0,indexofforthcolon);
log.info firstsubpart;
String[] splitbid=bID.split(":",2);
log.info splitbid.toString();
String content = "&amp;";
log.info  "Return Value :" 
      for (String retval: bID.split(":", 5))
      {
      //log.info retval
      String container = retval;
      boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
	if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
      log.info URLEncoder.encode (tmpString, "UTF-8")
   	tC.setPropertyValue("BID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (tmpString, "UTF-8"));
   	def bID_GET_DELETE = context.expand( '${#TestCase#BID_GET_DELETE}' )
log.info bID_GET_DELETE
callTC.setPropertyValue("BID_GET_DELETE", bID_GET_DELETE);
  
    }
    else 
    {
    	log.info URLEncoder.encode (retval, "UTF-8")
    	tC.setPropertyValue("BID_GET_DELETE",firstsubpart+":"+ URLEncoder.encode (retval, "UTF-8"));
    def bID_GET_DELETE = context.expand( '${#TestCase#BID_GET_DELETE}' )
log.info bID_GET_DELETE
callTC.setPropertyValue("BID_GET_DELETE", bID_GET_DELETE);
     
    }
   }    
}


if(rEST_API_Version=="1/06")
{
//	tP.setPropertyValue("Profile", r3Profile);
//	tP.setPropertyValue("APID_GET_DELETE", r3APID_GET_DELETE);	
//ALID (not encoded) to be used in the request xml
log.info "BID = "+bID

String container = bID;
String content = "&amp;";

//Processing the APIDs containing &amp; in its content
boolean containerContainsContent = StringUtils.containsIgnoreCase(container, content);
if(containerContainsContent){
	log.info 'true'
	String tmpString = container.replace(content,"&");
     log.info tmpString
     tC.setPropertyValue("BID_GET_DELETE", URLEncoder.encode (tmpString, "UTF-8"));

//Encoded ALID (ALID_GET_DELETE) to be used in the URL for Update/Get/Delete operations after removing &amp; from it.

def bID_GET_DELETE = context.expand( '${#TestCase#BID_GET_DELETE}' )
log.info bID_GET_DELETE
callTC.setPropertyValue("BID_GET_DELETE", bID_GET_DELETE);
	
}
else {

tC.setPropertyValue("BID_GET_DELETE", URLEncoder.encode (bID, "UTF-8"));
def bID_GET_DELETE = context.expand( '${#TestCase#BID_GET_DELETE}' )
log.info bID_GET_DELETE
callTC.setPropertyValue("BID_GET_DELETE", bID_GET_DELETE);
}
}]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Sanity_TestCases_Metadata</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite_Metadata</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>707846667</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_251063.txt</con:value></con:property><con:property><con:name>Profile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:SARVAJEET_CID_DONT_TOUCH_1.txt:AUDIO_Number_1</con:value></con:property><con:property><con:name>Altnode_oid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value>urn:dece:bid:file:EXAMPLE_BID_Version_707846667.txt</con:value></con:property><con:property><con:name>BID</con:name><con:value>urn:dece:bid:file:EXAMPLE_BID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>TitleDisplay19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c6f668e7-5a8a-413b-a9f8-cedb5aab295d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="POST - LegacyDeviceAdd" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e76b97aa-647d-4b23-99bc-ace8fbd21beb"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0a56b377-f064-455f-b6b7-bc638cd150a5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeId",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("DeviceID",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="805f024e-7522-43ae-abbc-d3276744cfdb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="eef9f5d4-c4ed-45bd-81bc-3a529667189d"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("POST - LegacyDeviceADD");

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate Random Numner and add Device ID" id="834ba05e-287c-4e1b-8b3c-2a4f4617a067"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def random = new Random();
def randomIntId = random.nextInt(999999-100001+1)+100001;


tP.setPropertyValue("DeviceID", "urn:dece:deviceid:org:dece:" + randomIntId.toString());

log.info " DeviceID for Legacy Device ..... " + tP.getPropertyValue("DeviceID");</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - LegacyDeviceADD" id="cacccd7a-f622-4f1a-8e07-ed5cca68bf34"><con:settings/><con:config service="LegacyDeviceAdd_Retailer" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/LegacyDevice" methodName="POST LegacyDeviceAdd" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - LegacyDeviceADD" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RET_concat.pem" id="ef607333-4f55-477f-b446-dbf926950e6c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:Device IsLegacy="true" DeviceID="${#Project#DeviceID}"
xsi:schemaLocation="http://www.decellc.org/schema/2012/12/dece dece.xsd"
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dece:DisplayName>String</dece:DisplayName>
	<dece:Manufacturer>String</dece:Manufacturer>
	<dece:Model>String</dece:Model>
	<dece:Brand Language="en-us">String</dece:Brand>
	<dece:SerialNo>String</dece:SerialNo>
	<dece:Image MimeType="String" Width="2" Height="2">http://unihidef.edgesuite.net/images/movies/61/11/61115456_840x1200.jpg</dece:Image>
	<dece:PolicyList PolicyListID="urn:dece:">
		<dece:Policy PolicyID="http://unihidef.edgesuite.net/images/movies/61/11/61115456_840x1200.jpg">
			<dece:PolicyClass>urn:dece:</dece:PolicyClass>
			<dece:Resource>http://unihidef.edgesuite.net/images/movies/61/11/61115456_840x1200.jpg</dece:Resource>
			<dece:RequestingEntity>urn:dece:</dece:RequestingEntity>
			<dece:PolicyAuthority>urn:dece:role:coordinator</dece:PolicyAuthority>
			<dece:ResourceStatus>
				<dece:Current CreationDate="2001-12-17T09:30:47Z" CreatedBy="urn:dece:" ModificationDate="2001-12-17T09:30:47Z" DeletionDate="2001-12-17T09:30:47Z" ModifiedBy="urn:dece:" DeletedBy="urn:dece:">
					<dece:Value>urn:dece:type:status:active</dece:Value>
					<dece:Description>String</dece:Description>
				</dece:Current>
				<dece:History>
					<dece:Prior ModificationDate="2001-12-17T09:30:47Z" ModifiedBy="urn:dece:">
						<dece:Value>urn:dece:type:status:active</dece:Value>
						<dece:Description>String</dece:Description>
					</dece:Prior>
				</dece:History>
			</dece:ResourceStatus>
		</dece:Policy>
	</dece:PolicyList>
</dece:Device>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846DDC2C8F4254E0530F991F0A24DE/LegacyDevice</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="ab879179-9cdb-4415-bbcf-820b65bec9c5"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="f8ed2b25-2179-4b37-aea9-15c898cefe8f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - LegacyDeviceADD');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="bc5920b9-c89e-4099-bc28-93d73419395f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = "201";
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;


switch (ExpectedReturnCode) {
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>Legacy Device has been created successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>43</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://lp1.dev.q.uvvu.com:8443/rest/1/11/Account/urn:dece:accountid:org:dece:00846DDC2C8F4254E0530F991F0A24DE/Domain/urn:dece:domainid:dece:1234/Device/urn:dece:deviceid:org:dece:228913</con:value></con:property><con:property><con:name>nodeId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Sanjeet\GitRepo\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GET - LegacyDeviceGet" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4f157b08-6130-403b-b321-8e19330fec77"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="629e5a6b-cd9f-4b80-bf5e-43173a27390d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeId",null);
tC.setPropertyValue("AccountID",null);
tC.setPropertyValue("DeviceID",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="8fd66f6a-30ed-4bac-845a-5e3e220f7fe7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="937454ab-4bb0-4fad-9024-927e65cbc5c5"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("POST - LegacyDeviceGET");

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - LegacyDeviceGET" id="6aff4ef7-065a-4707-b306-215b75a1c9fd"><con:settings/><con:config service="LegacyDeviceAdd_Retailer" methodName="GET LegacyDeviceAdd" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/Domain/{DomainID}/Device/{DeviceID}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - LegacyDeviceGET" mediaType="application/xml" accept="" postQueryString="false" sslKeystore="RET_CS_1_concat.pem" id="53cc985e-e120-4bf7-a259-223d7bac4d35"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!--Build 7.5 Sample XML file generated by XMLSpy versionMinor008 rel. 2 sp1 (http://www.altova.com)-->
<dece:Device UpdatedDate="2001-12-17T09:30:47.0Z" 
CreatedDate="2001-12-17T09:30:47.0Z" 
DeviceID="urn:dece:deviceid:org:dece:${#TestCase#RandomNumberGenerated}"  
xsi:schemaLocation="http://www.decellc.org/schema/2010/10/dece dece.xsd" 
xmlns:dece="http://www.decellc.org/schema/2011/08/coordinator" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dece:DisplayName>String</dece:DisplayName>
	<dece:Brand Language="en-US">String</dece:Brand>
	<dece:Manufacturer Language="en-US">String</dece:Manufacturer>
	<dece:Model>String</dece:Model>
	<dece:SerialNo>String</dece:SerialNo>
	<dece:Image  MimeType="String" Width="3" Height="2">http://www.altova.com</dece:Image>	
	<dece:SponsoringServiceProvider>urn:dece:</dece:SponsoringServiceProvider>			
	<dece:ContentProfileSupport>portabledefinition</dece:ContentProfileSupport>
	<dece:DRMClientList>
		<dece:DRMClient DRMClientID="urn:dece:drmclientid:adobe:${#TestCase#RandomNumberGenerated}" 
			CreationDate="2009-12-17T09:30:47.0Z"  
			DeletionDate="2020-12-17T09:30:47.0Z">
			<dece:DisplayName>String</dece:DisplayName>
			<dece:DRMSupported>urn:dece:drm:OpenMG:0.1</dece:DRMSupported>
			<dece:NativeDRMClientID>UjBsR09EbGhjZ0dTQUxNQUFBUUNBRU1tQ1p0dU1GUXhEUzhi</dece:NativeDRMClientID>
			<dece:DECEProtocolVersion>urn:dece:protocolversion:legacy</dece:DECEProtocolVersion>
			<dece:ResourceStatus>
				<dece:Current>
					<dece:Value>urn:dece:type:status:deleted</dece:Value>
					<dece:Description>2009-14-17T09:30:47.0Z</dece:Description>					
				</dece:Current>
				<dece:History>
					<dece:Prior>
						<dece:Value>urn:dece:type:status:deleted</dece:Value>
						<dece:Description>2009-12-17T09:30:47.0Z</dece:Description>
					</dece:Prior>
				</dece:History>
			</dece:ResourceStatus>
		</dece:DRMClient>
	</dece:DRMClientList>
</dece:Device>]]></con:request><con:originalUri>https://lp1.dev.q.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846DDC2C8F4254E0530F991F0A24DE/Domain/urn:dece:domainid:dece:1234/Device/urn:dece:deviceid:org:dece:228913</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e5b38187-b09a-47a3-85c6-e8b57d522dc2"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@DeviceID]" disabled="true" id="805db506-9c81-4620-abb5-f90cf95ce5de"><con:configuration><path>declare namespace ns1='http://www.decellc.org/schema/2012/12/coordinator';
//ns1:Device[1]/@DeviceID</path><content>urn:dece:deviceid:org:dece:${#TestCase#RandomNumberGenerated}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DeviceID" value="${#Project#DeviceID}"/>
  <con:entry key="DomainID" value="${#Project#DomainID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="6aa33c94-9bb7-44cc-80a5-4dd053c3c92a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - LegacyDeviceGET');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
//	      case "ETag": 
//			ETag = value[0]; 
//			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
//tC.setPropertyValue("ETag", ETag);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="a3b55219-7fb5-4dbb-a046-01533f8d6a9e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode       = "200";
def httpStatus 			= tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract The Response Header ETag" id="2cc94b3d-0ea1-4039-971a-2eca184eb994"><con:settings/><con:config><script>/*Extracting ETag from response and storing it in Project level Property*/
def httpStatus = context.expand( '${#TestCase#httpStatus}' )


if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - LegacyDeviceGET');
def expXML = tStep.httpRequest.response.getResponseContent();

String ETag = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "ETag": 
			ETag = value[0]; 
			break;
	}
}

tP.setPropertyValue("ETag", ETag);
	
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header of unconditional GET" id="3c72662d-f0c6-4805-9e54-0f725780ca23"><con:settings/><con:config><script>
def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - LegacyDeviceGET');
def expXML = tStep.httpRequest.response.getResponseContent();

String Cache_Control ;
String ETag ;
String Expires ;
String Last_Modified ;
String x_Transaction_Info;
String Vary;

/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Cache-Control": 
			Cache_Control = value[0];
			break;
		case "ETag": 
			ETag = value[0]; 
			break;
		case "Expires": 
			Expires = value[0]; 
			break;
		case "Last-Modified": 
			Last_Modified = value[0]; 
			break;
		case "x-Transaction-Info": 
			x_Transaction_Info = value[0]; 
			break;
		case "Vary": 
			Vary = value[0]; 
			break;
		
		
	}
}


tC.setPropertyValue("Cache-Control", Cache_Control);
tC.setPropertyValue("ETag", ETag);
tC.setPropertyValue("Expires", Expires);
tC.setPropertyValue("Last-Modified", Last_Modified);
tC.setPropertyValue("x-Transaction-Info", x_Transaction_Info);
tC.setPropertyValue("Vary", Vary);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Process The  Header Unconditional GET" id="8e380a40-231d-4a16-aabb-9fbee6c54a5f"><con:settings/><con:config><script>def httpStatus = context.expand( '${#TestCase#httpStatus}' )

if(httpStatus=='HTTP/1.1 200 OK')
{
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def Cache_Control=tC.getPropertyValue("Cache-Control")
if(Cache_Control==null)
assert 1==2

def ETag=tC.getPropertyValue("ETag")
if(ETag==null)
assert 1==2

def Expires=tC.getPropertyValue("Expires")
if(Expires==null)
assert 1==2

/*def Last_Modified=tC.getPropertyValue("Last-Modified")
if(Last_Modified==null)
assert 1==2*/

def Lx_Transaction_Info=tC.getPropertyValue("x-Transaction-Info")
if(Lx_Transaction_Info==null)
assert 1==2

def Vary=tC.getPropertyValue("Vary")
if(Vary!='Authorization,Accept-Encoding')
assert 1==2

}</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>662629</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Device DeviceID="urn:dece:deviceid:org:dece:228913" IsLegacy="true" xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <DisplayName>String</DisplayName>
   <Manufacturer>String</Manufacturer>
   <Model>String</Model>
   <Brand Language="en-us">String</Brand>
   <SerialNo>String</SerialNo>
   <Image Height="2" Width="2" MimeType="String">https://d1df5hm1mgv8o5.cloudfront.net/uvvu-images/00846CBE1449424AE0530F991F0A5A94</Image>
   <ResourceStatus>
      <Current CreationDate="2014-08-13T14:17:54.289Z" CreatedBy="urn:dece:org:org:dece:ISC_RET">
         <Value>urn:dece:type:status:active</Value>
         <Description>Legacy Device Created</Description>
      </Current>
   </ResourceStatus>
</Device>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">940</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Sanjeet\GitRepo\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property><con:property><con:name>Cache-Control</con:name><con:value>max-age=86400</con:value></con:property><con:property><con:name>ETag</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">"00846CBCD5FD3091E0530F991F0AEA61:2629154E"</con:value></con:property><con:property><con:name>Expires</con:name><con:value>Thu, 14 Aug 2014 14:17:57 GMT</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Wed, 13 Aug 2014 14:17:54 GMT</con:value></con:property><con:property><con:name>x-Transaction-Info</con:name><con:value>t=1407939477 U@tzlAofmQsAAFKpGmEAAAAM urn:dece:org:org:dece:ISC_RET 192.168.128.102</con:value></con:property><con:property><con:name>Vary</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Authorization,Accept-Encoding</con:value></con:property><con:property><con:name>DomainID</con:name><con:value>urn%3Adece%3Adomainid%3Adece%3A1234</con:value></con:property><con:property><con:name>deviceid_xml</con:name><con:value>urn:dece:deviceid:org:dece:662629</con:value></con:property><con:property><con:name>nodeId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PUT - LegacyDeviceUpdate" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0f05113e-0d78-430e-9a81-c7b20919de89"><con:settings/><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="99f3a5f2-5beb-4c4a-a4af-2a6b132d27d9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="16380d5e-b287-4926-aebe-6d11290f8caf"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PUT - LegacyDevicePUT");

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - LegacyDevicePUT" id="75868040-66ab-478a-9400-37462d187219"><con:settings/><con:config service="LegacyDeviceAdd_Retailer" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/LegacyDevice/{DeviceID}" methodName="PUT LegacyDeviceAdd" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - LegacyDevicePUT" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RET_concat.pem" id="51fc3ca5-5aa1-40a7-abc5-fc062c1c59d0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<dece:Device 
IsLegacy="true" DeviceID="${#Project#DeviceID}" xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dece:DisplayName>String</dece:DisplayName>
	<dece:Manufacturer>String</dece:Manufacturer>
	<dece:Model>String</dece:Model>
	<dece:Brand Language="en-us">String</dece:Brand>
	<dece:SerialNo>String</dece:SerialNo>
	<dece:Image MimeType="String" Width="2" Height="2">http://unihidef.edgesuite.net/images/movies/61/11/61115456_840x1200.jpg</dece:Image>
	<dece:PolicyList PolicyListID="urn:dece:">
		<dece:Policy PolicyID="http://www.altova.com">
			<dece:PolicyClass>urn:dece:</dece:PolicyClass>
			<dece:Resource>http://unihidef.edgesuite.net/images/movies/61/11/61115456_840x1200.jpg</dece:Resource>
			<dece:RequestingEntity>urn:dece:</dece:RequestingEntity>
			<dece:PolicyAuthority>urn:dece:role:coordinator</dece:PolicyAuthority>
			<dece:ResourceStatus>
				<dece:Current CreationDate="2001-12-17T09:30:47Z" CreatedBy="urn:dece:" ModificationDate="2001-12-17T09:30:47Z" DeletionDate="2001-12-17T09:30:47Z" ModifiedBy="urn:dece:" DeletedBy="urn:dece:">
					<dece:Value>urn:dece:type:status:active</dece:Value>
					<dece:Description>String</dece:Description>
				</dece:Current>
				<dece:History>
					<dece:Prior ModificationDate="2001-12-17T09:30:47Z" ModifiedBy="urn:dece:">
						<dece:Value>urn:dece:type:status:active</dece:Value>
						<dece:Description>String</dece:Description>
					</dece:Prior>
				</dece:History>
			</dece:ResourceStatus>
		</dece:Policy>
	</dece:PolicyList>
</dece:Device>]]></con:request><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846DDC2C8F4254E0530F991F0A24DE/LegacyDevice/urn:dece:deviceid:org:dece:228913</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8ae41ec1-0f8f-471b-9e48-86d724cde7aa"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DeviceID" value="${#Project#DeviceID}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="41568cd2-f091-40fd-9149-bc84b165917e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - LegacyDevicePUT');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="f388e306-6a87-410f-b4c9-f2eb4f4ca377"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode = "200";
def httpStatus 	   = tC.getPropertyValue("httpStatus");

log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
log.info "httpStatus  \"" + httpStatus ;
 
switch (ExpectedReturnCode) {
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value>urn:dece:deviceid:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:AA0099E8143702A4E0401F0A059951A8</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>662629</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value>Legacy Device has been updated successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>43</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://lp1.dev.q.uvvu.com:8443/rest/1/11/Account/urn:dece:accountid:org:dece:00846DDC2C8F4254E0530F991F0A24DE/Domain/urn:dece:domainid:dece:1234/Device/urn:dece:deviceid:org:dece:228913</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>encodedValueOfSpecialSymbols</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deviceid_xml</con:name><con:value>urn:dece:deviceid:org:dece:662629</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Sanjeet\GitRepo\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DELETE - LegacyDeviceDelete" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2bb3c16a-7640-42c2-ac61-aa8906987d93"><con:settings/><con:testStep type="groovy" name="Set pem" id="26f4734f-2a86-4702-8ef6-fee589d1ac07"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("DELETE - LegacyDeviceDelete");

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - LegacyDeviceDelete" id="96504817-b3cc-4a52-8744-2f114b2ba4dc"><con:settings/><con:config service="LegacyDeviceAdd_Retailer" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{AccountID}/LegacyDevice/{DeviceID}" methodName="DELETE LegacyDeviceAdd" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - LegacyDeviceDelete" mediaType="application/xml" postQueryString="false" sslKeystore="ISC_RET_concat.pem" id="7c8c255f-dc28-4a97-bcad-cda365cc9a71"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:originalUri>https://lp1.dev.p.uvvu.com/rest/1/11/Account/urn:dece:accountid:org:dece:00846DDC2C8F4254E0530F991F0A24DE/LegacyDevice/urn:dece:deviceid:org:dece:228913</con:originalUri><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="96a554c0-f140-44ca-ba7b-c19cd6f830e5"><con:configuration><scriptText>assert ((com.eviware.soapui.support.types.StringList)messageExchange.responseHeaders["#status#"]).containsValue("HTTP/1.1 200 OK")</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="DeviceID" value="${#Project#DeviceID}"/>
  <con:entry key="AccountID" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extact The Response Header" id="f59a24b4-0f8e-40d9-99a5-fef5b92049ac"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - LegacyDeviceDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process The Response and Header" id="eb4d62e4-1c18-4bde-8e2c-b29840990224"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def ExpectedReturnCode   = "200";
def httpStatus 		= tC.getPropertyValue("httpStatus");


log.info "ExpectedReturnCode \"" + ExpectedReturnCode;
 
switch (ExpectedReturnCode) {
	case "412":  
		if (httpStatus != "HTTP/1.1 412 Precondition Failed") {
			assert 1 == 2;
		}
	break;
	case "200":  
		if (httpStatus != "HTTP/1.1 200 OK") {
			assert 1 == 2;
		}
	break;
	case "201":  
		if (httpStatus != "HTTP/1.1 201 Created") {
			assert 1 == 2;
		}
	break;
	case "202":  
		if (httpStatus != "HTTP/1.1 202 Accepted") {
			assert 1 == 2;
		}
	break;
	case "400":  
		if (httpStatus != "HTTP/1.1 400 Bad Request") {
			assert 1 == 2;
		}
	break;
	case "401":  
		if (httpStatus != "HTTP/1.1 401 Unauthorized") {
			assert 1 == 2;
		}
	break;
	case "403":  
		if (httpStatus != "HTTP/1.1 403 Forbidden") {
			assert 1 == 2;
		}
	break;
	case "404":  
		if (httpStatus != "HTTP/1.1 404 Not Found") {
			assert 1 == 2;
		}
	break;
	case "405":  
		if (httpStatus != "HTTP/1.1 405 Method Not Allowed") {
			assert 1 == 2;
		}
	break;
	case "409":  
		if (httpStatus != "HTTP/1.1 409 Conflict") {
			assert 1 == 2;
		}
	break;
	default:
	 		assert 1 == 2;
	break; 	
	
}


</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtrnodeid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeviceID</con:name><con:value>urn:dece:deviceid:org:dece:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:AA0099E8143702A4E0401F0A059951A8</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>662629</con:value></con:property><con:property><con:name>ExpectedReturnCodeCreate</con:name><con:value>201</con:value></con:property><con:property><con:name>ExpectedReturnCodeUpdate</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeGet</con:name><con:value>200</con:value></con:property><con:property><con:name>ExpectedReturnCodeDelete</con:name><con:value>200</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Legacy Device record deleted successfully</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/plain;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>41</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedValueOfSpecialSymbols</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>encodedparam</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Sanjeet\GitRepo\uv-coordinator-api-regression\Certs\DEV/ISC_RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountStatusUpdate" searchProperties="true" id="e95b57db-1470-411f-9414-11cbda1e6296"><con:settings/><con:testStep type="groovy" name="Set pem" id="674a9608-f69f-47a2-ab69-9f7faeabef6b"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("AccountStatusUpdate");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="AccountStatusUpdate" id="4712c3a7-a358-4d1e-9c23-321fdfc244c0"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{Account}/ResourceStatus/Current/Update" methodName="AccountStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccountStatusUpdate" mediaType="application/xml" postQueryString="false" sslKeystore="dececs_concat.pem" id="34e91f4e-dd36-4c90-8be1-58aa724370db"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#Coordinator_Schema}" 
	xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" 
		xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Current>          
		<Value>urn:dece:type:status:suspended</Value>          
			<Description>Account Updated</Description>
	</Current>
</ResourceStatus>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Account" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="048a715d-1779-459a-a319-2e1904a8bac9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('AccountStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag":
			etag = value[0];
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
tP.setPropertyValue("eTag", etag);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="8a98c0a5-6e1f-436c-9c2e-136d2e88ccda"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 303 See Other";
		XMLbodynull = "true"
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
//if (httpLocationHeader) {
//		
//} else {
//	assert context.expand( '${#TestCase#httpLocation}') == "";
//}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:048622117A267848E05305991F0AC1B6</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>UserName</con:name><con:value>SanityBAU1_20140730_1406675724961</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB8F0F6588921CE6E0401F0A05991E36</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:FF5E291A6B907417E0401F0A05994E74</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/dececs_concat.pem</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:basic</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-06-01</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>urn:dece:userid:org:dece:FF5E291A6B907417E0401F0A05994E74</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ed15f65-9840-45c7-a665-c1121ea7dc6b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserStatusUpdate" searchProperties="true" id="3715b7cf-f6c6-4dac-93b2-f81113bfd4b3"><con:settings/><con:testStep type="groovy" name="Set pem" id="7e5f8c52-1ca4-41ff-b0f3-3ede4eda89e0"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("UserStatusUpdate");
this.log.info "testStep [$testStep.name]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="UserStatusUpdate" id="72891a63-6f2e-474d-9dfb-199a87450e17"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{Account}/User/{User}/ResourceStatus/Current/Update" methodName="UserStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="UserStatusUpdate" mediaType="application/xml" postQueryString="false" sslKeystore="RET_CS_1_concat.pem" id="ff16df5f-c0d9-4a69-a7a9-fac4399a9087"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#Coordinator_Schema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
<Current>          
<Value>urn:dece:type:status:suspended</Value>          
<Description>Account Updated</Description>
</Current>
</ResourceStatus>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="User" value="${#Project#Node_User}"/>
  <con:entry key="Account" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="2f1730a4-714a-4c23-ace7-52c863fc1e81"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('UserStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag":
			etag = value[0];
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
tP.setPropertyValue("eTag", etag);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="8e2136e9-ac8a-42b8-8018-f91757f9b516"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 303 See Other";
		XMLbodynull = true;
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;




// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
//if (httpLocationHeader) {
//		
//} else {
//	assert context.expand( '${#TestCase#httpLocation}') == "";
//}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 303 See Other</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:0486239647C47850E05305991F0A2CF5/User/urn:dece:userid:org:dece:0486221000797846E05305991F0A7F1E</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>UserName</con:name><con:value>SanityBAU1_20140730_1406675724961</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB8F0F6588921CE6E0401F0A05991E36</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:FF5E291A6B907417E0401F0A05994E74</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:basic</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-06-01</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>urn:dece:userid:org:dece:FF5E291A6B907417E0401F0A05994E74</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ed15f65-9840-45c7-a665-c1121ea7dc6b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsStatusUpdate" searchProperties="true" id="fe37d065-43ff-4e48-bca3-823d72dfa8ca"><con:settings/><con:testStep type="groovy" name="Set pem" id="4a455ffd-b055-4cdd-b038-dda913056a62"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("RightsStatusUpdate1");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config></con:testStep><con:testStep type="restrequest" name="RightsStatusUpdate1" disabled="true" id="ee94b077-46fe-4de3-906c-438366dea396"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{Account}/ResourceStatus/Current/Update" methodName="AccountStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsStatusUpdate1" mediaType="application/xml" postQueryString="false" id="f193fdff-3db2-48cc-a2f6-607680e07c54"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ResourceStatus xmlns="${#Project#Coordinator_Schema}" 
	xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" 
		xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Current>          
		<Value>urn:dece:type:status:pending</Value>          
			<Description>Account Updated</Description>
	</Current>
</ResourceStatus>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Account" value="${#Project#Node_Account}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="RightsStatusUpdate" id="3055c514-6f3a-41ad-a321-24a0a4410a23"><con:settings/><con:config service="ResourceStatusUpdate" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{Account}/RightsToken/{RightsTokenID}/ResourceStatus/Current/Update" methodName="RightsTokenStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsStatusUpdate" mediaType="application/json" postQueryString="false" id="c96da481-f897-4b81-ae97-f20bd55a5681"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Account" value="${#Project#Node_Account}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#RightsTokenID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Response_Headers" id="ba189ef0-74f0-4db1-90ac-9f4ed510eb3a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('RightsStatusUpdate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String etag = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
		case "ETag":
			etag = value[0];
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
tP.setPropertyValue("eTag", etag);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response_Headers_And_Body" id="9387618c-dfe9-4db2-a184-8e67f7314b06"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
//def nodetype      = tC.getPropertyValue("nodetype");

def RequestorType = "";
def RequestorClass = "";
def Requestee = "";

def usernamestring = "";
def givennamestring = "";
def surnamestring = "";

int firstmask = 0;
int lastmask = 0;

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#versionMajor}' );
String minor = context.expand( '${#Project#versionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/" + context.expand('${#TestCase#AccountID}')+ "/User/" + context.expand('${#TestCase#UserID}');
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
	break;

	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "The API call is not authorized.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_VALID":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserIdInvalid";
		errorReason = "The user ID is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdInvalid";
	break;

	case "USER_INACTIVE":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:RequestorNotActive";
	errorReason = "The requesting member is not active.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotActive";
	break;

     case "URL_NOT_FOUND":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	expectHTTPcontenttype = "text/xml"
	XMLbodynull     = true;
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "MTHD_NOT_ALLWD":
	expectHTTPstatus = "HTTP/1.1 405 Method Not Allowed";
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;

	case "USER_NOT_IN_ACC":
	expectHTTPstatus = "HTTP/1.1 404 Not Found";
	errorID     = "urn:dece:errorid:org:dece:UserNotFound";
	errorReason = "The user ID was not found.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotFound";
	break;

     case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficient";
		errorReason = "You do not have permission to perform this action. Ask a full access member of your account for help.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficient";
	break;	

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageAccountConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;

	case "NO_ENABLE_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the EnableManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:EnableManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:EnableManageUserConsentRequired";
	break;

	case "NO_MNG_USR_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the ManageUserConsent policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageUserConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageUserConsentRequired";
	break;

	case "ACCT_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountNotActive";
		errorReason = "The account is not active.";
		//errorReason = "The identified account is not active.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
     break;

     case "SPL_CS_ALLOWED_ACCT":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToActOnAccount";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToActOnAccount";
     break;

     case "SPL_CS_ALLOWED_USER":
	     expectHTTPstatus = "HTTP/1.1 401 Unauthorized";
		errorID     = "urn:dece:errorid:org:dece:NodeUnauthorizedToDeleteSuspendedUsers";
		errorReason = "The request is not authorized.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#NodeUnauthorizedToDeleteSuspendedUsers";
     break;

    case "REQUESTEE_INACTIVE":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The member has been removed.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserStatusDeleted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserStatusDeleted";
	break;
      
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
		
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
//assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}
</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://lp3.qa-web-vip2-s01.uvvu.com:7003/rest/1/11/Account/urn:dece:accountid:org:dece:FF5E27BDC58FE52AE0401F0A07992254/User/urn:dece:userid:org:dece:FF5E276FF8266084E0401F0A0799223E</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>UserName</con:name><con:value>SanityBAU1_20140730_1406675724961</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB8F0F6588921CE6E0401F0A05991E36</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:FF5E291A6B907417E0401F0A05994E74</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:basic</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-06-01</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>urn:dece:userid:org:dece:FF5E291A6B907417E0401F0A05994E74</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ed15f65-9840-45c7-a665-c1121ea7dc6b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForFirstUser1" searchProperties="true" id="8e0e1ea7-1e50-4884-8a9a-3fd9fd5828d4"><con:settings/><con:testStep type="groovy" name="Set Encoded NodeUserID" id="c2c13848-5b0e-4ebf-b9b4-2dbcfae98559"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_User"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded)

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded)

def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

testCase.setPropertyValue("Count","1");
testCase.setPropertyValue("loopuntil","3");</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="6d8df223-1579-458a-aa87-878858db9683"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;

testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = myTC.getPropertyValue("keyStorePath");

RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");

RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");



soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);


if(testCase.getPropertyValue("Count") != "1"){

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;	
}</script></con:config></con:testStep><con:testStep type="groovy" name="Set_TOU_Policy_Resource" id="b60bfe92-5e89-42b3-a92c-4b341f598a1b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )


def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="5fbe4514-e92f-45b1-b854-cf6924edf2cb"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#Policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>${#TestCase#NODEUSERIDDecoded}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="67b1506a-e640-48de-85e2-c5c8d240d204"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#Coordinator_Schema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageAccountConsent" disabled="true" id="5b793179-347a-4b4f-924d-cc1098ce1efb"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="PolicyCreateAccount" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageAccountConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">    
<dece:Policy>       
<dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>       
<dece:Resource>${#TestCase#NODEACCOUNTIDDecoded}</dece:Resource>       
<dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>       
<!--<dece:RequestingEntity>urn:dece:org:org:dece:500501</dece:RequestingEntity>       
<dece:RequestingEntity>urn:dece:org:org:dece:500502</dece:RequestingEntity-->         
<!--<dece:RequestingEntity>urn:dece:org:org:dece:o:pjgdevicetoken:testing</dece:RequestingEntity>-->       
<dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>       
<dece:ResourceStatus>          
<dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">             
<dece:Value>urn:dece:type:status:active</dece:Value>          </dece:Current>       
</dece:ResourceStatus>    </dece:Policy> </dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" disabled="true" id="a69cc818-ad79-42a0-926b-5713106b64f9"><con:configuration><scriptText>def hList = messageExchange.getResponseHeaders()
def hitFlag = 0
for (n in hList) {
	if (n.value == "HTTP/1.1 201 Created") {
		hitFlag = 1
	}
}
assert hitFlag
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn%3Adece%3Auserid%3Aorg%3Adece%3A${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="8beebe24-7f4f-4616-954e-fc1f27c79059"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#versionMajor}/${#Project#versionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="${#Project#SAMLFULL}"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>${#TestCase#NODEUSERIDDecoded}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#nodeId}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="${#TestCase#NODEUSERIDDecoded}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#Node_User}"/>
  <con:entry key="PolicyClass" value="${#Project#Encoded_PolicyClass}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#Node_Account}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="SetNodeID" disabled="true" id="0282e656-0c52-4893-ac7c-309eeaa164f0"><con:settings/><con:config><script>
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def loopuntil = testCase.getPropertyValue("loopuntil");
def Counter = testCase.getPropertyValue("Count");

Counter++;
testCase.setPropertyValue("Count",Counter);
if(testCase.getPropertyValue("Count") == "1")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdRTL"));
}
if(testCase.getPropertyValue("Count") == "2")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdRTLCS"));
}
if(testCase.getPropertyValue("Count") == "3")
{
	testProject.setPropertyValue("nodeId",testProject.getPropertyValue("nodeIdDLASP"));
}

if( Counter &lt;= loopuntil){
    testRunner.gotoStepByName("Set pem");
}</script></con:config></con:testStep><con:testStep type="groovy" name="SetInitialProperties" disabled="true" id="f9008474-67ec-416f-8851-7e3654c4fc63"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("Count","1");

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIdRTL"));

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>Sanity_Suite_E2E_APIs</con:value></con:property><con:property><con:name>sName</con:name><con:value>Sanity_TestSuite</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:048622117A3E7848E05305991F0AC1B6</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:0486239647C47850E05305991F0A2CF5</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\uv-coordinator-api-regression\Certs\QALP1/RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>Count</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>3</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>78732f95-5bad-4898-b95b-9d4ef7846443</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetLatestTOU" searchProperties="true" id="212e7055-4ea7-415a-ad18-8a9acffca4aa">
      <con:settings/>
      
      
      
      <con:testStep type="groovy" name="Call Set PEM File">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("nodeId");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = myTC.getPropertyValue("keyStorePath");
log.info "keyStorePath:"+keyStorePath;


RestTestRequestStep testStep = testCase.getTestStepByName("Get TOU For Given Country");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Get TOU For Given Country"><con:settings/><con:config service="GetLatestTOU" methodName="GET" resourcePath="/Consent/Text/{Country}/urn:dece:type:policy:TermsOfUse/{touFormat}/Current" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get TOU For Given Country" mediaType="application/json" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://${#Project#TOUUrl}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="touFormat" value="${#TestCase#touFormat}"/>
  <con:entry key="Country" value="${#TestCase#accountCountry}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get TOU For Given CountryNLanguage" disabled="true"><con:settings/><con:config service="GetLatestTOU" resourcePath="/Consent/Text/{Country}/urn:dece:type:policy:TermsOfUse/{touFormat}/Current" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get TOU For Given CountryNLanguage" mediaType="application/json"><con:settings/><con:endpoint>https://</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="touFormat" value="${#TestCase#touFormat}"/>
  <con:entry key="Country" value="${#TestCase#accountCountry}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Details"><con:settings/><con:config><script>//import urlFunctions.urlFunctions;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Get TOU For Given Country');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = "";
String connection = "";
String contentType = "";
String contentLength = "";
String contentLocation = "";

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

log.info("TOU Location returned by API : " + contentLocation);

/*
 * Extract consent version from TOU Location
 * TOU Location Url format is like : Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/text
 * Consent version can be extracted by spliting it consecutively.
 * 		1. Split TOU Location Url using delimitter "/".
 * 		2. Take the 2nd Last string from 1's output. And again split it using delimitter ":".
 * 		3. Last string in 2's output is the consent version
 */

try{
String strDelim1 = "/";
String strDelim2 = ":";

String[] strAfterDelim1Split = contentLocation.split(strDelim1);
String[] strAfterDelim2Split = strAfterDelim1Split[strAfterDelim1Split.length-2].split(strDelim2);
String tempConsentVersion = strAfterDelim2Split[strAfterDelim2Split.length-1];

log.info("Consent version extracted from TOU Location : " + tempConsentVersion );
tC.setPropertyValue("consentVersion",tempConsentVersion);
}catch(Throwable e){
	log.info("Error occurred while extracting consent version from TOU Url")
	log.info(e);
}</script></con:config></con:testStep><con:testStep type="groovy" name="Return Properties to Calling Test Case"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTestCaseName = testCase.getPropertyValue("tName");
def callingTestSuiteName = testCase.getPropertyValue("sName");

def callingTestCase = testProject.getTestSuiteByName(callingTestSuiteName).getTestCaseByName(callingTestCaseName)

callingTestCase.setPropertyValue("touVersion", testCase.getPropertyValue("touVersion"));
</script></con:config></con:testStep><con:properties>
        
      <con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>272</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>text/html; charset=iso-8859-1</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value>https://qa.c.uvvu.com:7001/Consent/Text/LU/urn:dece:type:policy:TermsOfUse:20140811/html</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 302 Found</con:value></con:property><con:property><con:name>policyCreatorNodeId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>SetupScripts</con:value></con:property><con:property><con:name>tName</con:name><con:value>Setup</con:value></con:property><con:property><con:name>touFormat</con:name><con:value>html</con:value></con:property><con:property><con:name>touVersion</con:name><con:value>https://qa.c.uvvu.com:7001/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/text</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
<html><head>
<title>302 Found</title>
</head><body>
<h1>Found</h1>
<p>The document has moved <a href="https://qa.c.uvvu.com:7001/Consent/Text/LU/urn:dece:type:policy:TermsOfUse:20140811/html">here</a>.</p>
</body></html>
]]></con:value></con:property><con:property><con:name>accountLang</con:name><con:value>en</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Git\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>accountCountry</con:name><con:value>LU</con:value></con:property><con:property><con:name>consentVersion</con:name><con:value>20140811</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>305ac9cd-879e-4ee5-bf91-879a99de56ef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>37a9f55b-efaf-4f55-b865-7cd8e03d1a64</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f5836f98-334d-477b-8e90-555b64402bd7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9faf2a71-e251-4de8-8c74-253f40d63066</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>81e2bf52-059c-4806-a776-b8195f2999e2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>nodeid</con:name><con:value>nodeidRTL</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Sanity_TestSuite" id="e3d69969-201a-4c2d-ae59-58d882659653"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Sanity_Suite_E2E_APIs" searchProperties="true" id="dde0eade-1d69-45a2-824a-ed40a58e08dc" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Setup_Node" id="ee29dc64-dc2a-43ef-8c8e-a0a8fe20bd0c"><con:settings/><con:config><script>//import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidDLASP")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidRTLCS"));

//tP.setPropertyValue("audience","");


//Disable below Rights testcases without Account ID for "07" endpoint.
//commented the below code, since the "07" endpoint is now depricated. - Kalyan - 10/3/2014

//def versionMinor = context.expand( '${#Project#versionMinor}' )
//
//log.info "versionMinor ..... " + versionMinor;
//
//		testStep1 = testRunner.testCase.getTestStepByName("RightsTokenGet_without_Account_ID");
//		testStep2 = testRunner.testCase.getTestStepByName("RightsTokenGet_without_Account_ID for RT Update");
//		testStep3 = testRunner.testCase.getTestStepByName("RightsTokenUpdatewithoutAccountID");
//		
//if (versionMinor == "07")
//	{		
//		testStep1.setDisabled(true);
//		testStep2.setDisabled(true);
//		testStep3.setDisabled(true);		
//	}
//else 
//	{		
//		testStep1.setDisabled(false);
//		testStep2.setDisabled(false);
//		testStep3.setDisabled(false);		
//	}

	
</script></con:config></con:testStep><con:testStep type="groovy" name="AccountCreate" id="57100200-80ad-4429-b054-c9c5bc20096e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("SA_Node_Account_ID",tP.getPropertyValue("Node_Account_ID"));</script></con:config></con:testStep><con:testStep type="groovy" name="FirstUserCreate_FAU1" id="9c9f42c9-23c7-4942-a8a7-14e703ea1943"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName= "SanityFAU_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

//for UserUpdate
tP.setPropertyValue("UserName_FAU1",UserName);

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("FirstUserCreate");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridfull = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDFULL",nodeuseridfull);
tP.setPropertyValue("NODEUSERIDFULL_SA_FAU1",nodeuseridfull);
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_FAU1" id="ad2ebec4-c400-4d5b-afd9-f4de7bc063ef"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL","SAML2 Assertion="+samlfull); 
tP.setPropertyValue("SAMLFULL_SA_FAU1","SAML2 Assertion="+samlfull); </script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_FAU1" id="54e78513-d465-44df-8252-92ee0978500c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForFirstUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_FAU1_1yr" id="fee93a4e-4d19-4cb9-8c5e-a2a69a33cb81"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL","SAML2 Assertion="+samlfull); 
tP.setPropertyValue("SAMLFULL_SA_FAU1","SAML2 Assertion="+samlfull); </script></con:config></con:testStep><con:testStep type="groovy" name="AccountGet" id="a27182fe-500c-4e26-993d-4cb19e21c90d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Account_Get_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("UserCount","1");
def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="AccountUpdate" id="c2b06ca0-8a78-484a-8a80-4f7e90347f6d" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Account_Update_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_SAU1" id="37b32451-bdd1-4bf2-8926-976a7d1361b4" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def UserName= "SanitySAU1_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

tC.setPropertyValue("UserName",UserName);

tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth",context.expand('${#Project#YOUTH_DOB_XML}'));

//def NODEUSERIDFULLDecoded = URLDecoder.decode(tP.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
//tC.setPropertyValue("LegalGuardian",NODEUSERIDFULLDecoded);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridstandard = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDSAU1",nodeuseridstandard);
tP.setPropertyValue("NODEUSERIDFULL_SA_SAU1",nodeuseridstandard);
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_SAU1" id="8fa0af99-986c-4e0e-b456-ab093d385bc0" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlstandard = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLSAU1","SAML2 Assertion="+samlstandard); 
tP.setPropertyValue("SAMLFULL_SA_SAU1","SAML2 Assertion="+samlstandard); 
</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_SAU1" id="0bcd18d2-e5a2-4bc0-9ce0-4d733266cc91" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="UserGet" id="de4341f4-5493-487f-9230-f65f6a55948f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_Get_API");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("NodeUserId",tP.getPropertyValue("NODEUSERIDFULL"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserGetList" id="e5868ed5-35fd-406e-b5a1-de87607471fc" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_GetList_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("UserCount","2");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserGet_for_UserUpdate" id="a1adeb6b-cdb1-4626-b4e7-f9e0a0183d3e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_Get_API");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("NodeUserId",tP.getPropertyValue("NODEUSERIDFULL"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserUpdate_FAU" id="ca9cafd2-27b4-4550-b9d4-a3db56428b1a" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_Update_API");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("GivenName","Raju");
myTC.setPropertyValue("SurName","Alluri");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserGet_SAU1" id="7db88c19-231b-43f2-94b8-bb5b7c90387e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_Get_API");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("NodeUserId",tP.getPropertyValue("NODEUSERIDSAU1"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserGetList 1" id="e2d6d738-2e6e-4dde-8f2a-8fc6336dfdda" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_GetList_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("UserCount","2");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_BAU1" id="03fed95b-2b03-4be0-a370-b942c71565c8" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName= "SanityBAU1_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:basic");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth",context.expand('${#Project#Child_DOB_XML}'));

def NODEUSERIDFULLDecoded = URLDecoder.decode(tP.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
tC.setPropertyValue("LegalGuardian",NODEUSERIDFULLDecoded);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Basic");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridbasic = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDBAU1",nodeuseridbasic);
tP.setPropertyValue("NODEUSERIDFULL_SA_BAU1",nodeuseridbasic);

</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_BAU1" id="4f6f150c-c986-4c9b-8795-24c3fffc1d54" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlbasic = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLBAU1","SAML2 Assertion="+samlbasic);

   </script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_BAU1" id="53a36455-4e2e-4148-9dbf-f29ccf9ce76c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForBasicUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="UserGetList2" id="cdae7e2a-7170-419e-bc22-f1c923e6450b" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_GetList_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("UserCount","3");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserGet_for_User_Delete" id="c979bfff-1f78-4e6b-8918-15c2b7a131cb" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_Get_API");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("NodeUserId",tP.getPropertyValue("NODEUSERIDSAU1"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserDelete" id="fba942a3-9a63-4ca6-8e70-bec8c08037e3" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("User_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserValidationTokenCreate_User Name" id="42a14792-4f3b-4f05-8b37-74efb90f0a0c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserValidationTokenCreate_Account_User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("TokenType",tP.getPropertyValue("urntokenType_ResetPassword"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="UserValidationTokenCreate_PrimaryEmail" id="8c35398c-cf4a-4276-9009-bc1a841891b1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserValidationTokenCreate_PrimaryEmail")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("TokenType",tP.getPropertyValue("urntokenType_ResetPassword"));

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenCreate" id="05ba3b8b-4eea-43cb-93b8-42183164ce14"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenCreateRequest");

TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsContentID",cID);

testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","1");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","3");
testCase.setPropertyValue("StreamWebLocLocation1","https://dl.bestbuy.com/p/streaminglink");
testCase.setPropertyValue("StreamWebLocPreference1","3");
def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","transcation");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTCreate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataGet_DownLoad_Query" id="2e520e83-1683-4a8f-91d3-34704132b3e9" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_Download_Query");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataget_Download_Query_Without_SAML" id="c62c1346-657a-4978-b779-93d89d297f2c" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_Download_Query without SAML");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataGet_Metadata" id="fd2f19ee-9734-4ad4-82bd-8de96980e012" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_Metadata");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataGet_Metadata Query Without SAML" id="3817c3b6-ea4f-49a6-9794-81daa434d9a6" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_Metadata without SAML");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataGet__Reference_Query" id="6e1923d8-174f-4cdd-8702-b982fd605089" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_Reference_Query");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataGet__Reference_Query Without SAML" id="db0cc208-5d6d-403f-9145-9823e2d477f5" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_Reference_Query without SAML");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataGet_List" id="c842eac7-32fb-4374-b04d-65e623e4ed47" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_List");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataGet Request_List without DST" id="279a6e58-1705-4d37-85c7-872c9c2ccb34" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_List without DST");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsLockerDataGet_without_DST" id="c36a165e-6dec-497b-8e32-8d14e29ac632" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsLockerDataGet Request_without_DST");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenDataGet_ByALID" id="a5fbd9f8-d908-4272-a96e-d6e1075dff9f" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenDataGet Request_ALID");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenDataGet_ByAPID" id="e85e3845-3c37-4d2b-a7f6-32e6eac909d1" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties

def aPID = context.expand( '${#Project#APID}' );

testCase.setPropertyValue("APID",aPID);


testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

//testCase.setPropertyValue("ResponseType",testCase.getPropertyValue("ResponseType"));

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenDataGet Request_APID");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenGet" id="a06bc5cf-ed3a-4713-9a46-01e229ded4f9" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenGet Request");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenGet_without_DST" id="33d662c5-cf68-4bf1-84e2-f61756fd6850" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenGet Request_without_DST");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenGet_without_Account_ID" id="04ab471d-a06d-46d7-a01f-accc40b0bf59" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenGet Request_without_Account_ID");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenGet_for_Update" id="30ea4dcd-d69f-40cc-aff4-684ac9d09922" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenGet Request");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenUpdate" id="8b6a8a72-1aa0-433b-8b67-f6265ad665eb" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenUpdate Request");

TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));

def rlid = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("Account_Get_API").getPropertyValue("RightsLockerID");

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("RightsLockerID",rlid);

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsContentID",cID);

testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("SoldAsBundleID","");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","3");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","1");
testCase.setPropertyValue("StreamWebLocLocation1","https://dl.bestbuy.com/p/streaminglink");
testCase.setPropertyValue("StreamWebLocPreference1","3");

def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","RetailerTransaction_1_node0799_RetailerNode");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTUpdate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenGet_without_Account_ID for RT Update" id="f0325f93-5ed4-47a6-a37e-1e4942969608" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenGet Request_without_Account_ID");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenUpdatewithoutAccountID" id="569b0b2c-13dd-4b15-814b-2b5e7d71128a" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenUpdate Request without Account_ID");

TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));

def rlid = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("Account_Get_API").getPropertyValue("RightsLockerID");

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("RightsLockerID",rlid);
testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("SoldAsContentID",cID);
testCase.setPropertyValue("SoldAsBundleID","");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","3");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","1");
testCase.setPropertyValue("StreamWebLocLocation1","https://dl.bestbuy.com/p/streaminglink");
testCase.setPropertyValue("StreamWebLocPreference1","3");

def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","RetailerTransaction_1_node0799_RetailerNode");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTUpdate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node DLASP" id="b201f987-2f4b-4917-a114-b3bfb2d637ea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeidDLASP"));

//tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidDLASP"));
tP.setPropertyValue("audience","");

</script></con:config></con:testStep><con:testStep type="groovy" name="StreamCreate" id="a6da0346-f0a2-4bd7-b89b-d8fd8b2f810a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("StreamCreate");

myTC.setPropertyValue("TCaseName",tC.getName());
myTC.setPropertyValue("TSuiteName",tS.getName());

tC.setPropertyValue("decodedNodeUserID" ,URLDecoder.decode(tP.getPropertyValue("NODEUSERIDFULL")));
tC.setPropertyValue("RightsTokenID",tC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("nickname","Raju");
//tC.setPropertyValue("transactionid",);

//tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
//tC.setPropertyValue("sCbodyRequestingUserSetting",);
//tC.setPropertyValue("sCbodyTransactionIDSetting",);

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="StreamListView" id="58c8ec97-8bb8-4c33-bfc5-5e1f7d477b5f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("StreamListView");

myTC.setPropertyValue("TCaseName",tC.getName());
myTC.setPropertyValue("TSuiteName",tS.getName());

tC.setPropertyValue("errorRespTypeStreamView","SUCCESS");
tC.setPropertyValue("expectStreamStatus","active");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="StreamView" id="e43a6cd6-fe21-4849-a310-232733748b49" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("StreamView API");

myTC.setPropertyValue("TCaseName",tC.getName());
myTC.setPropertyValue("TSuiteName",tS.getName());

tC.setPropertyValue("errorRespTypeStreamView","SUCCESS");
tC.setPropertyValue("expectStreamStatus","active");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="StreamView_for_StreamRenew" id="654fb05c-12b8-410b-8094-6c16f0c3dc54" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("StreamView API");

myTC.setPropertyValue("TCaseName",tC.getName());
myTC.setPropertyValue("TSuiteName",tS.getName());

tC.setPropertyValue("errorRespTypeStreamView","SUCCESS");
tC.setPropertyValue("expectStreamStatus","active");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="StreamRenew" id="845d4575-df4d-4969-943a-069a58ea7c22" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
 * Get current time in GMT. Increase the hours by 8.
 * Since Stream is created  with expiration date = current time in GMT + 6 hrs. 
 * So this will increase the  expiration date by 2 hours
 * 
 */

		Date currentTime = new Date();		 
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'");

		// Give it to me in GMT time.
		sdf.setTimeZone(TimeZone.getTimeZone("GMT"));
		log.info("GMT time: " + sdf.format(currentTime));
		String currentDate = sdf.format(currentTime);
		log.info("currentDate : " + currentDate);


		Calendar c = Calendar.getInstance();
		try {
			c.setTime(sdf.parse(currentDate));
		} catch (ParseException e) {
			log.info("Error while parsing Date!!");
			log.info(e);
		}
		c.add(Calendar.HOUR, 8);

		String newDate = sdf.format(c.getTime());
		log.info("New Date : " + newDate);



tP.setPropertyValue("ExpirationDateTime",newDate);
def myTC;
if (tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
 {
 	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("StreamRenew");
 }
 else
 {
 	 myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("StreamRenew_06");
 }


myTC.setPropertyValue("TCaseName",tC.getName());
myTC.setPropertyValue("TSuiteName",tS.getName());

tC.setPropertyValue("errorRespTypeStreamView","SUCCESS");
tC.setPropertyValue("expectStreamStatus","active");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="StreamView_for_StreamDelete" id="26ce0eb2-48e9-4166-b1b1-b2e8c578d365" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("StreamView API");

myTC.setPropertyValue("TCaseName",tC.getName());
myTC.setPropertyValue("TSuiteName",tS.getName());

tC.setPropertyValue("errorRespTypeStreamView","SUCCESS");
tC.setPropertyValue("expectStreamStatus","active");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="StreamDelete" id="641277d0-cf83-4521-a8f0-dad925ecef57" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("StreamDelete API");

myTC.setPropertyValue("TCaseName",tC.getName());
myTC.setPropertyValue("TSuiteName",tS.getName());

tC.setPropertyValue("errorRespTypeStreamView","SUCCESS");
tC.setPropertyValue("expectStreamStatus","active");

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RTL" id="fa3d5c01-2a57-4835-b12c-b559c4b601af" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeidRTL"));


</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenCreate-1" id="79239680-7c43-47af-921d-fd7b512acafe" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenCreateRequest");

TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsContentID",cID);

testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","1");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","3");
testCase.setPropertyValue("StreamWebLocLocation1","https://dl.bestbuy.com/p/streaminglink");
testCase.setPropertyValue("StreamWebLocPreference1","3");
def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","transcation");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTCreate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="DMRCreatePost" id="8f993e64-d8e3-4657-94e3-55c8a4adb005" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRCreate POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRGet" id="b192b610-7aac-4e72-b1d8-e500d4101128" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMR GET")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRListGet" id="b9c578e9-0534-49db-860c-24cf71ccd8c7" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRList GET")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRDelete" id="4905801a-966f-48ae-9cc6-fdba3dcf454a" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def v2 = context.expand( '${#Project#versionMinor}' )
def DMRRequest;
 if (testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
 {
 	DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRDelete")
 }
 else
 {
 	 DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRDelete_06")
 }

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRCreatePost-1" id="387ecece-6dee-46e5-840b-f3d3ff80981e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRCreate POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRGet-1" id="ee51222c-116f-4ff0-9742-738402d2a150" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMR GET")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRUpdatePut" id="27660d2c-3527-45e6-b0a1-353bf6fbb000" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def v2 = context.expand( '${#Project#versionMinor}' )
def DMRRequest;
 if (testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
 {
 	DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRUpdate PUT")
 }
 else
 {
 	 DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRUpdate PUT_06")
 }


DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenCreate-2" id="237bfab2-0573-4191-8244-97d01999e52f" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenCreateRequest");

TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsContentID",cID);

testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","1");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","3");
testCase.setPropertyValue("StreamWebLocLocation1","https://dl.bestbuy.com/p/streaminglink");
testCase.setPropertyValue("StreamWebLocPreference1","3");
def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","transcation");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTCreate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="DMRCreatePost-2" id="30818245-c276-47a8-be96-34ba02a04f43" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRCreate POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRConsumePost" id="8f9b6f72-a0a5-407e-b97e-a2a782705518" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRConsume POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenCreate-3" id="fee30217-c044-4be0-ace7-a7418f5218c1" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenCreateRequest");

TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsContentID",cID);

testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","1");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","3");
testCase.setPropertyValue("StreamWebLocLocation1","https://dl.bestbuy.com/p/streaminglink");
testCase.setPropertyValue("StreamWebLocPreference1","3");
def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","transcation");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTCreate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="DMRCreatePost-3" id="359849aa-8ffc-4248-a32b-f8d07b4d4f4f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRCreate POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRLeaseCreatePost" id="4d7dd2dc-085b-4700-ba81-d0c8aaa9e5fe" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRLeaseCreate POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRGet-2" id="89847499-adb5-4015-8748-6fa4b1b90982" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMR GET")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRLeaseConsumePost" id="fa59c7b6-e502-41a8-9d23-98a2a151e080" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def v2 = context.expand( '${#Project#versionMinor}' )
def DMRRequest;
 if (testProject.getPropertyValue("versionMinor") != testProject.getPropertyValue("versionURLEncode"))
 {
 	DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRLeaseConsume POST")
 }
 else
 {
 	 DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRLeaseConsume POST_06")
 }


DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenCreate-4" id="6a3727d3-5d31-4d4e-8855-4bcdcfa4fcdb" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenCreateRequest");

TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsContentID",cID);

testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","1");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","3");
testCase.setPropertyValue("StreamWebLocLocation1","https://dl.bestbuy.com/p/streaminglink");
testCase.setPropertyValue("StreamWebLocPreference1","3");
def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","transcation");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTCreate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="DMRCreatePost-4" id="caa27362-f0a8-47ac-9e41-9930a7b160d5" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRCreate POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRLeaseCreatePost-1" id="ce202508-1f69-4df9-a800-855eb1c3e279" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRLeaseCreate POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRGet-3" id="c0aa447b-9084-4f1d-9208-8532900c744a" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMR GET")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRLeaseRenewPut" id="e7be529f-62d1-41c8-b7f4-16ab0ea0e434" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRLeaseRenew PUT")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="DMRLeaseReleasePost" id="266c8340-5d6b-4e42-9adb-7e8038f7fc28" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def DMRRequest = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("DMRLeaseRelease POST")

DMRRequest.setPropertyValue("TCaseName",testCase.getName());
DMRRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerDMR = DMRRequest.run( null , false )

assert runnerDMR.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenGet_for_Delete" id="7a8566bf-47ae-4e10-b320-bbf09c40408a" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenGet Request");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenDelete" id="3614d810-6385-4bea-8a78-1828e0491451" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenDelete Request");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenCreate-5" id="23ea017c-e59d-434a-8878-0cf5fcd5754c" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenCreateRequest");

TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsContentID",cID);

testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","1");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","3");
testCase.setPropertyValue("StreamWebLocLocation1","https://dl.bestbuy.com/p/streaminglink");
testCase.setPropertyValue("StreamWebLocPreference1","3");
def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","transcation");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTCreate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenGet_for_Delete without DST" id="3c15292d-5043-4a53-bd78-705045cb7da1" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenGet Request");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RightsTokenDelete without DST" id="a0f92aac-134b-4c5c-a392-868370776c6f" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//RightsToken Request and properties
testCase.setPropertyValue("RightsTokenID",testCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("expectErrTypeRTLGet","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTDReq","OK");

// Call RightsToken Locker DaTA Get Request - Get the Required Rights Properties TestStep

def FeedRTLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenDelete Request Without DST");

FeedRTLReq.setPropertyValue("TCaseName",testCase.getName());
FeedRTLReq.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = FeedRTLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Setup_Node_RET" id="0aa9b92d-1a63-45df-868f-d005e32b8631" disabled="true"><con:settings/><con:config><script>//import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeidRTL"));

tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidDLASP")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidRTLCS"));

</script></con:config></con:testStep><con:testStep type="groovy" name="AccountCreate1" id="cdc3b629-2551-4ccb-9528-3e12f5224d0c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("RA_Node_Account_ID",tP.getPropertyValue("Node_Account_ID"));</script></con:config></con:testStep><con:testStep type="groovy" name="FirstUserCreate1" id="5ecdb855-d60c-428e-866b-9df919511ce3" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName= "Retired_FAU_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

//for UserUpdate
tP.setPropertyValue("Retired_UserName_FAU1",UserName);

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("FirstUserCreate");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridfull = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDFULL_RA_FAU1",nodeuseridfull);
tP.setPropertyValue("NODEUSERIDFULL",nodeuseridfull);
</script></con:config></con:testStep><con:testStep type="groovy" name="STS_FAU1" id="46d5d1a6-1996-4cce-943c-5cc97e106a06" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
//tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidDLASP")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidRTLCS"));


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL","SAML2 Assertion="+samlfull); 
tP.setPropertyValue("SAMLFULL_RA_FAU1","SAML2 Assertion="+samlfull); </script></con:config></con:testStep><con:testStep type="groovy" name="CreatePolicies_FAU1" id="69a02dd0-0268-46e0-8d82-d67119201dbe" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForFirstUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:testStep type="groovy" name="STS_FAU_1yr" id="48a199ea-9092-49d3-85e6-297dbc6303cb" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL","SAML2 Assertion="+samlfull); 
tP.setPropertyValue("SAMLFULL_RA_FAU1","SAML2 Assertion="+samlfull); </script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_SAU11" id="e5ca0a55-d532-4c6b-b3c9-8a30d5724c60" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def UserName= "Retired_SAU1_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

tC.setPropertyValue("UserName",UserName);

tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth",context.expand('${#Project#YOUTH_DOB_XML}'));

//def NODEUSERIDFULLDecoded = URLDecoder.decode(tP.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
//tC.setPropertyValue("LegalGuardian",NODEUSERIDFULLDecoded);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridstandard = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDSAU1",nodeuseridstandard);
tP.setPropertyValue("NODEUSERIDFULL_RA_SAU1",nodeuseridstandard);

</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_SAU11" id="fcce761e-9f6b-454a-8966-ee1d23126cbb" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlstandard = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLSAU1","SAML2 Assertion="+samlstandard); 

</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_SAU11" id="697c1bf9-c699-484e-9d68-fcb7efa74c55" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="AccountMergeTest" id="5fd31af6-d845-4754-bd5a-ba6e58914dd5" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountMergeTest");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="AccountMerge" id="f701cc19-c6b4-4bcb-95d9-950f44c49de2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountMerge");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set Node RTLCS" id="ab413cbc-0d70-4e1f-b0d9-9d69b773ac55" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeidRTLCS"));


</script></con:config></con:testStep><con:testStep type="groovy" name="AccountMergeUndo" id="b887d1c9-17fa-44de-81ec-cd38c73ee10a" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountMergeUndo");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="AccountGet_for_Acct_Delete" id="34ab57d8-3b8f-411e-8680-2321b8738d02" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("SAMLFULL",tP.getPropertyValue("SAMLFULL_SA_FAU1"));
tP.setPropertyValue("Node_Account","urn:dece:accountid:org:dece:"+tP.getPropertyValue("SA_Node_Account_ID"));



def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Account_Get_API");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
myTC.setPropertyValue("UserCount","2");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="AccountDelete" id="08854fcf-8c23-4d91-8cb0-6eeba6e67202" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Account_Delete_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify Policy APIs" id="5acf0420-e08f-4f95-b6f3-ac6be2b4b582" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Verify All Policy APIs")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

log.info "Policy API verification complete....."</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Set Node Role to DECECS" id="6353c66c-4f11-40bf-96ea-408eaa4efb9d" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeIDdececs"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_AccountCreate1" id="da3f0807-cb1c-40d1-8af7-747083ec14fa" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("RA_Node_Account_ID",tP.getPropertyValue("Node_Account_ID"));</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_FirstUserCreate1" id="a976f4d2-ff2a-4c34-a0a4-a3891b93fc6d" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName= "Retired_FAU_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

//for UserUpdate
tP.setPropertyValue("Retired_UserName_FAU1",UserName);

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("FirstUserCreate");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridfull = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDFULL_RA_FAU1",nodeuseridfull);
tP.setPropertyValue("NODEUSERIDFULL",nodeuseridfull);
</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_STS_FAU1" id="bc08512b-bc36-4681-a0e3-cda2a60d7eb8" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
//tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidDLASP")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidRTLCS"));


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL","SAML2 Assertion="+samlfull); 
tP.setPropertyValue("SAMLFULL_RA_FAU1","SAML2 Assertion="+samlfull); </script></con:config></con:testStep><con:testStep type="groovy" name="RSU_CreatePolicies_FAU1" id="93378c18-11ed-4887-9825-311d8702956b" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForFirstUser1");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_UserCreate_SAU1" id="a4fa6eaf-3088-442e-9e5b-baca17063fdd" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def UserName= "Retired_SAU1_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

tC.setPropertyValue("UserName",UserName);

tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth",context.expand('${#Project#YOUTH_DOB_XML}'));

//def NODEUSERIDFULLDecoded = URLDecoder.decode(tP.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
//tC.setPropertyValue("LegalGuardian",NODEUSERIDFULLDecoded);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridstandard = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDSAU1",nodeuseridstandard);
tP.setPropertyValue("NODEUSERIDFULL_RA_SAU1",nodeuseridstandard);

</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_STSCreate_SAU1" id="6d5a3af4-651e-47bb-863f-8b411b6a198f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlstandard = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLSAU1","SAML2 Assertion="+samlstandard); 

</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_CreatePoliciesForUser_SAU1" id="079cd010-228a-41d9-96bd-69c6c3081fb7" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_User Status Update Active to Suspended" id="f3d9c0c6-02e1-4b97-9f90-2d6e619f3272" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserStatusUpdate")


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Account Status Update  Active to Suspended" id="a20f16ad-7fe2-474a-8352-852ada936781" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountStatusUpdate")


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights_Set Node Role to RET_CS" id="e676ff6f-f8b5-4cba-906f-766440da0e69" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("nodeId",tP.getPropertyValue("nodeidRTLCS"));

tP.setPropertyValue("audience","");</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights_AccountCreate1" id="3626b7d2-6221-4adf-a859-9a85d546e32e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("RA_Node_Account_ID",tP.getPropertyValue("Node_Account_ID"));</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights_FirstUserCreate1" id="31bfcd0f-a440-4ddf-9322-d94553236e37" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName= "Retired_FAU_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

//for UserUpdate
tP.setPropertyValue("Retired_UserName_FAU1",UserName);

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("FirstUserCreate");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridfull = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDFULL_RA_FAU1",nodeuseridfull);
tP.setPropertyValue("NODEUSERIDFULL",nodeuseridfull);
</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights_STS_FAU1" id="5914554e-6b9b-432f-a8dd-5889c7c7efe3" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
//tP.setPropertyValue("audience","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidDLASP")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeidRTLCS"));


def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL","SAML2 Assertion="+samlfull); 
tP.setPropertyValue("SAMLFULL_RA_FAU1","SAML2 Assertion="+samlfull); </script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights_CreatePolicies_FAU1" id="467b0c1a-dfce-43b2-8d28-655a60d698bf" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForFirstUser1");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights_UserCreate_SAU1" id="aac85350-7dff-4edc-b9cc-c7c8783c9db0" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def UserName= "Retired_SAU1_"+new Date().format( 'yyyyMMdd') + "_" + System.currentTimeMillis();

tC.setPropertyValue("UserName",UserName);

tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth",context.expand('${#Project#YOUTH_DOB_XML}'));

//def NODEUSERIDFULLDecoded = URLDecoder.decode(tP.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
//tC.setPropertyValue("LegalGuardian",NODEUSERIDFULLDecoded);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridstandard = tP.getPropertyValue("Node_User");
tP.setPropertyValue("NODEUSERIDSAU1",nodeuseridstandard);
tP.setPropertyValue("NODEUSERIDFULL_RA_SAU1",nodeuseridstandard);

</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights_STSCreate_SAU1" id="893aa004-0d99-462a-8e4e-79ccca1b39e6" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tC.getPropertyValue("UserName");

tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlstandard = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLSAU1","SAML2 Assertion="+samlstandard); 

</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights_CreatePoliciesForUser_SAU1" id="73bacc0c-5e02-4d3b-a653-a5e7a5e40963" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_RightsTokenCreate" id="49e3d908-4c17-4448-b755-e85c6f1a6df3" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("RightsTokenCreateRequest");



TsRightsXMLReq.setPropertyValue("TCaseName",testCase.getName());
TsRightsXMLReq.setPropertyValue("TSuiteName",testSuite.getName());

//RightsToken Request and properties

def cID = context.expand( '${#Project#CID}' )
def aLID = context.expand( '${#Project#ALID}' )

testCase.setPropertyValue("ALID",aLID);
testCase.setPropertyValue("ContentID",cID );
testCase.setPropertyValue("SoldAsContentID",cID);

testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby","urn:dece:org:org:dece:retailer");
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03.000");
testCase.setPropertyValue("RRSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","1");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","3");
def nodeID = context.expand( '${#Project#NodeID}' )
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+nodeID);
testCase.setPropertyValue("PIRetailerTransx","transcation");

def NODEUSERIDDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDDecoded",NODEUSERIDDecoded);

def NODEACCOUNTIDDecoded = URLDecoder.decode(testProject.getPropertyValue("Node_Account"),"UTF-8");
testCase.setPropertyValue("NODEACCOUNTIDDecoded",NODEACCOUNTIDDecoded);

testCase.setPropertyValue("PIPurchaseAccount",NODEACCOUNTIDDecoded);
testCase.setPropertyValue("PIPurchaseUser",NODEUSERIDDecoded);
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03.000");
testCase.setPropertyValue("RTC_rcStatusHistory","0");
testCase.setPropertyValue("expectErrTypeRTCreate","SUCCESS");
testCase.setPropertyValue("ErrorDataVal","0");
testCase.setPropertyValue("FeedRTCReq","OK");

def runnerRTC = TsRightsXMLReq.run( null , false );

assert runnerRTC.status == Status.FINISHED;

def rightstokenid = context.expand( '${#TestCase#rightstokenid}' )

TsRightsXMLReq.setPropertyValue("RightsTokenID",rightstokenid);
</script></con:config></con:testStep><con:testStep type="groovy" name="RSU_Rights Status Update Active to Deleted" id="2eb33501-85d9-4d9b-9cac-baffbe39c565" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserStatusUpdate")


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="ResourcePropertyQuery_UserName" id="c181962d-8a3e-41ea-a727-b6a0f0ecccb9" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("ResourcePropertyQuery")

myTC.setPropertyValue("ResponseType","FOUND");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def userName = context.expand( '${#TestCase#UserName}' )

myTC.setPropertyValue("RPQ_xmlRequestBody","//User[Credentials[Username='$userName']]");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="ResourcePropertyQuery_PrimaryEmail" id="00ae3867-e58c-4abd-9259-42d677cffac5" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("ResourcePropertyQuery")

myTC.setPropertyValue("ResponseType","MULTIPLE_CHOICES");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

myTC.setPropertyValue("RPQ_xmlRequestBody","//User[ContactInfo/PrimaryEmail[Value='testing@uvvutesting.biz']]");

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:properties><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:653478442</con:value></con:property><con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>2003-06-01</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>105F899C03483FE0E05305991F0A7286</con:value></con:property><con:property><con:name>decodedNodeUserID</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>discreteMediaTokenId</con:name><con:value>urn:dece:discretemediatokenid:org:dece:0663A337A656055CE05307991F0A6671</con:value></con:property><con:property><con:name>discreteMediaTokenOid</con:name><con:value>0663A337A656055CE05307991F0A6671</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>errorRespTypeStreamView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"ED683B3F58B9BE51E0401F0A0799277A:81423F5A"</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>3710</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectErrTypeRTCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTLGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectStreamStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>FeedRTCReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FeedRTDReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FeedRTUReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property><con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFManifestLocPreference2</con:name><con:value>3</con:value></con:property><con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property><con:property><con:name>fulfillmentMethod</con:name><con:value>urn:dece:type:discretemediaformat:bluray:packaged</con:value></con:property><con:property><con:name>headersCount</con:name><con:value>13</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>urn:dece:userid:org:dece:0A408E6FB0367D8FE05307991F0AF491</con:value></con:property><con:property><con:name>LICAcqBaseLoc</con:name><con:value>ns3.google.com</con:value></con:property><con:property><con:name>mediaProfile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>nickname</con:name><con:value>Raju</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>nodeId</con:name><con:value>RET</con:value></con:property><con:property><con:name>NodeUserId</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE2518F78DBE57FCEE0401F0A0799731F</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property><con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value>transcation</con:value></con:property><con:property><con:name>PolicyClass</con:name><con:value>ManageUserConsent</con:value></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value>1</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property><con:property><con:name>RightsLockerID</con:name><con:value>urn:dece:rightslockerid:org:dece:0A408E5748E50307E05307991F0A9806</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value>&lt;/ns4:RightsTokenData></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>2407</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:105F899C03483FE0E05305991F0A7286</con:value></con:property><con:property><con:name>RRSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:retailer</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property><con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>0</con:value></con:property><con:property><con:name>SoldAsBundleID</con:name><con:value/></con:property><con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>9C604FF3213B4DB58BCD6F0A2824C7AF</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:9C604FF3213B4DB58BCD6F0A2824C7AF</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:basic</con:value></con:property><con:property><con:name>UserName</con:name><con:value>SanityFAU_20150303_1425374077748</con:value></con:property><con:property><con:name>UserName_FAU1</con:name><con:value>SanityFAU_20140602_1401688279493</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_107256558.txt</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A145482046</con:value></con:property><con:property><con:name>APID_GET_DELETE_ACTIVE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A220400161</con:value></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A644887974</con:value></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A479533221</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_687712980.txt</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value>687712980</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>201</con:value></con:property><con:property><con:name>StreamWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/streaminglink</con:value></con:property><con:property><con:name>StreamWebLocPreference1</con:name><con:value>3</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>993282f6-9376-4ef1-a63a-3c8080ed376d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d586b16a-25ab-42e7-843f-4615e6e5b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eceab473-b205-4123-8cc3-1e3b1cc51d7f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8328e7ca-1a6e-4e28-8384-b121130eac4d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a27182fe-500c-4e26-993d-4cb19e21c90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>08854fcf-8c23-4d91-8cb0-6eeba6e67202</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2b06ca0-8a78-484a-8a80-4f7e90347f6d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>34ab57d8-3b8f-411e-8680-2321b8738d02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a1adeb6b-cdb1-4626-b4e7-f9e0a0183d3e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c979bfff-1f78-4e6b-8918-15c2b7a131cb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fba942a3-9a63-4ca6-8e70-bec8c08037e3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e2d6d738-2e6e-4dde-8f2a-8fc6336dfdda</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cdae7e2a-7170-419e-bc22-f1c923e6450b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e520e83-1683-4a8f-91d3-34704132b3e9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6e1923d8-174f-4cdd-8702-b982fd605089</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c842eac7-32fb-4374-b04d-65e623e4ed47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c36a165e-6dec-497b-8e32-8d14e29ac632</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a5fbd9f8-d908-4272-a96e-d6e1075dff9f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e85e3845-3c37-4d2b-a7f6-32e6eac909d1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a06bc5cf-ed3a-4713-9a46-01e229ded4f9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>33d662c5-cf68-4bf1-84e2-f61756fd6850</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30ea4dcd-d69f-40cc-aff4-684ac9d09922</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7a8566bf-47ae-4e10-b320-bbf09c40408a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3614d810-6385-4bea-8a78-1828e0491451</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e43a6cd6-fe21-4849-a310-232733748b49</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>58c8ec97-8bb8-4c33-bfc5-5e1f7d477b5f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>845d4575-df4d-4969-943a-069a58ea7c22</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>641277d0-cf83-4521-a8f0-dad925ecef57</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>654fb05c-12b8-410b-8094-6c16f0c3dc54</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>26ce0eb2-48e9-4166-b1b1-b2e8c578d365</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee29dc64-dc2a-43ef-8c8e-a0a8fe20bd0c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>57100200-80ad-4429-b054-c9c5bc20096e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9c9f42c9-23c7-4942-a8a7-14e703ea1943</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad2ebec4-c400-4d5b-afd9-f4de7bc063ef</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>54e78513-d465-44df-8252-92ee0978500c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fee93a4e-4d19-4cb9-8c5e-a2a69a33cb81</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>37b32451-bdd1-4bf2-8926-976a7d1361b4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8fa0af99-986c-4e0e-b456-ab093d385bc0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0bcd18d2-e5a2-4bc0-9ce0-4d733266cc91</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>de4341f4-5493-487f-9230-f65f6a55948f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e5868ed5-35fd-406e-b5a1-de87607471fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ca9cafd2-27b4-4550-b9d4-a3db56428b1a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7db88c19-231b-43f2-94b8-bb5b7c90387e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03fed95b-2b03-4be0-a370-b942c71565c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4f6f150c-c986-4c9b-8795-24c3fffc1d54</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53a36455-4e2e-4148-9dbf-f29ccf9ce76c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>42a14792-4f3b-4f05-8b37-74efb90f0a0c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8c35398c-cf4a-4276-9009-bc1a841891b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>05ba3b8b-4eea-43cb-93b8-42183164ce14</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd2f19ee-9734-4ad4-82bd-8de96980e012</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8b6a8a72-1aa0-433b-8b67-f6265ad665eb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a6da0346-f0a2-4bd7-b89b-d8fd8b2f810a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8f993e64-d8e3-4657-94e3-55c8a4adb005</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b192b610-7aac-4e72-b1d8-e500d4101128</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>27660d2c-3527-45e6-b0a1-353bf6fbb000</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b9c578e9-0534-49db-860c-24cf71ccd8c7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa59c7b6-e502-41a8-9d23-98a2a151e080</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e7be529f-62d1-41c8-b7f4-16ab0ea0e434</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4905801a-966f-48ae-9cc6-fdba3dcf454a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>387ecece-6dee-46e5-840b-f3d3ff80981e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ee51222c-116f-4ff0-9742-738402d2a150</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30818245-c276-47a8-be96-34ba02a04f43</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>359849aa-8ffc-4248-a32b-f8d07b4d4f4f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>79239680-7c43-47af-921d-fd7b512acafe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237bfab2-0573-4191-8244-97d01999e52f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fee30217-c044-4be0-ace7-a7418f5218c1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>89847499-adb5-4015-8748-6fa4b1b90982</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0aa447b-9084-4f1d-9208-8532900c744a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ce202508-1f69-4df9-a800-855eb1c3e279</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a3727d3-5d31-4d4e-8855-4bcdcfa4fcdb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>caa27362-f0a8-47ac-9e41-9930a7b160d5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b201f987-2f4b-4917-a114-b3bfb2d637ea</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fa3d5c01-2a57-4835-b12c-b559c4b601af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3817c3b6-ea4f-49a6-9794-81daa434d9a6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db0cc208-5d6d-403f-9145-9823e2d477f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>04ab471d-a06d-46d7-a01f-accc40b0bf59</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>569b0b2c-13dd-4b15-814b-2b5e7d71128a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f0325f93-5ed4-47a6-a37e-1e4942969608</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>23ea017c-e59d-434a-8878-0cf5fcd5754c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3c15292d-5043-4a53-bd78-705045cb7da1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a0f92aac-134b-4c5c-a392-868370776c6f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>279a6e58-1705-4d37-85c7-872c9c2ccb34</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5acf0420-e08f-4f95-b6f3-ac6be2b4b582</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cdc3b629-2551-4ccb-9528-3e12f5224d0c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5fd31af6-d845-4754-bd5a-ba6e58914dd5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f701cc19-c6b4-4bcb-95d9-950f44c49de2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b887d1c9-17fa-44de-81ec-cd38c73ee10a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ab413cbc-0d70-4e1f-b0d9-9d69b773ac55</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6353c66c-4f11-40bf-96ea-408eaa4efb9d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0aa9b92d-1a63-45df-868f-d005e32b8631</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c181962d-8a3e-41ea-a727-b6a0f0ecccb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00ae3867-e58c-4abd-9259-42d677cffac5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="Sanity_TestSuite_Metadata" id="aa308671-b036-4f77-8480-8f356a35e2a6"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Sanity_TestCases_Metadata" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0c5d0d21-04eb-4c64-8ecc-6ac0d35b794f"><con:settings/><con:testStep type="groovy" name="Groovy Script Set Node Role" id="342cdb3e-9017-498e-86dd-ba7a92ff8054"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdCON"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Coordinate Schema and MD Schema" id="1c7dbc66-5f23-4b4f-bc01-b08e4d9cedc1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rest_api_version=tP.getPropertyValue("versionMinor");
def eNV = context.expand( '${#Project#ENV}' )

log.info rest_api_version
if(rest_api_version=="06")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2012/12/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v1.2/md");
}
else if(rest_api_version=="07")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2013/06/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v1.2/md");
}
else if(rest_api_version=="11")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2013/10/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v2.1/md");
}
else if(rest_api_version=="21")
{
	tP.setPropertyValue("Coordinator_Schema","http://www.decellc.org/schema/2013/10/coordinator");
	tP.setPropertyValue("md_schema","http://www.movielabs.com/schema/md/v2.1/md");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_CID" id="075697f1-93ee-46a3-87a4-0191a23a360a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_CID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDBasic-Create" id="922e22f1-9fb7-41b8-b8b5-f7382f9e7813"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicCreate-11")}

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def cID2 = context.expand( '${#TestCase#CID}' );
	tP.setPropertyValue("CID2", cID2 );

log.info cID2;</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="1fa59040-0bb5-4260-8562-62d64fb7395d"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="MDBasic-Update" id="513e1dcc-1e7a-4284-9b71-08dd8dbea4b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicUpdate-11")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicUpdate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="delay" name="Delay1" id="48e3b72c-9bc4-4f31-a1af-b056738866b5"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterUpdate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="MDBasic-Get" id="cdd6997c-5772-4ab6-85a6-696e306b7fb6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicGet")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_APID" id="b62be177-4ac1-4c84-9dfe-c0609db0d816"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_APID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Create" id="f311617e-df27-4f19-8c17-42282b2f010f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def aPID_AUDIO = context.expand( '${#TestCase#APID}' );
	tP.setPropertyValue("APID_AUDIO", aPID_AUDIO );</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Update" id="c2d3c3cc-bc0a-4c96-a52c-26f95c6ba28e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalUpdate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalUpdate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Get" id="4287a1d0-ce17-4349-80dd-3fb22db3949b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalGet")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_ReplacedAPID" id="d9071d68-0a07-4bc2-83d0-48b00d341847"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_ReplacedAPID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Create-Replaced" id="961f29ea-4fb4-4192-b57d-0c5b3c1b860d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def aPID_AUDIO = context.expand( '${#TestCase#APID}' );
	tP.setPropertyValue("APID_AUDIO", aPID_AUDIO );</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_RecalledAPID" id="71ab99a3-042c-4a43-bb53-e4a019820a46"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_RecalledAPID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Create-Recalled" id="64670b10-4a64-4af1-b437-e9be26d20789"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def aPID_AUDIO = context.expand( '${#TestCase#APID}' );
	tP.setPropertyValue("APID_AUDIO", aPID_AUDIO );</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_ALID" id="ddff7f52-0152-427d-9f94-22bc9151bb0c"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_ALID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDAssetMap-Create" id="96abbf8a-71e7-4f98-95cc-6a24af98b337"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MapALIDtoAPIDCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MapALIDtoAPIDCreate-11")}

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDAssetMap-Update" id="4d133fd1-4f2c-4e69-9e81-da935d5b2ab0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MapALIDtoAPIDUpdate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MapALIDtoAPIDUpdate-11")}

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDAssetMap-ALIDtoAPIDGet" id="2a5f50b4-7b86-4332-9395-68d333b59820"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MapALIDtoAPIDGet")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDAssetMap-APIDtoALIDGet" id="f910326c-b520-4ce0-b931-f3d02ff99591"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MapAPIDtoALIDGet")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_BID" id="385e9e70-dfc7-4ccb-bbf9-3eff50b5db17"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_BID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDBundle-Create" id="00c4d839-c501-4995-b3d9-75a9315a060e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBundleCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBundleCreate-11")}

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDBundle-Update" id="a4b0a1ad-0b65-400b-b4d8-7ed757e58e1a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
 

def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBundleUpdate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBundleUpdate-11")}

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDBundle-Get" id="3e57b2aa-5bf1-4ce2-b84a-7fee5d173cbc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBundleGet")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDBundle-Delete" id="a327e732-3dfa-47f4-ae4e-852715f4e8d1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBundleDelete")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDBasic-List" id="5d0f68c9-5cbf-4da7-8bff-28a02f2b645a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-List" id="2c84ff81-d934-44b0-9583-d02ed8a03818"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_APID 1" id="71d9cff4-f02c-4dd6-ac35-92225b23e488"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_APID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Create 1" id="dec48ee0-e462-4f6d-80d2-a7488b02f758"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalCreate-11")}


myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def aPID_AUDIO = context.expand( '${#TestCase#APID}' );
	tP.setPropertyValue("APID_AUDIO", aPID_AUDIO );</script></con:config></con:testStep><con:testStep type="groovy" name="MDDigital-Delete" id="b98af83e-eb87-4578-8270-94f357310334"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataDigitalDelete")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Random_Number_Generator_CID 1" id="b3881f17-b9a7-49f0-8b2a-dbafeb77d009"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("Random_Number_Generator_CID")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="MDBasic-Create 1" id="13fe1cac-b3fd-429a-af21-731e43bf2a3f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def versionMinor = context.expand( '${#Project#versionMinor}' )
def myTC ;
if(versionMinor=='07')
{
	myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicCreate-07")
}
else{myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicCreate-11")}

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def cID2 = context.expand( '${#TestCase#CID}' );
	tP.setPropertyValue("CID2", cID2 );

log.info cID2;</script></con:config></con:testStep><con:testStep type="delay" name="Delay 1" id="cde6464c-8a05-4424-ac3a-2afc6d097244"><con:settings/><con:config><delay>${=project.properties["delayTimeAfterCreate"].value}</delay></con:config></con:testStep><con:testStep type="groovy" name="MDBasic-Delete" id="28844945-6697-46bf-a315-acdca9cc6f0f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("MetadataBasicDelete")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script Set Node Role-RTL" id="88acc7d6-770d-45b1-aceb-8c2126b477eb"><con:settings/><con:config><script>
/*
Update the role for a given node.
*/

  def tC  = testRunner.getTestCase();
  def tS = tC.getTestSuite();
  def tP = tS.getProject();
  
  tP.setPropertyValue("nodeid",tP.getPropertyValue("nodeIdRTL"));
</script></con:config></con:testStep><con:testStep type="groovy" name="MDLogical-List" id="a282ecf7-81f5-4de3-bdcd-5afe71356742"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("LogicAssetList")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>07178681</con:value></con:property><con:property><con:name>CID_GET_DELETE</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_589099830.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>nodeId</con:name><con:value>07178681</con:value></con:property><con:property><con:name>account_oid</con:name><con:value/></con:property><con:property><con:name>setstatusto</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectdbaccountoid</con:name><con:value/></con:property><con:property><con:name>expectdbstatus</con:name><con:value/></con:property><con:property><con:name>expectdbdisplay_name</con:name><con:value/></con:property><con:property><con:name>expectdbcountry</con:name><con:value/></con:property><con:property><con:name>user_oid</con:name><con:value/></con:property><con:property><con:name>dbxmlresponse_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>setuserstatusto</con:name><con:value/></con:property><con:property><con:name>setusernameto</con:name><con:value/></con:property><con:property><con:name>setuserprivilegeto</con:name><con:value/></con:property><con:property><con:name>expectdbstatus_user</con:name><con:value/></con:property><con:property><con:name>expectdbusername_user</con:name><con:value/></con:property><con:property><con:name>expectdbuseroid_user</con:name><con:value/></con:property><con:property><con:name>expectedprivilege_user</con:name><con:value/></con:property><con:property><con:name>set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>expectedrole_user</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>GET_set_role</con:name><con:value>urn:dece:role:contentprovider</con:value></con:property><con:property><con:name>RandomNumberGenerated</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">303497022</con:value></con:property><con:property><con:name>expectedreturncodeCREATE</con:name><con:value>201</con:value></con:property><con:property><con:name>expectedreturncodeUPDATE</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeGET</con:name><con:value>200</con:value></con:property><con:property><con:name>expectedreturncodeDELETE</con:name><con:value>200</con:value></con:property><con:property><con:name>CID1</con:name><con:value/></con:property><con:property><con:name>CID2</con:name><con:value/></con:property><con:property><con:name>CID3</con:name><con:value/></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:${#TestCase#RandomNumberGenerated}</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A340910554</con:value></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A651142193</con:value></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A303497022</con:value></con:property><con:property><con:name>Profile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>APID_GET_DELETE_ACTIVE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A220400161</con:value></con:property><con:property><con:name>ALID_GET_DELETE</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_780228570.txt</con:value></con:property><con:property><con:name>BID_GET_DELETE</con:name><con:value>urn:dece:bid:file:EXAMPLE_BID_Version_707846667.txt</con:value></con:property><con:property><con:name>BID</con:name><con:value>urn:dece:bid:file:EXAMPLE_BID_Version_${#TestCase#RandomNumberGenerated}.txt</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>5e649713-78a2-4f88-b275-4792e56678d7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1c7dbc66-5f23-4b4f-bc01-b08e4d9cedc1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b62be177-4ac1-4c84-9dfe-c0609db0d816</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b98af83e-eb87-4578-8270-94f357310334</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>28844945-6697-46bf-a315-acdca9cc6f0f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d9071d68-0a07-4bc2-83d0-48b00d341847</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71ab99a3-042c-4a43-bb53-e4a019820a46</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>961f29ea-4fb4-4192-b57d-0c5b3c1b860d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>64670b10-4a64-4af1-b437-e9be26d20789</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddff7f52-0152-427d-9f94-22bc9151bb0c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>385e9e70-dfc7-4ccb-bbf9-3eff50b5db17</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a327e732-3dfa-47f4-ae4e-852715f4e8d1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71d9cff4-f02c-4dd6-ac35-92225b23e488</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dec48ee0-e462-4f6d-80d2-a7488b02f758</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a282ecf7-81f5-4de3-bdcd-5afe71356742</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>nodeId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:requirements><con:requirement><con:id>Policy-1000</con:id><con:name>ViewControl trumps Parental Control</con:name><con:description>In cases where both a parental control policy and the ViewControl settings of a Rights Token are in conflict ViewControl shall take precedence over all other policies. For example, when a BlockUnratedContent policy is in effect and a RightsToken ViewControl property names the user involved in the policy evaluation step, the named user shall have access to the content identified by the rights token.,</con:description><con:status>In Scope</con:status><con:links/><con:testCases/></con:requirement></con:requirements><con:properties><con:property><con:name>YOUTH_MIN_AGE</con:name><con:value>13</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>2000-06-01</con:value></con:property><con:property><con:name>YOUTH_DOB</con:name><con:value>01-Jun-00</con:value></con:property><con:property><con:name>versionURLEncode</con:name><con:value>06</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>02</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>2015</con:value></con:property><con:property><con:name>UserName_SAU2</con:name><con:value>sanity_user_create_20140529_050026</con:value></con:property><con:property><con:name>UserName_SAU1</con:name><con:value>sanity_user_create_20140529_050022</con:value></con:property><con:property><con:name>UserName_FAU2</con:name><con:value>sanity_user_create_20140529_050025</con:value></con:property><con:property><con:name>UserName_FAU1</con:name><con:value>SanityFAU_20150303_1425374077748</con:value></con:property><con:property><con:name>UserName_BAU2</con:name><con:value>sanity_user_create_20140529_050027</con:value></con:property><con:property><con:name>UserName_BAU1</con:name><con:value>sanity_user_create_20140529_050024</con:value></con:property><con:property><con:name>UserName</con:name><con:value>sanity_user_create_20140529_050027</con:value></con:property><con:property><con:name>urntokenType_ValidateEmail</con:name><con:value>urn:dece:type:token:ValidateEmail </con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urntokenType_UnlockMe</con:name><con:value>urn:Adece:type:token:UnlockMe</con:value></con:property><con:property><con:name>urntokenType_ResetPassword</con:name><con:value>urn:dece:type:token:ResetPassword</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>NO</con:value></con:property><con:property><con:name>TOU_US</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NZ</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_NL</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_LU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_IE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_GB</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_FR</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_DE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CH</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_CA</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_BE</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_AU</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOU_AT</con:name><con:value>20140811</con:value></con:property><con:property><con:name>TOUVersionUS</con:name><con:value>20121024</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>TitleDisplay19</con:name><con:value>A Beautiful Mind</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortd</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetport</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetjdbc</con:name><con:value>jdbc:oracle:thin:deqa1/dec2010@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>targetHostS</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa.q.uvvu.com</con:value></con:property><con:property><con:name>targetHostP</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetHostC</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHostb</con:name><con:value>qa.b.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHost</con:name><con:value>qa.p.uvvu.com</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>Streams_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_344946277.txt</con:value></con:property><con:property><con:name>Streams_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:242394094</con:value></con:property><con:property><con:name>Streams_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_561393521.txt</con:value></con:property><con:property><con:name>scriptsPath_Windows</con:name><con:value>C:\Scripts</con:value></con:property><con:property><con:name>scriptsPath_Linux</con:name><con:value>/opt/dece/scripts</con:value></con:property><con:property><con:name>SA_Node_Account_ID</con:name><con:value>105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>SAMLSAU1</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDn3cgwEERaY6Q8Wesqutrb2/dGIIml0MSAJSf/1JUKnay/HsJ81iXb51yZd1yuA8MhyXMZxyEtNaMY8oc0ppR8lS6sSQEeZQOMfM4cgZu8OBY9Q1B25NlJrvdZRXO5joxkQPVd3STNVsTWzVbgZQDUzYarcQahnBRKgylmGfMg4p7yiGppuqbgiTO113jLZjtetNy3xRag84ZcK3UKlrygZUwTrKjPPEAWC5XNaXjXqcToGhaTp4Gg7GaIbnUOmerjMqA6XdjT6qBxjhKEJ1FM/BKdjTOQ2YMyZTCnmW4k2s4LtYGtDaQOgEjExPlMoWBz4N4/LYgzSmBMGIrKCszxDzWRzU3Ggap4TP5t8moWvSsYoLpCLdpCcK2Id2pKM9hCmDKptBfePrFoc4xRTh2v2t31FOjutaaXqXQsrCOJ2z/eP/w4NpjqM4wYHKtmltoB3v8ItKdU8xcnyKooyRHF/JYU0gwmzTTYyOd1UbpTgkxYAwMaAFk+jALryD47oaHplixv+mQTvNWTt5gFGGu8A1rAUZPaYLLWuYjeeL5cRbrZIbDfidEsCucimoWrs+HgxlNURri74VFcAYc+/xudkfD6Pe9ehP07Pvek/o7MzOadNf4N/kV+PFmoDW4DxprBrtInh+0dEkX05u8O/AftHNdISvzMciZk/wUluCoXu2+AeOezcX0LZamv3bL+zh9GmQwIX39BBdtOMhDReXOcsaw/ubMPTnmnl5P101zxl4c3UjZ6PVoLHSn7V76ybyfr2B/BE8d6p0dvDvy7Z3fpxN/mDEt0c5Br5XOxddgvxnMpMSEqhhqeokknwYx5QrXWklucPJBN2RwBE9XJ8119Tsfq/fa7puqy/+alZDa7Xb+rnm2udWf0syaxQHEHsxDYmMJSl3PTY/A0Rzh2Ea4FTN40wwHVN+8OhBDms+vRWXIKYM38WCnnU7mq4WMxraRfudFKuJhtthUPBQqV3F/Jpep27IcbrPyeYeJ99iRBKCJXHLuWZisBkXtVjAPOORXs9hneJMUHsqWdYxTNsCjMyTCEukYB4HWYTrySwpKwPY+tdQIWKl9LZ/V962b/M6/LYtgdAJiFRgMpczLNqIv3hczG0i3yfc2k14697NAiIvlqgnTwlaI9n/9DEmcj6qGfEG7ni0BV3pHmcrqvHaG7/qf2/+2RL8kBA4rGUVKMjJTtjtsy8eEEE53e0kJPVFPcvzrGx9SzJrKrwLutMtoBlgjFEmOPH9Ln7DFFROwFEPUIX7IHYl30eY8Rkdc8jxXMxqrTwesXGMMZMbhy8uWXHsOrMXUlSO44J/JetFYluSiH9cqJCDpJ4Qj8TPMk6Dj4Z94WsnjshTLByc0Kk8ycfn/ZuxQLFwSwRtxumu868cfBV8X1gVucLCxTxNMo6//1KTfNhRIEJxRrnvKaVgl6NLnPw9wc6H0ic35TNQ7YXkvxdDlZQjgLDYJhkp/cvn3ZE3gE53eH4T9DPVWy3T9jxNkPwu1bdtrVkVZQ9d95P4s2SnTocz3v0X</con:value></con:property><con:property><con:name>SAMLFULL_SA_SAU1</con:name><con:value>SAML2 Assertion=nVZbc6o6FP4rDn3cgwEERaY6Q8Wesqutrb2/dGIIml0MSAJSf/1JUKnay/HsJ81iXb51yZd1yuA8MhyXMZxyEtNaMY8oc0ppR8lS6sSQEeZQOMfM4cgZu8OBY9Q1B25NlJrvdZRXO5joxkQPVd3STNVsTWzVbgZQDUzYarcQahnBRKgylmGfMg4p7yiGppuqbgiTO113jLZjtetNy3xRag84ZcK3UKlrygZUwTrKjPPEAWC5XNaXjXqcToGhaTp4Gg7GaIbnUOmerjMqA6XdjT6qBxjhKEJ1FM/BKdjTOQ2YMyZTCnmW4k2s4LtYGtDaQOgEjExPlMoWBz4N4/LYgzSmBMGIrKCszxDzWRzU3Ggap4TP5t8moWvSsYoLpCLdpCcK2Id2pKM9hCmDKptBfePrFoc4xRTh2v2t31FOjutaaXqXQsrCOJ2z/eP/w4NpjqM4wYHKtmltoB3v8ItKdU8xcnyKooyRHF/JYU0gwmzTTYyOd1UbpTgkxYAwMaAFk+jALryD47oaHplixv+mQTvNWTt5gFGGu8A1rAUZPaYLLWuYjeeL5cRbrZIbDfidEsCucimoWrs+HgxlNURri74VFcAYc+/xudkfD6Pe9ehP07Pvek/o7MzOadNf4N/kV+PFmoDW4DxprBrtInh+0dEkX05u8O/AftHNdISvzMciZk/wUluCoXu2+AeOezcX0LZamv3bL+zh9GmQwIX39BBdtOMhDReXOcsaw/ubMPTnmnl5P101zxl4c3UjZ6PVoLHSn7V76ybyfr2B/BE8d6p0dvDvy7Z3fpxN/mDEt0c5Br5XOxddgvxnMpMSEqhhqeokknwYx5QrXWklucPJBN2RwBE9XJ8119Tsfq/fa7puqy/+alZDa7Xb+rnm2udWf0syaxQHEHsxDYmMJSl3PTY/A0Rzh2Ea4FTN40wwHVN+8OhBDms+vRWXIKYM38WCnnU7mq4WMxraRfudFKuJhtthUPBQqV3F/Jpep27IcbrPyeYeJ99iRBKCJXHLuWZisBkXtVjAPOORXs9hneJMUHsqWdYxTNsCjMyTCEukYB4HWYTrySwpKwPY+tdQIWKl9LZ/V962b/M6/LYtgdAJiFRgMpczLNqIv3hczG0i3yfc2k14697NAiIvlqgnTwlaI9n/9DEmcj6qGfEG7ni0BV3pHmcrqvHaG7/qf2/+2RL8kBA4rGUVKMjJTtjtsy8eEEE53e0kJPVFPcvzrGx9SzJrKrwLutMtoBlgjFEmOPH9Ln7DFFROwFEPUIX7IHYl30eY8Rkdc8jxXMxqrTwesXGMMZMbhy8uWXHsOrMXUlSO44J/JetFYluSiH9cqJCDpJ4Qj8TPMk6Dj4Z94WsnjshTLByc0Kk8ycfn/ZuxQLFwSwRtxumu868cfBV8X1gVucLCxTxNMo6//1KTfNhRIEJxRrnvKaVgl6NLnPw9wc6H0ic35TNQ7YXkvxdDlZQjgLDYJhkp/cvn3ZE3gE53eH4T9DPVWy3T9jxNkPwu1bdtrVkVZQ9d95P4s2SnTocz3v0X</con:value></con:property><con:property><con:name>SAMLFULL_SA_FAU1</con:name><con:value>SAML2 Assertion=nVZbb/I4EP0rKH1c5UooJCpIXHdpoaVAL/SlMs4E3CYOjR0I/fVrB0iB0i77SUjIk/HMmYvPzBVDYWC5dcYg5iSihTQMKHMzaVVJYupGiBHmUhQCczl2R/V+z7U0w0W7K0qh26oqryXTtuwKArViWEXVRkVDrZierVrgI6fkFO3KdCpUGUugSxlHlFcVyzBLqlEUv7HhuKblWkXNtisvSuERYiZsCxXNULagUlZV5pwvXF1frVbaqqhF8Uy3DMPUn/u9EZ5DiJTa1SaizFFc2+pjzQMMQYA1HIX6lX6gc+Uxd0RmFPEkhq0v7ydfhm44utDxGJldKPld8LrUj7JjE9GIEowC8olkfvrA55FXqAezKCZ8Hv4YhGlIwyqkWMWmTS8U/RDamYYOEMYMqWyOzK2tIfgQA8VQeBh2q8rFeVXLro5jRJkfxSE7PP4/PECXEEQL8FS2C2sL7XyDJzJVuwLsdikOEkaWcCubdYEwsG01AZ9vqjCIwSdpjzDRoCmT6PR9eEfHTTZaZAaM/0mB9oqzMfKIggRqpadnK5xUHsN3j93GfwUNIx0vG+8fn/37agZgXzkT5KXdHI+aMm+izY2l33y6Ic3y46SC+vWh/dKzS3TVfxt8tj+fhg6NzPmDV24Nys70Nmm3Ob2b+L3R4G/nIfWe+M1lxy6l65Q6lbtBd9J4Tp1irJu8zMNZiupwP+88kBvn+eUxWZh2j45frtf9ZbnBpk0WMOtu0Fg5wfR6elluTJ4njQpL4aE8vJ84Yxw3sPV2XbRMRO59/Z+lvw33CP+hbPfmR8n0DTDfHWUbdFuFjqgS4r+TmZQQT/UzVXchyYdxoFypyVuSO9xE0B3xXFHDzdk0Sp2K02g1O0bZbJfrbaNUNMqOY3aMulNpWjuS2aA4gtiMqE+kL0m5m7b5HSAOXQbUg1hdRolgOqb8YrGFOCp06VA8gogyGEeCnon58c4Wa9/7dKxg4bASWSPvMl4phduI39G7uO5ziA8oWfDxPiUPAZMFAcnbsq2Z6GvGRSo+0DLhgaktkUYhEcweS5J1Ba2UdEbCRQASqB5GXhKAtpgvssTobPNvqQizTDpsj7PH9mNYx992GRA6HpEKTMbSAFFFODFbzF0g3wK+PDmDdubriUfkuxLp5DHBGySHn766RLZH3iKtXn002IHOdc+7K7Lx2hy9mn9+/ftN/ZeA9ONc5o68Jdlzu5v6Yn4IxqntOuEDaR9aslwmWe3LklljYV6XVdANSx8BTgQnrsfRO1A9t6KfNYBy4EfOc/khxITP6YgjDqFo1kJ2PGPjGAGTG0dXPLL03HXmwKVIHYeUn5I1A7EtScS/LlTYxVJPiAfibxXF3lfFTtja8yPiFAsHJ3QmT3L4rH/oCxwJs0TQZhTvGz9l4JTzQ2Ge5BwLFw01TTj8/KUg+bCqIIyjhPJuS8kE+xyd4eTrBbhfSt/MZGMg3wvJfy+GKslaAIPYJhnJ7Mvx7sonQGd7PL91+p3qnXanXbfMduWA6kslq50n5QBd7Zv4u2QvT8c9XvsX</con:value></con:property><con:property><con:name>SAMLFULL_RA_FAU1</con:name><con:value>SAML2 Assertion=pVfbkrLMDn0Vy+/SUg6KIjUzVYg64mk8oM548xc2DbRCg3SD4NP/jY5+Oqc9e+8r7ZCsrE5CEh6I6XuiohICI4oCXEh9DxPlJH0sxhFWApMgomDTh0ShQJmro6EiVnjFvJgUC3r7sfgPb24ajapkl+vWxirXTIkvy3zDLFsWMKtNEVZNCzBVQmKoY0JNTB+LIi/UygJfFkVDEBVBUKRqRW5I62JhCSPCsJlKhS++k0rJY9GlNFQ47nA4VA7VShA5nMjzAvc6Gs6BC32z+PRwvtHJUfT0rg8qFgTQ80AFBD73wN3pPFhEmSMHmzSO4Lsv6ztfPMc3OaZjEeT8KV5toaVjOzgdNRMHGAHTQ0czj88IUjewCqrnBBGirv/tJQQ+By7DFJSBUMN/itw9tV8C3TGMiFkmrim8Y82gDSOIASwsZvpj8c/vsnYyNSITEzuIfHJ//O/4QJxALwihVSaXa71T+z3gF5F6eoBA0THwYoISOM6LNTQBJO/ZhOD3UIVJBG2UDhFhBZqSnB13S+/D8RyNNnIgof9Lgm6ScwZZml4MnzJfPCCYeXOu/9zl1GNipJhzob7dTx9PBG6VT4Jras/HD0V5LaKzxQp2EtmsA9V7XWiOy818aaZz4nKuHTV7KwaN6QoMei61pEXLEN/854kdey/L16Nullp6u1PHFPuL3dxVt6kwgYd27E62YqOjDgV9F9QHgdSSwMZ0jA1+6yyDYIMTF9VwF67geGcfs8TbRrNlN+CNZos2Ms6uVzk4pb26IfTklPpxtt09HwXUxuEBCEezzy+8xdQEyeaYeQPbW6qeMXbd3bDTotHMS/zWoifXXki9/Top8VhqVEfUX2VWqRkY5n7V7/eSeJXqhpt2hb2qkmZr0HjJNnQw88NpkLb6JZQ4Qm+ZDgzoBKg7jQWJNOr0oHYn2fot6AYl3O+t5QXXt0mGeglKSwYCNo/WzsoZ1/k3VWQZf3bEzgAMlwspgZYjcQut311G2rJFIlfeDXC8qz3XQvBG+p7V3cSzpFvrrfYrNC7taq86fTbrzePWMBhAE+wnYVAdqnSWrafHaNTZqIPGzLdwppmrxXw1kjfH2k5sCo4rHOEuC5+l4+TZ7nKgRc2DOhGTRq3UzkYRt45ZBGxId1xslmjXocjowmy28OWFwS3WFDjyxA2rcaczHc/H1nK+GPOyH/jridzt7xKqqaPZ66uhpWOUopaaha3nEetxL2KpVp9M+eEBwDpoem3R7U+rE22jvtWCaI1bs7BjV0dELdmdkbYaLLq7sWQ0haUnSUjwSKPUEF398GrjtQ6NvWwcfUmI1+vIfhlllmPvVgPcFHv647Wcb+r3Xnbp+fN4s4WAXo55G9DbhS57S0368zDLJcgq2ydVJcyHD6EQ0+JTbpXPDiVm4w5ZCnuHz2e+zotaW5Z5Uebrclvr8FKV7zabQpdXVakpX4bMmcUHilqAbZT7ykfuuW38TBD4CoHYglE5CWI26UjxB8S2Sc2CjmesCQaYQCNg41kIj0kWbtN9dUPtEGDJC5v7/e5YKxbGAX3BL5FqUxjdz2TpbibPIEAhgvngfu9rAl+pChWBaQhVpZG305yT5uVKp78XCpUtCU+d9FvOH59drsd0LJQrkJxnC7IUwS8Wh9qF5KfLSF8uGBd4NbZQ3jQZURohcGZy/+hvCeS5v+Zfn2v/tIfqfHIhftX/vf2sY2jz/8/+szX3w824j0G9OrMSdOP6stuxLYHNldMWRVi+vVBki1RS2VfiJInzXUqRa7UqFzEfXB5rjhe5OQQxG3+ZEewg5q5Q3K92jSv7Dwyu8nueMXXxnJoU+qziCqfjL5bLOST5cqmz9yn97eZ655LFj8KUfiXTPLYY54x/3J2BAnI9Jp6wn0MQWX/T9gXWjR92T7ZbUoSd/JTvGdk3BQICBotYhwyiW/CvAL5yfi+8BvnKhbKq2sQUfv+kkLe+x6IJQBBjqreLJ8FtOz7xpFkIlb9Kn2BOHf/6CYD+8zdAGZ1KAED24UDQCT/f5JT8PcDOTUt/d/pFV2/I1ZZWl1ut264utpq1a1Du2D19En+W3MTpY40//Qs=</con:value></con:property><con:property><con:name>SAMLFULL</con:name><con:value>SAML2 Assertion=nVZbb/I4EP0rKH1c5UooJCpIXHdpoaVAL/SlMs4E3CYOjR0I/fVrB0iB0i77SUjIk/HMmYvPzBVDYWC5dcYg5iSihTQMKHMzaVVJYupGiBHmUhQCczl2R/V+z7U0w0W7K0qh26oqryXTtuwKArViWEXVRkVDrZierVrgI6fkFO3KdCpUGUugSxlHlFcVyzBLqlEUv7HhuKblWkXNtisvSuERYiZsCxXNULagUlZV5pwvXF1frVbaqqhF8Uy3DMPUn/u9EZ5DiJTa1SaizFFc2+pjzQMMQYA1HIX6lX6gc+Uxd0RmFPEkhq0v7ydfhm44utDxGJldKPld8LrUj7JjE9GIEowC8olkfvrA55FXqAezKCZ8Hv4YhGlIwyqkWMWmTS8U/RDamYYOEMYMqWyOzK2tIfgQA8VQeBh2q8rFeVXLro5jRJkfxSE7PP4/PECXEEQL8FS2C2sL7XyDJzJVuwLsdikOEkaWcCubdYEwsG01AZ9vqjCIwSdpjzDRoCmT6PR9eEfHTTZaZAaM/0mB9oqzMfKIggRqpadnK5xUHsN3j93GfwUNIx0vG+8fn/37agZgXzkT5KXdHI+aMm+izY2l33y6Ic3y46SC+vWh/dKzS3TVfxt8tj+fhg6NzPmDV24Nys70Nmm3Ob2b+L3R4G/nIfWe+M1lxy6l65Q6lbtBd9J4Tp1irJu8zMNZiupwP+88kBvn+eUxWZh2j45frtf9ZbnBpk0WMOtu0Fg5wfR6elluTJ4njQpL4aE8vJ84Yxw3sPV2XbRMRO59/Z+lvw33CP+hbPfmR8n0DTDfHWUbdFuFjqgS4r+TmZQQT/UzVXchyYdxoFypyVuSO9xE0B3xXFHDzdk0Sp2K02g1O0bZbJfrbaNUNMqOY3aMulNpWjuS2aA4gtiMqE+kL0m5m7b5HSAOXQbUg1hdRolgOqb8YrGFOCp06VA8gogyGEeCnon58c4Wa9/7dKxg4bASWSPvMl4phduI39G7uO5ziA8oWfDxPiUPAZMFAcnbsq2Z6GvGRSo+0DLhgaktkUYhEcweS5J1Ba2UdEbCRQASqB5GXhKAtpgvssTobPNvqQizTDpsj7PH9mNYx992GRA6HpEKTMbSAFFFODFbzF0g3wK+PDmDdubriUfkuxLp5DHBGySHn766RLZH3iKtXn002IHOdc+7K7Lx2hy9mn9+/ftN/ZeA9ONc5o68Jdlzu5v6Yn4IxqntOuEDaR9aslwmWe3LklljYV6XVdANSx8BTgQnrsfRO1A9t6KfNYBy4EfOc/khxITP6YgjDqFo1kJ2PGPjGAGTG0dXPLL03HXmwKVIHYeUn5I1A7EtScS/LlTYxVJPiAfibxXF3lfFTtja8yPiFAsHJ3QmT3L4rH/oCxwJs0TQZhTvGz9l4JTzQ2Ge5BwLFw01TTj8/KUg+bCqIIyjhPJuS8kE+xyd4eTrBbhfSt/MZGMg3wvJfy+GKslaAIPYJhnJ7Mvx7sonQGd7PL91+p3qnXanXbfMduWA6kslq50n5QBd7Zv4u2QvT8c9XvsX</con:value></con:property><con:property><con:name>SAMLBAU1</con:name><con:value>SAML2 Assertion=nVbbcuI4EP0VynlMGV+A2LgCVYAZ4qzJDcIk85IScgNKbJlYEoF8/UoGHCCXZefJ1e1W9+mLjvqcoSS2vRZjkHGS0tIyiSnzcm1DExn1UsQI8yhKgHkce4NWP/Tssumh7RGtFPgN7QnwWYRNx9Kj8cTRq1ABHZm2pSPXcmvgVMYoAmnKmICAMo4ob2i2aVV1y9at2tCyvIrp2WbZtq0/WmkEGZO+pUnZ1DaglqyhzTife4bx9vZWfquU02xq2KZpGQ/9cIBnkCCteb7OKA+UNTf2uBwBhjjGZZwmxrmxZ3MeMW9AphRxkcEmVvRdLNMw64a0iRiZnmjFWYgCOklzsYNoSglGMXlHqj594LM0KrXiaZoRPku+TcIylWMdlljHVpWeaMY+tCMd7SHMGNLZDFkbX3cwgQwohtL9XdDQTo7rWn50mCHKJmmWsH3x/+EBuoA4nUOks21aG2jHO/yiUs1zwF5AcSwYWcCVGtY5wsA23QR8vKvSTQYTsgwJkwO6ZAqdsQvvQFxXwydTYPxvGrTTnLWTEYoFNP883C6c29gxs4uH8PV04D4+98PncDEUj40cwK5xrihauxYPhrIYovWJi2XP4r0HQVrLYHp/efoWVhw8xXbcv4nti+BxGfTsU+PZHD+cPYxRvTPMSIjHlfvAfwmCmxEJgzbP7gX57bcjtHpZ9DPWFRN31nt22r3T5MwdVR/dfm+VwC2+rF53HyfvruuEydloNB72RsvxvbU6C7rhIGpfM+uq25mJfpj4i5shMn4vKwT+GdPL086qHW3SPcC/r9ve+YEYPwPmW1GNQeCXfskuIf4zmSkNifRJburNFfkwDpRrTXVKcYcnJN2RyJM9XMtmq2q63U633rZbju9XumatYjr1uvXLbLVdy9+SzBrFAcROSidExVKUux6bnwHixGNAI8j0RSok0zHtB48+4qgU0Dt5CVLKYJhKerbAEdyqQ03Mai/snVFKVkykdKWVrlJ+Ta+z1oRDts/J1T1OvgNM5gQUcau5ZnKwGZe1eEULwWOrvEBlCkJSe6ZY1rOrbs1gJJnHoJAaSRqJGMrz2TyvjMHWX1tHmOXau+4wv23f5nX4b1sCaRMRZcBULm2QbYQvHhdrm8j3CTu7CW/dt0RE1MWS9eQZwWsk+78+xkTNRzEjftga3GxBF7bHnZXVeOoMnqy/P/75pPFDQsZhLYtA0YLshN0++/IBkZTT3E7CvPxaFouFyFvvKGbNpHdJd1bNMG1jAFhITlwN0xegRuHEOOoBKnAfxC70+wgFn9EBRxwSOaulXDxi4xgAUxtHIC/Z8th1Zi+krByHJf9K14nltqQQ/7hQYQ8rO6m+kZ+3NIs+GvaFr504Mk+5cHBCp0pSj8/qm7HAqXRLJG2m2a7zrxx8FXxfWRS5wMLlPI0Fh+//lBQfNjSEcSooD3wtV+xydI6Tr+bgfRh9cpM/A8VeSP57MdRJPgJY7qDSPvevnndP3QA63eH5TdDPVF9zqq7vm5Lkd6m+7ppnRVH20DU/qT9rdup0OOPNfwE=</con:value></con:property><con:property><con:name>SAML</con:name><con:value>nVZbb/I4EP0rKH1c5UooJCpIXHdpoaVAL/SlMs4E3CYOjR0I/fVrB0iB0i77SUjIk/HMmYvPzBVDYWC5dcYg5iSihTQMKHMzaVVJYupGiBHmUhQCczl2R/V+z7U0w0W7K0qh26oqryXTtuwKArViWEXVRkVDrZierVrgI6fkFO3KdCpUGUugSxlHlFcVyzBLqlEUv7HhuKblWkXNtisvSuERYiZsCxXNULagUlZV5pwvXF1frVbaqqhF8Uy3DMPUn/u9EZ5DiJTa1SaizFFc2+pjzQMMQYA1HIX6lX6gc+Uxd0RmFPEkhq0v7ydfhm44utDxGJldKPld8LrUj7JjE9GIEowC8olkfvrA55FXqAezKCZ8Hv4YhGlIwyqkWMWmTS8U/RDamYYOEMYMqWyOzK2tIfgQA8VQeBh2q8rFeVXLro5jRJkfxSE7PP4/PECXEEQL8FS2C2sL7XyDJzJVuwLsdikOEkaWcCubdYEwsG01AZ9vqjCIwSdpjzDRoCmT6PR9eEfHTTZaZAaM/0mB9oqzMfKIggRqpadnK5xUHsN3j93GfwUNIx0vG+8fn/37agZgXzkT5KXdHI+aMm+izY2l33y6Ic3y46SC+vWh/dKzS3TVfxt8tj+fhg6NzPmDV24Nys70Nmm3Ob2b+L3R4G/nIfWe+M1lxy6l65Q6lbtBd9J4Tp1irJu8zMNZiupwP+88kBvn+eUxWZh2j45frtf9ZbnBpk0WMOtu0Fg5wfR6elluTJ4njQpL4aE8vJ84Yxw3sPV2XbRMRO59/Z+lvw33CP+hbPfmR8n0DTDfHWUbdFuFjqgS4r+TmZQQT/UzVXchyYdxoFypyVuSO9xE0B3xXFHDzdk0Sp2K02g1O0bZbJfrbaNUNMqOY3aMulNpWjuS2aA4gtiMqE+kL0m5m7b5HSAOXQbUg1hdRolgOqb8YrGFOCp06VA8gogyGEeCnon58c4Wa9/7dKxg4bASWSPvMl4phduI39G7uO5ziA8oWfDxPiUPAZMFAcnbsq2Z6GvGRSo+0DLhgaktkUYhEcweS5J1Ba2UdEbCRQASqB5GXhKAtpgvssTobPNvqQizTDpsj7PH9mNYx992GRA6HpEKTMbSAFFFODFbzF0g3wK+PDmDdubriUfkuxLp5DHBGySHn766RLZH3iKtXn002IHOdc+7K7Lx2hy9mn9+/ftN/ZeA9ONc5o68Jdlzu5v6Yn4IxqntOuEDaR9aslwmWe3LklljYV6XVdANSx8BTgQnrsfRO1A9t6KfNYBy4EfOc/khxITP6YgjDqFo1kJ2PGPjGAGTG0dXPLL03HXmwKVIHYeUn5I1A7EtScS/LlTYxVJPiAfibxXF3lfFTtja8yPiFAsHJ3QmT3L4rH/oCxwJs0TQZhTvGz9l4JTzQ2Ge5BwLFw01TTj8/KUg+bCqIIyjhPJuS8kE+xyd4eTrBbhfSt/MZGMg3wvJfy+GKslaAIPYJhnJ7Mvx7sonQGd7PL91+p3qnXanXbfMduWA6kslq50n5QBd7Zv4u2QvT8c9XvsX</con:value></con:property><con:property><con:name>runTeardown</con:name><con:value>false</con:value></con:property><con:property><con:name>Rights_CID</con:name><con:value>urn:dece:cid:file:RTUPDATE_R3_EXAMPLE_CIDVersion_212395.txt</con:value></con:property><con:property><con:name>Rights_APID</con:name><con:value>urn:dece:apid:file:INTERACTIVE_MetadataDigitalCreate.txt:39983831</con:value></con:property><con:property><con:name>Rights_ALID</con:name><con:value>urn:dece:alid:file:RTUPDATE_R3_EXAMPLE_ALIDVersion_212395.txt</con:value></con:property><con:property><con:name>Retired_UserName_FAU1</con:name><con:value>Retired_FAU_20141022_1413979949885</con:value></con:property><con:property><con:name>RA_Node_Account_ID</con:name><con:value>0602CD8783BC68BBE0530F991F0A2B94</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa.q.uvvu.com:7001</con:value></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>Profile</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>policy_TOU</con:name><con:value>https://qa.c.uvvu.com:7001/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/html</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:RET</con:value></con:property><con:property><con:name>OrgID</con:name><con:value>ISC_R1</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>Node_User</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>Node_Account_ID</con:name><con:value>105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>Node_Account</con:name><con:value>urn:dece:accountid:org:dece:105F899EFEA21E8AE05307991F0A552E</con:value></con:property><con:property><con:name>NODEUSERID_SA_BAU1</con:name><con:value>urn:dece:userid:org:dece:FDD6BFCAACED1CE6E0401F0A079976C8</con:value></con:property><con:property><con:name>NODEUSERID_RA_SAU1</con:name><con:value>urn:dece:userid:org:dece:FDC823FE2B9CD130E0401F0A0799405A</con:value></con:property><con:property><con:name>NODEUSERID_RA_BAU1</con:name><con:value>urn:dece:userid:org:dece:FDC7DFADD42B774CE0401F0A059965AC</con:value></con:property><con:property><con:name>NODEUSERIDSAU1</con:name><con:value>urn:dece:userid:org:dece:0A408ECEC6AA7E08E05307991F0A8F5E</con:value></con:property><con:property><con:name>NODEUSERIDFULL_SA_SAU1</con:name><con:value>urn:dece:userid:org:dece:0A408ECEC6AA7E08E05307991F0A8F5E</con:value></con:property><con:property><con:name>NODEUSERIDFULL_SA_FAU1</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>NODEUSERIDFULL_SA_BAU1</con:name><con:value>urn:dece:userid:org:dece:0A408ECE9B2A7DD3E05307991F0AB81D</con:value></con:property><con:property><con:name>NODEUSERIDFULL_RA_SAU1</con:name><con:value>urn:dece:userid:org:dece:0602CD871FF868B7E0530F991F0A86BB</con:value></con:property><con:property><con:name>NODEUSERIDFULL_RA_FAU1</con:name><con:value>urn:dece:userid:org:dece:0602CD88028068DCE0530F991F0AA598</con:value></con:property><con:property><con:name>NODEUSERIDFULL</con:name><con:value>urn:dece:userid:org:dece:105F89BDCF071E7AE05307991F0A98C2</con:value></con:property><con:property><con:name>NODEUSERIDBAU1</con:name><con:value>urn:dece:userid:org:dece:0A408ECE9B2A7DD3E05307991F0AB81D</con:value></con:property><con:property><con:name>nodeIdRTL_cert</con:name><con:value>qa_retailer</con:value></con:property><con:property><con:name>nodeIdRTLCS_cert</con:name><con:value>qa_retailer_cs</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdLLASP_cert</con:name><con:value>qa_linkedlasp</con:value></con:property><con:property><con:name>nodeIdLLASPCS_cert</con:name><con:value>qa_linkedlasp_cs</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdDSP_cert</con:name><con:value>IOT_SoapUI_dsp</con:value></con:property><con:property><con:name>nodeIdDSPCS_cert</con:name><con:value>qa_dsp_cs</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDLASP_cert</con:name><con:value>qa_dynamiclasp</con:value></con:property><con:property><con:name>nodeIdDLASPCS_cert</con:name><con:value>qa_dynamiclasp_cs</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCON_cert</con:name><con:value>IOT_SoapUI_contentprovider</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdAccportal_cert</con:name><con:value>IOT_SoapUI_access_portal</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>NODEACCOUNTID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE45EA13333F27FD3E0401F0A07996EE5</con:value></con:property><con:property><con:name>NeustarVM</con:name><con:value>NO</con:value></con:property><con:property><con:name>md_schema</con:name><con:value>http://www.movielabs.com/schema/md/v2.1/md</con:value></con:property><con:property><con:name>Last-Modified</con:name><con:value>Wed, 22 Oct 2014 09:26:36 GMT</con:value></con:property><con:property><con:name>JKSPassword</con:name><con:value>testing</con:value></con:property><con:property><con:name>JKSAliasName</con:name><con:value>qalp1</con:value></con:property><con:property><con:name>JDBCDriver</con:name><con:value>DECEOracle</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:@stdeqp-clu1-scan.va.neustar.com:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>GeoProfile</con:name><con:value>US</con:value></con:property><con:property><con:name>ExpirationDateTime</con:name><con:value>2014-10-27T15:43:18.647Z</con:value></con:property><con:property><con:name>eTag</con:name><con:value>"105FAD9C22E16F16E05307991F0A1F91:958A9105"</con:value></con:property><con:property><con:name>envIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>Encoded_PolicyClass</con:name><con:value>urn:dece:type:policy:</con:value></con:property><con:property><con:name>Encoded_NodeUser_Id</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>Encoded_NodeAcc_Id</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>enablePriorityScript</con:name><con:value>falsedisablePriority=P3,CHILD,CLG</con:value></con:property><con:property><con:name>DomainID</con:name><con:value>urn:dece:domainid:dece:1234</con:value></con:property><con:property><con:name>DOB_XML</con:name><con:value>1888-08-09</con:value></con:property><con:property><con:name>DisplayName_New</con:name><con:value>Sanity_Acc_Create_new20141215_050112</con:value></con:property><con:property><con:name>disablePriority</con:name><con:value>P3,CHILD,CLG</con:value></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>DeviceID</con:name><con:value>urn:dece:deviceid:org:dece:228913</con:value></con:property><con:property><con:name>delayTimeAfterUpdate</con:name><con:value>60000</con:value></con:property><con:property><con:name>delayTimeAfterGet</con:name><con:value>60000</con:value></con:property><con:property><con:name>delayTimeAfterCreate</con:name><con:value>60000</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>DEQA1_APP</con:value></con:property><con:property><con:name>DBPassword</con:name><con:value>lp1db_23</con:value></con:property><con:property><con:name>DBIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBHost</con:name><con:value>LP3</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>coords</con:name><con:value>FALKY,COORD-10000,COORD-3034,COORD-2999,COORD-2509,COORD-627,UV-135,UV-340,Coord-2180</con:value></con:property><con:property><con:name>Coordinator_Schema</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_02</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>clusterNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>CID2</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_295873655.txt</con:value></con:property><con:property><con:name>CHILD_MAX_AGE</con:name><con:value>12</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2003-06-01</con:value></con:property><con:property><con:name>CHILD_DOB</con:name><con:value>01-Jun-03</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>certspath</con:name><con:value>C://certs/</con:value></con:property><con:property><con:name>CertMatchesNodeName</con:name><con:value>YES</con:value></con:property><con:property><con:name>CertMatchesNodeID</con:name><con:value>YES</con:value></con:property><con:property><con:name>cacheDuration</con:name><con:value>86400</con:value></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa.b.uvvu.com:7001</con:value></con:property><con:property><con:name>audience</con:name><con:value/></con:property><con:property><con:name>APID_GET_DELETE_REPLACED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:715043276</con:value></con:property><con:property><con:name>APID_GET_DELETE_RECALLED</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:309286894</con:value></con:property><con:property><con:name>APID_GET_DELETE</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:653478442</con:value></con:property><con:property><con:name>APID_AUDIO</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:309286894</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt:653478442</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_786957482.txt</con:value></con:property><con:property><con:name>ADULT_MIN_AGE</con:name><con:value>18</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-06-03</con:value></con:property><con:property><con:name>ADULT_DOB</con:name><con:value>03-Jun-95</con:value></con:property><con:property><con:name>AccountDisplayName</con:name><con:value>Sanity_Acc_Create_20150303_024435</con:value></con:property></con:properties><con:wssContainer><con:crypto><con:source>C:/Code_Repo/uv-coordinator-api-regression/Certs/QALP1/LLASP_concat.pem</con:source><con:password>123</con:password><con:type>KEYSTORE</con:type></con:crypto><con:crypto><con:source>C:/Code_Repo/uv-coordinator-api-regression/Certs/QALP1/LLASP_CS_1_concat.pem</con:source><con:password>123</con:password><con:type>KEYSTORE</con:type></con:crypto></con:wssContainer><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="TestSuiteRunListener.afterTestCase" name="TestSuiteRunListener.afterTestCase" target=""><con:script disabled="false"/></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>
if(testStepResult.getTestStep().config.type.toString() == "restrequest"){
log.info("################################################################################");
log.info("Logging Request and Response for rest teststep : '" + testStepResult.getTestStep().getName());           

//Get request  byte array and convert it to string and log
byte [] tempByteArrRequest = testStepResult.getRawRequestData();
String tempRequest = new String(tempByteArrRequest);
//def tempRequest2 = context.getCurrentStep().getPropertyValue("rawrequest")
//def tempRequest3 = context.getCurrentStep().getProperty("request").getValue();
log.info("-----------------------------Request--------------------------------");
log.info(tempRequest);
//log.info("Second ----------" + tempRequest2);
//log.info("Third ----------" + tempRequest3);
//Get response  byte array and convert it to string and log
byte [] tempByteArrResponse = testStepResult.getRawResponseData();
String tempResponse = new String(tempByteArrResponse);


log.info("-----------------------------Response--------------------------------");
log.info(tempResponse);

log.info("################################################################################");

}
else{
                log.info("TestStep type  : " + testStepResult.getTestStep().config.type)
}</con:script></con:eventHandlers><con:sensitiveInformation/></con:soapui-project>