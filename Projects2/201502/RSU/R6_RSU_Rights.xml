<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="RightsStatusUpdate_R5_11012013" resourceRoot="${projectDir}" soapui-version="4.5.1" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config">
  <con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="D:\DECE_API\DECE_API_4.1\RSU_R4.2-1.0.7-3.03\RightsReports\R4_RSURights\"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings>
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsStatusUpdate" type="rest" id="d93f0c6b-f87c-4c17-a50b-299189ec6f89" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/><con:endpoints/>
    <con:resource name="RightsStatusUpdate" path="rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/RightsToken/{RightsTokenID}/ResourceStatus/Current/Update" id="f8c7b16d-4071-4b2a-a075-b588d6c85fea">
      <con:settings/>
      <con:parameters>
        <con:parameter disableUrlEncoding="true">
          <con:name>AccountID</con:name>
          <con:style>TEMPLATE</con:style>
          <con:default>as</con:default>
        </con:parameter>
        <con:parameter disableUrlEncoding="true">
          <con:name>RightsTokenID</con:name>
          <con:style>TEMPLATE</con:style>
          <con:default>as</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="RightsStatusUpdate" method="PUT" id="75d7c099-f00e-459f-ad05-f7dec83725a2">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/xml</con:mediaType>
          <con:params/>
          <con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ResourceStatus</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>text/xml</con:mediaType>
          <con:status>405</con:status>
          <con:params/>
          <con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="FAULT">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>403 400 409 404</con:status>
          <con:params/>
          <con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:ErrorList</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>303</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType xsi:nil="true"/>
          <con:status>0</con:status>
          <con:params/>
          <con:element>data</con:element>
        </con:representation>
        <con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>400 403 500 409</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>303</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=utf-8</con:mediaType><con:status>412</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="9bdbdb51-509f-4906-8baa-377a6ef8d6b1">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting>
          </con:settings>
          <con:endpoint>https://qa.p.uvvu.com:7001</con:endpoint>
          <con:request/>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenCreate" type="rest" basePath="" definitionUrl="RightsTokenCreate.wadl" id="62652564-4719-48d7-b3d3-bc5c7b906a70" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings>
      <con:setting id="CreateWadlDocumentationAction@report-directory">C:\Documents and Settings\schinna\Desktop\Wadl2Java</con:setting>
    </con:settings>
    <con:definitionCache type="TEXT"/><con:endpoints>
      <con:endpoint>https://qa.p.uvvu.com:7001</con:endpoint>
    <con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints>
    <con:resource name="RightsTokenCreate" path="rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/RightsToken" id="c1eb50d8-9726-491d-ad1a-8c2ab109476c">
      <con:settings/>
      <con:parameters>
        <con:parameter disableUrlEncoding="true">
          <con:name>AccountID</con:name>
          <con:value/>
          <con:style>TEMPLATE</con:style>
          <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
          <con:default/>
        </con:parameter>
      </con:parameters>
      <con:method name="RightsTokenCreate Request" method="POST" id="e0e10baf-8798-4df6-a3ac-6dec0e3300ab">
        <con:settings/>
        <con:parameters>
          <con:parameter>
            <con:name>AccountID</con:name>
            <con:value/>
            <con:style>TEMPLATE</con:style>
            <con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="REQUEST" id="">
          <con:mediaType>application/xml</con:mediaType>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="RESPONSE" id="">
          <con:mediaType>application/xml</con:mediaType>
          <con:status/>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>application/xml</con:mediaType>
          <con:status>400 401 403 404</con:status>
          <con:params/>
          <con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>text/html</con:mediaType>
          <con:status>413 500</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:representation type="FAULT" id="">
          <con:mediaType>text/plain</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:element xsi:nil="true"/>
          <con:description xsi:nil="true"/>
        </con:representation>
        <con:request name="Request 1" mediaType="application/xml" postQueryString="false" id="b140db0b-e72a-468a-b8fd-f64bca152280">
          <con:settings/>
          <con:endpoint>https://qa.p.uvvu.com:7001</con:endpoint>
          <con:request/>
          <con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  
  <con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="E2EServices" type="rest" basePath="" definitionUrl="C:\Users\srikanth.paridala\Desktop\wadl\E2EServices_1_1_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/srikanth.paridala/Desktop/wadl/E2EServices_1_1_1.wadl"><con:part><con:url>file:/C:/Users/srikanth.paridala/Desktop/wadl/E2EServices_1_1_1.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02">
  <doc xml:lang="en" title="E2EServices"/>
  <resources base="">
    <resource path="rest/${#Project#V1}/${#Project#V2}/Account" id="E2E_AccountCreate">
      <doc xml:lang="en" title="E2E_AccountCreate"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/xml" element="coor:Account" xmlns:coor="${Coordinator_Schema}"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="coor:Account" xmlns:coor="${Coordinator_Schema}"/>
        </response>
        <response status="201">
          <representation mediaType="application/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/User" id="E2E_FirstUser">
      <doc xml:lang="en" title="E2E_FirstUser"/>
      <param name="AccountID" default="AccountID" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/xml" element="coor:User" xmlns:coor="${Coordinator_Schema}"/>
        </request>
        <response status="201">
          <representation mediaType="application/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="coor:User" xmlns:coor="${Coordinator_Schema}"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="E2E_SinglePolicyCreate">
      <doc xml:lang="en" title="E2E_SinglePolicyCreate"/>
      <param name="NodeAccountId" default="NodeAccountId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="NodeUserId" default="NodeUserId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="PolicyClass" default="PolicyClass" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/xml" element="coor:PolicyList" xmlns:coor="${Coordinator_Schema}"/>
        </request>
        <response status="201">
          <representation mediaType="application/xml"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="coor:PolicyList" xmlns:coor="${Coordinator_Schema}"/>
        </response>
        <response status="400">
          <representation mediaType="application/xml" element="coor:ErrorList" xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="E2E_ManageAccountConcentPolicy">
      <doc xml:lang="en" title="E2E_ManageAccountConcentPolicy"/>
      <param name="NodeAccountId" default="NodeAccountId" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <param name="PolicyClass" default="PolicyClass" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/xml" element="coor:PolicyList" xmlns:coor="${Coordinator_Schema}"/>
        </request>
        <response status="">
          <representation mediaType="application/xml" element="coor:PolicyList" xmlns:coor="${Coordinator_Schema}"/>
        </response>
        <response status="201">
          <representation mediaType="application/xml"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/SecurityToken/SecurityTokenExchange" id="E2E_STSCreate">
      <doc xml:lang="en" title="E2E_STSCreate"/>
      <param name="tokentype" type="xs:string" required="false" default="" style="query" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="POST" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request>
          <representation mediaType="application/xml" element="coor:Credentials" xmlns:coor="${Coordinator_Schema}"/>
        </request>
        <response status="403">
          <representation mediaType="application/xml" element="coor:ErrorList" xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator"/>
        </response>
        <response status="">
          <representation mediaType="application/xml" element="coor:Credentials" xmlns:coor="${Coordinator_Schema}"/>
        </response>
        <response status="201">
          <representation mediaType="text/plain; charset=UTF-8"/>
        </response>
      </method>
    </resource>
    <resource path="rest/${#Project#V1}/${#Project#V2}/SecurityToken/Assertion/{ASSERTION}" id="E2E_STSGet">
      <doc xml:lang="en" title="E2E_STSGet"/>
      <param name="ASSERTION" default="ASSERTION" type="xs:string" required="false" style="template" xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
      <method name="GET" id="Method 1">
        <doc xml:lang="en" title="Method 1"/>
        <request/>
        <response status="200">
          <representation mediaType="text/xml;charset=ISO-8859-1"/>
        </response>
      </method>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints/><con:resource name="E2E_AccountCreate" path="rest/${#Project#V1}/${#Project#V2}/Account"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:Account</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:Account</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="E2E_FirstUser" path="rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/User"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default></con:parameter></con:parameters><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="E2E_SinglePolicyCreate" path="rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:value>NodeUserId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeUserId</con:default></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default></con:parameter></con:parameters><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="E2E_ManageAccountConcentPolicy" path="rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/Policy/{PolicyClass}"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value>NodeAccountId</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>NodeAccountId</con:default></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value>PolicyClass</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>PolicyClass</con:default></con:parameter></con:parameters><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="E2E_STSCreate" path="rest/${#Project#V1}/${#Project#V2}/SecurityToken/SecurityTokenExchange?tokentype={tokentype}"><con:settings/><con:parameters><con:parameter><con:name>tokentype</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/08/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="${Coordinator_Schema}">coor:Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="E2E_STSGet" path="rest/${#Project#V1}/${#Project#V2}/SecurityToken/Assertion/{ASSERTION}"><con:settings/><con:parameters><con:parameter><con:name>ASSERTION</con:name><con:value>ASSERTION</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>ASSERTION</con:default></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RightsTokenGet" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="RightsTokenGet" path="/rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/RightsToken/{RightsTokenID}"><con:settings/><con:parameters><con:parameter disableUrlEncoding="true"><con:name>AccountID</con:name><con:value>AccountID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>AccountID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter disableUrlEncoding="true"><con:name>RightsTokenID</con:name><con:value>RightsTokenID</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>RightsTokenID</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:RightsToken</con:element></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="01RightsResourceStatusUpdate_RET_CS_TestCases" id="dd3b7908-af47-49c6-b96a-9a0b171c29ec">
    <con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_4.1\RSU_R4.2-1.0.7-3.02\RightsReports\RETCS</con:setting></con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="E2E_Run_RETCS" searchProperties="true" id="20d33ec7-b8b2-47d3-ae3d-02481c818612"><con:settings/><con:testStep type="groovy" name="Create_AccountUSer_STS"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","RET_CS_1");
myTS.setPropertyValue("role","nodeIdRTLCS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","RET_CS_1");
tS.setPropertyValue("role","nodeIdRTLCS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePolicies" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]

def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("Node_Value","urn:dece:role:retailer:customersupport")
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_RightsResourceStatusUpdate_FUNC_RTL_CS_With_Valid_Accountid and Valid RightsTokenId_303" searchProperties="true" id="b9d793c3-2470-4ddc-bc29-8accf2d15bfa" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>The test case is to Update the rightstoken with RightsResourceStatusUpdate API .
Verify that the Account information and Rightstoken information.
Ensure all required field is included in the Update request. Send the RightsResourceStatusUpdate API transaction. 
Verify that the token has been Updated successfully and that it contains the ID for the Updated rights token.

Expected Result :

Response-Code: 200</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="ab887b1e-da98-4367-ab12-007b246715ca">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

def userName = context.expand( '${#Project#UserName}' )

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));

</script></con:config>
      </con:testStep>
      
      
      <con:testStep type="groovy" name="RightsTokenCreate" id="d8852df2-2bff-4fda-8359-165587987968"><con:settings/><con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config></con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="7cf39be5-0415-47b6-828f-47a3ad348f14">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;
log.info rtDBinfo;
TestCase_Accountid = testCase.getPropertyValue("accountoid");
Val_rtDBinfo = new XmlSlurper().parseText(rtDBinfo);

def node_Account_ID = context.expand( '${#Project#Node_Account_ID}' )
log.info   "RightToken Belongs to Account :" + Val_rtDBinfo.ResultSet.Row.ACCOUNT_OID; 

RightsAccountid = (Val_rtDBinfo.ResultSet.Row.ACCOUNT_OID).toString();

		if (( rtStatus.toString()!='active') || (rtStatus.toString()!='')){
			//if( RightsAccountid == '7001'){
			if( RightsAccountid == node_Account_ID){
				log.info "Calling RightsToken Create API for a new RightsToken !"

				def runnerRTU = RTURequest.run(null,false);
				log.info runnerRTU.getStatus()
				assert runnerRTU.status == Status.FINISHED;
			}
			else
			{
				
				//log.info "Rights Token Belongs to different Account or not Active";
			}
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="af984fc9-3f3b-40ba-afab-a329d8b1839f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");
def nodeid = context.expand( '${#Project#nodeIdRTLCS}' )

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",nodeid);

testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","0");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="40e77045-3a96-4586-9aa1-885caa1ebf19">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="fac8568f-4591-4b39-8837-11aee5e27c3c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="3e5fb210-5c22-472d-8220-6cf02002721a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="9d4435f7-ad52-4950-b442-e5c919ec6058">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re - Set RightsToken In active Status" id="14f36ce3-cb7b-4130-8749-d8d179ac1c1e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        <con:property><con:name>AccountID</con:name><con:value/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountStatusXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ALID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertCommon</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>assertionAccountIdFULL</con:name><con:value/></con:property><con:property><con:name>assertionUserId</con:name><con:value>DF9178990CAAFAA5E0401F0A05996FE4</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value/></con:property><con:property><con:name>assertionUUID</con:name><con:value>_bd8cf96b-4bd2-432c-a088-bbed17768738</con:value></con:property><con:property><con:name>ContentID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>StatusUpdateSuccess</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>expectErrTypeRTUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeRTUreate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FeedRTUReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocLocation2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocPreference2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFWebLocLocation1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>LICAcqBaseLoc</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer:customersupport</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value/></con:property><con:property><con:name>PIPurchaseAccount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PIPurchaseTime</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PIPurchaseUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        
        
        
        
        <con:property><con:name>PPCanDownLoad1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        
        
        <con:property><con:name>PPCanDownLoad2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        <con:property><con:name>PPCanStream1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanStream2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanStream3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPContentProfile1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPContentProfile2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        <con:property><con:name>PPContentProfile3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        <con:property><con:name>QC_Id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property>
        
        <con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:pending</con:value></con:property><con:property><con:name>RightsLockerID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>8</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>RRSValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RSCreatedby</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RSCreationDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RSDescription</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-06-20 12:59:28.0</con:value></con:property><con:property><con:name>SoldAsBundleID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SoldAsContentID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SqlStr</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>VCAllowedUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_RightsResourceStatusUpdate_FUNC_RTL_CS_with_Unmatched_Accountid_in URL" searchProperties="true" id="3fad79db-6dd7-4590-91ae-8c38cbc2b550" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to  Verify the exception/error returned for RightsToken status update with unmatched accountid information in URL. API should return an error message for unmatched Account id.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="eab38b0a-0f4f-4852-a1c1-fb87b6465e17">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' );

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));;
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="e7255940-6bcb-42c2-9b09-ea2a73ccee26">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Unmatched Account ID" id="5b9ce96e-7c6b-4812-a5f3-d9d7e6682b8b">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));

//testRunner.testCase.testSteps["RightsTokenCreate Request POST"].setPropertyValue( "Request",RTKRequest);
//testRunner.testCase.testSteps["RightsTokenCreate Request POST"].setPropertyValue( "AccountID",'urn:dece:accountid:org:dece:100798');
def node_Account_ID = context.expand( '${#Project#Node_Account_ID}' )
log.info node_Account_ID

testProject.setPropertyValue("node_Account_IDbak",node_Account_ID);

testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testProject.setPropertyValue("Node_Account_ID","urn:dece:accountid:org:dece:xyz");

testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","ACCOUNTID NOT MATCH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="31e94133-4a24-445e-8f3c-916c6782925a">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;
</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="07d9ec20-8638-4074-9ff6-9cc9764a313c">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")


RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="e8160a6b-f504-4571-ae68-abfc499e9f9c">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")
def node_Account_IDbak = context.expand( '${#Project#node_Account_IDbak}' )
testProject.setPropertyValue("Node_Account_ID",node_Account_IDbak);

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}1000</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24591</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>9</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_RightsResourceStatusUpdate_FUNC_RTL_CS_with_inactive_Accountid in URL_303SeeOther" searchProperties="true" id="bb3ed788-ba0b-49b4-9174-ec13bafa72c9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to  Verify the exception/error returned for RightsToken status update with inactive  accountid information in URL. API should return an error message for inactive  Account id.

Error code : 401 , Account not active</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="6deabbc1-b916-4315-9afc-199b10defdf4">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="8be6a3a4-681a-4ec4-bdc9-83b64a66be75">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Account Inactive Statuses" id="0fe6279c-fc1c-4998-a6fc-85ddfe6a276c">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def GetAccountStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set Account Status");

// Get ALL inactive Status from ACCOUNT_STATUS_REF Except = 'Pending'

SqlStr = "select Status from ACCOUNT_STATUS_REF where Status !='active'and Status !='deleted'";

testCase.setPropertyValue("SqlStr",SqlStr);

GetAccountStatus.setPropertyValue("TCaseName",testCase.getName());
GetAccountStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( GetAccountStatus, null );

TSrunner.runTestStepByName("Get Account Status for RTSU");

assert TSrunner.status == Status.INITIALIZED;

 log.info " Current Account Status: " + testCase.getPropertyValue("AccountStatus");

testCase.getPropertyValue("AccountStatusXML");</script></con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Feed DataSource for Inactive Account Statuses" id="1bc84650-c415-478e-a345-79cb6501c2d9">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="XML">
            <con:configuration><sourceStep>Get Account Inactive Statuses</sourceStep><sourceProperty>result</sourceProperty><rowPath>//Results[1]/ResultSet[1]/Row</rowPath><columnPath>STATUS</columnPath></con:configuration>
          </con:dataSource>
          <con:property>AccountStatus</con:property>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update 1" id="3d4f3c05-dc3a-47a1-8f46-25b0303dba2b">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,"LP1");

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SetUp inactive Account Status for RTSU" id="3eec91b5-c945-4ba9-a550-1076e7052f63">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get AccountStatus Values from Data Source

def DsAccountStatus = testRunner.testCase.testSteps['Feed DataSource for Inactive Account Statuses'];
log.info  "Account Status is to set to: " + DsAccountStatus.getPropertyValue("AccountStatus");

testCase.setPropertyValue("AccountStatus",DsAccountStatus.getPropertyValue("AccountStatus"));

def SetAccountStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set Account Status");

SetAccountStatus.setPropertyValue("TCaseName",testCase.getName());
SetAccountStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetAccountStatus, null );

TSrunner.runTestStepByName("Set Account Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="9c838009-580e-4e68-9152-310c297fd18e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="97085c24-aded-4245-92e4-4bd9041ea825">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="ca31f548-3061-466f-ac2a-2608139337e0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="1cd38aec-f098-46d8-89c9-3eb596bbe768">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="DataSource Loop" id="9f63105c-61a7-49e5-9540-558b7caedc37">
        <con:settings/>
        <con:config>
          <dataSourceStep>Feed DataSource for Inactive Account Statuses</dataSourceStep>
          <targetStep>SetUp inactive Account Status for RTSU</targetStep>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Setactive Account Status" id="18334e35-e5d5-4109-9cb0-4c165dd89d0d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Re-set AccountStatus Values  = 'active'

testCase.setPropertyValue("AccountStatus","active");

def SetAccountStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set Account Status");

SetAccountStatus.setPropertyValue("TCaseName",testCase.getName());
SetAccountStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetAccountStatus, null );

TSrunner.runTestStepByName("Set Account Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AccountStatus</con:name>
          <con:value>active</con:value>
        </con:property>
        <con:property>
          <con:name>AccountStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>archived</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>blocked</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>blocked:tou</STATUS>
    </Row>
    <Row rowNumber='4'>
      <STATUS>deidentified</STATUS>
    </Row>
    <Row rowNumber='5'>
      <STATUS>forcedeleted</STATUS>
    </Row>
    <Row rowNumber='6'>
      <STATUS>mergedeleted</STATUS>
    </Row>
    <Row rowNumber='7'>
      <STATUS>other</STATUS>
    </Row>
    <Row rowNumber='8'>
      <STATUS>pending</STATUS>
    </Row>
    <Row rowNumber='9'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>ACCOUNT_NOT_ACTIVE</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24596</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>6</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsBundleID</con:name>
          <con:value>urn:dece:bid:100001</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SqlStr</con:name>
          <con:value>select Status from ACCOUNT_STATUS_REF where Status !='active'and Status !='deleted'</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_RightsResourceStatusUpdate_FUNC_RTL_CS_with_Non-existing_account in URL" searchProperties="true" id="276f584e-e478-4bc2-b707-bfed596886ab" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to  Verify the exception/error returned for RightsToken status update with non -existing  accountid information in URL. API should return an error message for non - existing  Account id.

Expected Result :

System should return error message

ERROR ID : Request:RightsAccountNotFound

DESCRIPTION : Rights Account is not found

HTTP STATUS  CODE : 404</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="b09654af-911b-4cd5-ac05-18cabd2c20cb">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' );
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="0227dbf3-7920-45b2-8583-be3e67b47182">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Non-Existing Account ID" id="e4c7cbf3-1ce4-4b8f-98ec-96015df9124b">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");
def node_Account_ID = context.expand( '${#Project#Node_Account_ID}' )
log.info node_Account_ID

testProject.setPropertyValue("node_Account_IDbak",node_Account_ID);
//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testProject.setPropertyValue("Node_Account_ID","urn:dece:accountid:org:dece:abcd");
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","ACCOUNTID NOT MATCH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="c4714f0f-e1be-47b3-9859-ae537ce472ff">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="bc66c433-404b-451c-8fc5-55e576cdd993">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="3ae31aa4-e304-41e6-babc-157c77dccfe4">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

def node_Account_IDbak = context.expand( '${#Project#node_Account_IDbak}' )
testProject.setPropertyValue("Node_Account_ID",node_Account_IDbak);

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448243043243802284210</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24597</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>17</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_RightsResourceStatusUpdate_FUNC_RTL_CS_with_Invalid_Accountid" searchProperties="true" id="64db5004-1b7c-4dde-9167-3fee841ee92b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to verify the error response  the RightsResourceStatusUpdate API should provide for updating a valid Rightstoken with an Invalid account id in the request URL.

Expected Response : 401 Invalid Account Id.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="2a6d6b6d-ef95-405e-acf5-d0a50e8334d1">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="23c15ff6-7e58-430f-b05c-7cb3fa47bc44">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Invalid Account ID" id="0398a20e-fb72-4097-bbcf-18c4391d7d35">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

def node_Account_ID = context.expand( '${#Project#Node_Account_ID}' )
log.info node_Account_ID

//RightsToken Request and properties
testProject.setPropertyValue("node_Account_IDbak",node_Account_ID);

testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testProject.setPropertyValue("Node_Account_ID","urn:dece:accountid:org:dece:xxx");


TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));

testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","ACCOUNTID NOT MATCH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="65776cf1-57b8-48fc-bf54-c245417f15cf">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="7fdb6c7b-eb45-4c93-864c-1082823fafd9">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="c842c826-cb37-45d3-9f38-8112df4fed59">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

def node_Account_IDbak = context.expand( '${#Project#node_Account_IDbak}' )
testProject.setPropertyValue("Node_Account_ID",node_Account_IDbak);

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24605</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A079904488989000</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_RightsResourceStatusUpdate_FUNC_RTL_CS_with_ Invalid_RightsTokenId" searchProperties="true" id="c566ced2-3795-4032-b5c2-ef24e54e270d" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to verify the error response  the RightsResourceStatusUpdate API should provide for updating an invalid Rightstoken with an valid account id in the request URL.


Expected Response : 401 Invalid RightsTokenID</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="7e4c8a49-3812-4a56-8aa9-bd462ec91d3a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="b1da924f-7a79-4576-bd37-002a25ed3d1d">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def targetSystem = context.expand( '${#Project#targetSystem}' )
def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Invalid RightsToken ID" id="45e7f73b-3d3d-4c26-bb11-797f79c385cf">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("rightstokenid", "urn:dece:rightstokenid:org:org:dece:9E7355CA36937E50E0401F0A0798726F");
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_INVALID");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="da4ec8bc-7ffb-4bf7-ad65-5fc7e80db1cf">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="696ff1e7-f419-4563-9751-7e10fdad6e61">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="612e7c49-404f-4989-9b77-c30b466c99a4">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24606</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:org:dece:9E7355CA36937E50E0401F0A0798726F</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>RIGHTSTOKEN_INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_RightsResourceStatusUpdate_FUNC_RTL_CS_with_inactive_user_303SeeOther" searchProperties="true" id="e06863bc-de79-4ae3-90e9-31e3c4099053" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with inactive user.

Expected Result :

System should return error message

ERROR ID : Request:RightsUserNotActive  

DESCRIPTION : Rights User is not active

HTTP STATUS  CODE : 401</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="cda33178-ab7d-4b9a-a0c3-fddb06ae558a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Get User Inactive Statuses" id="6b75658f-4f84-463d-ba66-783a53b678d0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def GetUserStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set User Status");

// Get ALL inactive Status from USER_STATUS_REF Except = 'Pending'

SqlStr = "select Status from USER_STATUS_REF where Status !='active'";

testCase.setPropertyValue("SqlStr",SqlStr);

GetUserStatus.setPropertyValue("TCaseName",testCase.getName());
GetUserStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( GetUserStatus, null );

TSrunner.runTestStepByName("Get User Status for RTSU");

assert TSrunner.status == Status.INITIALIZED;

 log.info " Current User Status: " + testCase.getPropertyValue("UserStatus");

testCase.getPropertyValue("UserStatusXML");</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Feed DataSource for Inactive User Statuses" id="1d409da6-e921-4f3e-9844-bf46cf3c9683">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="XML">
            <con:configuration><sourceStep>Get User Inactive Statuses</sourceStep><sourceProperty>result</sourceProperty><rowPath>//Results[1]/ResultSet[1]/Row</rowPath><columnPath>STATUS</columnPath></con:configuration>
          </con:dataSource>
          <con:property>UserStatus</con:property>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="97797fd3-21c8-47bf-b1d0-3c91176e2e7a">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SetUp User Inactive Status for RTSU" id="da5f8831-599f-4387-9fbb-ba6dcaffcd91">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

def DsUserStatus = testRunner.testCase.testSteps['Feed DataSource for Inactive User Statuses'];
log.info  "User Status is to set to: " + DsUserStatus.getPropertyValue("UserStatus");

testCase.setPropertyValue("UserStatus",DsUserStatus.getPropertyValue("UserStatus"));

def SetUserStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set User Status");

SetUserStatus.setPropertyValue("TCaseName",testCase.getName());
SetUserStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetUserStatus, null );

TSrunner.runTestStepByName("Set User Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="fa9b2fd2-32a5-4b09-96e3-00d7736c6f1a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="4dea5c73-7c10-4f86-bd8c-8422784ff7a3">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="b9bbeb0a-a668-449d-a070-d88a4c4c294a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="50bf17e5-4d48-408b-8eb3-05a44ab925e0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="DataSource Loop" id="89ececed-3eb5-45a1-8da8-d55139af1af0">
        <con:settings/>
        <con:config><dataSourceStep>Feed DataSource for Inactive User Statuses</dataSourceStep><targetStep>Verify RightsToken ID to Update</targetStep></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set User Status to Active" id="694f08fb-4097-4fe4-9dc6-8d805b7d4813">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Re - Set NodeStatus Value to Active


def SetUserStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set User Status");

SetUserStatus.setPropertyValue("TCaseName",testCase.getName());
SetUserStatus.setPropertyValue("TSuiteName",testSuite.getName());

testCase.setPropertyValue("UserStatus", "active");
log.info " Re-Set User Status to : " + testCase.getPropertyValue("UserStatus");

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetUserStatus, null );

TSrunner.runTestStepByName("Set User Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>USER_NOT_ACTIVE</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>16</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SqlStr</con:name>
          <con:value>select Status from USER_STATUS_REF where Status !='active'</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>UserStatus</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>UserStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>archived</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>blocked</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>blocked:clg</STATUS>
    </Row>
    <Row rowNumber='4'>
      <STATUS>blocked:tou</STATUS>
    </Row>
    <Row rowNumber='5'>
      <STATUS>deidentified</STATUS>
    </Row>
    <Row rowNumber='6'>
      <STATUS>deleted</STATUS>
    </Row>
    <Row rowNumber='7'>
      <STATUS>forcedeleted</STATUS>
    </Row>
    <Row rowNumber='8'>
      <STATUS>mergedeleted</STATUS>
    </Row>
    <Row rowNumber='9'>
      <STATUS>other</STATUS>
    </Row>
    <Row rowNumber='10'>
      <STATUS>pending</STATUS>
    </Row>
    <Row rowNumber='11'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdbc6rKEn73V1iuR8twjYqVpGoQUFRUvMvLLhwGRLnJgKC/fg8aXSYrWSf7POk0Pd1fX6bnmxds+h7bAhijOHHDoKxKr5V/oM2YPBToGtrYdI23IVczGfq51mRsus7ajPUMUaWsYpwiNcCJGSSvFZZmuBpdr7H0jH5ucVyLZ57YesOolBcoxsQ0UXmiK+Xc9wLcurh9raRx0ApN7OJWYPoItxLYmgJt0CKaLfOGqfL2ckV5cRi/bZMkalEUfLIQRJ4Hn2DoUy/UB50XC7emrhOYSRqjd58Wfq28782y7CnjnsLYoViapilaoIiOhV3nV+WtdNuMLDWww+u6bQZh4ELTc89mAUpDyTa0ysBzwthNtv43phmKoQvTNZTDGmT44FeF+u3ggu6Hlj6AjLFZw1uTuRmbIBvFKICoPJ+or5VfP6vgde8sNgNsh7GPP63/GyQUHJEXRsiq4VtkN3Q/t/hFut5eEGypAfRS7B7RsGiTyIQIl8cxst184GLSfBYuX8pfzvGtwxD8LyV5oR5xEtjUF5mRXAfh5P+p12OtrlYWppeiN6MbCFut7ayNXZVa91nj1D2A3tyMV/rrBcKj8hXUvdTv68+Neu+r902ZZ4qhIRr1xjEa0MxwmW0N1Qh6HY1CoT3pIhHZ3HrH80t6l8YDX7Ht52rb2zcnw7gX01x/7Gj7AV+dBz21ZFqCuVye6u56qvKr0R7Hey/399wQeSYrpIO9olJWr9deg24XzdcQC1R3xAvnqk97HX3jcscTp++pqq4oQkkVtox3Gi8mVfaQMfpys8hef8f0GEMRVx+dLkEW/1fPtCCZiXlftItJYZPjmaA3TVXbVandBqjtgEwVgaOKgzMYis7+sN27HSGjRaDPFSCBkzYBmeSspYWu9+XMWiw8Y6EqiqhN+KwL1lKJfJDkfCEZqx5tLo1ozSq0MRVFazUJN1wvsrr7rLuFQ22mZcOZetJ2cj6cyfTyInNysj5rO40ZzeZcabkTBW0iZ1J28SjJ2XZoLCfRei5k8CzrGuA7gJnL7a3WnfkLBnKTLdzJAw3sL3KRtMpioeXyDIxLojNckNhmbcWIoG9FG9/bPhjvEuMzq7M4bTpeapzlndaWO+3poTNVN5ykyz0wWc83y8XeXCrHEuwOwebm0X12zVWYOUYzk/R1rx8a6vYIh0CXRVEHJF000NROD4QdEWg8cPNzeyfWw7alZFSPxaWq4HXqq5N7WGGzQ3sm02wy68GyPj7UJTmoGv10s9tq25Uyqvan1nEuJMJ5jY/VY910GZhHtr6Su0k/t7v6tLQZS/kKdquW06O8s6DEWqMH4vNp62nOJFnWR/i0cW17Ka5GvNewPY2bRLZnRydcnYX6PqbrIuJYan069pMScDQRgM5uvhN1TWwWSbXUTF9rogkUOUnBeccmfXZx6HWPHlxzIMz7y9Fu/14YS8pkkcp0mbSVXGpKwCqK0J3OZWUH5qLjxKIjK6IOJaCv1X62Jvmad4ny5zwqlzw6sghkzgB1oVvi5rSQjJIpz4NTIM4DhYyFQ7606j7dOCB5MB1GfKbhoR0Yy3Cv+W48j9PpvN8fDvLNLO3sd2RW2fS0f+SMknzcR8Ad9mfbvRRK5jhar5OoGsAYJmrka2p+Hhl413Q3Pt2rPjPimJZgg537m2zeMWWjHztTpt+dBGOuIZRwap+6fnXXzJbV2bQeNax2YEunE2XECzoEoSJMng9WzrL77Twb1DO7B/Ybkx3mniCeBLlvzGA20fvLqV99Lj0fBwOfPs8ofhiNsmkn42Vdr3KWOOvOcBS767Tp5PEosNi1mdSPBr2ou5G3F9h0P+MjbuH4pFjjoxU1tHFJ51fQ8J1GBHvUhDoCuWEP1M5pczbPkT+C1wH6eTrchdf5QT1Olg+j50Y6pqRbEUxuy+ICUqWyQm4FM/k7gSkkrlWzL6qtqGBBOEFBUnkrdhXkpZUSiuNaLXJlXNeSItB8U6ZFHrANhZZlmqcZhQZ0QxB4wAs3lnNF8QliOwxst/BV8LjrLfV3gNBvYRRYKK4dwxRuEa78xWKRr7IaTMj1GwYYzULCE0VFqDNAYhuswks0y7WZhswCgaXrSl0CTLtSHobJKBjFwE5Q/JEjNj9wxAmCbuSigkgWtykm1ylOSEoO5jFNPObpaD4FKCVUMy7YXovlm88Udv3IQwVgyg+t1ENP0Ta6JIjC11+2ZkJ8kbbptqyQxDbb5GZoSPV7Yp8FgWFp8UIBvo3987dbmoiO5RYKuAiUXKRhjL5gwtwtym+zwTCP2biZB6nlFjc9yXkSu/CK5OOn361U9NC9jyby7J/29B/mhvuu/lnwwTT1Oaq7N+vowvuJuD8WCNckbOTtVrCD+XR4So/H9FKiRsG0YmKeYii6Tk0RTAldOs3CPQqouwnqR0z1jvqT57v8I7402QbThJx2nzRU+bL8wTNlinDxTFHJgch/+gb64JLkLUF58pWs7ZHXTIH4rw8e2IKFHhGPyU8Wxtbvcn1h68EPibMYb27gFKuCl56+6QwYErMuGXFh/Gj8KwNfOf8ovCf5jiUh3bRJE/T9l3Ixu14rJoRhGiSqVLkIHufpBWdyilDrt9IfZi7M8J3q5/hbqr/SBlMy2Xyzctd1/7dyzb20S/HIJfoXLK+VnLxaifPAeZjf7wC/HuEC97cR/jGStz/Ef0oecvr5PLz9Cw==</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_RightsResourceStatusUpdate_FUNC_RTL_CS_with_Pending_RightsTokenID" searchProperties="true" id="a3db310a-5659-4964-92cc-ebc93fe067ad" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with non-existing user.

Expected Result :

System should return error message

ERROR ID : Request:RightsUserNotFound

DESCRIPTION : Rights User is not found

HTTP STATUS  CODE : 404</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="cfc0fbe8-763c-4184-b499-ad8a06c596cc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="06f76562-93c6-4222-bbe8-ef5932fe13b1">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status_Pending" id="5f69a0c1-5681-45b2-bfff-d46982a18aaa">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="6cfd363c-5997-44ff-a9e6-6fcdeb421d55">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUS_NOT_UPDATED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="ad5d01d8-886f-42b3-b9ee-515f24f39955">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="cb034ef2-74ab-47e5-8f40-1492d7edf136">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="da12f9bc-9cf4-470f-a343-63587faca4ef">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="299351bb-1f5e-4f66-8c46-40402f1dad34">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24636</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>22</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUS_NOT_UPDATED</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_RightsResourceStatusUpdate_FUNC_RTL_CS_with_Invalid RightsTokenid in URL" searchProperties="true" id="7ff7c592-c753-48d1-87b6-212ed9cb1345" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with Invalif RightsTokenId in URL.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="fb72342c-95bd-49ba-94b3-4106c56749c6">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="803bbf88-5106-4090-96d7-8bee85f6b3fd">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Invalid RightsToken ID in URL" id="6835b61b-57b2-4ebb-92f0-3812ffb00718">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("rightstokenid", "urn:dece:rightstokenid:org:org:dece:9E7355CA36937E50E0401F0A0798726F");
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_INVALID");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="1150f529-1088-4c4e-b1a8-7af1591f1123">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="39f3e3c1-9ed8-4cd1-b8f5-f288572e6973">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="9e7f35f4-503a-4940-9af5-1b02d9508562">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24591</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:org:dece:9E7355CA36937E50E0401F0A0798726F</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>RIGHTSTOKEN_INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>14</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdbc6rKEn73V1iuR8twjYqVpGoQUFRUvMvLLhwGRLnJgKC/fg8aXSYrWSf7POk0Pd1fX6bnmxds+h7bAhijOHHDoKxKr5V/oM2YPBToGtrYdI23IVczGfq51mRsus7ajPUMUaWsYpwiNcCJGSSvFZZmuBpdr7H0jH5ucVyLZ57YesOolBcoxsQ0UXmiK+Xc9wLcurh9raRx0ApN7OJWYPoItxLYmgJt0CKaLfOGqfL2ckV5cRi/bZMkalEUfLIQRJ4Hn2DoUy/UB50XC7emrhOYSRqjd58Wfq28782y7CnjnsLYoViapilaoIiOhV3nV+WtdNuMLDWww+u6bQZh4ELTc89mAUpDyTa0ysBzwthNtv43phmKoQvTNZTDGmT44FeF+u3ggu6Hlj6AjLFZw1uTuRmbIBvFKICoPJ+or5VfP6vgde8sNgNsh7GPP63/GyQUHJEXRsiq4VtkN3Q/t/hFut5eEGypAfRS7B7RsGiTyIQIl8cxst184GLSfBYuX8pfzvGtwxD8LyV5oR5xEtjUF5mRXAfh5P+p12OtrlYWppeiN6MbCFut7ayNXZVa91nj1D2A3tyMV/rrBcKj8hXUvdTv68+Neu+r902ZZ4qhIRr1xjEa0MxwmW0N1Qh6HY1CoT3pIhHZ3HrH80t6l8YDX7Ht52rb2zcnw7gX01x/7Gj7AV+dBz21ZFqCuVye6u56qvKr0R7Hey/399wQeSYrpIO9olJWr9deg24XzdcQC1R3xAvnqk97HX3jcscTp++pqq4oQkkVtox3Gi8mVfaQMfpys8hef8f0GEMRVx+dLkEW/1fPtCCZiXlftItJYZPjmaA3TVXbVandBqjtgEwVgaOKgzMYis7+sN27HSGjRaDPFSCBkzYBmeSspYWu9+XMWiw8Y6EqiqhN+KwL1lKJfJDkfCEZqx5tLo1ozSq0MRVFazUJN1wvsrr7rLuFQ22mZcOZetJ2cj6cyfTyInNysj5rO40ZzeZcabkTBW0iZ1J28SjJ2XZoLCfRei5k8CzrGuA7gJnL7a3WnfkLBnKTLdzJAw3sL3KRtMpioeXyDIxLojNckNhmbcWIoG9FG9/bPhjvEuMzq7M4bTpeapzlndaWO+3poTNVN5ykyz0wWc83y8XeXCrHEuwOwebm0X12zVWYOUYzk/R1rx8a6vYIh0CXRVEHJF000NROD4QdEWg8cPNzeyfWw7alZFSPxaWq4HXqq5N7WGGzQ3sm02wy68GyPj7UJTmoGv10s9tq25Uyqvan1nEuJMJ5jY/VY910GZhHtr6Su0k/t7v6tLQZS/kKdquW06O8s6DEWqMH4vNp62nOJFnWR/i0cW17Ka5GvNewPY2bRLZnRydcnYX6PqbrIuJYan069pMScDQRgM5uvhN1TWwWSbXUTF9rogkUOUnBeccmfXZx6HWPHlxzIMz7y9Fu/14YS8pkkcp0mbSVXGpKwCqK0J3OZWUH5qLjxKIjK6IOJaCv1X62Jvmad4ny5zwqlzw6sghkzgB1oVvi5rSQjJIpz4NTIM4DhYyFQ7606j7dOCB5MB1GfKbhoR0Yy3Cv+W48j9PpvN8fDvLNLO3sd2RW2fS0f+SMknzcR8Ad9mfbvRRK5jhar5OoGsAYJmrka2p+Hhl413Q3Pt2rPjPimJZgg537m2zeMWWjHztTpt+dBGOuIZRwap+6fnXXzJbV2bQeNax2YEunE2XECzoEoSJMng9WzrL77Twb1DO7B/Ybkx3mniCeBLlvzGA20fvLqV99Lj0fBwOfPs8ofhiNsmkn42Vdr3KWOOvOcBS767Tp5PEosNi1mdSPBr2ou5G3F9h0P+MjbuH4pFjjoxU1tHFJ51fQ8J1GBHvUhDoCuWEP1M5pczbPkT+C1wH6eTrchdf5QT1Olg+j50Y6pqRbEUxuy+ICUqWyQm4FM/k7gSkkrlWzL6qtqGBBOEFBUnkrdhXkpZUSiuNaLXJlXNeSItB8U6ZFHrANhZZlmqcZhQZ0QxB4wAs3lnNF8QliOwxst/BV8LjrLfV3gNBvYRRYKK4dwxRuEa78xWKRr7IaTMj1GwYYzULCE0VFqDNAYhuswks0y7WZhswCgaXrSl0CTLtSHobJKBjFwE5Q/JEjNj9wxAmCbuSigkgWtykm1ylOSEoO5jFNPObpaD4FKCVUMy7YXovlm88Udv3IQwVgyg+t1ENP0Ta6JIjC11+2ZkJ8kbbptqyQxDbb5GZoSPV7Yp8FgWFp8UIBvo3987dbmoiO5RYKuAiUXKRhjL5gwtwtym+zwTCP2biZB6nlFjc9yXkSu/CK5OOn361U9NC9jyby7J/29B/mhvuu/lnwwTT1Oaq7N+vowvuJuD8WCNckbOTtVrCD+XR4So/H9FKiRsG0YmKeYii6Tk0RTAldOs3CPQqouwnqR0z1jvqT57v8I7402QbThJx2nzRU+bL8wTNlinDxTFHJgch/+gb64JLkLUF58pWs7ZHXTIH4rw8e2IKFHhGPyU8Wxtbvcn1h68EPibMYb27gFKuCl56+6QwYErMuGXFh/Gj8KwNfOf8ovCf5jiUh3bRJE/T9l3Ixu14rJoRhGiSqVLkIHufpBWdyilDrt9IfZi7M8J3q5/hbqr/SBlMy2Xyzctd1/7dyzb20S/HIJfoXLK+VnLxaifPAeZjf7wC/HuEC97cR/jGStz/Ef0oecvr5PLz9Cw==</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_RightsResourceStatusUpdate_FUNC_RTL_CS_with_inactive_RightsTokenID_expect_Pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="89bff364-83cc-4fe7-8faa-9e01cd6bc2b1">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with RightsToken not active.

Expected Result :

System should return error message</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="2ae1c6ae-7af1-47d8-9158-58aeb91f1df5">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="e5701ead-b89e-4fc3-8139-66c9f27bb37d">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get RightsToken Inactive Statuses" id="914cdaad-b31f-464d-b3ed-ed1929614da4">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def GetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SqlStr = "select STATUS_ID from RIGHTS_TOKEN_STATUS_REF where STATUS_ID !='active'AND STATUS_ID != 'pending'AND STATUS_ID != 'deleted'";

testCase.setPropertyValue("SqlStr",SqlStr);

GetRTStatus.setPropertyValue("TCaseName",testCase.getName());
GetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( GetRTStatus, null );

TSrunner.runTestStepByName("Get RightsToken Status for RTSU");

assert TSrunner.status == Status.INITIALIZED;

 log.info " Current RightsToken Status: " + testCase.getPropertyValue("RTStatus");

testCase.getPropertyValue("RTStatusXML");</script></con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Feed DataSource with Inactive RightToken Statuses" id="dd1f5bfc-977a-443a-8cc1-1a44a8d8115d">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="XML">
            <con:configuration><sourceStep>Get RightsToken Inactive Statuses</sourceStep><sourceProperty>result</sourceProperty><rowPath>//Results[1]/ResultSet[1]/Row</rowPath><columnPath>STATUS_ID</columnPath></con:configuration>
          </con:dataSource>
          <con:property>RTStatus</con:property>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status" id="e29e4955-00c3-4048-9b3e-6ca30c207ecc">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

def DsRTStatus = testRunner.testCase.testSteps['Feed DataSource with Inactive RightToken Statuses'];
log.info  "RightToken Statuses is set to: " + DsRTStatus.getPropertyValue("RTStatus");

testCase.setPropertyValue("RTStatus",DsRTStatus.getPropertyValue("RTStatus"));

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Inactive RightsToken ID" id="c6a35335-31db-4f4d-9ae9-c2bd3e2ac855">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="15ba1f9d-9d33-4617-9382-cc66e2f047a8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="ed483374-ec75-46f1-a701-8713eb64b07b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="afcc592a-2ea4-4f97-9f35-2b8845cc71e3">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="DataSource Loop" id="c98a8932-fcf5-46d8-b925-91555d005c35">
        <con:settings/>
        <con:config>
          <dataSourceStep>Feed DataSource with Inactive RightToken Statuses</dataSourceStep>
          <targetStep>Set RightsToken Inactive Status</targetStep>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="30c4b0ef-360d-4226-a986-8c59650564c1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>RT_UPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24596</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS_ID>other</STATUS_ID>
    </Row>
    <Row rowNumber='2'>
      <STATUS_ID>suspended</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SqlStr</con:name>
          <con:value>select STATUS_ID from RIGHTS_TOKEN_STATUS_REF where STATUS_ID !='active'AND STATUS_ID != 'pending'AND STATUS_ID != 'deleted'</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    
    
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_RightsResourceStatusUpdate_FUNC_RTL_CS_verify_UpdateBy_information_recorded" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d433281b-ce6f-4933-b995-b8c6ed72f4d3">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API record the Information of the Updating Node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="e486671f-3796-435c-a2eb-149a53284f42">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="87e45275-bf2d-4576-8d3f-c6191e7a1931">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="c6a427ad-8183-4624-ad5c-e871c759e2ac">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","0");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="2a4feeb9-a494-4464-9d33-e2b409ddd76f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="c2f5e1c8-3b41-4ec4-ad20-05390fa57c40">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="48da2400-3e6f-4a5c-96ea-0e36d9e0f389">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="e5f6f44b-435d-4bdc-96ed-4d174565903e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re - Set RightsToken In active Status" id="daa84e88-9d98-4152-99fa-a4f5f5350caf">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>13</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdbc6rKEn73V1iuR8twjYqVpGoQUFRUvMvLLhwGRLnJgKC/fg8aXSYrWSf7POk0Pd1fX6bnmxds+h7bAhijOHHDoKxKr5V/oM2YPBToGtrYdI23IVczGfq51mRsus7ajPUMUaWsYpwiNcCJGSSvFZZmuBpdr7H0jH5ucVyLZ57YesOolBcoxsQ0UXmiK+Xc9wLcurh9raRx0ApN7OJWYPoItxLYmgJt0CKaLfOGqfL2ckV5cRi/bZMkalEUfLIQRJ4Hn2DoUy/UB50XC7emrhOYSRqjd58Wfq28782y7CnjnsLYoViapilaoIiOhV3nV+WtdNuMLDWww+u6bQZh4ELTc89mAUpDyTa0ysBzwthNtv43phmKoQvTNZTDGmT44FeF+u3ggu6Hlj6AjLFZw1uTuRmbIBvFKICoPJ+or5VfP6vgde8sNgNsh7GPP63/GyQUHJEXRsiq4VtkN3Q/t/hFut5eEGypAfRS7B7RsGiTyIQIl8cxst184GLSfBYuX8pfzvGtwxD8LyV5oR5xEtjUF5mRXAfh5P+p12OtrlYWppeiN6MbCFut7ayNXZVa91nj1D2A3tyMV/rrBcKj8hXUvdTv68+Neu+r902ZZ4qhIRr1xjEa0MxwmW0N1Qh6HY1CoT3pIhHZ3HrH80t6l8YDX7Ht52rb2zcnw7gX01x/7Gj7AV+dBz21ZFqCuVye6u56qvKr0R7Hey/399wQeSYrpIO9olJWr9deg24XzdcQC1R3xAvnqk97HX3jcscTp++pqq4oQkkVtox3Gi8mVfaQMfpys8hef8f0GEMRVx+dLkEW/1fPtCCZiXlftItJYZPjmaA3TVXbVandBqjtgEwVgaOKgzMYis7+sN27HSGjRaDPFSCBkzYBmeSspYWu9+XMWiw8Y6EqiqhN+KwL1lKJfJDkfCEZqx5tLo1ozSq0MRVFazUJN1wvsrr7rLuFQ22mZcOZetJ2cj6cyfTyInNysj5rO40ZzeZcabkTBW0iZ1J28SjJ2XZoLCfRei5k8CzrGuA7gJnL7a3WnfkLBnKTLdzJAw3sL3KRtMpioeXyDIxLojNckNhmbcWIoG9FG9/bPhjvEuMzq7M4bTpeapzlndaWO+3poTNVN5ykyz0wWc83y8XeXCrHEuwOwebm0X12zVWYOUYzk/R1rx8a6vYIh0CXRVEHJF000NROD4QdEWg8cPNzeyfWw7alZFSPxaWq4HXqq5N7WGGzQ3sm02wy68GyPj7UJTmoGv10s9tq25Uyqvan1nEuJMJ5jY/VY910GZhHtr6Su0k/t7v6tLQZS/kKdquW06O8s6DEWqMH4vNp62nOJFnWR/i0cW17Ka5GvNewPY2bRLZnRydcnYX6PqbrIuJYan069pMScDQRgM5uvhN1TWwWSbXUTF9rogkUOUnBeccmfXZx6HWPHlxzIMz7y9Fu/14YS8pkkcp0mbSVXGpKwCqK0J3OZWUH5qLjxKIjK6IOJaCv1X62Jvmad4ny5zwqlzw6sghkzgB1oVvi5rSQjJIpz4NTIM4DhYyFQ7606j7dOCB5MB1GfKbhoR0Yy3Cv+W48j9PpvN8fDvLNLO3sd2RW2fS0f+SMknzcR8Ad9mfbvRRK5jhar5OoGsAYJmrka2p+Hhl413Q3Pt2rPjPimJZgg537m2zeMWWjHztTpt+dBGOuIZRwap+6fnXXzJbV2bQeNax2YEunE2XECzoEoSJMng9WzrL77Twb1DO7B/Ybkx3mniCeBLlvzGA20fvLqV99Lj0fBwOfPs8ofhiNsmkn42Vdr3KWOOvOcBS767Tp5PEosNi1mdSPBr2ou5G3F9h0P+MjbuH4pFjjoxU1tHFJ51fQ8J1GBHvUhDoCuWEP1M5pczbPkT+C1wH6eTrchdf5QT1Olg+j50Y6pqRbEUxuy+ICUqWyQm4FM/k7gSkkrlWzL6qtqGBBOEFBUnkrdhXkpZUSiuNaLXJlXNeSItB8U6ZFHrANhZZlmqcZhQZ0QxB4wAs3lnNF8QliOwxst/BV8LjrLfV3gNBvYRRYKK4dwxRuEa78xWKRr7IaTMj1GwYYzULCE0VFqDNAYhuswks0y7WZhswCgaXrSl0CTLtSHobJKBjFwE5Q/JEjNj9wxAmCbuSigkgWtykm1ylOSEoO5jFNPObpaD4FKCVUMy7YXovlm88Udv3IQwVgyg+t1ENP0Ta6JIjC11+2ZkJ8kbbptqyQxDbb5GZoSPV7Yp8FgWFp8UIBvo3987dbmoiO5RYKuAiUXKRhjL5gwtwtym+zwTCP2biZB6nlFjc9yXkSu/CK5OOn361U9NC9jyby7J/29B/mhvuu/lnwwTT1Oaq7N+vowvuJuD8WCNckbOTtVrCD+XR4So/H9FKiRsG0YmKeYii6Tk0RTAldOs3CPQqouwnqR0z1jvqT57v8I7402QbThJx2nzRU+bL8wTNlinDxTFHJgch/+gb64JLkLUF58pWs7ZHXTIH4rw8e2IKFHhGPyU8Wxtbvcn1h68EPibMYb27gFKuCl56+6QwYErMuGXFh/Gj8KwNfOf8ovCf5jiUh3bRJE/T9l3Ixu14rJoRhGiSqVLkIHufpBWdyilDrt9IfZi7M8J3q5/hbqr/SBlMy2Xyzctd1/7dyzb20S/HIJfoXLK+VnLxaifPAeZjf7wC/HuEC97cR/jGStz/Ef0oecvr5PLz9Cw==</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_RightsResourceStatusUpdate_FUNC_RTL_CS_Verify the Update Date recorded_303SeeOther" searchProperties="true" id="696b3398-c5d7-4edf-8c3a-ed75f628ae09" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API records the Date for the rightstoken update.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="5c4de66b-e9de-44a1-a506-9dfb2243bf1f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="bac7baa8-2c73-4993-afd1-8f31716ea86d">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="4fe0efbf-2504-41ad-81e3-22138da0c194">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","0");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="9154050f-f7b3-449b-b910-f7a04da6c872">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="bd931be7-b1b5-4128-a3e0-b5b2cdfa9a35">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="897a8d40-8257-4f2e-8cd7-66dd0f605e34">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="404c5392-70d1-4966-a21e-ce685c0477a8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re - Set RightsToken In active Status" id="60c07407-5e43-4be1-93b2-58c2bf611889">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        
        
        <con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property>
        
        <con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ALID</con:name><con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property>
        <con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        <con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        <con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property>
        
        
        
        <con:property><con:name>assertionUserId</con:name><con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value></con:property><con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property>
        
        <con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property>
        
        <con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>StatusUpdateSuccess</con:value></con:property><con:property><con:name>expectErrTypeRTUpdate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property>
        
        
        <con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property>
        
        <con:property><con:name>FeedRTSUReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FeedRTUReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property>
        
        <con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property>
        
        
        <con:property><con:name>FFManifestLocPreference1</con:name><con:value>3</con:value></con:property><con:property><con:name>FFManifestLocPreference2</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property>
        <con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>LICAcqBaseLoc</con:name><con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer:customersupport</con:value></con:property>
        <con:property><con:name>password</con:name><con:value>Password1</con:value></con:property>
        
        <con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:0798</con:value></con:property>
        <con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:107002</con:value></con:property>
        
        
        <con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property><con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value></con:property>
        <con:property><con:name>PIRetailerTransx</con:name><con:value>RetailerTransaction_1_node0798_RetailerNode</con:value></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property>
        
        
        
        
        <con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property>
        <con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value>1</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property>
        
        
        
        
        
        
        <con:property><con:name>QC_Id</con:name><con:value>24619</con:value></con:property>
        <con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property>
        
        
        <con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:pending</con:value></con:property><con:property><con:name>RightsLockerID</con:name><con:value>urn:dece:rightslockerid:org:dece:7001</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property>
        
        
        <con:property><con:name>RightsResTime</con:name><con:value>6</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>RRSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property>
        <con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:0798</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property>
        
        
        <con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-06-20 11:33:41.0</con:value></con:property><con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property>
        <con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property>
        
        
        <con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property>
      <con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>VCAllowedUser</con:name><con:value>urn:dece:userid:org:dece:107989</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_RightsResourceStatusUpdate_FUNC_RTL_CS_Verify the Update Time recorded_303SeeOther" searchProperties="true" id="8e1111a0-3774-49cf-b122-0f05a8879969" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API records the Date for the rightstoken update time.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="510a0495-f142-44d3-9ed3-a8be47b76f91">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="3109ef2d-a6c8-4180-a1a1-e8eb3b85c338">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def targetSystem = context.expand( '${#Project#targetSystem}' )
def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="31964b47-5bd2-47e7-80f0-52af3593a9a3">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","0");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="7e523abd-578b-4d0d-bdaf-bb75634ea0de">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="72e03f9c-668e-4529-a7e0-a16c1bc34037">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="c636e05a-a75b-4cc0-87c6-0be78c6d22a3">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="502a4fcc-b0f5-4333-9ca7-2585d7d58980">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re - Set RightsToken In active Status" id="68f9d9e2-ebfe-4301-a3bd-140f7bf0d48f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>17</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_Active to Pending_303SeeOther" searchProperties="true" id="f57ac439-10a9-47fe-8cdf-81588c83d3b5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Pending.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="df552f70-eda8-45bc-89d8-ff2adee65154">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="a040f6fc-4a7d-4038-af21-789b7c8f903a">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="1e39fcdc-8acf-4885-8edf-870a1312795e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="75486b85-8666-4544-904f-c370ac49e6a9">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="ef5a31e5-664c-41a0-ac96-ab4b46d31f90">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="2ccac99a-97e7-49c1-9c38-cf4b6ad9e985">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="8ad8c3c1-7ae2-456a-9116-e08438c78d29">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>8</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      <con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_Active to Suspended" searchProperties="true" id="362cd46f-7c07-41fc-8c1f-76956dbeefca" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="7536dff2-1df7-4664-ae6c-243d860a2c67">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="f27cf18e-b260-494b-8e48-61cf72efd77f">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with suspended RightsToken ID" id="48febdc5-551d-4568-af0e-93b097776cb0">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:suspended");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="53ff3762-cbac-4463-bfac-950957d15291">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="4bfb5867-dfe9-48ad-a9b4-dd1aedc60566">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="0b3801e4-49fa-4942-a67c-5b300753fe15">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="7b5c1297-7fc1-4291-80fb-9b2d9108c9a9">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:suspended</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:suspended</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_Active to Other_Status" searchProperties="true" id="4d6c3a55-e5f8-4f55-8762-e6a6b4c88980" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to other Status</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="75ef1343-b281-42f8-ad52-50b6b057861d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="7dc4a16c-f451-4d37-91f7-bf5740677649">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Other RightsToken ID" id="120dd0df-83d8-43fe-927d-57ecb91b08e8">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:other");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="387cd089-f5f8-4fed-a2eb-35dda794ba92">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="9b454b28-6726-47bd-8397-a25eb6caf480">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="08aec718-1e01-44c3-a0cd-0ce5613969fd">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="57884691-1231-45fa-abbe-d6f99a2cc91e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>13</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:other</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:other</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Update_Status_History_303SeeOther" searchProperties="true" id="7d9a0876-8e16-4fe8-a58d-3341746995ed" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status  History for the rightstoken.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="deabcd8a-057f-4c8f-90d8-f92e26b95451">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="3fac6f39-5758-4f52-b6e2-fd3c4d51f5c4">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="0f38aa1d-50f2-4468-a4ff-41eb0d798f2a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","0");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="58553032-1840-468f-abc7-0f8752974d38">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="95ce3e91-decd-4ad8-9f84-bdd04f838558">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="e7ed1c7e-ae68-478a-ba34-962970eae4dc">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="8cce0309-2492-4003-8cb9-cd8585daf562">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re - Set RightsToken In active Status" id="afd0d187-13e6-4950-be6c-c832a7ee2325">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0798</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0798_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107989</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_pending to active_303SeeOther" searchProperties="true" id="d71e8a20-df7a-41e9-8a4d-364f78a474b5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="eb4bc04d-56b4-488d-977a-b28bb203d5b8">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="b7cb7041-d8aa-4948-950a-e50837b89a20">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="c9c57bd7-35dd-4454-8c6f-5e979d8ca4af">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="edcdacbe-193f-4ac1-8c38-fb7eaae56a25">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="b0e60ee3-0c15-4440-a0f6-298d80c94acb">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="7ff92c06-71f8-4570-ab37-bc92b196f344">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="b483450c-9267-40ab-9ebb-17935936dc7f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="87a2180d-96a4-4e4c-9e92-150953980474">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>21</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_pending to deleted_303SeeOther" searchProperties="true" id="0509f8c6-83f3-4027-8db1-ba473bbbe753" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_R3\ResourceStatusUpdate_1.0.6.1.K\ResourceStatusUpdate_1.0.6.1.K\rights\RerunCasesReport</con:setting></con:settings>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="83706e59-d89e-4c4a-a7e6-9c2731c926d4">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="84ed8c9f-01d9-4a2a-862f-12bab3b6df47">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="8b3e3c99-77d4-485e-b621-c64c27678cc0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="d23526f7-8a8c-4640-a376-0e076de6a4f0">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:deleted");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="8c845fd6-7190-4ec0-bfe6-503ee2dd4057">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="26495c28-a22d-471e-bbe5-616b1089a654">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="5aa48f37-dc66-4b12-a7ee-bed69813688b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="fd50f42c-313f-4988-a254-b4ef88311768">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:deleted</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:deleted</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>6</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_pending to suspended" searchProperties="true" id="1b607f2d-e882-49ec-968a-0f212adfe4b3" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="9aca5d85-6e24-4697-88b7-748a79eff35a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="ec880168-86eb-4850-9fd8-3e8895c99081">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="37a929ba-7187-4def-8c82-a4be0003d4dc">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with suspended RightsToken ID" id="1aaeefc5-3e3b-4098-84e3-a757907f6c2e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:suspended");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="1b43565a-2f05-4a1b-849d-a342aecc6426">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="9bd72a83-bdb5-4d50-a80b-75dbaf1410cd">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="03631d0d-4b91-4d2a-adde-ea849a56f026">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="f0b2a92e-a16a-4443-a268-f59ac90a3acc">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:suspended</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:suspended</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_pending to other" searchProperties="true" id="1bfabe0c-6fdd-4f8c-a9c7-5968ca2e515c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="04272630-79a2-4573-8cab-900f0a82088f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="141ec025-6f4b-433d-b3b0-1089783c9e7c">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="2fd91f77-9c47-4cc7-97b3-baad3840e06e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with other RightsToken ID" id="e4a427a6-0740-4c5e-92b4-b2d6d79503b6">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:other");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="ea9f6b4d-e54a-4792-ae18-b30ed5840715">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="bc3c36a8-2d47-4163-8093-443a9d21e710">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="11032568-64b2-4ca4-a9aa-e5f42ec86e7d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="5d76ce12-23ba-45cc-ad22-2ad9003bb59c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:other</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:other</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>8</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_suspended to active" searchProperties="true" id="cb0e10a0-fd98-44f9-a8f7-3a1ec281169e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="1e13a1ea-6d6b-401a-8e94-b59b8d328eba">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="2bce1606-c41a-443b-82ea-51191b72aa01">
        <con:settings/>
        <con:config><script>
import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status suspended" id="77bb534a-5d42-4b7d-a4aa-0e491750b1ac">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: suspended";

testCase.setPropertyValue("RTStatus","suspended");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID" id="57dbb372-8d13-4695-b4f1-7f8a36f0faeb">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="f3a703da-f21e-4b93-adb3-f4df1a2774b2">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="c6a3bd03-833d-4e4f-a50f-58a77668717a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="2211354d-170f-4285-9deb-de52f9f108ab">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="df51e175-76c4-41a3-ab6d-7f972e571c62">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>9</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_suspended to pending" searchProperties="true" id="bb58274a-4950-4457-bd5b-5ef212e80f6e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="96d2ec3c-d48f-4e7a-a7fe-eba66a8e78c1">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="63ed863f-8714-4039-b7c5-e10374e77038">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status suspended" id="e93365bb-6152-40c9-815b-38400f93e7bd">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: suspended";

testCase.setPropertyValue("RTStatus","suspended");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with pending RightsToken ID" id="db302789-f17b-407a-9f1d-45500c96a991">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="c3baf9b8-250a-4420-a39c-3c6c1d1860e1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="2b4cf550-1763-4c83-83a3-4b6dd4633485">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="e15515e1-0922-4649-90a3-e59d9d3def43">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="f4a3ba11-cf9c-47ce-97f1-9b4e96eabd4b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>19</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_suspended to other" searchProperties="true" id="74501c9c-a224-4164-96c3-e3ebf37f3597" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="0f5b2c8b-aee6-464b-a815-6ad2c4ecdf67">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="ad6857d9-d0bf-4cb6-a504-765a12cc2650">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status suspended" id="c04f5926-071c-4da8-9623-357fa955dc05">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: suspended";

testCase.setPropertyValue("RTStatus","suspended");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with other RightsToken ID" id="dcd0c61f-3aeb-4592-beb6-639d09e284ed">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:other");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="4aee6d59-8da4-4c93-9b25-8b28e0dbded4">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="270e0455-27e8-4213-8a6b-068d74dc3856">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="07522447-7b04-41fd-a88e-754603dd2175">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="71401649-e072-44af-8b86-7fa9ec10303b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:other</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:other</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_deleted to active_303SeeOther" searchProperties="true" id="f853d74d-5e1a-437f-9d46-4d7559c63c9c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="9aca74ae-d8f3-4f41-9ee6-2b17d80311d3">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="3d1453d6-9388-4bdf-b0ab-ef0d0bc47410">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status deleted" id="5712290a-e3ef-410c-a99b-c76579bc123a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: deleted";

testCase.setPropertyValue("RTStatus","deleted");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID" id="6e33bfc0-13ea-47d6-b62c-de7dd6dd3790">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="949b36fc-9dc5-47a6-a9a6-d0f10b127ca7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="2ada757b-cf25-45db-8c5d-c0a7fc8a9666">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="d8aa245d-9f1e-41f1-b166-cef1370ff65e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="94835f22-42c7-425e-bc11-6af66adee874">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdbc6rKEn73V1iuR8twjYqVpGoQUFRUvMvLLhwGRLnJgKC/fg8aXSYrWSf7POk0Pd1fX6bnmxds+h7bAhijOHHDoKxKr5V/oM2YPBToGtrYdI23IVczGfq51mRsus7ajPUMUaWsYpwiNcCJGSSvFZZmuBpdr7H0jH5ucVyLZ57YesOolBcoxsQ0UXmiK+Xc9wLcurh9raRx0ApN7OJWYPoItxLYmgJt0CKaLfOGqfL2ckV5cRi/bZMkalEUfLIQRJ4Hn2DoUy/UB50XC7emrhOYSRqjd58Wfq28782y7CnjnsLYoViapilaoIiOhV3nV+WtdNuMLDWww+u6bQZh4ELTc89mAUpDyTa0ysBzwthNtv43phmKoQvTNZTDGmT44FeF+u3ggu6Hlj6AjLFZw1uTuRmbIBvFKICoPJ+or5VfP6vgde8sNgNsh7GPP63/GyQUHJEXRsiq4VtkN3Q/t/hFut5eEGypAfRS7B7RsGiTyIQIl8cxst184GLSfBYuX8pfzvGtwxD8LyV5oR5xEtjUF5mRXAfh5P+p12OtrlYWppeiN6MbCFut7ayNXZVa91nj1D2A3tyMV/rrBcKj8hXUvdTv68+Neu+r902ZZ4qhIRr1xjEa0MxwmW0N1Qh6HY1CoT3pIhHZ3HrH80t6l8YDX7Ht52rb2zcnw7gX01x/7Gj7AV+dBz21ZFqCuVye6u56qvKr0R7Hey/399wQeSYrpIO9olJWr9deg24XzdcQC1R3xAvnqk97HX3jcscTp++pqq4oQkkVtox3Gi8mVfaQMfpys8hef8f0GEMRVx+dLkEW/1fPtCCZiXlftItJYZPjmaA3TVXbVandBqjtgEwVgaOKgzMYis7+sN27HSGjRaDPFSCBkzYBmeSspYWu9+XMWiw8Y6EqiqhN+KwL1lKJfJDkfCEZqx5tLo1ozSq0MRVFazUJN1wvsrr7rLuFQ22mZcOZetJ2cj6cyfTyInNysj5rO40ZzeZcabkTBW0iZ1J28SjJ2XZoLCfRei5k8CzrGuA7gJnL7a3WnfkLBnKTLdzJAw3sL3KRtMpioeXyDIxLojNckNhmbcWIoG9FG9/bPhjvEuMzq7M4bTpeapzlndaWO+3poTNVN5ykyz0wWc83y8XeXCrHEuwOwebm0X12zVWYOUYzk/R1rx8a6vYIh0CXRVEHJF000NROD4QdEWg8cPNzeyfWw7alZFSPxaWq4HXqq5N7WGGzQ3sm02wy68GyPj7UJTmoGv10s9tq25Uyqvan1nEuJMJ5jY/VY910GZhHtr6Su0k/t7v6tLQZS/kKdquW06O8s6DEWqMH4vNp62nOJFnWR/i0cW17Ka5GvNewPY2bRLZnRydcnYX6PqbrIuJYan069pMScDQRgM5uvhN1TWwWSbXUTF9rogkUOUnBeccmfXZx6HWPHlxzIMz7y9Fu/14YS8pkkcp0mbSVXGpKwCqK0J3OZWUH5qLjxKIjK6IOJaCv1X62Jvmad4ny5zwqlzw6sghkzgB1oVvi5rSQjJIpz4NTIM4DhYyFQ7606j7dOCB5MB1GfKbhoR0Yy3Cv+W48j9PpvN8fDvLNLO3sd2RW2fS0f+SMknzcR8Ad9mfbvRRK5jhar5OoGsAYJmrka2p+Hhl413Q3Pt2rPjPimJZgg537m2zeMWWjHztTpt+dBGOuIZRwap+6fnXXzJbV2bQeNax2YEunE2XECzoEoSJMng9WzrL77Twb1DO7B/Ybkx3mniCeBLlvzGA20fvLqV99Lj0fBwOfPs8ofhiNsmkn42Vdr3KWOOvOcBS767Tp5PEosNi1mdSPBr2ou5G3F9h0P+MjbuH4pFjjoxU1tHFJ51fQ8J1GBHvUhDoCuWEP1M5pczbPkT+C1wH6eTrchdf5QT1Olg+j50Y6pqRbEUxuy+ICUqWyQm4FM/k7gSkkrlWzL6qtqGBBOEFBUnkrdhXkpZUSiuNaLXJlXNeSItB8U6ZFHrANhZZlmqcZhQZ0QxB4wAs3lnNF8QliOwxst/BV8LjrLfV3gNBvYRRYKK4dwxRuEa78xWKRr7IaTMj1GwYYzULCE0VFqDNAYhuswks0y7WZhswCgaXrSl0CTLtSHobJKBjFwE5Q/JEjNj9wxAmCbuSigkgWtykm1ylOSEoO5jFNPObpaD4FKCVUMy7YXovlm88Udv3IQwVgyg+t1ENP0Ta6JIjC11+2ZkJ8kbbptqyQxDbb5GZoSPV7Yp8FgWFp8UIBvo3987dbmoiO5RYKuAiUXKRhjL5gwtwtym+zwTCP2biZB6nlFjc9yXkSu/CK5OOn361U9NC9jyby7J/29B/mhvuu/lnwwTT1Oaq7N+vowvuJuD8WCNckbOTtVrCD+XR4So/H9FKiRsG0YmKeYii6Tk0RTAldOs3CPQqouwnqR0z1jvqT57v8I7402QbThJx2nzRU+bL8wTNlinDxTFHJgch/+gb64JLkLUF58pWs7ZHXTIH4rw8e2IKFHhGPyU8Wxtbvcn1h68EPibMYb27gFKuCl56+6QwYErMuGXFh/Gj8KwNfOf8ovCf5jiUh3bRJE/T9l3Ixu14rJoRhGiSqVLkIHufpBWdyilDrt9IfZi7M8J3q5/hbqr/SBlMy2Xyzctd1/7dyzb20S/HIJfoXLK+VnLxaifPAeZjf7wC/HuEC97cR/jGStz/Ef0oecvr5PLz9Cw==</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>9</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_other to active" searchProperties="true" id="e4f26f2c-348d-4ba8-b842-7292cbffe6f3" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="ef0c5482-352e-4f2f-86f8-146bf0338dd6">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="4b8b3c6f-33d2-46ba-8425-0d4c5cd35578">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Other" id="7f846d5d-be64-433b-9b30-38fee456248f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: other";

testCase.setPropertyValue("RTStatus","other");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID" id="415eb94c-fadc-4879-82d2-7fddf6294c7f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="4441dabe-056d-4987-acfc-62be7996cadb">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="0082bc12-40c5-467b-86a1-aab95a1920d6">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="cb89018a-7c31-4f4e-b0c2-666b1ce9280a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="362ef812-ec47-4da9-8f8f-1c2f674ce30a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_RightsResourceStatusUpdate_FUNC_RTL_CS_RightsToken_Status_suspended  to suspended" searchProperties="true" id="e64a75c4-ea95-4a98-81d1-64be63ecc7b7" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_R3\ResourceStatusUpdate_1.0.6.1.K\ResourceStatusUpdate_1.0.6.1.K\rights\RerunCasesReport</con:setting></con:settings>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="593cf5cd-a911-4966-80a8-a86ad90c0cf7">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )
log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="58d51112-f781-42b3-862a-395362c824e3">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Other" id="8ddb50a3-dcd8-4d8d-968e-91546e3bd33c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: suspended";

testCase.setPropertyValue("RTStatus","suspended");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with suspended RightsToken ID" id="dfaf853e-33d7-4041-9d61-948869c8d5c2">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:suspended");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="07414b63-e00f-4427-8565-251ec06998b5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="8ea61159-c2f0-463c-b79e-1f2b05325317">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="5c35f25e-5b30-40a7-b932-bab822ba2361">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="8fde5e3c-dd47-459c-8e8a-bec975ebb4db">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_cf1a4c90-ebf0-4fc3-a105-81f062f1d5ce</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF9048E0B4A27F0EE0401F0A07994A49</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-20 11:33:41.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:suspended</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:suspended</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>19</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase><con:properties>
      <con:property>
        <con:name>QC_TestPlanDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestLabDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestSet</con:name>
        <con:value/>
      </con:property>
    <con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTLCS</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property></con:properties>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="02RightsResourceStatusUpdate_RET_TestCases" id="292f6bb4-3542-47f4-b6cd-2b8329f92466">
    <con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_4.1\RSU_R4.2-1.0.7-3.02\RightsReports\RET</con:setting></con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="E2E_Run_RET" searchProperties="true" id="6ddee2b9-1dae-49d8-a6f9-72d0ba4eaa01"><con:settings/><con:testStep type="groovy" name="Create_AccountUSer_STS"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","RET");
myTS.setPropertyValue("role","nodeIdRTL");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","RET");
tS.setPropertyValue("role","nodeIdRTL");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_RightsResourceStatusUpdate_FUNC_RTL_With_Valid_Accountid and Valid RightsTokenId(ISC)" searchProperties="true" id="68c27485-041e-4e8c-83e5-8b342a152a29" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>The test case is to Update the rightstoken with RightsResourceStatusUpdate API .
Verify that the Account information and Rightstoken information.
Ensure all required field is included in the Update request. Send the RightsResourceStatusUpdate API transaction. 
Verify that the token has been Updated successfully and that it contains the ID for the Updated rights token.

Expected Result :

Response-Code: 200</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="526bafd2-2320-487f-a8bf-e93b1308b6cd">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="e665c125-a5eb-4b90-863e-a42e9fa245c9">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;
log.info rtDBinfo;
TestCase_Accountid = testCase.getPropertyValue("accountoid");
Val_rtDBinfo = new XmlSlurper().parseText(rtDBinfo);

log.info   "RightToken Belongs to Account :" + Val_rtDBinfo.ResultSet.Row.ACCOUNT_OID; 

RightsAccountid = (Val_rtDBinfo.ResultSet.Row.ACCOUNT_OID).toString();

		if ( rtStatus.toString()!='active'){
			if( RightsAccountid == 'C9A677094C5EBBA3E0401F0A07990448'){
				log.info "Calling RightsToken Create API for a new RightsToken !"

				def runnerRTU = RTURequest.run(null,false);
				log.info runnerRTU.getStatus()
				assert runnerRTU.status == Status.FINISHED;
			}
			else
			{
				log.info "Rights Token Belongs to different Account or not Active";
			}
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="371de884-b612-472b-80d4-452e275f383f">
        <con:settings/>
        <con:config><script>
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="cf394dcf-afb9-44b0-a898-9c65f7f5fb5e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="72f86442-9f09-4a24-b41e-6dd988c18036">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="a7e4f57f-8ed7-40ba-a834-92985f481eb5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="ea1338af-0c5d-45cd-ad72-bfff3f1f2e25">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="d6e40ca5-8b39-4b28-b359-d1c4ddfe7550">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        
        
        <con:property><con:name>VCAllowedUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        <con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>synced</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        <con:property><con:name>SqlStr</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        <con:property><con:name>SoldAsDisplayName</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SoldAsContentID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        
        
        <con:property><con:name>SoldAsBundleID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-05-14 13:56:31.0</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property>
        
        <con:property><con:name>RTC_rcStatusHistory</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        <con:property><con:name>RSDescription</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RSCreationDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RSCreatedby</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RRSValue</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property>
        
        
        <con:property><con:name>RightsResTime</con:name><con:value>12</con:value></con:property>
        
        
        
        
        <con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>RightsLockerID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        
        
        <con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPContentProfile3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPContentProfile2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPContentProfile1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        <con:property><con:name>PPCanStream3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanStream2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanStream1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        <con:property><con:name>PIPurchaseUser</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PIPurchaseTime</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        <con:property><con:name>PIPurchaseAccount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>PINodeID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer</con:value></con:property>
        
        
        <con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer</con:value></con:property>
        
        
        
        
        <con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>LICAcqBaseLoc</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFWebLocLocation1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        <con:property><con:name>FFManifestLocPreference2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocLocation2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        <con:property><con:name>FeedRTUReq</con:name><con:value/></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property>
        
        
        
        
        <con:property><con:name>expectErrTypeRTUreate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        
        
        <con:property><con:name>expectErrTypeRTUpdate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>API_NOT_AUTH</con:value></con:property>
        
        <con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>ContentID</con:name><con:value/></con:property>
        
        
        <con:property><con:name>assertionUUID</con:name><con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
      <con:property><con:name>assertCommon</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>ALID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountStatusXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_RightsResourceStatusUpdate_FUNC_RTL_with_Unmatched_Accountid_in URL" searchProperties="true" id="b142e635-ea3d-456d-a81d-a932fd5d3205" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to  Verify the exception/error returned for RightsToken status update with unmatched accountid information in URL. API should return an error message for unmatched Account id.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="b5189f10-142f-46c3-9481-a939f75a23fc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="2820a4d7-dcb2-45fd-98c3-a7c580cada20">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Unmatched Account ID" id="4b40e916-01b6-418b-86f6-eb54b894710d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));

//testRunner.testCase.testSteps["RightsTokenCreate Request POST"].setPropertyValue( "Request",RTKRequest);
//testRunner.testCase.testSteps["RightsTokenCreate Request POST"].setPropertyValue( "AccountID",'urn:dece:accountid:org:dece:100799');
def node_Account_ID = context.expand( '${#Project#Node_Account_ID}' )
log.info node_Account_ID

testProject.setPropertyValue("node_Account_IDbak",node_Account_ID);

testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testProject.setPropertyValue("Node_Account_ID","CCE44AF42FD7063BE0401F0A07991776");

//testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL")+ "1000");
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","ACCOUNTID NOT MATCH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="ae15cff2-1e8e-4736-9351-3f42dc0e124d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="b60ed757-cf9e-4310-8006-bf61576df150">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="7a814ede-36b8-470b-a7dc-8a0d8efd4c26">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

def node_Account_IDbak = context.expand( '${#Project#node_Account_IDbak}' )
testProject.setPropertyValue("Node_Account_ID",node_Account_IDbak);

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A079904481000</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24591</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>21</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_RightsResourceStatusUpdate_FUNC_RTL_with_inactive_Accountid in URL" searchProperties="true" id="1e42ce5f-bbbe-485d-b032-2a5dbd445a39" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to  Verify the exception/error returned for RightsToken status update with inactive  accountid information in URL. API should return an error message for inactive  Account id.

Error code : 401 , Account not active</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="136af690-6505-41de-80d7-c2106e78f75d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="8330a1a3-f12c-4c0f-be83-e832c5da0f9e">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Account Inactive Statuses" id="5133057d-59b9-439e-8d49-12f18e91ed2f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def GetAccountStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set Account Status");

// Get ALL inactive Status from ACCOUNT_STATUS_REF Except = 'Pending'

SqlStr = "select Status from ACCOUNT_STATUS_REF where Status !='active'";

testCase.setPropertyValue("SqlStr",SqlStr);

GetAccountStatus.setPropertyValue("TCaseName",testCase.getName());
GetAccountStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( GetAccountStatus, null );

TSrunner.runTestStepByName("Get Account Status for RTSU");

assert TSrunner.status == Status.INITIALIZED;

 log.info " Current Account Status: " + testCase.getPropertyValue("AccountStatus");

testCase.getPropertyValue("AccountStatusXML");</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Feed DataSource for Inactive Account Statuses" id="b76e66f2-9c62-48a9-b314-c9cefd1b2030">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="XML">
            <con:configuration><sourceStep>Get Account Inactive Statuses</sourceStep><sourceProperty>result</sourceProperty><rowPath>//Results[1]/ResultSet[1]/Row</rowPath><columnPath>STATUS</columnPath></con:configuration>
          </con:dataSource>
          <con:property>AccountStatus</con:property>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SetUp inactive Account Status for RTSU" id="b04cb226-b6b5-4411-b010-36d7b57ea47d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get AccountStatus Values from Data Source

def DsAccountStatus = testRunner.testCase.testSteps['Feed DataSource for Inactive Account Statuses'];
log.info  "Account Status is to set to: " + DsAccountStatus.getPropertyValue("AccountStatus");

testCase.setPropertyValue("AccountStatus",DsAccountStatus.getPropertyValue("AccountStatus"));

def SetAccountStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set Account Status");

SetAccountStatus.setPropertyValue("TCaseName",testCase.getName());
SetAccountStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetAccountStatus, null );

TSrunner.runTestStepByName("Set Account Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="7989455d-8bc1-49d2-8169-196995b3ff83">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","ACCOUNT_NOT_ACTIVE");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="6d9473f7-83dc-4e36-82aa-f935ea7fe9ac">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="e2844f61-eb17-4f0c-bee5-d17c8c5bbf13">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="82cab1e9-1b70-43dd-abca-167d0bc0475c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="DataSource Loop" id="a3667f30-9037-4c98-9753-dcda5fe7df7e">
        <con:settings/>
        <con:config>
          <dataSourceStep>Feed DataSource for Inactive Account Statuses</dataSourceStep>
          <targetStep>SetUp inactive Account Status for RTSU</targetStep>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Setactive Account Status" id="6590766a-ce12-4312-b1c5-aafadeb40e4e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Re-set AccountStatus Values  = 'active'

testCase.setPropertyValue("AccountStatus","active");

def SetAccountStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set Account Status");

SetAccountStatus.setPropertyValue("TCaseName",testCase.getName());
SetAccountStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetAccountStatus, null );

TSrunner.runTestStepByName("Set Account Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AccountStatus</con:name>
          <con:value>active</con:value>
        </con:property>
        <con:property>
          <con:name>AccountStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>archived</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>blocked</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>blocked:tou</STATUS>
    </Row>
    <Row rowNumber='4'>
      <STATUS>deidentified</STATUS>
    </Row>
    <Row rowNumber='5'>
      <STATUS>deleted</STATUS>
    </Row>
    <Row rowNumber='6'>
      <STATUS>forcedeleted</STATUS>
    </Row>
    <Row rowNumber='7'>
      <STATUS>mergedeleted</STATUS>
    </Row>
    <Row rowNumber='8'>
      <STATUS>other</STATUS>
    </Row>
    <Row rowNumber='9'>
      <STATUS>pending</STATUS>
    </Row>
    <Row rowNumber='10'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>ACCOUNT_NOT_ACTIVE</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24596</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsBundleID</con:name>
          <con:value>urn:dece:bid:100001</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SqlStr</con:name>
          <con:value>select Status from ACCOUNT_STATUS_REF where Status !='active'</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdZk6JKE333VxjOY4fNJm4x3RHF2qioIK4vX2BRAsqiFAj662+ho6M9PXPnfg8ddiWVWSczD8mp79gOA7YLMEZJ6sdRVZPeav9bQ3qzgQ6qQ6bl1Bsbhq+32x2+3uh0aJ5btxzowFpVwzhDWoRTO0rfaizNcHWarzMNi251+WaXo19bbHNVq85QgklosuWVrlWLMIhw93LsWy1Lom5sYx93IztEuJvC7gTogy7Z2bVvmGrv368oLwcm716a7rsUBV8dBFEQwFcYh9R36mnPdwd3J74b2WmWoB9nOvit9sM3z/PXnHuNE5diaZqm6A5F9jjYd7/V3is3Z+Ro0Sa+rkU7iiMf2oF/tktQOkq92KmCwI0TP/XC34RmKIYuQ9dRAUk1G9G3GvXzgAu6v4z0BDLBdh17NnMLZqINSlAEUXVqam+1b3/XwauvldgR3sRJiD+t/xskFB1REO+RU8e3zG7o/j7iF+V6/45gV4tgkGH/iIYlTfY2RLg6TtDGLwY+JuRzcPXS/mqBbwxD8L+05Dv1iJPApr6ojOS7CKf/T78ee3WNMrODDL3PDKTujjtvKW8ChIebQUMa4VynwuP07QLhcfMV1L3VP9afiXrn1Q+nkXgOlm6fyyZ7gYOKNG8vwvM2ysNW4TaCIJYO7W1rwmUxOs6PM9XZ7w+b4UHbdTZmZ899vCTmAPqnxfbAnY1KTx3oH84haYcSjHcCfWD1mSkPOvPdB9fyxwC8NJvUTN2EWb8wuWYWDPvrnRspM3bQOLeH4Xkq76C35BUcNCrBPGx6kRweqW3SyQjsg/z2M6fHHMq8+uh0SbL8f8HTHclO7ftCLCfFhryeKXrXNU3KzqIIThMX5JoAXPK3BUPB3R28na92cloAhqEASRSCrTzQwU4FzFQWPF2czfRCPIOe4A5nxNGqgGAl6KacS/lSmhnGh5x7lqPOTms1yFZneagDfHEWPV025ZlkWrKug/hqK3RprRZbfaLnmrGUKiSAJBf7s6N2UqQWPmQ1Xp/w7HLCZ6vFjNiV0yAcHteWHOiiroqTgzrR1pxkyD1gLueQVTLiex6E+7iynAoPTr092gKk5DQ5E5x1a5fr1pQdSqZ9sVnPNl1Te7qBc9G4ZKVW5Lw3m55/1kIUdNEJ5UK2wPhaC2iJypBeLXrYnvORboJcci/OfTl3RjcgukHnFfFaq4Gcm7I5HSq6qeUyuNgkOQ/wmh16a9U7Qs4oehbYPjZGNOS5EpHnkXmEJ/5QsVUFrMMZAznTgz7v24s4d1ftXDKWvX680kiYITBkQTAAAUSDMjVSfwEMhBk/2vsd1keDjRKHyEsqOhP3d8dzQbd9buSOh3Ne2uxaY9Ufc7bjUVoA2S23A5qGnD7jGbZjLilTivxzc9SfLpCfLM/pkDeYpt/mK+Y8my6kOGg5H4vltP9SLKFhjcaT6Xx8LorhYds+B+nHSPhIJj1dckdDhMYYvlC0rQhWW+LF5ceW8Glj0oivAFcXAFC3riv7hMDCx/ZKwg9Tlwl5gS7mqjgX1QlQ1RdZEyTD2CgeM4bqLJsyQ12TnYCU6bRcmEFlJQoS6RRtz1f7JavQKws4l2BGQ1ZcY8q/9BZoZQwDa5aCfD/bRAxDq3vjY6PnLtRLBjhaPhHIWyRUMg1M7dG+Rxf9WZNmDoYT9CYdMOWKCbsrRp67Ou3c1Y40Zfnw6iwtEMysB45phGLzimHJpg7a1/et0LUpZwYwLPbrEBaSRXp2cY4tQTYVg54WkgT6Vxu2AFvg5Vne6qJ88a+AQrcJLY7rhYeX0dAfWXJGSJs90GW7Zul/5VhJscozxw4iMMBnjslXjslgc3jR2hKD+aa4x/PcFVT5YLRmg15nTxuLwa4ivCiUm/pBYxS1c6v/MmdOecvbGvN5R5M88SXaLD1unQq0fYYG6u1aqm/upKjZCE76QDf4qU8FJ3qLDjkeVIYaE8lcelaoTpK9COHKD89nrsFOw/EkO2pTu4+Zk7c+zDv5dvzRpKhEPfHn1upoKIsYLq/fkc9D8m68jlHqccA+TeCb9ppk6y2C6W1Zfoc1qaqQj6Od/lnHlRbfqW8uW7v7UgziFEVp7b30KjVcNyNKz3e65Mt5XUsi6Ci8KLRoRlaUDi3TDZpRaEDznU5TYISb2Lui+ARRjKONX55Vytnrx/rPAGHYxShyUFI/xhn0EK79IWJZr6oWmUSFxBFGVkzkcrst8KChcArHcG2BY1ilw4tNqdVoczwrdNq16jBOR9EoAZsUJU9SmaGfpLKJoL/3UamnS1GBiarAKSnJwT5macC8Hu3XCGVEcSel6O2yjTZPYT/cE/FAAFNh7GQBet17+0uBKHz9Zes2xBcry7ZaF7Xz2/w+P7uVguxx/HIDLpMREGkn+kL0s7dMfp8x95jxLTzIHL8UNaSuaeLDK5LnRz/pUvLkzpUypRvm+9bPhqew1OeM7ic5Rx/eGX+/ExFJTUTX+60hB/v18Jodj9mlBa1SUCYkPMVQdJOaIJgRVXiy4h2KqHsI6q8E+R31p5Pv9md8WepFk5S8zSEhTPWy/Ivb2ATh8jamEcIXf3vVezqS1C1FRfqVTQzIpa1E/Md7HezCch8xj8lPHifOz3Z9EevhHJJnOb78yC1Xpfw+/YYVMCZhfTLC4uQx+FcBvjr82Xgv8h1LSti0zlL0+yfVcja91WwI4yxKNal2MTzOywvO9LRH3Z+bfglzEcA/bjQF/u2NZqEPJmRyhXbtvtf/9811/0IXiIgX9i9Y3moFuZyTwyP3YT7/APj1iKaVP43o50zefzH/anmo6ef34f0f</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>ACCOUNT_NOT_ACTIVE</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_RightsResourceStatusUpdate_FUNC_RTL_with_Non-existing_account in URL" searchProperties="true" id="3c6a849c-54b2-41b7-b16f-277acea7535e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to  Verify the exception/error returned for RightsToken status update with non -existing  accountid information in URL. API should return an error message for non - existing  Account id.

Expected Result :

System should return error message

ERROR ID : Request:RightsAccountNotFound

DESCRIPTION : Rights Account is not found

HTTP STATUS  CODE : 404</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="2d49e754-194d-43b4-af13-69991dc489cc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="ae3dec2c-88f6-4860-acdc-3c300549aaba">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Non-Existing Account ID" id="2a8f1889-c352-408a-88be-8358be70601e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL")+ "243043243802284210");
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","ACCOUNTID NOT MATCH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="5e580e60-8fa1-4728-b7a3-f9f09aa6a03a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="aff7d97a-025e-41e7-9d73-246ab00285fb">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="aa6ef7d0-3fe7-470f-8409-85d1ef9ee863">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}243043243802284210</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24597</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>6</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_RightsResourceStatusUpdate_FUNC_RTL_with_Invalid_Accountid" searchProperties="true" id="507edcf3-8e5b-4b4a-b082-dd608c269966" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to verify the error response  the RightsResourceStatusUpdate API should provide for updating a valid Rightstoken with an Invalid account id in the request URL.

Expected Response : 401 Invalid Account Id.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="a7674102-0f16-4b20-95f7-d00d45406c24">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="6be73a67-e196-4c0c-9d96-0771d93fafa1">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Invalid Account ID" id="dfad8765-f653-43f4-8095-840b68a8305c">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL")+ "8989000");
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","ACCOUNTID NOT MATCH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="844c3d7a-e23e-49b7-8301-66f11e8ec87c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="b62a7768-ce15-4251-abb8-89dd4e1ae6d1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="bac33aab-4ddd-4bfe-ad15-a1c10b87668f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24605</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}8989000</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>9</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>ACCOUNTID NOT MATCH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_RightsResourceStatusUpdate_FUNC_RTL_with_ Invalid_RightsTokenId" searchProperties="true" id="cbd056c4-2e1e-4e1b-89ee-1a9b8eead0f5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case is to verify the error response  the RightsResourceStatusUpdate API should provide for updating an invalid Rightstoken with an valid account id in the request URL.


Expected Response : 401 Invalid RightsTokenID</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="c5b9b618-2f02-49c7-af40-9cc5af5248ab">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="201eda30-8a20-4ce6-aff1-51c4be4d0e74">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Invalid RightsToken ID" id="2c7f44a7-91cf-4832-b63b-0d710c71b50d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("rightstokenid", "urn:dece:rightstokenid:org:org:dece:9E7355CA36937E50E0401F0A0799726F");
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="c98779dc-1f5e-4f43-bcbc-8d454d34628c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="e3c3b1f2-acad-4b40-834b-b0af13b07b77">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="de1a0895-adc0-4b0d-b100-5cb55c0b1b7b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24606</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:org:dece:9E7355CA36937E50E0401F0A0799726F</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>RIGHTSTOKEN_INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>19</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_RightsResourceStatusUpdate_FUNC_RTL_with_inactive_user" searchProperties="true" id="e4bebd08-2f37-4c91-ab43-758122feaa4b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with inactive user.

Expected Result :

System should return error message

ERROR ID : Request:RightsUserNotActive  

DESCRIPTION : Rights User is not active

HTTP STATUS  CODE : 401</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="3b0702a2-4870-4991-8cc9-cfc6eaa567ee">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Get User Inactive Statuses" id="4dae083e-9f52-4e66-a4b7-f3ca3f6e645e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def GetUserStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set User Status");

// Get ALL inactive Status from USER_STATUS_REF Except = 'Pending'

SqlStr = "select Status from USER_STATUS_REF where Status !='active'";

testCase.setPropertyValue("SqlStr",SqlStr);

GetUserStatus.setPropertyValue("TCaseName",testCase.getName());
GetUserStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( GetUserStatus, null );

TSrunner.runTestStepByName("Get User Status for RTSU");

assert TSrunner.status == Status.INITIALIZED;

 log.info " Current User Status: " + testCase.getPropertyValue("UserStatus");

testCase.getPropertyValue("UserStatusXML");</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Feed DataSource for Inactive User Statuses" id="b7df88a0-ef15-4a61-a662-f00dd0bbdf89">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="XML">
            <con:configuration><sourceStep>Get User Inactive Statuses</sourceStep><sourceProperty>result</sourceProperty><rowPath>//Results[1]/ResultSet[1]/Row</rowPath><columnPath>STATUS</columnPath></con:configuration>
          </con:dataSource>
          <con:property>UserStatus</con:property>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="c2514d7a-1afc-4ec6-9c1b-c64856c77b3f">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SetUp User Inactive Status for RTSU" id="3af35967-8784-4d5b-b34d-acff9b964a5d">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

def DsUserStatus = testRunner.testCase.testSteps['Feed DataSource for Inactive User Statuses'];
//def DsUserStatus='suspended';
log.info  "User Status is to set to: " + DsUserStatus.getPropertyValue("UserStatus");

testCase.setPropertyValue("UserStatus",DsUserStatus.getPropertyValue("UserStatus"));
//testCase.setPropertyValue("UserStatus",DsUserStatus);
def SetUserStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set User Status");

SetUserStatus.setPropertyValue("TCaseName",testCase.getName());
SetUserStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetUserStatus, null );

TSrunner.runTestStepByName("Set User Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="2587c330-83f9-460b-89dd-736d395bfc28">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="867290e5-edb1-4288-a723-6c20abf91fe4">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="3c1b18fb-cb6d-465e-9c3a-be4221876561">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="dd7bbbcd-cbbb-4dae-8df0-43b193377500">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set User Status to Active" id="c9cb87f5-b20e-4d2e-9cb0-80a9c45e77e0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Re - Set NodeStatus Value to Active


def SetUserStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set User Status");

SetUserStatus.setPropertyValue("TCaseName",testCase.getName());
SetUserStatus.setPropertyValue("TSuiteName",testSuite.getName());

testCase.setPropertyValue("UserStatus", "active");
log.info " Re-Set User Status to : " + testCase.getPropertyValue("UserStatus");

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetUserStatus, null );

TSrunner.runTestStepByName("Set User Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="DataSource Loop" id="fa3623f3-6c2e-4b9e-859a-cb4a22d5187e">
        <con:settings/>
        <con:config>
          <dataSourceStep>Feed DataSource for Inactive User Statuses</dataSourceStep>
          <targetStep>SetUp User Inactive Status for RTU</targetStep>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>USER_NOT_ACTIVE</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SqlStr</con:name>
          <con:value>select Status from USER_STATUS_REF where Status !='active'</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>UserStatus</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>UserStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>archived</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>blocked</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>blocked:clg</STATUS>
    </Row>
    <Row rowNumber='4'>
      <STATUS>blocked:tou</STATUS>
    </Row>
    <Row rowNumber='5'>
      <STATUS>deidentified</STATUS>
    </Row>
    <Row rowNumber='6'>
      <STATUS>deleted</STATUS>
    </Row>
    <Row rowNumber='7'>
      <STATUS>forcedeleted</STATUS>
    </Row>
    <Row rowNumber='8'>
      <STATUS>mergedeleted</STATUS>
    </Row>
    <Row rowNumber='9'>
      <STATUS>other</STATUS>
    </Row>
    <Row rowNumber='10'>
      <STATUS>pending</STATUS>
    </Row>
    <Row rowNumber='11'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>c9cb87f5-b20e-4d2e-9cb0-80a9c45e77e0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_RightsResourceStatusUpdate_FUNC_RTL_with_Pending_RightsTokenID" searchProperties="true" id="e9aa901c-9d6b-4621-9aef-696740913360" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with non-existing user.

Expected Result :

System should return error message

ERROR ID : Request:RightsUserNotFound

DESCRIPTION : Rights User is not found

HTTP STATUS  CODE : 404</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="eb72cfcf-7106-413b-9354-1c92fb221418">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="68e5cba2-563c-4f6e-bad8-8be00b27481a">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status_Pending" id="9e33c341-95d3-4d31-af03-f0b099799473">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="33233c38-a2aa-4de0-b006-25297cc301c0">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="a279d7ef-6d6e-4f7a-9bfa-2decf13b3d28">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="0f0871ea-44bf-4c1c-bb95-afd310420589">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="7748bc0e-4092-49c7-8272-b31fede9292b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="272047bb-21fd-474d-95d3-d7ef20455123">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24636</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>12</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdZk6JKE333VxjOY4fNJm4x3RHF2qioIK4vX2BRAsqiFAj662+ho6M9PXPnfg8ddiWVWSczD8mp79gOA7YLMEZJ6sdRVZPeav9bQ3qzgQ6qQ6bl1Bsbhq+32x2+3uh0aJ5btxzowFpVwzhDWoRTO0rfaizNcHWarzMNi251+WaXo19bbHNVq85QgklosuWVrlWLMIhw93LsWy1Lom5sYx93IztEuJvC7gTogy7Z2bVvmGrv368oLwcm716a7rsUBV8dBFEQwFcYh9R36mnPdwd3J74b2WmWoB9nOvit9sM3z/PXnHuNE5diaZqm6A5F9jjYd7/V3is3Z+Ro0Sa+rkU7iiMf2oF/tktQOkq92KmCwI0TP/XC34RmKIYuQ9dRAUk1G9G3GvXzgAu6v4z0BDLBdh17NnMLZqINSlAEUXVqam+1b3/XwauvldgR3sRJiD+t/xskFB1REO+RU8e3zG7o/j7iF+V6/45gV4tgkGH/iIYlTfY2RLg6TtDGLwY+JuRzcPXS/mqBbwxD8L+05Dv1iJPApr6ojOS7CKf/T78ee3WNMrODDL3PDKTujjtvKW8ChIebQUMa4VynwuP07QLhcfMV1L3VP9afiXrn1Q+nkXgOlm6fyyZ7gYOKNG8vwvM2ysNW4TaCIJYO7W1rwmUxOs6PM9XZ7w+b4UHbdTZmZ899vCTmAPqnxfbAnY1KTx3oH84haYcSjHcCfWD1mSkPOvPdB9fyxwC8NJvUTN2EWb8wuWYWDPvrnRspM3bQOLeH4Xkq76C35BUcNCrBPGx6kRweqW3SyQjsg/z2M6fHHMq8+uh0SbL8f8HTHclO7ftCLCfFhryeKXrXNU3KzqIIThMX5JoAXPK3BUPB3R28na92cloAhqEASRSCrTzQwU4FzFQWPF2czfRCPIOe4A5nxNGqgGAl6KacS/lSmhnGh5x7lqPOTms1yFZneagDfHEWPV025ZlkWrKug/hqK3RprRZbfaLnmrGUKiSAJBf7s6N2UqQWPmQ1Xp/w7HLCZ6vFjNiV0yAcHteWHOiiroqTgzrR1pxkyD1gLueQVTLiex6E+7iynAoPTr092gKk5DQ5E5x1a5fr1pQdSqZ9sVnPNl1Te7qBc9G4ZKVW5Lw3m55/1kIUdNEJ5UK2wPhaC2iJypBeLXrYnvORboJcci/OfTl3RjcgukHnFfFaq4Gcm7I5HSq6qeUyuNgkOQ/wmh16a9U7Qs4oehbYPjZGNOS5EpHnkXmEJ/5QsVUFrMMZAznTgz7v24s4d1ftXDKWvX680kiYITBkQTAAAUSDMjVSfwEMhBk/2vsd1keDjRKHyEsqOhP3d8dzQbd9buSOh3Ne2uxaY9Ufc7bjUVoA2S23A5qGnD7jGbZjLilTivxzc9SfLpCfLM/pkDeYpt/mK+Y8my6kOGg5H4vltP9SLKFhjcaT6Xx8LorhYds+B+nHSPhIJj1dckdDhMYYvlC0rQhWW+LF5ceW8Glj0oivAFcXAFC3riv7hMDCx/ZKwg9Tlwl5gS7mqjgX1QlQ1RdZEyTD2CgeM4bqLJsyQ12TnYCU6bRcmEFlJQoS6RRtz1f7JavQKws4l2BGQ1ZcY8q/9BZoZQwDa5aCfD/bRAxDq3vjY6PnLtRLBjhaPhHIWyRUMg1M7dG+Rxf9WZNmDoYT9CYdMOWKCbsrRp67Ou3c1Y40Zfnw6iwtEMysB45phGLzimHJpg7a1/et0LUpZwYwLPbrEBaSRXp2cY4tQTYVg54WkgT6Vxu2AFvg5Vne6qJ88a+AQrcJLY7rhYeX0dAfWXJGSJs90GW7Zul/5VhJscozxw4iMMBnjslXjslgc3jR2hKD+aa4x/PcFVT5YLRmg15nTxuLwa4ivCiUm/pBYxS1c6v/MmdOecvbGvN5R5M88SXaLD1unQq0fYYG6u1aqm/upKjZCE76QDf4qU8FJ3qLDjkeVIYaE8lcelaoTpK9COHKD89nrsFOw/EkO2pTu4+Zk7c+zDv5dvzRpKhEPfHn1upoKIsYLq/fkc9D8m68jlHqccA+TeCb9ppk6y2C6W1Zfoc1qaqQj6Od/lnHlRbfqW8uW7v7UgziFEVp7b30KjVcNyNKz3e65Mt5XUsi6Ci8KLRoRlaUDi3TDZpRaEDznU5TYISb2Lui+ARRjKONX55Vytnrx/rPAGHYxShyUFI/xhn0EK79IWJZr6oWmUSFxBFGVkzkcrst8KChcArHcG2BY1ilw4tNqdVoczwrdNq16jBOR9EoAZsUJU9SmaGfpLKJoL/3UamnS1GBiarAKSnJwT5macC8Hu3XCGVEcSel6O2yjTZPYT/cE/FAAFNh7GQBet17+0uBKHz9Zes2xBcry7ZaF7Xz2/w+P7uVguxx/HIDLpMREGkn+kL0s7dMfp8x95jxLTzIHL8UNaSuaeLDK5LnRz/pUvLkzpUypRvm+9bPhqew1OeM7ic5Rx/eGX+/ExFJTUTX+60hB/v18Jodj9mlBa1SUCYkPMVQdJOaIJgRVXiy4h2KqHsI6q8E+R31p5Pv9md8WepFk5S8zSEhTPWy/Ivb2ATh8jamEcIXf3vVezqS1C1FRfqVTQzIpa1E/Md7HezCch8xj8lPHifOz3Z9EevhHJJnOb78yC1Xpfw+/YYVMCZhfTLC4uQx+FcBvjr82Xgv8h1LSti0zlL0+yfVcja91WwI4yxKNal2MTzOywvO9LRH3Z+bfglzEcA/bjQF/u2NZqEPJmRyhXbtvtf/9811/0IXiIgX9i9Y3moFuZyTwyP3YT7/APj1iKaVP43o50zefzH/anmo6ef34f0f</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_RightsResourceStatusUpdate_FUNC_RTL_with_Invalid RightsTokenid in URL" searchProperties="true" id="0883afbf-aae6-4adb-b0ca-e7450c78495b" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with Invalif RightsTokenId in URL.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="46650731-acc4-48e2-8a10-94a2cdf1cb61">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="f9999a17-d958-464b-b657-a9d21f61fd03">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Invalid RightsToken ID in URL" id="24214126-1736-486e-81b5-76bf9aedb3c7">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("rightstokenid", "urn:dece:rightstokenid:org:org:dece:9E7355CA36937E50E0401F0A0799726F");
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="4ec4d235-f3fb-4239-938b-0e3ceed9c9b1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="1c0e66cf-4273-42a0-9817-09804e1029e7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="0b2c7582-38bd-4052-bc0a-50e949578a52">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24591</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:org:dece:9E7355CA36937E50E0401F0A0799726F</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>RIGHTSTOKEN_INVALID</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>6</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00013_RightsResourceStatusUpdate_FUNC_RTL_with_inactive_RightsTokenID_expect_Pending" searchProperties="true" id="43b22776-939c-4313-add2-b74d10787aab" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with RightsToken not active.

Expected Result :

System should return error message</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="819c3068-f2cc-40f2-b469-4438facc3af8">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="fda3d1ca-a961-439f-9366-3cf97d912314">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get RightsToken Inactive Statuses" id="8bc6f876-a63f-4324-9072-59d12ad7dee3">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def GetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SqlStr = "select STATUS_ID from RIGHTS_TOKEN_STATUS_REF where STATUS_ID !='active'AND STATUS_ID != 'pending'AND STATUS_ID != 'deleted'";

testCase.setPropertyValue("SqlStr",SqlStr);

GetRTStatus.setPropertyValue("TCaseName",testCase.getName());
GetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( GetRTStatus, null );

TSrunner.runTestStepByName("Get RightsToken Status for RTSU");

assert TSrunner.status == Status.INITIALIZED;

 log.info " Current RightsToken Status: " + testCase.getPropertyValue("RTStatus");

testCase.getPropertyValue("RTStatusXML");</script></con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Feed DataSource with Inactive RightToken Statuses" id="15aac43e-6936-478a-841e-8b70a3a21ffe">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="XML">
            <con:configuration><sourceStep>Get RightsToken Inactive Statuses</sourceStep><sourceProperty>result</sourceProperty><rowPath>//Results[1]/ResultSet[1]/Row</rowPath><columnPath>STATUS_ID</columnPath></con:configuration>
          </con:dataSource>
          <con:property>RTStatus</con:property>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status" id="554e1935-2ba2-43cb-ae29-09740fa10cf7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

def DsRTStatus = testRunner.testCase.testSteps['Feed DataSource with Inactive RightToken Statuses'];
log.info  "RightToken Statuses is set to: " + DsRTStatus.getPropertyValue("RTStatus");

testCase.setPropertyValue("RTStatus",DsRTStatus.getPropertyValue("RTStatus"));

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Inactive RightsToken ID" id="9cb7660a-c977-4bbb-9c69-90ac52e1eb34">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties

testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="5c6c308b-7764-480d-a33c-76dc507b258c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="5ee41e09-ebe1-4ead-bfb7-56732cbc3ab1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="31e5eda0-f1f7-41c0-8a60-a3cfd03bc834">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="DataSource Loop" id="fac29d05-472f-4438-940a-e98de30cd99e">
        <con:settings/>
        <con:config>
          <dataSourceStep>Feed DataSource with Inactive RightToken Statuses</dataSourceStep>
          <targetStep>Set RightsToken Inactive Status</targetStep>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="c1554297-93dc-423b-a6bb-460ad0b41fa5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>RT_UPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24596</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS_ID>other</STATUS_ID>
    </Row>
    <Row rowNumber='2'>
      <STATUS_ID>suspended</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SqlStr</con:name>
          <con:value>select STATUS_ID from RIGHTS_TOKEN_STATUS_REF where STATUS_ID !='active'AND STATUS_ID != 'pending'AND STATUS_ID != 'deleted'</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>6</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00014_RightsResourceStatusUpdate_FUNC_RTL_with_User Privleges" searchProperties="true" id="ec18874d-64c3-47e4-a8dc-4562a876bc77" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This tescase is to verify that the exception/error returned for RightsToken Update with Basic User in Purchase Info.
Expected Result :

System should return error message.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="9eff14f2-6922-40d0-a7ab-e3670a80b313">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Get User Privileges" id="d1e9b8be-da97-4226-a271-da2fcbca1d8b">
        <con:settings/>
        <con:config>
          <script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import javax.sql.DataSource
import groovy.sql.Sql


mydb = new dbUtils(log,"LP1");

def SqlStr = "SELECT PRIVILEGE from USER_PRIVILEGE_REF"

log.info SqlStr;

UserPriv = mydb.SelectFromDB(SqlStr);</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Feed User Privileges" id="73da2c31-876b-4f9f-8901-cf0bef3e774b">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="XML">
            <con:configuration><sourceStep>Get User Privileges</sourceStep><sourceProperty>result</sourceProperty><rowPath>//Results[1]/ResultSet[1]/Row</rowPath><columnPath>PRIVILEGE</columnPath></con:configuration>
          </con:dataSource>
          <con:property>UserPriv</con:property>
          <con:restartOnRun>true</con:restartOnRun>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="a215b005-9632-44b8-9778-8771107bf587">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Account User Privilege to User" id="d058d374-7e3f-4788-960a-3a9598897a04">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import dbUtils.dbUser;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));

def DsUserPriv = testRunner.testCase.testSteps['Feed User Privileges'];
log.info  "Set User Privileges  to: " + DsUserPriv.getPropertyValue("UserPriv");
testCase.setPropertyValue("Privilege",DsUserPriv.getPropertyValue("UserPriv"));


mydbUser = new dbUser(log,"LP1");

Username = testCase.getPropertyValue("username");
Privilege =  testCase.getPropertyValue("Privilege")

UserRc = mydbUser.userSetPrivilege(Username,Privilege);

if (UserRc == 1){
log.info "$Username has been updated to $Privilege: " + UserRc;
}
else
{
log.info "$Username has not been updated : " + UserRc;
}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="7e97fb15-dc17-4b2d-ba25-3ed177646bb2">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="8b08b4f6-40a7-49ed-ab9f-69f9c2c7f25f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="96526309-4aaa-4b1d-9b89-719e12038d2c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="1ee84d36-4028-4a93-b8dd-3f551f23b61f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="a74d4dc2-76d3-489e-ad30-b68d3cf6c5fd">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="datasourceloop" name="Get next User Privilege" id="b73d642f-8048-4a63-ad3a-e78fec03d725">
        <con:settings/>
        <con:config>
          <dataSourceStep>Feed User Privileges</dataSourceStep>
          <targetStep>Verify RightsToken ID to Update</targetStep>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Account User Privilege to Full" id="b7dc0bbc-72d9-448b-b857-789a49d16ddc">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import dbUtils.dbUser;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("Privilege","full");

mydbUser = new dbUser(log,"LP1");

Username = testCase.getPropertyValue("username");
Privilege =  testCase.getPropertyValue("Privilege")

UserRc = mydbUser.userSetPrivilege(Username,Privilege);

if (UserRc == 1){
log.info "$Username has been updated to $Privilege: " + UserRc;
}
else
{
log.info "$Username has not been updated : " + UserRc;
}</script></con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>Privilege</con:name>
          <con:value>full</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>29</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00015_RightsResourceStatusUpdate_FUNC_RTL_Verify the Update Date recorded" searchProperties="true" id="66a26800-34ad-43a5-b58d-58464f5fb204" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API records the Date for the rightstoken update.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="97d5c2d7-f66c-487c-84ba-dba04341247d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="d55de4ad-5c28-4ea7-bb25-7f8db91f9de3">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="56328c68-5508-4baf-8b86-d1f7de35d7b5">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="928e543e-8ef5-4f59-b0e1-8d6cdffd71f2">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="a63cb5c5-3d97-48e8-808d-801d30c76e6f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="a6442119-7acb-4f3e-99d1-5e34c58441ce">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="1a255220-b16a-443c-96ca-6ad6f0cf7068">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="29610766-fe1d-406f-80e8-5a987dedb661">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00016_RightsResourceStatusUpdate_FUNC_RTL_Verify the Update Time recorded" searchProperties="true" id="36625c56-9b3a-44e7-99fa-833d105ea914" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API records the Date for the rightstoken update time.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="93141d86-4852-484e-b034-f1916afd9157">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="03014a75-c2f8-4c04-a639-ee9c41d40447">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="a5c1d572-a329-4d65-95ac-6a471bf72878">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="9dd57bca-71d6-4fe8-a8de-36253610ee03">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="18085b9b-5f0c-44a0-b024-3492004b531b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="578a333e-fecf-47ba-b152-0fb3495e5589">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="17cdce61-0422-4db4-9445-d27bbdf2a2b4">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="1d02ecb8-a25b-4dc4-95b3-b5c03fa9cc1f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00017_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_Active to Pending(ISC_R2)" searchProperties="true" id="f471f6b9-915c-4862-b5b6-cbc3bc847dc9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Pending.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="c3edd0d4-f04a-4c51-821d-99ebb4d52495">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="4d49e7be-eaee-49cf-b2a7-d4a4f8b5872e">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="66c47cfd-a78c-414c-84c0-185ba25cca18">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="cc4313fd-7f94-4b0e-b543-ff2b9655f504">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="ddd60a1b-9205-45d2-aaf4-52e7978a39a4">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="1b54421d-f1c1-4564-aa9c-7b08e73f8979">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="89174a89-b286-4e24-b0c0-bbed7f08a4af">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      <con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00018_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_Active to Suspended" searchProperties="true" id="2ef1cdbc-c0d6-47ee-915d-d19cec3c1e69" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="de18eaef-f710-45f0-83f0-bb3f3373a4aa">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="22a9d8d1-ac78-4501-8c95-b1db33078723">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with suspended RightsToken ID" id="ba90998e-2f43-4cc8-9008-ba502d49f7a1">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:suspended");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="9463f7b8-698f-4b21-86f0-d311c9bd5484">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="9c4cc99e-3926-416a-8634-61d8e37335ba">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="ac1137f3-7bb4-4801-8646-c77a27c4b263">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="a8c78350-80cf-44d1-833a-a6dd0d9899f1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:suspended</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:suspended</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00019_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_Active to Other_Status" searchProperties="true" id="695d8d5b-5323-4854-80d5-fa1d8c5621d5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to other Status</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="3c1a5c5b-f37d-4ed8-8241-23ac2c4d8bdc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="d97e43f0-a73e-46ba-bac7-05ef5448d907">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Other RightsToken ID" id="446e7905-0d01-416b-af8a-5f55b5e69364">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:other");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="c71fc51b-3804-451c-bf3c-7145c1be5493">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="60625dac-76fd-4d9c-89f0-52d534b795f9">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="c80069db-c0db-4b3d-a194-187d1a78c8f9">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="3cb09c1a-5155-4c11-8777-18a0a45bb350">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>21</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:other</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:other</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00020_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Update_Status_History" searchProperties="true" id="c0d1e71f-d93d-4168-a699-ede7b6e3f3b7" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status  History for the rightstoken.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="56cf2b0c-e415-4f50-ad50-bdbc7fa384d8">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="fbaad0b5-10df-455f-a366-da5efd3b0458">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="a674d5b0-ff9c-4316-b37f-fd88a73fa3c7">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="085c63dc-674b-447b-90ff-5c0258659757">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="11ac558a-9831-4b88-b161-152fb36c6fba">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="73962191-9b46-4a70-8998-ce9292f33dd5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="ac6db809-8e76-49ce-8e20-057c7b0ed2b2">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="c84172d1-32a6-48c5-a2a1-9836ca669d9e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>19</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00021_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_pending to active(ISC_R2)" searchProperties="true" id="2fb60bc9-8e31-4a9c-8979-ecbfa6bbb0ee" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="fe8abfdf-c217-40a0-b843-2c9708f65edc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="7785c55c-40b0-44dd-aaa1-f2863919e45d">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="3f4fb641-db26-4c6e-a9a3-0fa9042ded7f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="ce9a08cd-d881-455a-9c52-b777a1a38b21">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="cf4946b4-7c20-4a9e-9b15-3cc3c59b7c3d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="c5023f03-95e8-42da-90b7-ec708cd5c3a6">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="5d7d9a9d-1955-4e2e-9014-1c02ec87e047">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="a812860d-4a88-449b-b08f-fdd23feffaf9">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>13</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_RightsResourceStatusUpdate_FUNC_RTL_verify_UpdateBy_information_recorded" searchProperties="true" id="8e6a5eac-634a-40a3-9a16-1dca358e9329" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API record the Information of the Updating Node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="4fd69380-7762-43ea-909f-9b1d13fc1d1f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="975b1a47-b022-4791-9025-697d5fa23d2e">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="38f5225d-fc02-4ccb-812c-ff77edbaf82f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
//testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");
//testCase.setPropertyValue("rcRTStatusHistory",null);</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="9bf42ad3-2a2e-4c58-bdfd-f53290a00f22">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="217fd4fb-ae78-4a6b-b8a5-859caf2acc8a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="ebae9834-d914-4385-828c-fd7d42392ea7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify DB with Updated RightsTokenData" id="44f9a131-3171-4a68-bf95-c530134ad8e8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTUdataVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Rights StatusUpdate Data Validation");

RTUdataVal.setPropertyValue("TCaseName",testCase.getName());
RTUdataVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTU = RTUdataVal.run( null , false )

assert runnerRTU.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="3723cbc1-2811-492e-ab22-fbb5b599e7b2">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>RightsLockerID</con:name>
          <con:value>urn:dece:rightslockerid:org:dece:7001</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RRSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0799</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0799_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107002</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9A9CCCF13ABCD94FE0401F0A05992F63</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTUpdate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>6</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00022_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_pending to deleted(ISC)" searchProperties="true" id="370b4762-d3c1-4f01-a4bf-ac30435a3dc9" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="32b6bfc8-cbea-46f0-9592-e67284bf76cd">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="32183529-210a-4f64-990f-726d18a8faf4">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="79071fc4-608e-476e-a6bf-3b5a5f2d0cd2">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="53eb9f66-baae-4b6b-a05f-ea3a24b59718">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="f0c7efd0-ccec-4719-b1de-ffd78d68fa7d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="e0c3e407-1c52-4c0e-a9bb-0a13b901484d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="a386a5c3-a9dd-4742-8403-e3ad0322eec1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="31755058-4fd8-434a-abf9-b573721ea5d8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00023_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_pending to suspended" searchProperties="true" id="a8e39940-2963-4eb0-985b-c58ba13a18d2" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="1e56748b-2516-43a3-aacc-ae96c5e266de">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="16507e4b-4c55-4995-9733-ef09a1872cda">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="d731a28d-ddd6-463d-9c1a-f38bb440e08e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with suspended RightsToken ID" id="a2ea3c8c-9e71-4c61-9726-31744332b5fc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:suspended");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="bf39a59e-92d0-40e5-8928-4a7f5a195b79">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="f6e2e057-c09c-458c-b2af-d7ec832d7d25">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="2424dc2c-9943-4a11-902f-ac1a7cab3120">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="897d8836-8696-4ee4-980c-d2a65cadc777">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVdZk6JKE333VxjOY4fNJm4x3RHF2qioIK4vX2BRAsqiFAj662+ho6M9PXPnfg8ddiWVWSczD8mp79gOA7YLMEZJ6sdRVZPeav9bQ3qzgQ6qQ6bl1Bsbhq+32x2+3uh0aJ5btxzowFpVwzhDWoRTO0rfaizNcHWarzMNi251+WaXo19bbHNVq85QgklosuWVrlWLMIhw93LsWy1Lom5sYx93IztEuJvC7gTogy7Z2bVvmGrv368oLwcm716a7rsUBV8dBFEQwFcYh9R36mnPdwd3J74b2WmWoB9nOvit9sM3z/PXnHuNE5diaZqm6A5F9jjYd7/V3is3Z+Ro0Sa+rkU7iiMf2oF/tktQOkq92KmCwI0TP/XC34RmKIYuQ9dRAUk1G9G3GvXzgAu6v4z0BDLBdh17NnMLZqINSlAEUXVqam+1b3/XwauvldgR3sRJiD+t/xskFB1REO+RU8e3zG7o/j7iF+V6/45gV4tgkGH/iIYlTfY2RLg6TtDGLwY+JuRzcPXS/mqBbwxD8L+05Dv1iJPApr6ojOS7CKf/T78ee3WNMrODDL3PDKTujjtvKW8ChIebQUMa4VynwuP07QLhcfMV1L3VP9afiXrn1Q+nkXgOlm6fyyZ7gYOKNG8vwvM2ysNW4TaCIJYO7W1rwmUxOs6PM9XZ7w+b4UHbdTZmZ899vCTmAPqnxfbAnY1KTx3oH84haYcSjHcCfWD1mSkPOvPdB9fyxwC8NJvUTN2EWb8wuWYWDPvrnRspM3bQOLeH4Xkq76C35BUcNCrBPGx6kRweqW3SyQjsg/z2M6fHHMq8+uh0SbL8f8HTHclO7ftCLCfFhryeKXrXNU3KzqIIThMX5JoAXPK3BUPB3R28na92cloAhqEASRSCrTzQwU4FzFQWPF2czfRCPIOe4A5nxNGqgGAl6KacS/lSmhnGh5x7lqPOTms1yFZneagDfHEWPV025ZlkWrKug/hqK3RprRZbfaLnmrGUKiSAJBf7s6N2UqQWPmQ1Xp/w7HLCZ6vFjNiV0yAcHteWHOiiroqTgzrR1pxkyD1gLueQVTLiex6E+7iynAoPTr092gKk5DQ5E5x1a5fr1pQdSqZ9sVnPNl1Te7qBc9G4ZKVW5Lw3m55/1kIUdNEJ5UK2wPhaC2iJypBeLXrYnvORboJcci/OfTl3RjcgukHnFfFaq4Gcm7I5HSq6qeUyuNgkOQ/wmh16a9U7Qs4oehbYPjZGNOS5EpHnkXmEJ/5QsVUFrMMZAznTgz7v24s4d1ftXDKWvX680kiYITBkQTAAAUSDMjVSfwEMhBk/2vsd1keDjRKHyEsqOhP3d8dzQbd9buSOh3Ne2uxaY9Ufc7bjUVoA2S23A5qGnD7jGbZjLilTivxzc9SfLpCfLM/pkDeYpt/mK+Y8my6kOGg5H4vltP9SLKFhjcaT6Xx8LorhYds+B+nHSPhIJj1dckdDhMYYvlC0rQhWW+LF5ceW8Glj0oivAFcXAFC3riv7hMDCx/ZKwg9Tlwl5gS7mqjgX1QlQ1RdZEyTD2CgeM4bqLJsyQ12TnYCU6bRcmEFlJQoS6RRtz1f7JavQKws4l2BGQ1ZcY8q/9BZoZQwDa5aCfD/bRAxDq3vjY6PnLtRLBjhaPhHIWyRUMg1M7dG+Rxf9WZNmDoYT9CYdMOWKCbsrRp67Ou3c1Y40Zfnw6iwtEMysB45phGLzimHJpg7a1/et0LUpZwYwLPbrEBaSRXp2cY4tQTYVg54WkgT6Vxu2AFvg5Vne6qJ88a+AQrcJLY7rhYeX0dAfWXJGSJs90GW7Zul/5VhJscozxw4iMMBnjslXjslgc3jR2hKD+aa4x/PcFVT5YLRmg15nTxuLwa4ivCiUm/pBYxS1c6v/MmdOecvbGvN5R5M88SXaLD1unQq0fYYG6u1aqm/upKjZCE76QDf4qU8FJ3qLDjkeVIYaE8lcelaoTpK9COHKD89nrsFOw/EkO2pTu4+Zk7c+zDv5dvzRpKhEPfHn1upoKIsYLq/fkc9D8m68jlHqccA+TeCb9ppk6y2C6W1Zfoc1qaqQj6Od/lnHlRbfqW8uW7v7UgziFEVp7b30KjVcNyNKz3e65Mt5XUsi6Ci8KLRoRlaUDi3TDZpRaEDznU5TYISb2Lui+ARRjKONX55Vytnrx/rPAGHYxShyUFI/xhn0EK79IWJZr6oWmUSFxBFGVkzkcrst8KChcArHcG2BY1ilw4tNqdVoczwrdNq16jBOR9EoAZsUJU9SmaGfpLKJoL/3UamnS1GBiarAKSnJwT5macC8Hu3XCGVEcSel6O2yjTZPYT/cE/FAAFNh7GQBet17+0uBKHz9Zes2xBcry7ZaF7Xz2/w+P7uVguxx/HIDLpMREGkn+kL0s7dMfp8x95jxLTzIHL8UNaSuaeLDK5LnRz/pUvLkzpUypRvm+9bPhqew1OeM7ic5Rx/eGX+/ExFJTUTX+60hB/v18Jodj9mlBa1SUCYkPMVQdJOaIJgRVXiy4h2KqHsI6q8E+R31p5Pv9md8WepFk5S8zSEhTPWy/Ivb2ATh8jamEcIXf3vVezqS1C1FRfqVTQzIpa1E/Md7HezCch8xj8lPHifOz3Z9EevhHJJnOb78yC1Xpfw+/YYVMCZhfTLC4uQx+FcBvjr82Xgv8h1LSti0zlL0+yfVcja91WwI4yxKNal2MTzOywvO9LRH3Z+bfglzEcA/bjQF/u2NZqEPJmRyhXbtvtf/9811/0IXiIgX9i9Y3moFuZyTwyP3YT7/APj1iKaVP43o50zefzH/anmo6ef34f0f</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:suspended</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:suspended</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>21</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00024_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_pending to other" searchProperties="true" id="86006476-038d-46f2-8270-f159fcbb7b2c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="81c7b67f-566d-48a5-ad11-9c8bc1f0aa25">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="a33c780e-ae0c-4365-a3a9-b5f4264071ca">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="efc1c53c-d3c6-49b9-aa10-d2509cba4dae">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with other RightsToken ID" id="a14e0abf-e812-463f-8a40-c2c1f0714ac0">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:other");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="22eb3342-8ca2-465d-ac21-8985b1865ed6">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="7c3bbc0d-d327-4d65-8a5c-1653e630395b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="a6b4f4f9-b3e3-4f21-a6ad-bca3b95734ad">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="af38fb40-d21b-41cf-a53e-d4c15cc88f48">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:other</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:other</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>14</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00025_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_suspended to active" searchProperties="true" id="6e341650-06e5-41b8-87cd-fa84f955c5ac" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="2975fd93-d1f4-48b7-8956-e5e810e0cbe0">
        <con:settings/>
        <con:config><script>
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="8789f826-f07e-4476-9e68-eef82a02cb14">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status suspended" id="d097e72c-7b0e-40aa-8d88-e5de49fa3fcd">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: suspended";

testCase.setPropertyValue("RTStatus","suspended");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID" id="7bb6153b-c0d9-4297-9e91-631f680754c5">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="7c71b637-ec39-40f3-9617-e71072089a38">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="c81b4767-4ec9-4006-ad27-55c228b599ea">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="c947459a-7d71-4ad5-8c51-ff83c263b40f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="1595eb15-5b6c-418a-a575-fb786b655079">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdZk6JKE333VxjOY4fNJm4x3RHF2qioIK4vX2BRAsqiFAj662+ho6M9PXPnfg8ddiWVWSczD8mp79gOA7YLMEZJ6sdRVZPeav9bQ3qzgQ6qQ6bl1Bsbhq+32x2+3uh0aJ5btxzowFpVwzhDWoRTO0rfaizNcHWarzMNi251+WaXo19bbHNVq85QgklosuWVrlWLMIhw93LsWy1Lom5sYx93IztEuJvC7gTogy7Z2bVvmGrv368oLwcm716a7rsUBV8dBFEQwFcYh9R36mnPdwd3J74b2WmWoB9nOvit9sM3z/PXnHuNE5diaZqm6A5F9jjYd7/V3is3Z+Ro0Sa+rkU7iiMf2oF/tktQOkq92KmCwI0TP/XC34RmKIYuQ9dRAUk1G9G3GvXzgAu6v4z0BDLBdh17NnMLZqINSlAEUXVqam+1b3/XwauvldgR3sRJiD+t/xskFB1REO+RU8e3zG7o/j7iF+V6/45gV4tgkGH/iIYlTfY2RLg6TtDGLwY+JuRzcPXS/mqBbwxD8L+05Dv1iJPApr6ojOS7CKf/T78ee3WNMrODDL3PDKTujjtvKW8ChIebQUMa4VynwuP07QLhcfMV1L3VP9afiXrn1Q+nkXgOlm6fyyZ7gYOKNG8vwvM2ysNW4TaCIJYO7W1rwmUxOs6PM9XZ7w+b4UHbdTZmZ899vCTmAPqnxfbAnY1KTx3oH84haYcSjHcCfWD1mSkPOvPdB9fyxwC8NJvUTN2EWb8wuWYWDPvrnRspM3bQOLeH4Xkq76C35BUcNCrBPGx6kRweqW3SyQjsg/z2M6fHHMq8+uh0SbL8f8HTHclO7ftCLCfFhryeKXrXNU3KzqIIThMX5JoAXPK3BUPB3R28na92cloAhqEASRSCrTzQwU4FzFQWPF2czfRCPIOe4A5nxNGqgGAl6KacS/lSmhnGh5x7lqPOTms1yFZneagDfHEWPV025ZlkWrKug/hqK3RprRZbfaLnmrGUKiSAJBf7s6N2UqQWPmQ1Xp/w7HLCZ6vFjNiV0yAcHteWHOiiroqTgzrR1pxkyD1gLueQVTLiex6E+7iynAoPTr092gKk5DQ5E5x1a5fr1pQdSqZ9sVnPNl1Te7qBc9G4ZKVW5Lw3m55/1kIUdNEJ5UK2wPhaC2iJypBeLXrYnvORboJcci/OfTl3RjcgukHnFfFaq4Gcm7I5HSq6qeUyuNgkOQ/wmh16a9U7Qs4oehbYPjZGNOS5EpHnkXmEJ/5QsVUFrMMZAznTgz7v24s4d1ftXDKWvX680kiYITBkQTAAAUSDMjVSfwEMhBk/2vsd1keDjRKHyEsqOhP3d8dzQbd9buSOh3Ne2uxaY9Ufc7bjUVoA2S23A5qGnD7jGbZjLilTivxzc9SfLpCfLM/pkDeYpt/mK+Y8my6kOGg5H4vltP9SLKFhjcaT6Xx8LorhYds+B+nHSPhIJj1dckdDhMYYvlC0rQhWW+LF5ceW8Glj0oivAFcXAFC3riv7hMDCx/ZKwg9Tlwl5gS7mqjgX1QlQ1RdZEyTD2CgeM4bqLJsyQ12TnYCU6bRcmEFlJQoS6RRtz1f7JavQKws4l2BGQ1ZcY8q/9BZoZQwDa5aCfD/bRAxDq3vjY6PnLtRLBjhaPhHIWyRUMg1M7dG+Rxf9WZNmDoYT9CYdMOWKCbsrRp67Ou3c1Y40Zfnw6iwtEMysB45phGLzimHJpg7a1/et0LUpZwYwLPbrEBaSRXp2cY4tQTYVg54WkgT6Vxu2AFvg5Vne6qJ88a+AQrcJLY7rhYeX0dAfWXJGSJs90GW7Zul/5VhJscozxw4iMMBnjslXjslgc3jR2hKD+aa4x/PcFVT5YLRmg15nTxuLwa4ivCiUm/pBYxS1c6v/MmdOecvbGvN5R5M88SXaLD1unQq0fYYG6u1aqm/upKjZCE76QDf4qU8FJ3qLDjkeVIYaE8lcelaoTpK9COHKD89nrsFOw/EkO2pTu4+Zk7c+zDv5dvzRpKhEPfHn1upoKIsYLq/fkc9D8m68jlHqccA+TeCb9ppk6y2C6W1Zfoc1qaqQj6Od/lnHlRbfqW8uW7v7UgziFEVp7b30KjVcNyNKz3e65Mt5XUsi6Ci8KLRoRlaUDi3TDZpRaEDznU5TYISb2Lui+ARRjKONX55Vytnrx/rPAGHYxShyUFI/xhn0EK79IWJZr6oWmUSFxBFGVkzkcrst8KChcArHcG2BY1ilw4tNqdVoczwrdNq16jBOR9EoAZsUJU9SmaGfpLKJoL/3UamnS1GBiarAKSnJwT5macC8Hu3XCGVEcSel6O2yjTZPYT/cE/FAAFNh7GQBet17+0uBKHz9Zes2xBcry7ZaF7Xz2/w+P7uVguxx/HIDLpMREGkn+kL0s7dMfp8x95jxLTzIHL8UNaSuaeLDK5LnRz/pUvLkzpUypRvm+9bPhqew1OeM7ic5Rx/eGX+/ExFJTUTX+60hB/v18Jodj9mlBa1SUCYkPMVQdJOaIJgRVXiy4h2KqHsI6q8E+R31p5Pv9md8WepFk5S8zSEhTPWy/Ivb2ATh8jamEcIXf3vVezqS1C1FRfqVTQzIpa1E/Md7HezCch8xj8lPHifOz3Z9EevhHJJnOb78yC1Xpfw+/YYVMCZhfTLC4uQx+FcBvjr82Xgv8h1LSti0zlL0+yfVcja91WwI4yxKNal2MTzOywvO9LRH3Z+bfglzEcA/bjQF/u2NZqEPJmRyhXbtvtf/9811/0IXiIgX9i9Y3moFuZyTwyP3YT7/APj1iKaVP43o50zefzH/anmo6ef34f0f</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00026_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_suspended to pending" searchProperties="true" id="24d789b0-e00e-4908-96ee-a6f8bb207ad4" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="35cdec39-8f97-4630-8b92-f92bacb81591">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="dab07a8a-4770-4339-b2d2-e8521f859160">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status suspended" id="750dd8fe-7134-4d98-8775-1cd177eabb1c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: suspended";

testCase.setPropertyValue("RTStatus","suspended");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with pending RightsToken ID" id="440e79c4-5673-4d27-8eab-bfb84902cd47">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="328b2c04-c92b-4fb3-bd45-088e78d655b7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="7bb61c39-c15d-4987-9e9f-695f91364d4a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="f249cf2e-c0da-4c6f-ba65-e37416d877d0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="cd68869e-cc75-422e-9910-e97590772ec8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00027_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_suspended to other" searchProperties="true" id="2caaf2d0-bff9-453b-a6a8-9d55bee3ee4a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="1299967d-3650-474e-9387-9f9f2bcc5fbf">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="08e26784-5beb-4ee5-8fa3-fb1a401f9060">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status suspended" id="01a4a583-4eaf-4473-9738-b8a9855a10bf">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: suspended";

testCase.setPropertyValue("RTStatus","suspended");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with other RightsToken ID" id="461baf75-74fd-456a-8218-044842a2d10e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:other");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="ea12abed-f2ba-47e1-9b56-01953c979bfe">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="c8b8031d-dc5c-4276-94b8-53ee6efc4023">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="2ba696d7-7cd7-4a47-890a-3ae35736c79a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="a0203cc9-b8f4-466c-b22c-0c9d6ab3a7e5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:other</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:other</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00028_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_deleted to active" searchProperties="true" id="3e62091e-eab3-4903-be09-cddbea1dd722" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="39993081-ff1b-46d5-b67e-9ee5214cb2ea">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="30e668b9-d42b-4212-9189-26c480e4b2bc">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status deleted" id="d779764a-6ec5-4fb6-8467-7e05e638bdd4">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: deleted";

testCase.setPropertyValue("RTStatus","deleted");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID" id="f484e869-fe53-4a69-8b40-2345906cb381">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="a9356254-b542-4911-9c5b-3ef5d346140b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="804341a5-c88a-4e01-823d-21b9277610c8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="0325c3a6-fb82-4a49-b944-3fbdff0e595c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="c0775b7a-e7dc-4535-8c89-864e77c907d0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>10</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00029_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_other to active" searchProperties="true" id="d94b0b54-cb32-480f-8ca9-de6c4d4625d5" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="6c807487-333a-4521-b40b-4f10031abdc8">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="9238ccd8-492e-41b2-a0d1-b47a85b2dfb0">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Other" id="a164ad77-240c-4580-b141-436979f98e47">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: other";

testCase.setPropertyValue("RTStatus","other");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID" id="3d48de34-f075-4776-b752-3e09dadca1f0">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="46eec586-31a7-40cd-9c47-04301f830f71">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="73f4a77f-d6b1-4887-9cf2-bcd784a0c8d2">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="bd8db174-b3ea-4e1e-b9e7-a5de2b3992bc">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="a41eb090-a45b-41e6-864d-f0d9685fa3b5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdZk6JKE333VxjOY4fNJm4x3RHF2qioIK4vX2BRAsqiFAj662+ho6M9PXPnfg8ddiWVWSczD8mp79gOA7YLMEZJ6sdRVZPeav9bQ3qzgQ6qQ6bl1Bsbhq+32x2+3uh0aJ5btxzowFpVwzhDWoRTO0rfaizNcHWarzMNi251+WaXo19bbHNVq85QgklosuWVrlWLMIhw93LsWy1Lom5sYx93IztEuJvC7gTogy7Z2bVvmGrv368oLwcm716a7rsUBV8dBFEQwFcYh9R36mnPdwd3J74b2WmWoB9nOvit9sM3z/PXnHuNE5diaZqm6A5F9jjYd7/V3is3Z+Ro0Sa+rkU7iiMf2oF/tktQOkq92KmCwI0TP/XC34RmKIYuQ9dRAUk1G9G3GvXzgAu6v4z0BDLBdh17NnMLZqINSlAEUXVqam+1b3/XwauvldgR3sRJiD+t/xskFB1REO+RU8e3zG7o/j7iF+V6/45gV4tgkGH/iIYlTfY2RLg6TtDGLwY+JuRzcPXS/mqBbwxD8L+05Dv1iJPApr6ojOS7CKf/T78ee3WNMrODDL3PDKTujjtvKW8ChIebQUMa4VynwuP07QLhcfMV1L3VP9afiXrn1Q+nkXgOlm6fyyZ7gYOKNG8vwvM2ysNW4TaCIJYO7W1rwmUxOs6PM9XZ7w+b4UHbdTZmZ899vCTmAPqnxfbAnY1KTx3oH84haYcSjHcCfWD1mSkPOvPdB9fyxwC8NJvUTN2EWb8wuWYWDPvrnRspM3bQOLeH4Xkq76C35BUcNCrBPGx6kRweqW3SyQjsg/z2M6fHHMq8+uh0SbL8f8HTHclO7ftCLCfFhryeKXrXNU3KzqIIThMX5JoAXPK3BUPB3R28na92cloAhqEASRSCrTzQwU4FzFQWPF2czfRCPIOe4A5nxNGqgGAl6KacS/lSmhnGh5x7lqPOTms1yFZneagDfHEWPV025ZlkWrKug/hqK3RprRZbfaLnmrGUKiSAJBf7s6N2UqQWPmQ1Xp/w7HLCZ6vFjNiV0yAcHteWHOiiroqTgzrR1pxkyD1gLueQVTLiex6E+7iynAoPTr092gKk5DQ5E5x1a5fr1pQdSqZ9sVnPNl1Te7qBc9G4ZKVW5Lw3m55/1kIUdNEJ5UK2wPhaC2iJypBeLXrYnvORboJcci/OfTl3RjcgukHnFfFaq4Gcm7I5HSq6qeUyuNgkOQ/wmh16a9U7Qs4oehbYPjZGNOS5EpHnkXmEJ/5QsVUFrMMZAznTgz7v24s4d1ftXDKWvX680kiYITBkQTAAAUSDMjVSfwEMhBk/2vsd1keDjRKHyEsqOhP3d8dzQbd9buSOh3Ne2uxaY9Ufc7bjUVoA2S23A5qGnD7jGbZjLilTivxzc9SfLpCfLM/pkDeYpt/mK+Y8my6kOGg5H4vltP9SLKFhjcaT6Xx8LorhYds+B+nHSPhIJj1dckdDhMYYvlC0rQhWW+LF5ceW8Glj0oivAFcXAFC3riv7hMDCx/ZKwg9Tlwl5gS7mqjgX1QlQ1RdZEyTD2CgeM4bqLJsyQ12TnYCU6bRcmEFlJQoS6RRtz1f7JavQKws4l2BGQ1ZcY8q/9BZoZQwDa5aCfD/bRAxDq3vjY6PnLtRLBjhaPhHIWyRUMg1M7dG+Rxf9WZNmDoYT9CYdMOWKCbsrRp67Ou3c1Y40Zfnw6iwtEMysB45phGLzimHJpg7a1/et0LUpZwYwLPbrEBaSRXp2cY4tQTYVg54WkgT6Vxu2AFvg5Vne6qJ88a+AQrcJLY7rhYeX0dAfWXJGSJs90GW7Zul/5VhJscozxw4iMMBnjslXjslgc3jR2hKD+aa4x/PcFVT5YLRmg15nTxuLwa4ivCiUm/pBYxS1c6v/MmdOecvbGvN5R5M88SXaLD1unQq0fYYG6u1aqm/upKjZCE76QDf4qU8FJ3qLDjkeVIYaE8lcelaoTpK9COHKD89nrsFOw/EkO2pTu4+Zk7c+zDv5dvzRpKhEPfHn1upoKIsYLq/fkc9D8m68jlHqccA+TeCb9ppk6y2C6W1Zfoc1qaqQj6Od/lnHlRbfqW8uW7v7UgziFEVp7b30KjVcNyNKz3e65Mt5XUsi6Ci8KLRoRlaUDi3TDZpRaEDznU5TYISb2Lui+ARRjKONX55Vytnrx/rPAGHYxShyUFI/xhn0EK79IWJZr6oWmUSFxBFGVkzkcrst8KChcArHcG2BY1ilw4tNqdVoczwrdNq16jBOR9EoAZsUJU9SmaGfpLKJoL/3UamnS1GBiarAKSnJwT5macC8Hu3XCGVEcSel6O2yjTZPYT/cE/FAAFNh7GQBet17+0uBKHz9Zes2xBcry7ZaF7Xz2/w+P7uVguxx/HIDLpMREGkn+kL0s7dMfp8x95jxLTzIHL8UNaSuaeLDK5LnRz/pUvLkzpUypRvm+9bPhqew1OeM7ic5Rx/eGX+/ExFJTUTX+60hB/v18Jodj9mlBa1SUCYkPMVQdJOaIJgRVXiy4h2KqHsI6q8E+R31p5Pv9md8WepFk5S8zSEhTPWy/Ivb2ATh8jamEcIXf3vVezqS1C1FRfqVTQzIpa1E/Md7HezCch8xj8lPHifOz3Z9EevhHJJnOb78yC1Xpfw+/YYVMCZhfTLC4uQx+FcBvjr82Xgv8h1LSti0zlL0+yfVcja91WwI4yxKNal2MTzOywvO9LRH3Z+bfglzEcA/bjQF/u2NZqEPJmRyhXbtvtf/9811/0IXiIgX9i9Y3moFuZyTwyP3YT7/APj1iKaVP43o50zefzH/anmo6ef34f0f</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>6</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00030_RightsResourceStatusUpdate_FUNC_RTL_RightsToken_Status_suspended  to suspended" searchProperties="true" id="8cde618c-c4c2-46e6-9709-7dcc865dbdd7" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_R3\ResourceStatusUpdate_1.0.6.1.K\ResourceStatusUpdate_1.0.6.1.K\rights\RerunCasesReport</con:setting></con:settings>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="addf4662-f6e8-4e37-acb8-644629392b5a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="ca8cd927-bd9e-4496-8374-d5f371257394">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Other" id="a83337df-3f0c-4ebb-8649-c5e3402b0f07">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: suspended";

testCase.setPropertyValue("RTStatus","suspended");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with suspended RightsToken ID" id="09aa1182-ab67-48cb-9546-a2b2285c2859">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="0dfc15e6-f055-49ce-b7ea-45965d507cb7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="54cde993-316f-4675-a3ba-d7ad3baab12d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="5717e0d0-309b-4bd2-b5e4-850c9fd682c8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="ae46c912-1318-4943-ad92-4ef817662f80">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_bc0ffcde-c17d-4f15-8895-499053b7dcdc</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DCA9F5CB701EFF90E0401F0A05996B1B</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-05-14 13:56:31.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>2</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase><con:properties>
      <con:property>
        <con:name>QC_TestPlanDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestLabDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestSet</con:name>
        <con:value/>
      </con:property>
    <con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property></con:properties>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="03RightsResourceStatusUpdate_UserStatus_RETCS" id="8e7be8d9-6ce4-403f-84dd-1e0e3acf31c3"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_4.1\RSU_R4.2-1.0.7-3.02\RightsReports\RET1</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="E2E_Run_RETCS" searchProperties="true" id="d620b3d0-d5df-42a9-83c1-de5371d8b4a4"><con:settings/><con:testStep type="groovy" name="Create_AccountUSer_STS"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","RET_CS_1");
myTS.setPropertyValue("role","nodeIdRTLCS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","RET_CS_1");
tS.setPropertyValue("role","nodeIdRTLCS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00007_RightsResourceStatusUpdate_FUNC_RTL_CS_All_UserStatus_RightsToken_Status_pending to deleted(ISC_R2)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6a8f4431-6aa8-485b-b178-9fb22464d8da">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="1df8d28c-b6f5-4496-af54-dceba5573d35">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="datasource" name="Status" id="e1b89ae4-6f99-4bc7-b279-e438c18b54b1"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus" id="5bc13e4d-ed19-4d02-9e39-9e906c4c84c4"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info v2;
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info "userid--"+userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="4e933936-970d-47c5-a75f-5142dd872f36">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="1a9c14e9-2c34-4970-9514-85356528df47">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="c5e23938-b151-4389-b09a-caa89e1b01c5">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:deleted");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="4855e8a2-6bc6-457b-ae9d-b87da63338f8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="95304e36-f35c-4d04-883e-e872eb0db0d2">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="4b30b5bd-42dd-4aaf-9876-0b62a8f4fc1c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="72861524-bbdb-4789-af7c-8f3897a76574">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop" id="a328a1fc-ed9c-474c-b345-dd25d2db0c40"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        <con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        <con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-06-14 19:08:42.0</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>6</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:deleted</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:deleted</con:value></con:property><con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>24619</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer:customersupport</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>40</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value/></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>StatusUpdateSuccess</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_83ff139b-9ae8-4fa1-9382-67a934cfbc83</con:value></con:property>
        
        
        
        
      <con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>DF1DE83E36A0C57FE0401F0A05995A53</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property><con:property><con:name>RTStatusXML</con:name><con:value/></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>de8c7dd6-b3d7-4704-ae45-e7de0cb27315</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0d9c051-d4fb-47f2-8f34-78d40626c0fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00008_RightsResourceStatusUpdate_FUNC_RTL_CS_All_UserStatus_RightsToken_Status_Active to Pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="15d86d0c-42f8-4a06-a288-cc2ede0bddba">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Pending.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="4526ec21-f9cb-4e3c-a869-528208b33e53">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Status" id="31e5d587-4df1-460a-b77e-42fb8bd51a71"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">mergedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus" id="778d45bc-58e7-4a9b-9b40-72bf5ec74814"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="ec32167b-fe3f-4e29-b317-59d80fc08de8">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Status Active" id="9a3233c5-a52a-4844-98df-e81716be82c8">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: active";

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="01c88977-30ec-497d-a953-b653de505697">
        <con:settings/>
        <con:config>
          <script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="c423d811-0f1c-46ca-8296-a4a374a96f51">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="9b6928fd-0d34-4da5-a4a0-9f715f092135">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="0543348a-2e21-4321-9818-56eba294b5a0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="be207189-2cdf-4977-bf01-4c222d3e621f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="de995556-403f-46d9-a024-77657e76b359">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop" id="fe7ee1f8-92e7-49fc-9e80-52361ce238b4"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        
        
        
        
        <con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property>
        
        
        <con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>DF555955B1D4E305E0401F0A05997A70</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_be64d61b-e0ab-45a3-a3c6-a7b5b55d2e6e</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>StatusUpdateSuccess</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value/></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>40</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer:customersupport</con:value></con:property>
        
        
        
        <con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>24619</con:value></con:property><con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:pending</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>7</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>pending</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-06-17 13:15:52.0</con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property>
        
        
        
        
        
        
        
        
        
      <con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>04d12791-5664-4442-bf33-2b481aa7cd09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>726339b2-24e8-43ba-9dfa-41fa8138a59b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>de995556-403f-46d9-a024-77657e76b359</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9a3233c5-a52a-4844-98df-e81716be82c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00009_RightsResourceStatusUpdate_FUNC_RTL_CS_All_UserStatus_RightsToken_Status_pending to active(ISC_R2)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="57873796-e4d3-44b6-b087-ec35f91c8652">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="a261dbe9-1a38-4a02-8293-8ebabfc9a6d3">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="datasource" name="Status" id="1cfcccc8-5aaa-419b-a0fb-d0c38f3ae7be"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus" id="9eb26ffa-4c29-4931-8cb8-6c36d8dea621"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="cf48f953-37ce-4f57-9200-304fa521ef75">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending" id="9becb3de-f64d-4cba-9653-9975ccdaa60e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID" id="9db6f2d5-c4be-433a-959e-2fecc1d46954">
        <con:settings/>
        <con:config>
          <script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="19a6734c-b413-4134-b485-ef6f0019678d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="c579c1b0-487a-4d08-a391-e7bf973bf99e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="f518f618-18f9-451e-a073-81220999f8a0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="call RightsTokenGet" disabled="true"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def myTC = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenGet Request")

myTC.setPropertyValue("TCaseName",testCase.getName());
myTC.setPropertyValue("TSuiteName",testSuite.getName());

def eTag = context.expand( '${#Project#ETag}' )
def sAML = context.expand( '${#Project#SAML}' )


def headers = new StringToStringMap()

headers.put("If-None-Match",eTag);
 //testRunner.testCase.getTestStepByName("RightsTokenGet byTokenID").testRequest.setRequestHeaders(headers);
 myTC.getTestStepByName("RightsTokenGet byTokenID").testRequest.setRequestHeaders(headers);
 headers.put("Authorization",sAML);
 myTC.getTestStepByName("RightsTokenGet byTokenID").testRequest.setRequestHeaders(headers);

//myTC.setPropertyValue("TCaseName",tC.getName());
//myTC.setPropertyValue("TSuiteName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";
</script></con:config></con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="8322b9ba-07bf-4a0d-bb6f-7a0172668c58">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop" id="85b763b3-e6ac-4803-89d2-6a7b02b94325"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        
        <con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-06-14 19:08:42.0</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>12</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>24619</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer:customersupport</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>40</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value/></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>StatusUpdateSuccess</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_83ff139b-9ae8-4fa1-9382-67a934cfbc83</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>DF1DE83E36A0C57FE0401F0A05995A53</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>FeedRTCReq</con:name><con:value>OK</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>8d532233-79f6-4099-8821-1b2569149c02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5cf17388-fd6c-4690-a11d-ae2943a84bb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00010_RightsResourceStatusUpdate_FUNC_RTL_CS_All_UserStatus_RightsToken_Status_Active to Deleted" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3e533f82-f911-4f79-8146-d7ebddf7819c">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Pending.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="06286a41-244e-4824-943c-6541c2260d8e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Status" id="c93f0018-8e57-426a-8c15-545f58a3e2b4"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus" id="5d4e5308-6269-4f0a-b148-50f92488009f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="7e874b69-763a-4baf-96f9-56ef408ae23e">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Status Active" id="53e8471f-377d-4f00-b56e-2fed343d6d58">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: active";

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with deleted RightsToken ID" id="075c9ffc-72c7-4ec1-8117-4abe115b1800">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:deleted");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="4b628051-8f14-4db7-a9c2-0bb93cce6793">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="69686e64-bdf0-472a-86b0-11b154bbcd95">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="dfcb4430-ee3c-4110-a564-d9a77a0f560d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="3a7a2735-9d58-45bf-a222-7f2698871163">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop" id="81a7e072-c8b9-4a5d-8939-ad600e8d203f"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        <con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-06-14 19:08:42.0</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property>
        
        
        <con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>9</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:deleted</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:deleted</con:value></con:property>
        
        
        
        
        <con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>24619</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer:customersupport</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>40</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value/></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property>
        
        <con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>StatusUpdateSuccess</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_83ff139b-9ae8-4fa1-9382-67a934cfbc83</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>DF1DE83E36A0C57FE0401F0A05995A53</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property>
      <con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>04d12791-5664-4442-bf33-2b481aa7cd09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>726339b2-24e8-43ba-9dfa-41fa8138a59b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cbfcac39-f4e4-47cb-9ea2-90f8e0580d47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00011_RightsResourceStatusUpdate_FUNC_RTL_CS_All_UserStatus_RightsToken_Status_deleted to active" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="3b951943-f0e4-4443-8cd3-1b75a5f8ede8">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="d9b58bb6-1623-4276-9b1a-70076b180d86">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="datasource" name="Status" id="ff1c3428-a164-4c32-b99e-55d75e9989bf"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus" id="740b0258-0325-408f-ad75-d243381086e9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="22dba3bb-75ab-41f5-901e-314bd9bb0c38">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		/*if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status deleted" id="f84d3515-6516-4e01-a441-edb35eaaa10d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: deleted";

testCase.setPropertyValue("RTStatus","deleted");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID" id="22f8a241-c205-4b6f-a4be-e1d73f9aa5bc">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="c2f13b3d-dd4d-4a7d-872f-a6eba5f59c60">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="0db064ac-51dd-472e-9a42-f9d95a3a71ed">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="fe68639b-37e0-4758-b4bb-a9948173d0c3">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="6c2dcffb-4ae6-4fda-aafc-62752820cbe5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop" id="9cd924c5-f4ac-4351-9c61-c48c3d41cb9e"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_83ff139b-9ae8-4fa1-9382-67a934cfbc83</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DF1DE83E36A0C57FE0401F0A05995A53</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-06-14 19:08:42.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>9</con:value>
        </con:property>
      <con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>d83be634-2f3c-4a7e-92cc-b53c9171e985</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0d62220-9819-47a5-93f4-4d6f6cd758ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00012_RightsResourceStatusUpdate_FUNC_RTL_CS_All_UserStatus_RightsToken_Status_deleted to Pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e59f9a53-2629-4bad-9b8a-cbfc2660236c">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="ba1d9abe-b298-41df-add7-b0c930d46520">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="datasource" name="Status" id="aefc8afb-cb26-4b0a-8444-238d783bc879"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus" id="725f53a5-ccb4-44a2-b894-3bfb109ce5b2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="f1070afd-a89b-453e-83e7-c13fbaf99dfd">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
def targetSystem = context.expand( '${#Project#targetSystem}' )
RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		/*if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status deleted" id="3495225f-a852-43a8-a38e-09ee809bb062">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: deleted";

testCase.setPropertyValue("RTStatus","deleted");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID" id="b634a0d1-0eb6-46df-aed3-1b9e3c419bb2">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request" id="58eeb553-ec24-47cf-9136-397f7206bfc9">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="a5b2dc34-8000-4014-921b-a124a1a8fc96">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE" id="f563f14a-4226-49b2-aa53-8ba12e0b1e33">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status" id="22641076-3975-411f-a014-85451599d217">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop" id="86e1a21a-2c27-4e1f-9c5c-ead3fcd3edf6"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_4e3e9571-52dd-40ff-aece-a85c9b3205e7</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>DC1DE055239B1575E0401F0A059905AF</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2014-05-07 08:48:43.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>15</con:value>
        </con:property>
      <con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>d83be634-2f3c-4a7e-92cc-b53c9171e985</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0d62220-9819-47a5-93f4-4d6f6cd758ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTLCS</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property></con:properties><con:reportParameters/></con:testSuite>
  <con:testSuite name="04RightsResourceStatusUpdate_UserStatus_RET"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_4.1\RSU_R4.2-1.0.7-3.02\RightsReports\RETCS1</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="E2E_Run_RET" searchProperties="true" id="6f1722b2-f6ec-4152-b628-7203d8525ed8"><con:settings/><con:testStep type="groovy" name="Create_AccountUSer_STS"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","RET");
myTS.setPropertyValue("role","nodeIdRTL");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","RET");
tS.setPropertyValue("role","nodeIdRTL");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00001_RightsResourceStatusUpdate_FUNC_RTL_All_UserStatus_RightsToken_Status_Active to Pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="667ec377-9fc7-4897-893f-cd00b2898307">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Pending.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def userName = context.expand( '${#Project#UserName}' )


log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Status"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Set RightsToken Inactive Status Pending">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        
        
        
        
        
        
        
        <con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property>
        
        
        <con:property><con:name>assertionUserId</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE0FE9DF3509691B1E0401F0A059927B9</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_61057eb2-ffa6-4999-b212-9109edbed161</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property>
        
        
        
        
        
        
        
        
        <con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>API_NOT_AUTH</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer</con:value></con:property>
        
        
        
        
        
        
        
        
        <con:property><con:name>password</con:name><con:value>Password1</con:value></con:property>
        
        
        <con:property><con:name>QC_Id</con:name><con:value>24619</con:value></con:property><con:property><con:name>rcUUID</con:name><con:value>0</con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:pending</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>18</con:value></con:property>
        
        
      <con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>pending</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2017-07-07 10:07:00.0</con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>userid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn%3Adece%3Auserid%3Aorg%3Adece%3AE0FE9DF3509691B1E0401F0A059927B9</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>04d12791-5664-4442-bf33-2b481aa7cd09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>726339b2-24e8-43ba-9dfa-41fa8138a59b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>543d2c97-ced0-4f9e-9340-9b2dcc28f24d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_RightsResourceStatusUpdate_FUNC_RTL_All_UserStatus_RightsToken_Status_pending to deleted(ISC_R2)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e816155b-e777-4f77-9dfc-ba6a999cc10e">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="datasource" name="Status"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:deleted");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        
        <con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2017-07-07 10:07:00.0</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>11</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:deleted</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:deleted</con:value></con:property><con:property><con:name>rcUUID</con:name><con:value>0</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>24619</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer</con:value></con:property>
        
        
        
        
      <con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value/></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>API_NOT_AUTH</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_61057eb2-ffa6-4999-b212-9109edbed161</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE527F9E347EA942BE0401F0A05995440</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVdZc6pME773V1ieS8uwiAtWkqphUVHRILjevIXDsCibDAj669/BRE+Sk5wv73el09PT/fRCzzOP2Ax8tgcwRknqRWFVkZ5q/+xYtm12LLPRhBbf4EyWa5g2s2uYJkN3mqjFdaFVqyoYZ0gJcWqG6VONpZlmg+42mrRB871mt8e2H5p0d1urLlGCiWmi8kDXqkXgh7h3dftUy5KwF5nYw73QDBDupbCnA3XSI5o984ap9vz4ivLqMHl20zTuURR8sBBEvg8fYBRQj9QHnUcL93TPCc00S9CbTws/1d7O5nn+kDcfosShWJqmKZqniI6FPedX7blyO4wsJbSj17VohlHoQdP3LmYJSkWpG1lV4DtR4qVu8I1phmLo0nQDFbABGS78VaN+O7ii+6GlDyATbDawazI3Y3NkowSFEFUXc+Wp9utnFXw9ayRmiO0oCfCn9X+DhMIT8qMYWQ18i+yG7ucWv0jX8yOCPSWEfoa9E5qWbRKbEOHqS4Jsr5h4mDSfhavX8lcLfOswBP9LSR6p9zgJbOqLzEieg3D6/9Trfa1erSxNP0PPLjT2k/M63132TrcpaynWo2SB9aOrPF0hvFd+BXUv9dv6c6Pe++rtUDy38xa0+prtqcOLl3QLsD1k5/V0zmpLy5s4gnY5dbYC69F6QrdyumBWe2sTeLnL2YOIyeYDM7ez0BWGg0rkrjnfmC6t1jR3E02gjk0bOZrAaAN5lScSN0gKsAwHXn5mNKFDabPLVJm3kRUHomY6Fi3OOsCwte5LUVRmY+XAsxM+C0TIZIGTtrSn3zG9j6GMa4zO1yDL/+sWzUtmat4XYjkpbPJ5puhZVRSxLokiQKIDckUAjiJMLmAqOIeje/AGfE4LQFv0gQTO6hzkkrORlpo2lnNrufS3S6XfF9Q5lw/BRqqQDUkultJ2PaLN1TbesH16qwuCtZ5Hu+YotoaHfOjCqWqo+dRQzupeLqaGTK+uMqcg64u6V5mZsWhWVnuBV+dyLuVXj5Kcu9Ptah5vFnwOL7KmAm4AmIUsuurQCJYMbM5duJcnKjhc5YKrisulWsgGeKkIznRJYjPE/jaGgRXvAt99Z3xIjBvWYHneDfxse5H3qigPRP040JVdU9LkEZhvFrvV8mCu+qcKHE7B7ubRa3nmOsqdbTeXtM1oHG0V9wSnQJMFQQMkXTRQlcEIRAMBqBzwiou4F9qRaPVzasTiSp33B+312TuusTmgfZPpdpnNZNV+ObYlOaxvx9lu76ruuj+rj3XrtOBT/rLBp/qpbXoMLGJbW8vDdFzYQ02v7F6kYg2HdcsZUf6F7ydqZwSSy9n1VWeertozfN55tr0S1jPO79i+2pzHtm/HZ1w3Iu2Q0G0BNVlqcz6N0wpwVAGAwX6xFzRV6JZJtZRc26iCCfpymoHLnk3H7PI4Gp58uGmCqBivZvvDW2EsKZcFKtdk0lZypSsBqyzCUF/I/T1YCI6TCI7cFzQoAW2jjPMNyddiSJQ/57F/zaMjC0BubkGbH1aaC5pPZ6nOceAcCouwz7vqsVhZ7YDuHJE80acxl6t4aofbVXRQAy9ZJJm+GI+nk2JnZIPDnswqm9bHp+a2Ip8OMfCmY8M9SJFkvsSbTRrXQ5jAVIkDVSkusy3ed71dQI/qLUZ4oSXYYRfBLl8MTHk7ThydGQ/n4Uuzw1dwZp+HQX3fzVd1Q2/HHUsMbel8prbJko5A1OfnraNVsOzBXeSTdm6PwGFnstPC54UzL4+3Bszn2nilB/VWpXWaTAL6YlDcNJ7l+iDnZE2rNy3BGBo4TrxN1nWKZBZa7MZM26ctvWx7sU+mRHYwuLi5dAJSrJeTFXfUl4rGreE2cDoxHFFz6gTkjj1RBufdxbzEwQy+DtDP0+EufJ0f1PvJ8mH03EiHTroVwfS2LC8gRar2ya1gpn8nMKXEsxr2VbUXlywIpyhMa8/lqZK89DJCcTyrR66M17XcYjt9Xm5yHRnwHCvINEczfRrQLZ5vcRx9YzmvKD5BFKPQ9kpfJY97vaX+DhAGPYxCCyWNU5RBF+HaXyyW+aoq4Zxcv1GIkRERnihwEtdmZJ5rA1FutTiW63fEpiiIYoujOwJTq06jdBbOEmCnKPnAERn2A0ecI+jFHiqJZHmbYnKd4pSk5GiestRnHk7mQ4gyQjWTku31WK7borAXxD4qAVNBZGU+eojd+JogCr/+sg0T4qt0Lhv/KLp4vem/DfHz3i0bRMfySgVcxiMgUlH0BeFlbsF8H3TrfdA38yCzvPJCJ6lNEw++Ivm49btjyla5twuJ6gb5rvlZ8MEq9TmguyPr5MF7z9+fA4RNEr7xfCvJ0Xw4PmSnU3YtQqfkUgkxTzEU3aZ0BDNCiM5GdEAhdTdB/YiL3lF/8nyXf8SXpW6op+R7DkjLVK/LHzxEdITLh4hCWr746Svng0uStxQV6Vcy0SfvlRLxX580sAdLPSJ+IT95lPwO/Ctb7/yQOMsB5oVOuSqZ5/mbpoARMeuRIRYl741/ZeAr5x+F9yTfsaSkm3ZZir7fqZbT6almQhhlYapItavg/cS84kzPMer9VvrDzJX7vZH5An9L5tfqRCezKzBrd13vfys3vGu7QEROYe+K5alWkHcpcR467yb0G8Cvh7Qo/G1If4zk+Q/xn5J3Of38PTz/Cw==</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>de8c7dd6-b3d7-4704-ae45-e7de0cb27315</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0d9c051-d4fb-47f2-8f34-78d40626c0fc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ec64aa16-23c2-4869-92a6-7707bea1475e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00003_RightsResourceStatusUpdate_FUNC_RTL_All_UserStatus_RightsToken_Status_pending to active(ISC_R2)" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7874d918-c12e-4ae4-aa6f-74490725f2ec">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="datasource" name="Status"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status Pending">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: Pending";

testCase.setPropertyValue("RTStatus","pending");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Pending RightsToken ID">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        
        
        <con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property>
        
        
        
        
        
        
        
        <con:property><con:name>Status</con:name><con:value>pending</con:value></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2017-07-07 10:07:00.0</con:value></con:property>
        
        
        
        
        <con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property><con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>12</con:value></con:property>
        
        <con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rcUUID</con:name><con:value>0</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>24619</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>FeedRTSUReq</con:name><con:value/></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>API_NOT_AUTH</con:value></con:property>
        
        
        
      <con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_61057eb2-ffa6-4999-b212-9109edbed161</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>urn:dece:userid:org:dece:E517160449DE5902E0401F0A07995CFD</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>8d532233-79f6-4099-8821-1b2569149c02</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5cf17388-fd6c-4690-a11d-ae2943a84bb9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8235a4eb-7666-4462-a6cb-dcf52ce40241</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00004_RightsResourceStatusUpdate_FUNC_RTL_All_UserStatus_RightsToken_Status_Active to Deleted" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8a83fe96-aa77-409a-a6b1-b66333edb2b2">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Pending.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="datasource" name="Status"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Status Active">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: active";

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with deleted RightsToken ID">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:deleted");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_61057eb2-ffa6-4999-b212-9109edbed161</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>urn:dece:userid:org:dece:E517160449DE5902E0401F0A07995CFD</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2017-07-07 10:07:00.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>13</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:deleted</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:deleted</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
      <con:property><con:name>RTC_rcStatusHistory</con:name><con:value>2</con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>04d12791-5664-4442-bf33-2b481aa7cd09</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>726339b2-24e8-43ba-9dfa-41fa8138a59b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cbfcac39-f4e4-47cb-9ea2-90f8e0580d47</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>856cb82f-de1f-4ce4-b933-11fbd3b3e0d4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00005_RightsResourceStatusUpdate_FUNC_RTL_All_UserStatus_RightsToken_Status_deleted to active" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fe704eee-b34a-4647-a539-f82afc489e4a">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer:customersupport");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="datasource" name="Status"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		/*if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status deleted">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: deleted";

testCase.setPropertyValue("RTStatus","deleted");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:active");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_61057eb2-ffa6-4999-b212-9109edbed161</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>urn:dece:userid:org:dece:E517160449DE5902E0401F0A07995CFD</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2017-07-07 10:07:00.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:active</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>5</con:value>
        </con:property>
      <con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>d83be634-2f3c-4a7e-92cc-b53c9171e985</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0d62220-9819-47a5-93f4-4d6f6cd758ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0cb4a8a-2fae-48eb-b3d7-e082298613f3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00006_RightsResourceStatusUpdate_FUNC_RTL_All_UserStatus_RightsToken_Status_deleted to Pending" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="bc5d31f1-539c-4b0b-bd07-d998762aa372">
      <con:description>This testcase is to verify that RightsResourceStatusUpdate API updates the Status of the rightstoken from Active to Suspended.</con:description>
      <con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_R3\ResourceStatusUpdate_1.0.6.1.K\ResourceStatusUpdate_1.0.6.1.K\rights\RerunCasesReport</con:setting></con:settings>
      <con:testStep type="groovy" name="SetUp the UserCredentials">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();
def userName = context.expand( '${#Project#UserName}' )
testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",userName);
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="datasource" name="Status"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">active&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">pending&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">deleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">forcedeleted&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">archived&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:clg&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">blocked:tou&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">suspended&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">other&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Status</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep>
      <con:testStep type="groovy" name="UpdateStatus"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def role = context.expand( '${#TestCase#NodeRole}' )

def status = context.expand( '${Status#Status}' )
log.info "status---->"+status

def userID1 = context.expand( '${#Project#Node_User_ID}' );
def v2 = context.expand( '${#Project#V2}' )
log.info "------->" +userID1
if (v2!='07'){

def userID =userID1.split("%3A")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}
else{
	def userID =userID1.split(":")[5];
log.info userID;
a = new dbUtils.dbUser(log,context.expand( '${#Project#targetSystem}' ));

assert a.userSetStatus(a.userGetfromNodeUserId(userID),status) == 1;
}




</script></con:config></con:testStep>
      
      <con:testStep type="groovy" name="Verify RightsToken ID to Update">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());
def runnerTC = RTURequest.run( null , false )
testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,targetSystem);

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;

		/*if ( rtStatus.toString()!='active'){
			log.info "Calling RightsToken Create API for a new RightsToken !"
			def runnerRTU = RTURequest.run( null , false )
			assert runnerRTU.status == Status.FINISHED;
		}else{
			log.info "Rights Tokenid  is Valid :" + testCase.getPropertyValue("rightstokenid");
			def Val_DbResultRTSHXml =  new XmlSlurper().parseText(RT_Data5.toString());
			def rcStatusHistory = Val_DbResultRTSHXml.ResultSet.Row.size();
			testCase.setPropertyValue("RTC_rcStatusHistory",rcStatusHistory.toString());
						
		}*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Inactive Status deleted">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info  "RightToken Statuses is set to: deleted";

testCase.setPropertyValue("RTStatus","deleted");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with active RightsToken ID">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate Request">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify RightsResourceStatusUpdate RESPONSE">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re-Set RightsToken Inactive Status">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:testStep type="datasourceloop" name="StatusLoop"><con:settings/><con:config><dataSourceStep>Status</dataSourceStep><targetStep>UpdateStatus</targetStep></con:config></con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>24619</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_61057eb2-ffa6-4999-b212-9109edbed161</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>urn:dece:userid:org:dece:E517160449DE5902E0401F0A07995CFD</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2017-07-07 10:07:00.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>12</con:value>
        </con:property>
      <con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:retailer</con:value></con:property><con:property><con:name>&lt;Error ErrorID</con:name><con:value>"urn:dece:errorid:org:dece:Security:RoleInvalid"></con:value></con:property><con:property><con:name>&lt;Reason Language</con:name><con:value>"en">API call not authorized&lt;/Reason></con:value></con:property><con:property><con:name>Status</con:name><con:value>pending</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>d83be634-2f3c-4a7e-92cc-b53c9171e985</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d0d62220-9819-47a5-93f4-4d6f6cd758ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2e2e8823-67e4-477f-8d37-ed0f5a8e9918</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTL</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property></con:properties><con:reportParameters/></con:testSuite>
  <con:testSuite name="05RightsResourceStatusUpdate_Invocation_ByPermission_TestCases" id="239df488-71bc-4d26-9f2f-658d604f74b1">
    <con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Multiple Pages</con:setting><con:setting id="GeneratableJUnitReport@Folder">D:\DECE_API\DECE_API_4.1\RSU_R4.2-1.0.7-3.02\RightsReports\PERM</con:setting></con:settings>
    <con:runType>SEQUENTIAL</con:runType>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30001 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with DECE" searchProperties="true" id="09273c1b-c789-479f-a9d4-22e6a77cd298" disabled="true">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DECE.

Expected Result :

It should not allow API invocation for the DECE node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="5eb1e994-ed8d-41c3-986f-e54a0839559d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_00001_AccountCreate_API_Invocation_from_Retailer","TC_DECE_0002_FirstUser1Create_API_Invocation_from_Retailer","TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]

def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("NodeRole","urn:dece:role:dece");
tP.setPropertyValue("audience","");
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="b1afed2f-1873-467b-b1ed-21cf06c54fac">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="4ce41e11-c5b4-4606-baa5-14aaa84c2dda">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request");

//RightsToken Request and properties
log.info testProject.getPropertyValue("ParamRTRSUReq")
TsRightsXMLReq.setPropertyValue("Request",testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:dece");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to DECE" id="c6315f11-52cb-4f5b-96db-a777b22c0279">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )
</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="7fbdd762-bed0-4930-9b80-1933d8f8155e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="8e005a31-60c4-4ab6-8176-8fda4cd3e054">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="7e805389-9f16-48bf-8feb-d32fdaeacf7f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        <con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>DE3F87546FAC7CA5E0401F0A0799092D</con:value></con:property><con:property><con:name>accountrowoid</con:name><con:value>107001</con:value></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertid</con:name><con:value>_ff154253-5b6a-49af-875f-50db9be0236f</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>DE3F87546FC67CA5E0401F0A0799092D</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_3d0a20b7-bee4-43a4-8ad9-28f8313a4d4e</con:value></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>DCA7D370D098587DE0401F0A05993DF5</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property><con:property><con:name>expectErrTypeRTCreate</con:name><con:value>API_NOT_AUTH</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>API_NOT_AUTH</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>FeedRTCReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property><con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value>3</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>FFManifestLocPreference2</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property><con:property><con:name>LICAcqBaseLoc</con:name><con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value>107001</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>CCE44AF42FD7063BE0401F0A07991776</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:dece</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:0701</con:value></con:property><con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:107001</con:value></con:property><con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property><con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value>RetailerTransaction_1_node0701_RetailerNode</con:value></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property>
        
        
        
        <con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property>
        
        
        <con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value>1</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property>
        
        
        <con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property>
        
        
        
        <con:property><con:name>QC_Id</con:name><con:value>38109</con:value></con:property>
        <con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:pending</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property>
        
        
        <con:property><con:name>RightsResTime</con:name><con:value>2354</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADCA99325C2FB166FE0401F0A079969DE/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AD5338418C2348D1CE0401F0A079960D1/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/06/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:DCA7D370D098587DE0401F0A05993DF5</con:value></con:property><con:property><con:name>RRSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:0701</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property><con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>0</con:value></con:property>
        
        
        
        
        
        
        
        
        
      <con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>BE6B7B3F5AD7BDFEE0401F0A05994A43</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>7001</ACCOUNT_OID>
      <USER_OID>799999</USER_OID>
      <RIGHTS_LOCKER_OID>7001</RIGHTS_LOCKER_OID>
      <NODE_OID>0799</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>107002</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_node0799_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>9A9CCCF13ABCD94FE0401F0A05992F63</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>https://dl.bestbuy.com/p/bb93827398sdjdhds</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2012-04-24 10:49:16.382</CREATED_DATE>
      <CREATED_BY>0799</CREATED_BY>
      <UPDATED_DATE>2012-04-24 10:49:19.85</UPDATED_DATE>
      <UPDATED_BY>null</UPDATED_BY>
      <STATUS_ID>pending</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-06-03 17:48:59.0</con:value></con:property><con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property><con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>null:null</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>user_create_20130603_051920</con:value></con:property><con:property><con:name>useroid</con:name><con:value>DE3F87546FC77CA5E0401F0A0799092D</con:value></con:property><con:property><con:name>userrowoid</con:name><con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value></con:property><con:property><con:name>VCAllowedUser</con:name><con:value>urn:dece:userid:org:dece:107999</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>5eb1e994-ed8d-41c3-986f-e54a0839559d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30002 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with DECE_CS" searchProperties="true" id="aebce53f-c9ad-447c-a541-9904ca5c6f39">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DECE Customer Support.

Expected Result :

It should allow API invocation for the &amp;quot;DECE CUSTOMER SERVICE&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="dcfad926-e25a-4f12-800c-34a0343fd51c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()



def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","dece:cs");
myTS.setPropertyValue("role","nodeIdDECECS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","dece:cs");
tS.setPropertyValue("role","nodeIdDECECS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="eccc13ed-2896-42a9-9ff6-1e998247ba0a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="09c2f601-b793-404d-a029-387484c14531">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:dece:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to DECE:CS" id="c530054d-e4ed-4ec3-b509-122c48abc4da">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )
//</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="44fdd50a-05dc-4e3f-9cda-ecaf74711c0c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="3963dd59-982f-480c-8041-d590526aec95">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="e5b3855d-84a2-4744-8147-6b9e8a8aef63">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>E97B9529190118D2E0401F0A07992CA1</con:value>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>40</con:value>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:dece:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38110</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>2426</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E97BEDC56846B66BE0401F0A0799064F/RightsToken/urn:dece:rightstokenid:org:dece:E0FF641DBEC60D6BE0401F0A079945E4/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:E97B9529190118D2E0401F0A07992CA1</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025842</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>dcfad926-e25a-4f12-800c-34a0343fd51c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30003 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with_Coordinator" searchProperties="true" id="fe1bf1fb-ec7d-49fb-b0f6-4b5de0d9b5f6" disabled="true">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DECE Coordinator.

Expected Result :

It should not allow API invocation for the &amp;quot;DECE COORDINATOR&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="ac6e619b-a4f1-494f-80ce-a90a90e3784f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_00001_AccountCreate_API_Invocation_from_Retailer","TC_DECE_0002_FirstUser1Create_API_Invocation_from_Retailer","TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]

def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("NodeRole","urn:dece:role:coordinator");
tP.setPropertyValue("audience","");
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="f8ccd377-a305-4858-a366-0f90fdd3c5bb">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify Node User SAML Asssertion" id="b47fabcf-1719-4a86-9d22-65d03afe5c20">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.model.testsuite.TestRunner.Status


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def ValSamlAssertion = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Validate SAML Assertion");

	ValSamlAssertion.setPropertyValue("TCaseName",testCase.getName());
	ValSamlAssertion.setPropertyValue("TSuiteName",testSuite.getName());

	def runnerTc = ValSamlAssertion.run( null , false )
	assert runnerTc.status == Status.FINISHED;

	rcUUID = testCase.getPropertyValue("rcUUID");

	if (runnerTc.status != Status.FINISHED || rcUUID.toInteger()!= 1){

			
		testCase.setPropertyValue("nodetype","retailer");
		testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
		testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
		testCase.setPropertyValue("password","Password1");
		testCase.setPropertyValue("accountoid",null);
		testCase.setPropertyValue("useroid",null);
		testCase.setPropertyValue("assertid",null);
		testCase.setPropertyValue("SAMLassertion",null);
		testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
		testCase.setPropertyValue("loopuntil","25");
		testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
		testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
			
		log.info " SAML Assertion Expired ! re-generating Assertion";
		def RunSTS = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get SAML Assertion - STS")

				RunSTS.setPropertyValue("TCaseName",testCase.getName());
				RunSTS.setPropertyValue("TSuiteName",testSuite.getName());

				def runnerSTS = RunSTS.run( null , false )

				assert runnerSTS.status == Status.FINISHED;

		}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="cea13d6a-1301-468c-affd-98c37b0d63e1">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:coordinator");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to Coordinator" id="eb78cffb-4c6c-4edb-a58b-8ec239088cbf">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )
</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="ad93b856-29a5-41da-840d-341563627b2e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="89f1b361-55b6-4748-9441-2cb1cab320e8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="441c7f2f-787b-402e-800a-c7a33eecb04d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38111</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>CFFA03DEA63799B9E0401F0A07997831</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>user_create_20130603_051920</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:coordinator</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:D5338418C2348D1CE0401F0A079960D1</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>D5338418C2348D1CE0401F0A079960D1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AC9A677094C5EBBA3E0401F0A07990448/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AD2496E57D1436710E0401F0A079949A2/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/06/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>2976</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>ac6e619b-a4f1-494f-80ce-a90a90e3784f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30004 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with_Coordinator_CS" searchProperties="true" id="0efb3c38-7cd1-47bb-a8b9-5cbd4b901453">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DECE Coordinator Customer Support.

Expected Result :

It should not allow API invocation for the &amp;quot;DECE COORDINATOR CUSTOMER SUPPORT&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="8dc2622f-8b92-4b9e-99e6-f6cf604e64bd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","coord:cs");
myTS.setPropertyValue("role","nodeIdCoordCS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","coord:cs");
tS.setPropertyValue("role","nodeIdCoordCS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="1dc3df6a-f7ae-478b-8b99-1ea4984b757b">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="4d9abb23-074f-4e0c-9df2-d779d072b7eb">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:coordinator:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdCoordCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="f183ff8b-824d-42fc-a8bf-348ae7b874b8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="052d9908-481d-4f6c-ae08-60c65567dbd3">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="b98a12a4-2147-46de-8059-1501d26a19f4">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38112</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>coord:cs</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025846</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:coordinator:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF8FAF46E162B53DE0401F0A0599648E/RightsToken/urn:dece:rightstokenid:org:dece:EF797C6C732BA3D3E0401F0A079922EC/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>238</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>8dc2622f-8b92-4b9e-99e6-f6cf604e64bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30005 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with_Portal." searchProperties="true" id="6a23fd60-65f3-4ee6-a860-2d49d9b5afb2">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DECE Coordinator Portal.

Expected Result :

It should not allow API invocation for the &amp;quot;DECE PORTAL&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="134fd8b7-d470-4d7a-8c29-fd556bd8c338"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","iscportal1");
myTS.setPropertyValue("role","nodeIdportal");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","iscportal1");
tS.setPropertyValue("role","nodeIdportal");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="e3909835-f9ad-4fc9-84a1-48c8aecc7f44">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="d87001d5-5575-41e3-b109-92a8270926b1">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:portal");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdportal}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="e5c45cc4-eca1-4a9d-840d-38572c57cd96">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="84f9c210-fd22-4d0e-bfb1-3624f1c4b8a7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="9e4df8e9-2b1c-47c3-9ea3-939734b11096">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38113</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>iscportal1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025851</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:portal</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF8F6598E06945C4E0401F0A07991D03/RightsToken/urn:dece:rightstokenid:org:dece:EF797C6C732BA3D3E0401F0A079922EC/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>306</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>134fd8b7-d470-4d7a-8c29-fd556bd8c338</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30006 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with_Portal_CS" searchProperties="true" id="434c5cc5-aea2-4154-93b4-260fa8c0bb31">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DECE  Portal Customer Support.

Expected Result :

It should not allow API invocation for the &amp;quot;DECE PORTAL CUSTOMER SUPPORT&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="7c409c43-bc23-406c-afba-944b9b253bd8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","iscportalcs1");
myTS.setPropertyValue("role","nodeIdportalCS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","iscportalcs1");
tS.setPropertyValue("role","nodeIdportalCS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="69929ee7-2a62-44f7-8217-0594812a4111">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="a0698bf9-ddd1-4479-83c7-a1e0357727b7">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:portal:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdportalCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="8f74cc11-33c1-4d97-ab99-e1c4a997a21e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="1710e1e0-c983-4230-85f9-636da0d7a072">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="2823bdf9-d281-4cef-89fb-edc09f9f9935">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38114</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>iscportalcs1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_131024_050534</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:portal:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:E97B9529190118D2E0401F0A07992CA1</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>E97B9529190118D2E0401F0A07992CA1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E97BEDC5725DB66BE0401F0A0799064F/RightsToken/urn:dece:rightstokenid:org:dece:E97A2EA215AAE65FE0401F0A07995672/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>2020</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>7c409c43-bc23-406c-afba-944b9b253bd8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30007 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with LLASP" searchProperties="true" id="37f25b7b-1370-4f63-a95c-a5d247c4001c">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is Linked LASP

Expected Result :

It should not allow API invocation for the &amp;quot;L-LASP&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="d45deacd-9e94-4bfa-bcbf-3903732ec786"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","LLASP");
myTS.setPropertyValue("role","nodeIdLLASP");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","LLASP");
tS.setPropertyValue("role","nodeIdLLASP");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="51692bff-b310-469d-a4de-21cdc07e70cf">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="eb9768fb-87cb-44e5-8171-10f33d249f85">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:lasp:linked");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdLLASP}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="a9ae9144-a016-4483-9b36-24fc111eb55c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="de9f7cfc-49b5-45ac-8d82-bd0142ed92f5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="3ca46fc5-dec9-4201-93cd-85aefb21bae7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38115</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>LLASP</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025856</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:lasp:linked</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF8F51ED2B5C2ED2E0401F0A07991D59/RightsToken/urn:dece:rightstokenid:org:dece:EF797C6C732BA3D3E0401F0A079922EC/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>410</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>d45deacd-9e94-4bfa-bcbf-3903732ec786</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30008 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with LLASP_CS" searchProperties="true" id="d4bbe49d-97fe-4c9c-a423-a53a84d16fcb">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is Linked LASP CustomerSupport

Expected Result :

It should not allow API invocation for the &amp;quot;L-LASP CUSTOMER SERVICE&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="6b2c2f43-4d0c-4a35-95c5-254bad339311"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","LLASP_CS_1");
myTS.setPropertyValue("role","nodeIdLLASPCS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","LLASP_CS_1");
tS.setPropertyValue("role","nodeIdLLASPCS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="a89282a7-b2ba-4dc6-811f-52d0e458a003">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="98f3d0b5-c355-40cc-ad14-9ba057d2e9c5">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:lasp:linked:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdLLASPCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="8232d6d0-5a2f-4fd0-b8dc-ae17762de1d3">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="5c22092a-4521-4d53-8255-947757e9f23b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="bbb0a9be-b485-4fd6-99ec-f6051f823cb8">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38116</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>LLASP_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_02592</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:lasp:linked:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF8FE0CC283F24A0E0401F0A07993B68/RightsToken/urn:dece:rightstokenid:org:dece:EF797C6C732BA3D3E0401F0A079922EC/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>189</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>6b2c2f43-4d0c-4a35-95c5-254bad339311</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30009 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with DLASP" searchProperties="true" id="4c8c4b01-666e-4549-9ad9-f0a24ce2daca">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is Dynamic LASP

Expected Result :

It should not allow API invocation for the &amp;quot;D-LASP&amp;quot; node.</con:description>
      <con:settings/>
      
      
      
      <con:testStep type="groovy" name="Create_AccountUser_STS" id="dd13b4c6-b2bd-4e5d-922d-5030686f5e25"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","DLASP");
myTS.setPropertyValue("role","nodeIdDLASP");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","DLASP");
tS.setPropertyValue("role","nodeIdDLASP");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="aab50c62-0b29-433a-928a-daf7208f467e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="02e0ea21-d42e-4020-9f84-d14dfe5a186b">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:lasp:dynamic");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdDLASP}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="2895e77a-8de0-4b37-9c54-003826ad000a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="ce04271d-4708-48a6-9ec5-f69bdc25c58d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="fa8ca014-8eaa-4aee-b53e-ddee0eefdefd">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38117</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>DLASP</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_02596</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:lasp:dynamic</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF8F806F146B08C6E0401F0A059907F2/RightsToken/urn:dece:rightstokenid:org:dece:EF797C6C732BA3D3E0401F0A079922EC/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>184</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>dd13b4c6-b2bd-4e5d-922d-5030686f5e25</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30010 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with DLASP_CS" searchProperties="true" id="e5ca5053-5a6e-4b63-ae40-ac937061b952">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is Dynamic LASP Customer Support

Expected Result :

It should not allow API invocation for the &amp;quot;D-LASP CUSTOMER SUPPORT&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="e19046a9-331c-48ed-82b5-7c820b3af44a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","DLASP_CS_1");
myTS.setPropertyValue("role","nodeIdDLASPCS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","DLASP_CS_1");
tS.setPropertyValue("role","nodeIdDLASPCS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="6813e9a3-deb0-4ecf-851b-544e4a87c861">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="66bc63a6-471e-4417-aaa1-daa9d8832f04">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:lasp:dynamic:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdDLASPCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="07f50aaf-7f43-4f9e-98a8-1cae6b8d09e1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="020bfa00-7fd8-49cf-805b-04acaf68ba03">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="d13045a6-2e02-418a-931b-0faa12a6f796">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38118</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>DLASP_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025912</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:lasp:dynamic:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF8F74509A7C1358E0401F0A07996DAC/RightsToken/urn:dece:rightstokenid:org:dece:EF797C6C732BA3D3E0401F0A079922EC/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>151</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>e19046a9-331c-48ed-82b5-7c820b3af44a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30011 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with DSP" searchProperties="true" id="1c3d8f21-d8fa-436d-9f0e-272c467716e3" disabled="true">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DSP

Expected Result :

It should not allow API invocation for the &amp;quot;DSP&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="c95e58e0-d825-4a26-b110-b951c52b2635"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_00001_AccountCreate_API_Invocation_from_Retailer","TC_DECE_0002_FirstUser1Create_API_Invocation_from_Retailer"];
def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("NodeRole","urn:dece:role:retailer");
tP.setPropertyValue("audience","");
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="CreatePolicies" id="3ef44e22-8b9b-4328-a7bd-67819f0a5b61"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("NodeRole","urn:dece:role:dsp")
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="0e6839a4-fd71-4dbf-8a5c-3ef2ae9b38f9">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="6359d12b-e2bd-4057-ba0b-2aa57bc219f6">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:dsp");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to DSP" id="8ce6c09b-1193-4f5c-9e3b-cff083a9b960">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="68948c04-ced5-4031-9144-d803007d444e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="6171f51e-b655-4db1-8b98-c30a55c4c0fe">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="ef6784c3-8804-4409-aea7-7526741b083f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38119</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>C0CEF8E08CD2C7D6E0401F0A0599120B</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>user_create_20130708_052841</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=nVdbc6pKE333V1juR8twUVSsJFXDRUQFBfH68hXCCCiCMiDorz8DRqPZ2fvkfA8pM01Pz+ruRbPmFZl7n+4AhGAUe2FQloW3yv9gu04ydouqsU3YqDUsy66ZdYqumYzZJK1G3caPK2UZoQTKAYrNIH6r0CR2oMgaXTdItlMnOyT7QjLNVaU8gxHCobHLC1kpZ3s/QJ3i2LdKEgWd0EQe6gTmHqJObHUmQBl2sGfHvGGqvL9eURYHRu9uHB86BGG92NCCvm+9WOGeeCWefF5t1Jl4TmDGSQQ/zrTRW+Vjb5qmL2n9JYwcgiZJkiBZAvvYyHN+Vd5Lt83QloNNeF3zZhAGnmX63sXMQSkwdkO7DHwnjLzY3f8hNEVQZB66BjOrZlGN4FeF+DygQPfDSE8gI2TWkGtSt2A63MAIBhYsT3X5rfLrZx287jUiM0CbMNqjL+v/BgkGJ+iHB2jX0C2zG7qfR/ymXO+v0OrIgeUnyDtBNafJwbQgKo8juPGyoYcw+WxULtpfztCNYdD6Ly15JR5xYtjEN5URPAei+P/p12OvrlFmpp/AdzVs7ZqnXne7m6fuTKKcLVfVx9OeCqdvBYRH5yuoe6s/1l+JeufVxyYxWxPnZpU9Djxh3BgFrndwFIuJQHOTjpV11mLrQ06EPhDmix63jJVNVSIHtL6jkNyPk02krk8NEjGusW+Xks1hruzNqCmqmS8uwjizUbNxacx64YJokbvJzj+C/oS2Df7UGFOs2hfUaeNMHQ8joisO9c1o4DNtfT6hgnkpNN2+s/X25w3JRZ6hTKH89pnTYw55XgN4LpLM/18wJCuYsXlf8Pmk2ODXM4bviiwLyYXnwXnigFTmgIP/tkDlnN3R3XkSm5Ic0LQuEHjO34pDBewkQE1FzlX42UzJ+Avoc446wxuNEvBXnKKLqZAuhZmm9cTUNWxpdl5LfrK6iKoCULGZdxVRF2eCboiKAsKrLVOEtZRtlYmSytpSKOEAgpgdLrbExlDKPIuWGWXC0MsJk6wWM2zvnod79bQ2RF/hFYmfHKWJvK4LmtgH+nJu0d0E770M94ewtJxyD5v6B7gFsJuS+ExwUYxdqhhTWhV0s7AZzzZFlvqKhlJeK7KSSmLan00vn7XgOYW392ImGmB8rYVl8F2VXC36yJwzgaKDVHCKzQMxtUc3IIpGpiX+WquhmOqiPlW7ii6nIihsgpj6aE2r7lpyT1Zdy/oG2D42htfEeTfAzwP9ZJ2ZY8mUumC9n1FWXXctj/HMRZg6q3YqaMv+IFzJOIwKNJHjNIABkSBPDdefA0NuxowOHkt7cLjphnvoRiWFCge70yUj21595IzVOSNsdq2x5I3rpu0Ssm/R2/oOyDK0B5Srmba+JHQh8C7N0WC6gF60vMQqo1FNr82U9HkyXQih37J7i+V0UM2WlmaMxpPpfHzJMvW4bV/8uDfietGkrwjOSIVwjKwqQZpdzmgLDL/sbTGfNjoJmRJwFA4Aaes4oocJzPW2VxL2dEXE5AUKn0r8nJcmQJKqoswJmrbputTYkmbJlFIVWbR9XKbzcqH7pRXPCbhTpDlfHZZ0l1wZwC6CaQ2x62hTptpfwJWm+sYsBulhtgkoipQOWm+jpI6l5Ayw5XTC4beIKyUymJqjQ5/MBrMmSR012+9PWDCtZxN6l41cZ3XeOasdbsry4dVZGsCfGQ8ckzHF5iXNEHUFtK/vW6bI07ruW/vssN5bmWDgnhWbQ4MT9a5GTjNBAIOrDRmAztDyIm4VXiz2l0CmmJgWp/XCRctA9UaGmGDSJg902a5p8l85llOs9MyxIw808JVj4pVjItgcq3JboBDT5A9onjqcJB611mzYZw+kthjuSly1Szix5+Nx206NQXVOndOWu9Xmc1YWXL4abJZufR1zpHmxNNjftSRP3wlBs+GflaGiMVOP8M/kFh5TNCypMhWI9fjSJdgoqXL7lbe/XOoNerofT5KTPDUHiDq76+OcTbfjXpMgIunMXFqrk9ZdhNby+h35OiTvxusYJR4H7NMEvmmvSbLeQiu+LfPvsCyUu/jjaMZ/13G5xbNrm8K1c8jFIIphEFfe8125huskWOl5dgd/Oa9rngXNVotkG3yT5zhQF8kGSXVJQLZYlmw02jexd0XxBSIfBhsvPyuXs9eP9d8BWvsOgoENo9opTCwXospfIub1KsuBjlVIGCBohFgu1+l6t81ieUW22izVpFmKZESBp9oNjhUoClTKahiPglEENjGMnqQyRT9JZR1a3sGDuZ7ORQXCqgLFuCRH85TEPvVyMl8CmGDFHeWit0M32gyBvP3BhzlgYh/aiQ9fDu6hKBCBrr9Y9lmosNJ0q1WonT/m9/XZrRTYx/ZyB5Qnw0HcTvhV9NNsh7ll8lvG9W8vB7fwILG9XNTgusaRZ12RPD/6pEvOkztX8pRumO+uXw1PYYmvGd1Psk+edWf8/U6EJTUWXe+3hhzNl+NLcjolRQtauaCMcHiCIkiamEArwarwbIQ7GBD3EMSPBPkd9ZeT7/ZnfEnsBpMYv817TJhysfzBbWwCUX4bkzHhs59e9Z6OxHWLYRZ/Z+N9fGnLEf/1Xmd1rNwPm8f4Jw0j+7Nd38R6OAfnmY8vL3DyVS6/z39ghRXisB4eYWH0GPy7AN8d/my8F/mOJcZsWicx/POTcj6b3iqmZYVJEMtCpTA8zssCZ3w+wM6n029hCgH8caPJ0B9vNAtlOMGTa29W7r7evzvXvIIuFsS7kFdgeatk+HKODw+ch/n8AfD7Ec2IfxvRz5m8/2b+3fJQ06/vw/s/</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:dsp</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:E0FF641DBEC60D6BE0401F0A079945E4</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>E0FF641DBEC60D6BE0401F0A079945E4</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0FFBBE44B926045E0401F0A07997A22/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE0FF641DBEC60D6BE0401F0A079945E4/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>2162</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>c95e58e0-d825-4a26-b110-b951c52b2635</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3ef44e22-8b9b-4328-a7bd-67819f0a5b61</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30012 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with DSP_CS" searchProperties="true" id="54cca058-4d72-4422-8269-60b23c7ae51c" disabled="true">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DSP Cusomter Support

Expected Result :

It should not allow API invocation for the &amp;quot;DSP CUSTOMER SUPPORT&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="30ad4e1b-a184-43cb-81d8-a22579b33c19"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_00001_AccountCreate_API_Invocation_from_Retailer","TC_DECE_0002_FirstUser1Create_API_Invocation_from_Retailer","TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]

def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("NodeRole","urn:dece:role:retailer");
tP.setPropertyValue("audience","");
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="CreatePolicies" id="2bd96933-d04a-4e51-a682-7ad4b86305f7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("NodeRole","urn:dece:role:dsp:customersupport")
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="d1cd9b10-b348-4cec-8f88-ff807c9d677c">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="a2f437f5-04b5-43e6-8beb-1397c48a058d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:dsp:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to DSP:CS" id="c8cb7e96-8ec2-464e-a60d-2e9ae1c6874f">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="722aa9bb-bb7f-4697-9fc0-a522a3b75a8e">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="0cb3eacc-541f-461b-9a97-0994ac2ea42a">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="de421d9c-06bd-471e-b640-6250f88ed6a0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38120</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>CCE44AF42FC8063BE0401F0A07991776</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>user_create_20130708_052911</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:dsp:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:E0FF641DBEC60D6BE0401F0A079945E4</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>E0FF641DBEC60D6BE0401F0A079945E4</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0FFBBB37A206BC4E0401F0A07997A24/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AE0FF641DBEC60D6BE0401F0A079945E4/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>3075</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>30ad4e1b-a184-43cb-81d8-a22579b33c19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2bd96933-d04a-4e51-a682-7ad4b86305f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30013 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Device" searchProperties="true" id="ac6a5706-00ef-4584-94a2-20d24248765d" disabled="true">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is a Device.

Expected Result :

It should not  allow API invocation for the &amp;quot;DEVICE &amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="cdcb1249-b2b3-467d-9c9e-f2273a59d2e8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_00001_AccountCreate_API_Invocation_from_Retailer","TC_DECE_0002_FirstUser1Create_API_Invocation_from_Retailer"]

def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("NodeRole","urn:dece:role:retailer");
tP.setPropertyValue("audience","");
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="CreatePolicies" id="5275d5eb-9558-47e7-a762-8d0c0d89f43c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("NodeRole","urn:dece:role:device")
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="7650ffa4-229e-4999-add6-eb9d5e314cbb">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="49be2388-9b30-4629-acc6-29b87f2ae75a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:device");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to Device" id="d85e5452-cf44-48b4-ae4f-050fcc5ba094">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="24c4401f-580e-4576-84e2-4c4ea4f98cc1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="f1781200-8727-4d0b-bacd-d1ec9353d7cc">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="f7d5de70-3f27-45c0-8276-7170b56e5f8b">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38121</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>C0CEF8E08CCDC7D6E0401F0A0599120B</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>user_create_20130708_052959</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:device</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:E0FF641DBEC60D6BE0401F0A079945E4</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>E0FF641DBEC60D6BE0401F0A079945E4</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0FFC4D5ECE12305E0401F0A07990DBC/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AD5338418C2348D1CE0401F0A079960D1/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>2715</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>cdcb1249-b2b3-467d-9c9e-f2273a59d2e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5275d5eb-9558-47e7-a762-8d0c0d89f43c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30014 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with DeviceCS" searchProperties="true" id="85e63361-491a-4ef9-a4e8-dfd362f391cf" disabled="true">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is a Device.

Expected Result :

It should not  allow API invocation for the &amp;quot;DEVICE &amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_00001_AccountCreate_API_Invocation_from_Retailer","TC_DECE_0002_FirstUser1Create_API_Invocation_from_Retailer"]

def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("NodeRole","urn:dece:role:retailer");
tP.setPropertyValue("audience","");
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="CreatePolicies" id="b63212e3-b149-4265-9ef1-c133d5ed911b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("NodeRole","urn:dece:role:device:customersupport")
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:device");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to Device">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38121</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>CE8BFD2E2DD09BAEE0401F0A07990E42</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>user_create_20130708_053033</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:device</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:E0FF641DBEC60D6BE0401F0A079945E4</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>E0FF641DBEC60D6BE0401F0A079945E4</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE0FFBBE44F706045E0401F0A07997A22/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AD5338418C2348D1CE0401F0A079960D1/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>2334</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>cdcb1249-b2b3-467d-9c9e-f2273a59d2e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>af3b15e4-2d87-43de-a531-8c69d551add3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>056962c7-d62f-49b1-9796-5db2a240a80c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30015 - RightsResourceStatusUpdate - PERM - SecurityRoleInvalid - Invocation with Content Provider" searchProperties="true" id="3f0224c7-c223-424b-a89e-45df8a4ab68d" disabled="true">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is a Content Publisher.


Expected Result :

It should not allow API invocation for the  &amp;quot;CONTENT PUBLISHER&amp;quot; node.System Should Return error Message</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="af3b15e4-2d87-43de-a531-8c69d551add3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_00001_AccountCreate_API_Invocation_from_Retailer","TC_DECE_0002_FirstUser1Create_API_Invocation_from_Retailer","TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]

def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("NodeRole","urn:dece:role:retailer");
tP.setPropertyValue("audience","");
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="CreatePolicies" id="056962c7-d62f-49b1-9796-5db2a240a80c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("NodeRole","urn:dece:role:contentprovider")
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="772efb10-81b0-4bca-94a3-1a12d996190a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="2078d930-1505-441c-964c-a8004edf5e02">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:contentprovider");
testCase.setPropertyValue("nodeid","227");
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to Content Provider" id="1e8863ef-c7f7-4be5-9059-b2162a5ccf05">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="2655253c-119c-4464-928f-ab67cc970b3d">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="a96ba2a3-4cbd-4e17-92f4-b42ad5cb58c5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="515f5a84-46c0-419a-813b-b439c02077f7">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38123</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>227</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>rightsupdate_user</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value>C9A677094C63BBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value>C9A677094C71BBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:D5338418C2348D1CE0401F0A079960D1</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>D5338418C2348D1CE0401F0A079960D1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AC9A677094C5EBBA3E0401F0A07990448/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AD3B7C12AD96EF80DE0401F0A05991D91/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/06/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>2658</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>81ddbfaa-6950-4dc0-a99b-386e8b854888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dcbef89b-a2a9-45b7-bd74-1d17be2d5bf5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30016 - RightsResourceStatusUpdate - PERM - SecurityRoleInvalid - Invocation with Content Provider_CS" searchProperties="true" id="43715563-4744-413e-85db-4916de2a04d6" disabled="true">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is a Content Publisher Customer support.

Expected Result :

It should not allow API invocation for the  &amp;quot;CONTENT PUBLISHER CUSTOMER SUPPORT&amp;quot; node.System Should Return error Message</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="81ddbfaa-6950-4dc0-a99b-386e8b854888"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_00001_AccountCreate_API_Invocation_from_Retailer","TC_DECE_0002_FirstUser1Create_API_Invocation_from_Retailer","TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]

def myTS = tP.getTestSuiteByName("E2E")

myTS.setPropertyValue("NodeRole","urn:dece:role:retailer");
tP.setPropertyValue("audience","");
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="CreatePolicies" id="dcbef89b-a2a9-45b7-bd74-1d17be2d5bf5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("NodeRole","urn:dece:role:contentprovider:customersupport")
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="18e16a31-e506-474f-af18-2def42577355">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="28c93e44-6333-4c40-bc92-b563e218cbd9">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:contentprovider:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#Node_OID}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Role to Content Provider:CS" id="06ee01fd-608c-4f11-981c-cb8ddfb864b0">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Node_Setup")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());
RTCRequest.setPropertyValue("NodeRole",context.expand('${#TestCase#NodeRole}'));

def runnerRTC = RTCRequest.run( null , false )</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="c3ae2688-da52-4413-a40a-125862ac718f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="554363e0-8ce5-45e7-8d39-78a3c17b5914">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="eb8873e0-1997-4fcd-a313-dcb75aab4e86">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38124</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>2277</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>rightsupdate_user</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value>C9A677094C63BBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value>C9A677094C71BBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:contentprovider:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2012/12/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:D5338418C2348D1CE0401F0A079960D1</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>D5338418C2348D1CE0401F0A079960D1</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/06/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AC9A677094C5EBBA3E0401F0A07990448/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AD3B7C12AD96EF80DE0401F0A05991D91/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/06/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>2729</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>1bc92c8f-7617-4db7-92fe-f6a597b9974c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>622d06d0-e4ef-4e50-b524-a7a93f6ac027</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30019 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with AccessPortal" searchProperties="true" id="90d84210-6938-4095-b11d-13f362e00cee" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is a Device Manufacturer Portal.

Expected Result :

It should not allow API invocation for the &amp;quot;DEVICE MANUFACTURER PORTAL&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="1bc92c8f-7617-4db7-92fe-f6a597b9974c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()



def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","ACCESS");
myTS.setPropertyValue("role","nodeIdAccportal");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","ACCESS");
tS.setPropertyValue("role","nodeIdAccportal");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="CreatePolicies" id="622d06d0-e4ef-4e50-b524-a7a93f6ac027" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()

String[] arr = ["TC_DECE_0003_STS_Create_FAU","TC_DECE_00004_Accept_Policy_API_Invocation_from_Retailer"]


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("NodeRole","urn:dece:role:accessportal")
for (int i=0;i&lt; arr.size();i++)
{
def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName(arr[i])

myTC.setPropertyValue("tName",tC.getName())
myTC.setPropertyValue("sName",tS.getName())
def runnerTC = myTC.run( null , false )
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED"
}


</script></con:config></con:testStep>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="6d76a63f-8107-4752-a7b2-52779d94cea8">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="2e8318d9-6fc6-402a-b166-1e1eeabb8d27">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:accessportal");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdAccportal}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="61a3e4b2-1553-4f02-8c47-2fcab462d4f9">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="b429446b-b573-4c60-bf01-d1df429ef0ce">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="a6f5a68c-e799-405b-b44b-8ab1cd2ec7d5">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value></con:property>
        
        
        
        
        <con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value>107001</con:value></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value></con:property>
        
        
        
        <con:property><con:name>assertionUserId</con:name><con:value>C9A677094C6CBBA3E0401F0A07990448</con:value></con:property>
        <con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:ACCESS</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        <con:property><con:name>ErrorDataVal</con:name><con:value>1</con:value></con:property><con:property><con:name>expectErrTypeRTCreate</con:name><con:value>API_NOT_AUTH</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>API_NOT_AUTH</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property>
        
        
        
        
        <con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property>
        
        
        
        
        
        
        <con:property><con:name>FeedRTCReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property><con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property>
        <con:property><con:name>FFManifestLocPreference1</con:name><con:value>3</con:value></con:property><con:property><con:name>FFManifestLocPreference2</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property>
        <con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property>
        <con:property><con:name>LICAcqBaseLoc</con:name><con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property>
        
        
        
        
        
        
        <con:property><con:name>nodeaccountid</con:name><con:value>107001</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:accessportal</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value></con:property>
        
        
        
        
        <con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:0701</con:value></con:property><con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:107001</con:value></con:property><con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property>
        <con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value>RetailerTransaction_1_node0701_RetailerNode</con:value></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property>
        
        
        <con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property>
        
        
        <con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property>
        
        
        
        <con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property><con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property>
        <con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property>
        
        
        
        <con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value>1</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property>
        <con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>38127</con:value></con:property>
        <con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property>
        <con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:pending</con:value></con:property>
        
        
        <con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>RightsResTime</con:name><con:value>18</con:value></con:property><con:property><con:name>RightsResXml</con:name><con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property>
        <con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property>
        
        
        
        <con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:0701</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property><con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property>
        <con:property><con:name>RTC_rcStatusHistory</con:name><con:value>0</con:value></con:property>
        
        
        <con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-10-23 09:30:09.0</con:value></con:property><con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property>
        <con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property>
        
        <con:property><con:name>synced</con:name><con:value>true</con:value></con:property>
        
        <con:property><con:name>targetURL</con:name><con:value>null:null</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value></con:property><con:property><con:name>VCAllowedUser</con:name><con:value>urn:dece:userid:org:dece:107999</con:value></con:property>
        
        
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>00feaaf1-9abc-4588-b63b-beaae895bb38</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>86f9ee32-5749-4cb4-89f1-a762c85c8829</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30020 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with AccessPortal_CS" searchProperties="true" id="b2cbdae3-7b05-49fd-b1fb-3c8687844fcd">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate  invocation when the requesting node is a Device Manufacturer Portal Customer Support.

Expected Result :

It should not allow API invocation for the &amp;quot;DEVICE MANUFACTURER PORTAL CUSTOMER SUPPORT&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="00feaaf1-9abc-4588-b63b-beaae895bb38"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


//String[] arr = ["AccountCreate API","FirstUserCreate API","STS_API","PolicyCreateTOU_API","PolicyCreateULC_API","PolicyCreateMUC_API"];
def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","ACCESCS");
myTS.setPropertyValue("role","nodeIdAccportalCS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","ACCESCS");
tS.setPropertyValue("role","nodeIdAccportalCS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="eedab912-7cf4-4124-a977-dbc373b7bb7a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="18b3d0d7-ceb5-43e3-8ce5-5ef0f7718ad8">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:accessportal:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdAccportalCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="2a6a53f0-0f59-4667-bd1a-4e7c8d3ee4d4">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="5874bd6f-53f9-4afb-92ef-380a72936a8c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="b1f5fb8a-ec27-432c-9da0-f744b805ae9c">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value>38128</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>ACCESCS</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025919</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value>null:null</con:value>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value>107001</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:accessportal:customersupport</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:0701</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_node0701_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:107001</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03.000</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF8FAF43C29DE49FE0401F0A05996490/RightsToken/urn:dece:rightstokenid:org:dece:EF797C6C732BA3D3E0401F0A079922EC/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>108</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>48c4c771-6c70-40a6-8d44-80b19d90ddad</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4ec3bcd4-1bb4-4736-911d-308724d37889</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30021 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Retailer" searchProperties="true" id="da16406a-2a87-42e5-9f16-43546519194b">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DECE Customer Support.

Expected Result :

It should allow API invocation for the &amp;quot;DECE CUSTOMER SERVICE&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="48c4c771-6c70-40a6-8d44-80b19d90ddad"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","RET");
myTS.setPropertyValue("role","nodeIdRTL");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","RET");
tS.setPropertyValue("role","nodeIdRTL");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="c4ae6952-46be-4f4e-a46c-0283c9a15b7a">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="5f2787f7-f8a7-4fd7-9237-1b16ca861008">
        <con:settings/>
        <con:config>
          <script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());

testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,"LP1");

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;
log.info rtDBinfo;
TestCase_Accountid = testCase.getPropertyValue("accountoid");
Val_rtDBinfo = new XmlSlurper().parseText(rtDBinfo);

log.info   "RightToken Belongs to Account :" + Val_rtDBinfo.ResultSet.Row.ACCOUNT_OID; 

RightsAccountid = (Val_rtDBinfo.ResultSet.Row.ACCOUNT_OID).toString();

		if ( rtStatus.toString()!='active'){
			if( RightsAccountid == '7001'){
				log.info "Calling RightsToken Create API for a new RightsToken !"

				def runnerRTU = RTURequest.run(null,false);
				log.info runnerRTU.getStatus()
				assert runnerRTU.status == Status.FINISHED;
			}
			else
			{
				log.info "Rights Token Belongs to different Account or not Active";
			}
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="7b709a8c-a082-48df-b88a-9eeaf7f4fb7f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:retailer");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTL}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","API_NOT_AUTH");
testCase.setPropertyValue("ErrorDataVal","1");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="bc125714-f533-41a4-b852-ee9e27506e3f">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="538b8489-f8b5-4870-bf09-a5b487af9cdb">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="9d13026c-ea24-4274-8083-14c75c1f3eb1">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re - Set RightsToken In active Status" id="b977bee8-97d7-40f4-88ef-feed1f83b147">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value>uv_adult_fau_140109_025923</con:value>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value>Password1</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value>urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value>25</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value>C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>alid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:retailer</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/06/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F806F071F08C6E0401F0A059907F2</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Security:RoleInvalid">
      <Reason Language="en">The API call is not authorized.</Reason>
      <OriginalRequest>https://qa.p.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF8F68EEF13A7D60E0401F0A07995252/RightsToken/urn:dece:rightstokenid:org:dece:EF8F806F071F08C6E0401F0A059907F2/ResourceStatus/Current/Update</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/07/error/en/ErrorList.html#Security:RoleInvalid</ErrorLink>
   </Error>
</ErrorList>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>272</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLExpDate</con:name>
          <con:value>2013-10-23 09:30:09.0</con:value>
        </con:property>
        <con:property>
          <con:name>rcUUID</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value>urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>API_NOT_AUTH</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>rtDBinfo</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F806F071F08C6E0401F0A059907F2</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF8F74F6A895D23CE0401F0A079970D1</ACCOUNT_OID>
      <USER_OID>EF8F74F6A8ACD23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF8F74F6A89CD23CE0401F0A079970D1</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF8F74F6A894D23CE0401F0A079970D1</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_node40_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6A8ABD23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:56:49.238</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:56:57.812</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
      <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>cb9e1f69-7f35-452a-8781-f3db4778e1ff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ef556ac2-3bd3-4533-8d7c-750d8c69d6ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_30022 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Retailer_CS" searchProperties="true" id="28789463-c701-4c60-bdc1-be00135ae6e1" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
      <con:description>This test case will verify that the Application Tier properly responses to a RightsResourceStatusUpdate invocation when the requesting node is DECE Customer Support.

Expected Result :

It should allow API invocation for the &amp;quot;DECE CUSTOMER SERVICE&amp;quot; node.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="Create_AccountUSer_STS" id="cb9e1f69-7f35-452a-8781-f3db4778e1ff"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()



def myTS = tP.getTestSuiteByName("E2E")


myTS.setPropertyValue("nodeid","RET_CS_1");
myTS.setPropertyValue("role","nodeIdRTLCS");
myTS.setPropertyValue("Country","US");
tS.setPropertyValue("nodeid","RET_CS_1");
tS.setPropertyValue("role","nodeIdRTLCS");
tS.setPropertyValue("Country","US");


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
log.info "runnerTC--"+runnerTC.status

assert "$runnerTC.status" == "FINISHED";



</script></con:config></con:testStep>
      
      
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="b5314da2-3822-431d-89cd-6294fc14609e">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",testProject.getPropertyValue(testSuite.getPropertyValue("role")));
testCase.setPropertyValue("username",context.expand( '${#Project#UserName}' ));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword");
testCase.setPropertyValue("loopuntil","25");
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="RightsTokenCreate" id="a45a63ec-d8d4-49bc-aca4-61547ba64cc3"><con:settings/><con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")
//testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config></con:testStep>
      <con:testStep type="groovy" name="Verify RightsToken ID to Update" id="9a39b588-26bc-4e23-afca-99a9173d4058">
        <con:settings/>
        <con:config>
          <script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def RTURequest = testProject.getTestSuiteByName("Staging Rights UPDATE").getTestCaseByName("RightsTokenCreate_With_Valid_AccountId")

RTURequest.setPropertyValue("TCaseName",testCase.getName());
RTURequest.setPropertyValue("TSuiteName",testSuite.getName());

testCase.setPropertyValue("rightstokenid", RTURequest.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid", RTURequest.getPropertyValue("DBrightstokenid"));

mydb = new dbRightsToken(log,"LP1");

def rtStatus = mydb.rightstokenGetStatus(testCase.getPropertyValue("DBrightstokenid"));
def rtDBinfo = mydb.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
def RT_Data5 = mydb.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//testCase.setPropertyValue("DbResultRT_StatusHistoryXml",RT_Data5.toString());
testCase.setPropertyValue("rtDBinfo",rtDBinfo.toString());
log.info rtStatus;
log.info rtDBinfo;
TestCase_Accountid = testCase.getPropertyValue("accountoid");
Val_rtDBinfo = new XmlSlurper().parseText(rtDBinfo);

log.info   "RightToken Belongs to Account :" + Val_rtDBinfo.ResultSet.Row.ACCOUNT_OID; 

RightsAccountid = (Val_rtDBinfo.ResultSet.Row.ACCOUNT_OID).toString();

		if ( rtStatus.toString()!='active'){
			if( RightsAccountid == '7001'){
				log.info "Calling RightsToken Create API for a new RightsToken !"

				def runnerRTU = RTURequest.run(null,false);
				log.info runnerRTU.getStatus()
				assert runnerRTU.status == Status.FINISHED;
			}
			else
			{
				log.info "Rights Token Belongs to different Account or not Active";
			}
		}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Feed RightsResourceStatusUpdate Request with Valid Data" id="9646d42b-f372-4379-b352-31b93688e4d4">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest");

//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTRSUReq"));
//RightsToken Request and properties
testCase.setPropertyValue("NodeRole","urn:dece:role:retailer:customersupport");
testCase.setPropertyValue("nodeid",context.expand( '${#Project#nodeIdRTLCS}' ));
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ResourceStatusValue","urn:dece:type:status:pending");
testCase.setPropertyValue("expectErrTypeRTRSUpdate","StatusUpdateSuccess");
testCase.setPropertyValue("ErrorDataVal","0");</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Call RightsResourceStatusUpdate request" id="e03bf776-f1aa-4406-8729-ebe8456347f2">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Get Information on RightsResourceStatusUpdate" id="16d5e6e2-e376-48ef-98e6-1249587218d0">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsTokenStatus Update Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify the RightsResourceStatusUpdate RESPONSE" id="7ce32006-5b9b-4d6e-82ed-3fb0f594cb98">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTresponseVal = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsResourceStatusUpdate Response Validation")

RTresponseVal.setPropertyValue("TCaseName",testCase.getName());
RTresponseVal.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTresponseVal.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Re - Set RightsToken In active Status" id="46f67229-54f7-43b7-a1ac-e5d37e6fb2ae">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

// SetUp the Node Status from the Data Source

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Get NodeStatus Values from Data Source

testCase.setPropertyValue("RTStatus","active");

def SetRTStatus = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("Get-Set RightsToken Status");

SetRTStatus.setPropertyValue("TCaseName",testCase.getName());
SetRTStatus.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunner = new WsdlTestCaseRunner( SetRTStatus, null );

TSrunner.runTestStepByName("Set RightsToken Status for RTSU")

assert TSrunner.status == Status.INITIALIZED;</script>
        </con:config>
      </con:testStep><con:properties>
        <con:property><con:name>VCAllowedUser</con:name><con:value>urn:dece:userid:org:dece:107999</con:value></con:property><con:property><con:name>userrowoid</con:name><con:value>9D0EDCB4F1197DC8E0401F0A059975D3</con:value></con:property>
        
        
        
        
        <con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>targetURL</con:name><con:value>null:null</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property>
        <con:property><con:name>SoldAsLanguage</con:name><con:value>en</con:value></con:property><con:property><con:name>SoldAsDisplayName</con:name><con:value>Avatar BestBuy Special Packaging</con:value></con:property><con:property><con:name>SoldAsContentID</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>SAMLExpDate</con:name><con:value>2013-10-23 09:30:09.0</con:value></con:property><con:property><con:name>SAMLassertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        <con:property><con:name>RTStatus</con:name><con:value>1</con:value></con:property>
        
        
        
        
        <con:property><con:name>rtDBinfo</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>RTC_rcStatusHistory</con:name><con:value>0</con:value></con:property><con:property><con:name>RSValue</con:name><con:value>urn:dece:type:status:active</con:value></con:property>
        
        
        <con:property><con:name>RSDescription</con:name><con:value>new rights token</con:value></con:property><con:property><con:name>RSCreationDate</con:name><con:value>2011-02-17T15:12:03.000</con:value></con:property><con:property><con:name>RSCreatedby</con:name><con:value>urn:dece:org:org:dece:0701</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property>
        
        
        
        
        <con:property><con:name>RightsResXml</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value></con:property>
        
        
        
        
        <con:property><con:name>RightsResTime</con:name><con:value>10</con:value></con:property><con:property><con:name>RightsReqXml</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>ResourceStatusValue</con:name><con:value>urn:dece:type:status:pending</con:value></con:property><con:property><con:name>rcUUID</con:name><con:value>1</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>38110</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining3</con:name><con:value>0</con:value></con:property><con:property><con:name>PPDiscreteMediaRemaining2</con:name><con:value>0</con:value></con:property>
        
        <con:property><con:name>PPDiscreteMediaRemaining1</con:name><con:value>1</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile3</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile2</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPDiscreteMediaProfile1</con:name><con:value>urn:dece:type:discretemediaformat:securedigital</con:value></con:property><con:property><con:name>PPContentProfile3</con:name><con:value>urn:dece:type:mediaprofile:pd</con:value></con:property>
        
        
        
        
        
        
        <con:property><con:name>PPContentProfile2</con:name><con:value>urn:dece:type:mediaprofile:sd</con:value></con:property>
        <con:property><con:name>PPContentProfile1</con:name><con:value>urn:dece:type:mediaprofile:hd</con:value></con:property><con:property><con:name>PPCanStream3</con:name><con:value>true</con:value></con:property>
        
        
        
        <con:property><con:name>PPCanStream2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanStream1</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad3</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad2</con:name><con:value>true</con:value></con:property><con:property><con:name>PPCanDownLoad1</con:name><con:value>true</con:value></con:property><con:property><con:name>PIRetailerTransx</con:name><con:value>RetailerTransaction_1_node0701_RetailerNode</con:value></con:property>
        
        <con:property><con:name>PIPurchaseUser</con:name><con:value>urn:dece:userid:org:dece:9D0EDCB4F1187DC8E0401F0A059975D3</con:value></con:property><con:property><con:name>PIPurchaseTime</con:name><con:value>2011-06-24T15:12:03.000</con:value></con:property><con:property><con:name>PIPurchaseAccount</con:name><con:value>urn:dece:accountid:org:dece:107001</con:value></con:property><con:property><con:name>PINodeID</con:name><con:value>urn:dece:org:org:dece:0701</con:value></con:property>
        <con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value>9D0EDCB4F1187DC8E0401F0A059975D3</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>retailer</con:value></con:property><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:retailer:customersupport</con:value></con:property>
        
        
        
        
        
        
        
        
        
        
        <con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value>107001</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>25</con:value></con:property><con:property><con:name>LICAcqBaseLoc</con:name><con:value>https://dl.bestbuy.com/p/bb93827398sdjdhds</con:value></con:property><con:property><con:name>FFWebLocPreference2</con:name><con:value>1</con:value></con:property>
        
        <con:property><con:name>FFWebLocPreference1</con:name><con:value>1</con:value></con:property><con:property><con:name>FFWebLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/bbb</con:value></con:property><con:property><con:name>FFWebLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/aaa</con:value></con:property><con:property><con:name>FFManifestLocPreference2</con:name><con:value>1</con:value></con:property><con:property><con:name>FFManifestLocPreference1</con:name><con:value>3</con:value></con:property>
        
        
        
        
        
        
        
        
        <con:property><con:name>FFManifestLocLocation2</con:name><con:value>https://dl.bestbuy.com/p/ddd</con:value></con:property><con:property><con:name>FFManifestLocLocation1</con:name><con:value>https://dl.bestbuy.com/p/ccc</con:value></con:property><con:property><con:name>FeedRTSUReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>FeedRTCReq</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeRTRSUpdate</con:name><con:value>StatusUpdateSuccess</con:value></con:property><con:property><con:name>expectErrTypeRTCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ErrorDataVal</con:name><con:value>0</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property>
        
        
        
        
        <con:property><con:name>DBrightstokenid</con:name><con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property>
        
        
        
        
        
        <con:property><con:name>ContentID</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value>_e8305d71-96e4-4ccd-a312-a5a60c43d305</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>C9A677094C6CBBA3E0401F0A07990448</con:value></con:property>
      <con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</con:value></con:property><con:property><con:name>accountrowoid</con:name><con:value>107001</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>AccountID</con:name><con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>a45a63ec-d8d4-49bc-aca4-61547ba64cc3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b63212e3-b149-4265-9ef1-c133d5ed911b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties>
      <con:property>
        <con:name>QC_TestPlanDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestLabDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestSet</con:name>
        <con:value/>
      </con:property>
    <con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTLCS</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property></con:properties>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite name="Staging Rights UPDATE" disabled="true" id="436956b9-b1ba-4fac-b02b-309809ae1cbf">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:properties>
      <con:property>
        <con:name>QC_TestPlanDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestLabDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestSet</con:name>
        <con:value/>
      </con:property>
    </con:properties>
    <con:reportParameters/>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenCreate_With_Valid_AccountId" searchProperties="true" id="adf28e03-7a53-466f-963f-82409edd68b1">
      <con:description>Create the RightsTokenCreate API transaction. Verify that the transactionis a fully populated rights token.  Ensure all required field is included in the create request. Send the RightsTokenCreate API transaction. Verify that the token was created successfully and that it contains the ID for the created rights token. Response should pass back a RightsTokenID.</con:description>
      <con:settings/>
      <con:testStep type="groovy" name="SetUp the UserCredentials" id="f2001891-60de-4c3b-bf19-797d91bf6ce8">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

log.info testCase.getName();

def userName = context.expand( '${#Project#UserName}' )

testCase.setPropertyValue("nodeid",testProject.getPropertyValue("nodeIdRTLCS"));
testCase.setPropertyValue("username",testProject.getPropertyValue("UserName"));
testCase.setPropertyValue("password","Password1");
testCase.setPropertyValue("accountoid",null);
testCase.setPropertyValue("AccountID",testProject.getPropertyValue("Node_Account_ID"));
testCase.setPropertyValue("useroid",null);
testCase.setPropertyValue("assertid",null);
testCase.setPropertyValue("SAMLassertion",null);
testCase.setPropertyValue("expectErrTypeSTS","SUCCESS");
testCase.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
</script></con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Feed RightsTokenCreate Request with Valid Data" id="6c39c1cb-6509-4f48-a685-1cbeaa8cb50d">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
//RightsToken Request and properties:
def TsRightsXMLReq = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenCreateRequest").getTestStepByName("RightsTokenCreate Request POST");

testCase.setPropertyValue("nodetype","retailer");
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));

def CallingNodeid = testProject.getPropertyValue("nodeIdRTLCS");


testCase.setPropertyValue("assertionAccountIdFULL", CallingTCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("assertionUserIdFULL", CallingTCase.getPropertyValue("assertionUserIdFULL"));

//SetUp SAML assertion in Request header
//RightsToken Request and properties
TsRightsXMLReq.setPropertyValue("Request", testProject.getPropertyValue("ParamRTCReq"));


testCase.setPropertyValue("assert",CallingTCase.getPropertyValue("assert")); 
testCase.setPropertyValue("AccountID",testCase.getPropertyValue("assertionAccountIdFULL"));
testCase.setPropertyValue("ALID","urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt");
testCase.setPropertyValue("ContentID","urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt" );
testCase.setPropertyValue("SoldAsDisplayName","Avatar BestBuy Special Packaging" );
testCase.setPropertyValue("SoldAsLanguage","en");
testCase.setPropertyValue("SoldAsContentID","urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt");
testCase.setPropertyValue("PPContentProfile1","urn:dece:type:mediaprofile:hd");
testCase.setPropertyValue("PPDiscreteMediaRemaining1","1");
testCase.setPropertyValue("PPDiscreteMediaProfile1","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad1","true");
testCase.setPropertyValue("PPCanStream1","true");
testCase.setPropertyValue("PPContentProfile2","urn:dece:type:mediaprofile:sd");
testCase.setPropertyValue("PPDiscreteMediaRemaining2","0");
testCase.setPropertyValue("PPDiscreteMediaProfile2","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad2","true");
testCase.setPropertyValue("PPCanStream2","true");
testCase.setPropertyValue("PPContentProfile3","urn:dece:type:mediaprofile:pd");
testCase.setPropertyValue("PPDiscreteMediaRemaining3","0");
testCase.setPropertyValue("PPDiscreteMediaProfile3","urn:dece:type:discretemediaformat:securedigital");
testCase.setPropertyValue("PPCanDownLoad3","true");
testCase.setPropertyValue("PPCanStream3","true");
testCase.setPropertyValue("RSCreatedby",CallingNodeid);
testCase.setPropertyValue("RSCreationDate","2011-02-17T15:12:03");
testCase.setPropertyValue("RSValue","urn:dece:type:status:active");
testCase.setPropertyValue("RSDescription","new rights token");
testCase.setPropertyValue("LICAcqBaseLoc","ns3.google.com");
testCase.setPropertyValue("FFWebLocLocation1","https://dl.bestbuy.com/p/aaa");
testCase.setPropertyValue("FFWebLocPreference1","1");
testCase.setPropertyValue("FFWebLocLocation2","https://dl.bestbuy.com/p/bbb");
testCase.setPropertyValue("FFWebLocPreference2","1");
testCase.setPropertyValue("FFManifestLocLocation1","https://dl.bestbuy.com/p/ccc");
testCase.setPropertyValue("FFManifestLocPreference1","3");
testCase.setPropertyValue("FFManifestLocLocation2","https://dl.bestbuy.com/p/ddd");
testCase.setPropertyValue("FFManifestLocPreference2","1");
testCase.setPropertyValue("PINodeID",CallingNodeid);
testCase.setPropertyValue("PIRetailerTransx","RetailerTransaction_1_node"+ testCase.getPropertyValue("nodeid")+ "_RetailerNode");
//def node_Account_ID = URLDecoder.decode(context.expand( '${#Project#Node_Account_ID}' ),"UTF-8");
//def node_User_ID = URLDecoder.decode(context.expand( '${#Project#Node_User_ID}' ),"UTF-8");
//log.info "node_Account_ID--"+node_Account_ID;


testCase.setPropertyValue("PIPurchaseAccount",URLDecoder.decode(testProject.getPropertyValue("Node_Account_ID"),"UTF-8"));
testCase.setPropertyValue("PIPurchaseUser",URLDecoder.decode(testProject.getPropertyValue("Node_User_ID"),"UTF-8"));
testCase.setPropertyValue("PIPurchaseTime","2011-06-24T15:12:03");
testCase.setPropertyValue("VCAllowedUser","urn:dece:userid:org:dece:107999");
testCase.setPropertyValue("expectErrTypeRTCreate","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsToken Create request" id="c6e2dbdb-c173-4a43-9e52-15571f9b9ded">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenCreateRequest")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Information on RightsToken Created" id="e8184c05-4cee-40ba-9ad4-9dca9da528ec">
        <con:settings/>
        <con:config>
          <script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsToken-Create Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Return RightsToken Information" id="a33f4821-d462-4eb6-8e83-0a884090ce22">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Return RightsToken properties:

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
def rightstokenid = URLEncoder.encode(context.expand( '${#TestCase#rightstokenid}' ),"UTF-8");
log.info "RightsTokenID--->"+rightstokenid;

CallingTCase.setPropertyValue("RightsTokenID", testCase.getPropertyValue("rightstokenid"));
testProject.setPropertyValue("RightsTokenID",rightstokenid);
CallingTCase.setPropertyValue("DBrightstokenid", testCase.getPropertyValue("DBrightstokenid"));
CallingTCase.setPropertyValue("RightsResTime",testCase.getPropertyValue("RightsResTime"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>accountoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>accountrowoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVdbc6pKE333V1juR8twUVSsJFXDRUQFBfH68hXCCCiCMiDorz8DRqPZ2fvkfA8pM01Pz+ruRbPmFZl7n+4AhGAUe2FQloW3yv9gu04ydouqsU3YqDUsy66ZdYqumYzZJK1G3caPK2UZoQTKAYrNIH6r0CR2oMgaXTdItlMnOyT7QjLNVaU8gxHCobHLC1kpZ3s/QJ3i2LdKEgWd0EQe6gTmHqJObHUmQBl2sGfHvGGqvL9eURYHRu9uHB86BGG92NCCvm+9WOGeeCWefF5t1Jl4TmDGSQQ/zrTRW+Vjb5qmL2n9JYwcgiZJkiBZAvvYyHN+Vd5Lt83QloNNeF3zZhAGnmX63sXMQSkwdkO7DHwnjLzY3f8hNEVQZB66BjOrZlGN4FeF+DygQPfDSE8gI2TWkGtSt2A63MAIBhYsT3X5rfLrZx287jUiM0CbMNqjL+v/BgkGJ+iHB2jX0C2zG7qfR/ymXO+v0OrIgeUnyDtBNafJwbQgKo8juPGyoYcw+WxULtpfztCNYdD6Ly15JR5xYtjEN5URPAei+P/p12OvrlFmpp/AdzVs7ZqnXne7m6fuTKKcLVfVx9OeCqdvBYRH5yuoe6s/1l+JeufVxyYxWxPnZpU9Djxh3BgFrndwFIuJQHOTjpV11mLrQ06EPhDmix63jJVNVSIHtL6jkNyPk02krk8NEjGusW+Xks1hruzNqCmqmS8uwjizUbNxacx64YJokbvJzj+C/oS2Df7UGFOs2hfUaeNMHQ8joisO9c1o4DNtfT6hgnkpNN2+s/X25w3JRZ6hTKH89pnTYw55XgN4LpLM/18wJCuYsXlf8Pmk2ODXM4bviiwLyYXnwXnigFTmgIP/tkDlnN3R3XkSm5Ic0LQuEHjO34pDBewkQE1FzlX42UzJ+Avoc446wxuNEvBXnKKLqZAuhZmm9cTUNWxpdl5LfrK6iKoCULGZdxVRF2eCboiKAsKrLVOEtZRtlYmSytpSKOEAgpgdLrbExlDKPIuWGWXC0MsJk6wWM2zvnod79bQ2RF/hFYmfHKWJvK4LmtgH+nJu0d0E770M94ewtJxyD5v6B7gFsJuS+ExwUYxdqhhTWhV0s7AZzzZFlvqKhlJeK7KSSmLan00vn7XgOYW392ImGmB8rYVl8F2VXC36yJwzgaKDVHCKzQMxtUc3IIpGpiX+WquhmOqiPlW7ii6nIihsgpj6aE2r7lpyT1Zdy/oG2D42htfEeTfAzwP9ZJ2ZY8mUumC9n1FWXXctj/HMRZg6q3YqaMv+IFzJOIwKNJHjNIABkSBPDdefA0NuxowOHkt7cLjphnvoRiWFCge70yUj21595IzVOSNsdq2x5I3rpu0Ssm/R2/oOyDK0B5Srmba+JHQh8C7N0WC6gF60vMQqo1FNr82U9HkyXQih37J7i+V0UM2WlmaMxpPpfHzJMvW4bV/8uDfietGkrwjOSIVwjKwqQZpdzmgLDL/sbTGfNjoJmRJwFA4Aaes4oocJzPW2VxL2dEXE5AUKn0r8nJcmQJKqoswJmrbputTYkmbJlFIVWbR9XKbzcqH7pRXPCbhTpDlfHZZ0l1wZwC6CaQ2x62hTptpfwJWm+sYsBulhtgkoipQOWm+jpI6l5Ayw5XTC4beIKyUymJqjQ5/MBrMmSR012+9PWDCtZxN6l41cZ3XeOasdbsry4dVZGsCfGQ8ckzHF5iXNEHUFtK/vW6bI07ruW/vssN5bmWDgnhWbQ4MT9a5GTjNBAIOrDRmAztDyIm4VXiz2l0CmmJgWp/XCRctA9UaGmGDSJg902a5p8l85llOs9MyxIw808JVj4pVjItgcq3JboBDT5A9onjqcJB611mzYZw+kthjuSly1Szix5+Nx206NQXVOndOWu9Xmc1YWXL4abJZufR1zpHmxNNjftSRP3wlBs+GflaGiMVOP8M/kFh5TNCypMhWI9fjSJdgoqXL7lbe/XOoNerofT5KTPDUHiDq76+OcTbfjXpMgIunMXFqrk9ZdhNby+h35OiTvxusYJR4H7NMEvmmvSbLeQiu+LfPvsCyUu/jjaMZ/13G5xbNrm8K1c8jFIIphEFfe8125huskWOl5dgd/Oa9rngXNVotkG3yT5zhQF8kGSXVJQLZYlmw02jexd0XxBSIfBhsvPyuXs9eP9d8BWvsOgoENo9opTCwXospfIub1KsuBjlVIGCBohFgu1+l6t81ieUW22izVpFmKZESBp9oNjhUoClTKahiPglEENjGMnqQyRT9JZR1a3sGDuZ7ORQXCqgLFuCRH85TEPvVyMl8CmGDFHeWit0M32gyBvP3BhzlgYh/aiQ9fDu6hKBCBrr9Y9lmosNJ0q1WonT/m9/XZrRTYx/ZyB5Qnw0HcTvhV9NNsh7ll8lvG9W8vB7fwILG9XNTgusaRZ12RPD/6pEvOkztX8pRumO+uXw1PYYmvGd1Psk+edWf8/U6EJTUWXe+3hhzNl+NLcjolRQtauaCMcHiCIkiamEArwarwbIQ7GBD3EMSPBPkd9ZeT7/ZnfEnsBpMYv817TJhysfzBbWwCUX4bkzHhs59e9Z6OxHWLYRZ/Z+N9fGnLEf/1Xmd1rNwPm8f4Jw0j+7Nd38R6OAfnmY8vL3DyVS6/z39ghRXisB4eYWH0GPy7AN8d/my8F/mOJcZsWicx/POTcj6b3iqmZYVJEMtCpTA8zssCZ3w+wM6n029hCgH8caPJ0B9vNAtlOMGTa29W7r7evzvXvIIuFsS7kFdgeatk+HKODw+ch/n8AfD7Ec2IfxvRz5m8/2b+3fJQ06/vw/s/</con:value>
        </con:property>
        <con:property>
          <con:name>assertid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionAccountIdFULL</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUserId</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertionUserIdFULL</con:name>
          <con:value>urn:dece:userid:org:dece:C9A677094C6CBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>assertXML</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>cid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>deceorgid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTCreate</con:name>
          <con:value>SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTS</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeSTSGet</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>ns3.google.com</con:value>
        </con:property>
        <con:property>
          <con:name>loopuntil</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">25</con:value>
        </con:property>
        <con:property>
          <con:name>nodeaccountid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>nodetype</con:name>
          <con:value>retailer</con:value>
        </con:property>
        <con:property>
          <con:name>nodeuserid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>password</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Password1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>QC_Id</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  xmlns:ns4="http://www.decellc.org/schema/2013/10/coordinator"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt" ContentID="urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt"> 	<ns4:SoldAs> 		<ns4:DisplayName Language="en">Avatar BestBuy Special Packaging</ns4:DisplayName> 		<ns4:ContentID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ns4:ContentID> 	</ns4:SoldAs> 	<ns4:RightsProfiles> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:pd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 	</ns4:RightsProfiles> 	<ns4:LicenseAcqBaseLoc>ns3.google.com</ns4:LicenseAcqBaseLoc> 	<ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/aaa</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/bbb</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/ccc</ns4:Location> 		<ns4:Preference>3</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/ddd</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:PurchaseInfo> 		<ns4:NodeID>urn:dece:org:org:dece:RET_CS_1</ns4:NodeID> 		<ns4:RetailerTransaction>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</ns4:RetailerTransaction> 		<ns4:PurchaseAccount>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</ns4:PurchaseAccount> 		<ns4:PurchaseUser>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</ns4:PurchaseUser> 		<ns4:PurchaseTime>2011-06-24T15:12:03</ns4:PurchaseTime> 	</ns4:PurchaseInfo> </ns4:RightsTokenData>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 404 - /rest/1/21/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/RightsToken</h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u>/rest/1/21/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/RightsToken</u></p><p><b>description</b> <u>The requested resource (/rest/1/21/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/RightsToken) is not available.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>targetURL</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_30022 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Retailer_CS</con:value>
        </con:property>
        <con:property>
          <con:name>tokentype</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>05RightsResourceStatusUpdate_Invocation_ByPermission_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>username</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uv_adult_fau_140109_025929</con:value>
        </con:property>
        <con:property>
          <con:name>useroid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>userrowoid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
  </con:testSuite><con:testSuite name="Common Test Steps" disabled="true" id="f91821c5-9a1b-4ef2-a94b-d8fc694ab206">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:properties>
      <con:property>
        <con:name>QC_TestPlanDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestLabDirectory</con:name>
        <con:value/>
      </con:property>
      <con:property>
        <con:name>QC_TestSet</con:name>
        <con:value/>
      </con:property>
    </con:properties>
    <con:reportParameters/>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenGet Request-OLD" searchProperties="true" id="724272e7-ae84-46fb-be6a-5f7c65dcc62d">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="dae9bf45-8d41-4177-bda5-f3b756369ac6" disabled="true">
        <con:settings/>
        <con:config>
          <script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

//log.info callTSuitename.getName();
//log.info callTCasename.getName();

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));
//testCase.setPropertyValue("nodeid","0701");
//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("assert"));
//headers.put("Authorization","SAML2 assertion=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");

testRunner.testCase.getTestStepByName("RightsTokenGet byTokenID").testRequest.setRequestHeaders(headers);


//SetUp test properties

testCase.setPropertyValue("AccountID",CallingTCase.getPropertyValue("AccountID"));
testCase.setPropertyValue("RightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
testCase.setPropertyValue("PolicyLockerViewAllConsent",CallingTCase.getPropertyValue("PolicyLockerViewAllConsent"));
//Testing RightTokenCreate Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTCReq","OK");
CallingTCase.setPropertyValue("FeedRTCReq",testCase.getPropertyValue("FeedRTCReq"));</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="pem set" id="3216b7d0-390f-47f5-9b6c-43ecc360bf78">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("Node_OID");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("E2E").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );
assert "$runnerTC.status" == "FINISHED";

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenGet Request");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsTokenGet Request"><con:settings/><con:config service="RightsTokenGet" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/RightsToken/{RightsTokenID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="RightsTokenGet Request" mediaType="application/xml" sslKeystore="RET_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://qa.p.uvvu.com:7001</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="AccountID" value="${#Project#Encoded_NodeAcc_Id}${#Project#Node_Account_ID}"/>
  <con:entry key="RightsTokenID" value="${#Project#RightsTokenID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_10001_RightsTokenGet_RTR_FUNC_with_Valid_Accountid_and_RightsTokenId</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>RightsTokenGet_ByRightsTokenID_Retailer_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:A49F28BF260F2548E0401F0A0599026A</con:value>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C8008537AC54EA30E0401F0A07993CE8</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>0799</con:value>
        </con:property>
        <con:property>
          <con:name>PolicyLockerViewAllConsent</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>keyStorePath</con:name><con:value>C:\certs\ISC_R1_Certs\ISC_R1_Certs\RET_CS_1_concat.pem</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rights Create Data Validation" searchProperties="true" id="b86e518b-80d9-49ed-a32f-0d5399a3f113">
      <con:settings/>
      <con:testStep type="groovy" name="Validate DB for RightsToken" id="3d93ca7b-7e23-4fdb-8d61-93a60d1060e8">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )

mydbRights = new dbRightsToken(log,targetSystem);

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

testCase.setPropertyValue("RightsReqXml",CallingTCase.getPropertyValue("RightsReqXml"));

//getRequestContentAsXml

testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid",CallingTCase.getPropertyValue("DBrightstokenid"));
testCase.setPropertyValue("Accountid",CallingTCase.getPropertyValue("Accountid"));


// Fetch RightsToken info from RIGHTS_TOKEN table
RT_Data = mydbRights.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
//RT_Data2 = mydbRights.rightstokenSoldAsGetRow(testCase.getPropertyValue("DBrightstokenid"));
//RT_Data3 = mydbRights.rightstokenPMPPGetRow(testCase.getPropertyValue("DBrightstokenid"));
//RT_Data4 = mydbRights.rightstokenFFLocGetRow(testCase.getPropertyValue("DBrightstokenid"));
//RT_Data5 = mydbRights.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
//log.info RT_Data2.toString(); 
log.info RT_Data.toString();

testCase.setPropertyValue("DbResultRTXml",RT_Data.toString());

//log.info testCase.getPropertyValue("DbResultRTXml");
//log.info testCase.getPropertyValue("RightsReqXml");

// Assert RightsToken Information Expected &amp; Actual 

def Val_DbResultRTXml = new XmlSlurper().parseText(testCase.getPropertyValue("DbResultRTXml"));
def Val_RightsReqXml =  new XmlSlurper().parseText(testCase.getPropertyValue("RightsReqXml"));

// Assert RightsTokenID

assert Val_DbResultRTXml.ResultSet.Row.RIGHTS_TOKEN_OID == testCase.getPropertyValue("DBrightstokenid");

//Assert ALID information
assert  Val_DbResultRTXml.ResultSet.Row.ALID == Val_RightsReqXml.@ALID;

// Assert CID information 
assert  Val_DbResultRTXml.ResultSet.Row.CONTENT_ID == Val_RightsReqXml.@ContentID;

//Assert NodeID information
//Val_RightsReqXml.PurchaseInfo.NodeID 
assert  Val_DbResultRTXml.ResultSet.Row.NODE_OID.toInteger() == Val_RightsReqXml.PurchaseInfo.NodeID.toString().tokenize(':').last().toInteger();</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>RightsTokenCreate_With_Valid_AccountId</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Staging Rights GET</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:A251B66FF422B435E0401F0A05991F38</con:value>
        </con:property>
        <con:property>
          <con:name>Accountid</con:name>
          <con:value>urn:dece:accountid:org:dece:A1C0ED690DFF822FE0401F0A07993D5E</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>A251B66FF422B435E0401F0A05991F38</con:value>
        </con:property>
        <con:property>
          <con:name>DbResultRTXml</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>A251B66FF422B435E0401F0A05991F38</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>A1C0C00EDD42CF8AE0401F0A0599345D</ACCOUNT_OID>
      <USER_OID>A1C0C00EDD47CF8AE0401F0A0599345D</USER_OID>
      <RIGHTS_LOCKER_OID>A1C0C00EDD45CF8AE0401F0A0599345D</RIGHTS_LOCKER_OID>
      <NODE_OID>0799</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>A1C0ED690DFF822FE0401F0A07993D5E</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_node0799_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>A1C0ED690E01822FE0401F0A07993D5E</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>https://dl.bestbuy.com/p/bb93827398sdjdhds</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2011-05-02 20:24:26.67</CREATED_DATE>
      <CREATED_BY>0799</CREATED_BY>
      <UPDATED_DATE>null</UPDATED_DATE>
      <UPDATED_BY>null</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value>&lt;/ns4:RightsTokenData></con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenStatusUpdate Request" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="159a4937-db0c-4c86-9818-8f196d7dee38">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Properties" id="0fdf5db3-bc1c-4fe8-ba20-6280d14810c2">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");
def v2 = context.expand( '${#Project#V2}' )
def sAML = context.expand( '${#Project#SAML}' )


//log.info callTSuitename.getName();
//log.info callTCasename.getName();

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

//SetUp SAML assertion in Request header
def eTag = context.expand( '${#Project#ETag}' )


def headers = new StringToStringMap()

if (v2!='06')
{
 headers.put("If-Match",eTag);
 testRunner.testCase.getTestStepByName("RightsTokenStatusUpdateRequest").testRequest.setRequestHeaders(headers);
 headers.put("Authorization",sAML);
 testRunner.testCase.getTestStepByName("RightsTokenStatusUpdateRequest").testRequest.setRequestHeaders(headers);
  def urnNode_Account_ID = context.expand( '${#Project#Node_Account_ID}' )
	testCase.setPropertyValue("encodedAccountID",urnNode_Account_ID);
	testCase.setPropertyValue("encodedRightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
}
else
{
 headers.put("If-Match",eTag);
 testRunner.testCase.getTestStepByName("RightsTokenStatusUpdateRequest").testRequest.setRequestHeaders(headers);
 headers.put("Authorization",sAML);
 testRunner.testCase.getTestStepByName("RightsTokenStatusUpdateRequest").testRequest.setRequestHeaders(headers);
 def urnNode_Account_ID = context.expand( '${#Project#Node_Account_ID}' )
	testCase.setPropertyValue("encodedAccountID",urnNode_Account_ID);
	testCase.setPropertyValue("encodedRightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
}

// setUp Node Properties


testCase.setPropertyValue("nodeid",testProject.getPropertyValue("Node_ID"));


	
	

//SetUp test properties

testCase.setPropertyValue("AccountID",CallingTCase.getPropertyValue("AccountID"));
//testCase.setPropertyValue("encodedAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("AccountID"),"UTF-8"));

testCase.setPropertyValue("ResourceStatusValue",CallingTCase.getPropertyValue("ResourceStatusValue"));


//Testing RightTokenCreate Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTSUReq","OK");
CallingTCase.setPropertyValue("FeedRTSUReq",CallingTCase.getPropertyValue("FeedRTSUReq"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsTokenGet for ETag Value" id="47f836cd-c54a-4994-bbd6-519d108278af" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenGet Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;

RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsToken-Get Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config></con:testStep>
      <con:testStep type="groovy" name="pem set" id="856820a8-df95-4004-880e-86f3805c90ec">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("Node_OID");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("E2E").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenStatusUpdateRequest");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsTokenStatusUpdateRequest" id="31479a4e-ee58-4e8c-a51e-3f784d115edd">
        <con:settings/>
        <con:config service="RightsStatusUpdate" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/RightsToken/{RightsTokenID}/ResourceStatus/Current/Update" methodName="RightsStatusUpdate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="RightsTokenStatusUpdateRequest" mediaType="application/xml" postQueryString="false" sslKeystore="RET_CS_1_concat.pem" timeout="" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI="/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting>
              <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings>
            <con:endpoint>${#Project#Provision_HostName}</con:endpoint>
            <con:request><![CDATA[<dece:ResourceStatus xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd "> 	<dece:Current> 		<dece:Value>${#TestCase#ResourceStatusValue}</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:request>
            <con:assertion type="Response SLA Assertion" name="Response SLA" id="1dfcf6ab-90b8-490c-91f4-db89c6a1b8e1">
              <con:configuration><SLA>10000</SLA></con:configuration>
            </con:assertion>
            <con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
  <con:entry key="AccountID" value="${#TestCase#encodedAccountID}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#encodedRightsTokenID}"/>
</con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep><con:tearDownScript><![CDATA[def RightsTCLogs;
def testSteps = new ArrayList();
def testSteplog;
def date = new Date(); 
def RightsTClogFile = new File ("c:\\RightsLog\\RightsTClogFile.txt");

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

count  = 0;

for( r in testRunner.results )
{
   count++ ;
     if (r.toString().indexOf ("Request") != -1)
   {    
   	   def rawRequest = new String( r.rawRequestData );   		     	

   	    testSteplog = "\n\n" + "[" + count.toString() +  "] ###################" + "\n\n" +       
       	"TimeStamp :" + r.getTimeStamp() + "[$date]" +"------TestStep < " + r.testStep.name + " > finished with status < " + r.status + " > Time Taken ::< " + r.timeTaken + " > ms " + "\n\n" +   "---------"+ " CallingTestCase Name :  " + CallingTCase.getName() + "\n\n" + "------------"+ r.testStep.name + "Request Message --------" + "\n\n" + rawRequest.tokenize('\n').last() +"\n\n" + "-------------" + r.testStep.name +" Response Message Header--------" +"\n\n"+ r.getResponseHeaders()+ "\n\n" + " Response Message Body--------" +"\n\n"+ r.testStep.getProperty("response").getValue()+ "\n\n" +"-----"+ r.testStep.name + " Assertions-------" +"\n\n" +   r.messages +
        	" ###################" + "\n\n" ;
   }
    else
   {	
   	 testSteplog = "\n\n" + "[" + count.toString() +  "] ###################### " + "\n\n" +
       "TimeStamp :" + r.getTimeStamp() + "[$date]" + "------TestStep < " + r.testStep.name + " > finished with status < " + r.status + " > Time Taken ::< " + r.timeTaken + " > ms " +"\n\n" +   "---------"+ " CallingTest Case Name :   " + CallingTCase.getName() +
   	  " ###################" + "\n\n";	
   }
   
   testSteps.add(testSteplog); 
   
RightsTCLogs = testSteplog.toString();
log.info RightsTCLogs;
//RightsTClogFile << RightsTCLogs;
}]]></con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>urn:dece:org:org:dece:dece:cs</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsBundleID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_30022 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Retailer_CS</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>05RightsResourceStatusUpdate_Invocation_ByPermission_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:E514157F7AD32B0BE0401F0A07997329</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTSUReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>ResourceStatusValue</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:status:pending</con:value>
        </con:property>
        <con:property>
          <con:name>Request</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="${Coordinator_Schema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${Coordinator_Schema} dece.xsd "> 	<dece:Current> 		<dece:Value>${#TestCase#ResourceStatusValue}</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>47f836cd-c54a-4994-bbd6-519d108278af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase>
    <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenCreateRequest" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="43695d25-c06b-4c28-bde2-537745d50bdc">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Properties" id="de7ddc22-59c0-4cb3-9831-88bf2f0deb48">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");
def v2 = context.expand( '${#Project#V2}' )

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);



def headers = new StringToStringMap()
//headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("assert"));
//testRunner.testCase.getTestStepByName("RightsTokenCreate Request POST").testRequest.setRequestHeaders(headers);

// setUp Node Properties

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));


//SetUp test properties
testCase.setPropertyValue("SAMLassertion",CallingTCase.getPropertyValue("assert"));


testCase.setPropertyValue("AccountID",CallingTCase.getPropertyValue("AccountID"));
def node_Account_ID = context.expand( '${#Project#Node_Account_ID}' )
log.info"Node_Account_ID:"+node_Account_ID;


testCase.setPropertyValue("encodedAccountID",node_Account_ID);
testCase.setPropertyValue("ALID",CallingTCase.getPropertyValue("ALID"));
testCase.setPropertyValue("ContentID",CallingTCase.getPropertyValue("ContentID"));
testCase.setPropertyValue("SoldAsDisplayName",CallingTCase.getPropertyValue("SoldAsDisplayName"));
testCase.setPropertyValue("SoldAsLanguage",CallingTCase.getPropertyValue("SoldAsLanguage"));
testCase.setPropertyValue("SoldAsContentID",CallingTCase.getPropertyValue("SoldAsContentID"));
testCase.setPropertyValue("SoldAsBundleID",CallingTCase.getPropertyValue("SoldAsBundleID"));
testCase.setPropertyValue("PPContentProfile1",CallingTCase.getPropertyValue("PPContentProfile1"));
testCase.setPropertyValue("PPDiscreteMediaRemaining1",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining1"));
testCase.setPropertyValue("PPDiscreteMediaProfile1",CallingTCase.getPropertyValue("PPDiscreteMediaProfile1"));
testCase.setPropertyValue("PPCanDownLoad1",CallingTCase.getPropertyValue("PPCanStream1"));
testCase.setPropertyValue("PPCanStream1",CallingTCase.getPropertyValue("PPCanStream1"));
testCase.setPropertyValue("PPContentProfile2",CallingTCase.getPropertyValue("PPContentProfile2"));
testCase.setPropertyValue("PPDiscreteMediaRemaining2",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining2"));
testCase.setPropertyValue("PPDiscreteMediaProfile2",CallingTCase.getPropertyValue("PPDiscreteMediaProfile2"));
testCase.setPropertyValue("PPCanDownLoad2",CallingTCase.getPropertyValue("PPCanDownLoad2"));
testCase.setPropertyValue("PPCanStream2",CallingTCase.getPropertyValue("PPCanStream2"));
testCase.setPropertyValue("PPContentProfile3",CallingTCase.getPropertyValue("PPContentProfile3"));
testCase.setPropertyValue("PPDiscreteMediaRemaining3",CallingTCase.getPropertyValue("PPDiscreteMediaRemaining3"));
testCase.setPropertyValue("PPDiscreteMediaProfile3",CallingTCase.getPropertyValue("PPDiscreteMediaProfile3"));
testCase.setPropertyValue("PPCanDownLoad3",CallingTCase.getPropertyValue("PPCanDownLoad3"));
testCase.setPropertyValue("PPCanStream3",CallingTCase.getPropertyValue("PPCanStream3"));
testCase.setPropertyValue("RSCreatedby",CallingTCase.getPropertyValue("RSCreatedby"));
testCase.setPropertyValue("RSCreationDate",CallingTCase.getPropertyValue("RSCreationDate"));
testCase.setPropertyValue("RSValue",CallingTCase.getPropertyValue("RSValue"));
testCase.setPropertyValue("RSDescription",CallingTCase.getPropertyValue("RSDescription"));
testCase.setPropertyValue("LICAcqBaseLoc",CallingTCase.getPropertyValue("LICAcqBaseLoc"));
testCase.setPropertyValue("FFWebLocLocation1",CallingTCase.getPropertyValue("FFWebLocLocation1"));
testCase.setPropertyValue("FFWebLocPreference1",CallingTCase.getPropertyValue("FFWebLocPreference1"));
testCase.setPropertyValue("FFWebLocLocation2",CallingTCase.getPropertyValue("FFWebLocLocation2"));
testCase.setPropertyValue("FFWebLocPreference2",CallingTCase.getPropertyValue("FFWebLocPreference2"));
testCase.setPropertyValue("FFManifestLocLocation1",CallingTCase.getPropertyValue("FFManifestLocLocation1"));
testCase.setPropertyValue("FFManifestLocPreference1",CallingTCase.getPropertyValue("FFManifestLocPreference1"));
testCase.setPropertyValue("FFManifestLocLocation2",CallingTCase.getPropertyValue("FFManifestLocLocation2"));
testCase.setPropertyValue("FFManifestLocPreference2",CallingTCase.getPropertyValue("FFManifestLocPreference2"));
testCase.setPropertyValue("PINodeID","urn:dece:org:org:dece:"+CallingTCase.getPropertyValue("PINodeID"));
testCase.setPropertyValue("PIRetailerTransx",CallingTCase.getPropertyValue("PIRetailerTransx"));


testCase.setPropertyValue("PIPurchaseAccount",CallingTCase.getPropertyValue("PIPurchaseAccount"));
testCase.setPropertyValue("PIPurchaseUser",CallingTCase.getPropertyValue("PIPurchaseUser"));
testCase.setPropertyValue("PIPurchaseTime",CallingTCase.getPropertyValue("PIPurchaseTime"));
testCase.setPropertyValue("VCAllowedUser",CallingTCase.getPropertyValue("VCAllowedUser"));
testCase.setPropertyValue("RTC_rcStatusHistory",CallingTCase.getPropertyValue("RTC_rcStatusHistory"));

//Testing RightTokenCreate Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTCReq","OK");
CallingTCase.setPropertyValue("FeedRTCReq",CallingTCase.getPropertyValue("FeedRTCReq"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="pem set" id="db5384a1-c9c3-405d-a2e3-27c91fc85ae9">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("Node_OID");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("E2E").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

assert "$runnerTC.status" == "FINISHED";

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenCreate Request POST");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsTokenCreate Request POST" id="74d9d803-0dd8-469e-a445-05cac7927754">
        <con:settings/>
        <con:config service="RightsTokenCreate" methodName="RightsTokenCreate Request" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/RightsToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="RightsTokenCreate Request POST" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_CS_1_concat.pem">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting>
            </con:settings>
            <con:encoding>UTF-8</con:encoding>
            <con:endpoint>${#Project#Provision_HostName}</con:endpoint>
            <con:request><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  xmlns:ns4="${#Project#SchemaNameSpace}"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="${#TestCase#ALID}" ContentID="${#TestCase#ContentID}"> 	<ns4:SoldAs> 		<ns4:DisplayName Language="${#TestCase#SoldAsLanguage}">${#TestCase#SoldAsDisplayName}</ns4:DisplayName> 		<ns4:ContentID>${#TestCase#SoldAsContentID}</ns4:ContentID> 	</ns4:SoldAs> 	<ns4:RightsProfiles> 		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile1}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad1}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream1}</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile2}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad2}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream2}</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile3}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad3}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream3}</ns4:CanStream> 		</ns4:PurchaseProfile> 	</ns4:RightsProfiles> 	<ns4:LicenseAcqBaseLoc>${#TestCase#LICAcqBaseLoc}</ns4:LicenseAcqBaseLoc> 	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFWebLocLocation1}</ns4:Location> 		<ns4:Preference>${#TestCase#FFWebLocPreference1}</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFWebLocLocation2}</ns4:Location> 		<ns4:Preference>${#TestCase#FFWebLocPreference2}</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFManifestLocLocation1}</ns4:Location> 		<ns4:Preference>${#TestCase#FFManifestLocPreference1}</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFManifestLocLocation2}</ns4:Location> 		<ns4:Preference>${#TestCase#FFManifestLocPreference2}</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:PurchaseInfo> 		<ns4:NodeID>${#TestCase#PINodeID}</ns4:NodeID> 		<ns4:RetailerTransaction>${#TestCase#PIRetailerTransx}</ns4:RetailerTransaction> 		<ns4:PurchaseAccount>${#TestCase#PIPurchaseAccount}</ns4:PurchaseAccount> 		<ns4:PurchaseUser>${#TestCase#PIPurchaseUser}</ns4:PurchaseUser> 		<ns4:PurchaseTime>${#TestCase#PIPurchaseTime}</ns4:PurchaseTime> 	</ns4:PurchaseInfo> </ns4:RightsTokenData>]]></con:request>
            <con:assertion type="GroovyScriptAssertion" id="e6bc719d-c7a8-4b7e-bc84-f5a84edea3e5">
              <con:configuration><scriptText>// check for the HTTP Response code 
log.info  messageExchange.responseHeaders["#status#"]</scriptText></con:configuration>
            </con:assertion>
            <con:credentials>
              <con:username/>
            <con:authType>Global HTTP Settings</con:authType></con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters><entry key="AccountID" value="${#TestCase#encodedAccountID}" xmlns="http://eviware.com/soapui/config"/></con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:tearDownScript><![CDATA[def RightsTCLogs;
def testSteps = new ArrayList();
def testSteplog;
def date = new Date(); 
def RightsTClogFile = new File ("c:\\RightsLog\\RightsTClogFile.txt");

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

count  = 0;

for( r in testRunner.results )
{
   count++ ;
     if (r.toString().indexOf ("Request") != -1)
   {    
   	   def rawRequest = new String( r.rawRequestData );   		     	

   	    testSteplog = "\n\n" + "[" + count.toString() +  "] ###################" + "\n\n" +       
       	"TimeStamp :" + r.getTimeStamp() + "[$date]" +"------TestStep < " + r.testStep.name + " > finished with status < " + r.status + " > Time Taken ::< " + r.timeTaken + " > ms " + "\n\n" +   "---------"+ " CallingTestCase Name :  " + CallingTCase.getName() + "\n\n" + "------------"+ r.testStep.name + "Request Message --------" + "\n\n" + rawRequest.tokenize('\n').last() +"\n\n" + "-------------" + r.testStep.name +" Response Message Header--------" +"\n\n"+ r.getResponseHeaders()+ "\n\n" + " Response Message Body--------" +"\n\n"+ r.testStep.getProperty("response").getValue()+ "\n\n" +"-----"+ r.testStep.name + " Assertions-------" +"\n\n" +   r.messages +
        	" ###################" + "\n\n" ;
   }
    else
   {	
   	 testSteplog = "\n\n" + "[" + count.toString() +  "] ###################### " + "\n\n" +
       "TimeStamp :" + r.getTimeStamp() + "[$date]" + "------TestStep < " + r.testStep.name + " > finished with status < " + r.status + " > Time Taken ::< " + r.timeTaken + " > ms " +"\n\n" +   "---------"+ " CallingTest Case Name :   " + CallingTCase.getName() +
   	  " ###################" + "\n\n";	
   }
   
   testSteps.add(testSteplog); 
   
RightsTCLogs = testSteplog.toString();
log.info RightsTCLogs;
//RightsTClogFile << RightsTCLogs;
}]]></con:tearDownScript>
      <con:properties>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value>urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value>
        </con:property>
        <con:property>
          <con:name>ContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/ccc</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/ddd</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference1</con:name>
          <con:value>3</con:value>
        </con:property>
        <con:property>
          <con:name>FFManifestLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation1</con:name>
          <con:value>https://dl.bestbuy.com/p/aaa</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocLocation2</con:name>
          <con:value>https://dl.bestbuy.com/p/bbb</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>FFWebLocPreference2</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>LICAcqBaseLoc</con:name>
          <con:value>ns3.google.com</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>PINodeID</con:name>
          <con:value>urn:dece:org:org:dece:RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseAccount</con:name>
          <con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseTime</con:name>
          <con:value>2011-06-24T15:12:03</con:value>
        </con:property>
        <con:property>
          <con:name>PIPurchaseUser</con:name>
          <con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value>
        </con:property>
        <con:property>
          <con:name>PIRetailerTransx</con:name>
          <con:value>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanDownLoad3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream1</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream2</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPCanStream3</con:name>
          <con:value>true</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile1</con:name>
          <con:value>urn:dece:type:mediaprofile:hd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile2</con:name>
          <con:value>urn:dece:type:mediaprofile:sd</con:value>
        </con:property>
        <con:property>
          <con:name>PPContentProfile3</con:name>
          <con:value>urn:dece:type:mediaprofile:pd</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile1</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile2</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaProfile3</con:name>
          <con:value>urn:dece:type:discretemediaformat:securedigital</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining1</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining2</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>PPDiscreteMediaRemaining3</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreatedby</con:name>
          <con:value>RET_CS_1</con:value>
        </con:property>
        <con:property>
          <con:name>RSCreationDate</con:name>
          <con:value>2011-02-17T15:12:03</con:value>
        </con:property>
        <con:property>
          <con:name>RSDescription</con:name>
          <con:value>new rights token</con:value>
        </con:property>
        <con:property>
          <con:name>RSValue</con:name>
          <con:value>urn:dece:type:status:active</con:value>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SAMLassertion</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=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</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsBundleID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>SoldAsContentID</con:name>
          <con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsDisplayName</con:name>
          <con:value>Avatar BestBuy Special Packaging</con:value>
        </con:property>
        <con:property>
          <con:name>SoldAsLanguage</con:name>
          <con:value>en</con:value>
        </con:property>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>RightsTokenCreate_With_Valid_AccountId</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Staging Rights UPDATE</con:value>
        </con:property>
        <con:property>
          <con:name>VCAllowedUser</con:name>
          <con:value>urn:dece:userid:org:dece:107999</con:value>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Extract RightsTokenStatus Update Information" searchProperties="true" id="bfdd48c3-a913-4ff2-9fc6-11fcfd0e0625">
      <con:settings/>
      <con:testStep type="groovy" name="Extract RightsToken Request XML" id="5a270df3-995b-4cf6-84c9-cbb1e1c237fb">
        <con:settings/>
        <con:config><script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);

def RT_RequestBody = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
log.info rawData
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
callingTCase.setPropertyValue("RightsReqXml",testCase.getPropertyValue("RightsReqXml"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract RightsStatusUpdate Response" id="4cc3dd39-e0eb-4e23-8146-203f7b157b75">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName)

def RightsResHeader = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName('RightsTokenStatusUpdateRequest').httpRequest.response.getResponseHeaders(); 
def RightsResXml = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName('RightsTokenStatusUpdateRequest').httpRequest.response.getContentAsString();
def RightsResTime = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName('RightsTokenStatusUpdateRequest').httpRequest.response.getTimeTaken();
def RightsResHttpStatus = RightsResHeader.getAt("#status#");
def RightsResLocation = RightsResHeader.getAt("Location");
log.info RightsResHttpStatus[0];
log.info RightsResLocation;

log.info "Response Time : $RightsResTime:ms";

testCase.setPropertyValue("RightsResXml",RightsResXml);
testCase.setPropertyValue("RightsResTime",RightsResTime.toString());

if(RightsResHttpStatus[0] == "HTTP/1.1 303 See Other")
{
def RTKLoc = RightsResLocation[0].tokenize('/')
log.info RTKLoc[RTKLoc.indexOf("RightsToken").next()];
//testCase.setPropertyValue("rightstokenid",RTKLoc[RTKLoc.indexOf("RightsToken").next()] );

def decodeRTKLoc = URLDecoder.decode(RTKLoc[RTKLoc.indexOf("RightsToken").next()], "UTF-8");
log.info "decodeRTKLoc=="+decodeRTKLoc;
testCase.setPropertyValue("rightstokenid",decodeRTKLoc);

log.info RTKLoc[RTKLoc.indexOf("Account").next()];
def decodeAccountIDLoc = URLDecoder.decode(RTKLoc[RTKLoc.indexOf("Account").next()], "UTF-8");
log.info "decodeAccountIDLoc=="+decodeAccountIDLoc;
testCase.setPropertyValue("Accountid",decodeAccountIDLoc);

//testCase.setPropertyValue("Accountid",RTKLoc[RTKLoc.indexOf("Account").next()]);

//com.eviware.soapui.support.UISupport.showInfoMessage("RightsToken has been Created"); 
}
else{
log.info " RightsToken Create failed - [ " + RightsResHttpStatus[0] + " ]"
}
// Returns Rights token , Account id
testCase.setPropertyValue("DBrightstokenid",testCase.getPropertyValue("rightstokenid").tokenize(':').last());
callingTCase.setPropertyValue("rightstokenid",testCase.getPropertyValue("rightstokenid"));
callingTCase.setPropertyValue("DBrightstokenid",testCase.getPropertyValue("DBrightstokenid"));
callingTCase.setPropertyValue("RightsResXml",testCase.getPropertyValue("RightsResXml"));
callingTCase.setPropertyValue("RightsReqXml",testCase.getPropertyValue("RightsReqXml"));
callingTCase.setPropertyValue("RightsResTime",testCase.getPropertyValue("RightsResTime"));
//callingTCase.setPropertyValue("Accountid",testCase.getPropertyValue("Accountid"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 403 - </h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>Access to the specified resource () has been forbidden.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>10</con:value>
        </con:property>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_30022 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Retailer_CS</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>05RightsResourceStatusUpdate_Invocation_ByPermission_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>RTObjType</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>Accountid</con:name>
          <con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    
    
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rights StatusUpdate Data Validation" searchProperties="true" id="a372cfa8-5a8f-440e-bfb6-641f8c168ac3">
      <con:settings/>
      <con:testStep type="groovy" name="Extract DB results for RightsToken Status Update" id="888f2e47-d36e-4b14-8f38-43d2badae713">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import dbUtils.dbSAMLAssertion;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def targetSystem = context.expand( '${#Project#targetSystem}' )

mydbRights = new dbRightsToken(log,targetSystem);

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
testCase.setPropertyValue("RightsReqXml",CallingTCase.getPropertyValue("RightsReqXml"));

//getRequestContentAsXml

testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("DBrightstokenid",CallingTCase.getPropertyValue("DBrightstokenid"));
testCase.setPropertyValue("Accountid",CallingTCase.getPropertyValue("Accountid"));
testCase.setPropertyValue("RTC_rcStatusHistory",CallingTCase.getPropertyValue("RTC_rcStatusHistory"));

//String testrtk = "9D1475D39B66C125E0401F0A07995462";

// Fetch RightsToken info from RIGHTS_TOKEN table

RT_Data = mydbRights.rightstokenGetRow(testCase.getPropertyValue("DBrightstokenid"));
//RT_Data2 = mydbRights.rightstokenSoldAsGetRow(testCase.getPropertyValue("DBrightstokenid"));
//RT_Data3 = mydbRights.rightstokenPMPPGetRow(testCase.getPropertyValue("DBrightstokenid"));
//RT_Data4 = mydbRights.rightstokenFFLocGetRow(testCase.getPropertyValue("DBrightstokenid"));
//RT_Data5 = mydbRights.rightstokenStatusHistoryGetRow(testCase.getPropertyValue("DBrightstokenid"));
log.info RT_Data.toString();
//log.info RT_Data5.toString();

testCase.setPropertyValue("DbResultRTXml",RT_Data.toString());
//testCase.setPropertyValue("DbResultRT-SoldAsXml",RT_Data2.toString());
//testCase.setPropertyValue("DbResultRT-PMPPXml",RT_Data3.toString());
//testCase.setPropertyValue("DbResultRT-FFLocXml",RT_Data4.toString());
//testCase.setPropertyValue("DbResultRT-StatusHistoryXml",RT_Data5.toString());</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Data Validation DB - RightsTokenStatusUpdate Response" id="ed39f811-ad31-42e6-b62d-767ef8aeb864">
        <con:settings/>
        <con:config>
          <script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import dbUtils.dbSAMLAssertion;
import groovy.*
import groovy.xml.*
import groovy.util.*
import groovy.time.*
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

// Assert RightsToken Information Expected &amp; Actual 

def actRTC_PPContentProfile  = new ArrayList();
def actRTC_PPDMR  = new ArrayList();
def actRTC_PPCanDownload  = new ArrayList();
def actRTC_PPCanStream  = new ArrayList();
def actRTC_PPDMProfile  = new ArrayList();
def actRTC_LicAcqBaseLoc = new ArrayList();
def actRTC_FFWebLoc_Location = new ArrayList();
def actRTC_FFWebLoc_Pref = new ArrayList();
def actRTC_FFManifestLoc_Location = new ArrayList();
def actRTC_FFManifestLoc_Pref = new ArrayList();
def expectRTC_PPContentProfile  = new ArrayList();
def expectRTC_PPDMR  = new ArrayList();
def expectRTC_PPCanDownload  = new ArrayList();
def expectRTC_PPCanStream  = new ArrayList();
def expectRTC_PPDMProfile  = new ArrayList();
def expectRTC_LicAcqBaseLoc = new ArrayList();
def expectRTC_FFWebLoc_Location = new ArrayList();
def expectRTC_FFWebLoc_Pref = new ArrayList();
def expectRTC_FFManifestLoc_Location = new ArrayList();
def expectRTC_FFManifestLoc_Pref = new ArrayList();

// RightsToken Update Request Information 

def Val_RightsReqXml =  new XmlSlurper().parseText(testCase.getPropertyValue("RightsReqXml"));

// Expected Rights Status 

	expectRTC_RS_Value = (Val_RightsReqXml).toString();

	log.info "Expected RightstokenStatus :      " +  expectRTC_RS_Value;

// DB Rights Token Information 

def Val_DbResultRTXml = new XmlSlurper().parseText(testCase.getPropertyValue("DbResultRTXml"));

// Rights Status 
		
		actRTC_RS_Value = "urn:dece:type:status:"+ Val_DbResultRTXml.ResultSet.Row.STATUS_ID;
		actRTC_RS_CreateDateValue = (Val_DbResultRTXml.ResultSet.Row.CREATED_DATE).toString();
		
		log.info "Actual RightstokenStatus :     " + actRTC_RS_Value;
		log.info "RightsTokenStatus Updated Date  :  " + actRTC_RS_CreateDateValue.tokenize(" ").first();
		log.info "RightsTokenStatus Updated Time  :  " + actRTC_RS_CreateDateValue.tokenize(" ").last();
		
// Assert Rights ResourceStatus 
	
		log.info "Rights TokenStatusUpdate ResourceStatus Value Expected : [$expectRTC_RS_Value] - Actual Recieved: [$actRTC_RS_Value]";
		 assert expectRTC_RS_Value ==  actRTC_RS_Value;</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_00022_RightsResourceStatusUpdate_FUNC_RTL_verify_UpdateBy_information_recorded</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>02RightsResourceStatusUpdate_RET_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>Accountid</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>DbResultRTXml</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>EF8F51ED2E1C2ED2E0401F0A07991D59</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EF900A05D354E6F7E0401F0A0599234B</ACCOUNT_OID>
      <USER_OID>EF8F74F6BDA7D23CE0401F0A079970D1</USER_OID>
      <RIGHTS_LOCKER_OID>EF900A05D35BE6F7E0401F0A0599234B</RIGHTS_LOCKER_OID>
      <NODE_OID>CCE44AF42FD7063BE0401F0A07991776</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>EF900A05D353E6F7E0401F0A0599234B</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>EF8F74F6BDA6D23CE0401F0A079970D1</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>null</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>ns3.google.com</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2014-01-09 19:59:34.447</CREATED_DATE>
      <CREATED_BY>CCE44AF42FD7063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>2014-01-09 19:59:35.513</UPDATED_DATE>
      <UPDATED_BY>CCE44AF42FD7063BE0401F0A07991776</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<dece:ResourceStatus xmlns:dece="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.decellc.org/schema/2013/10/coordinator dece.xsd "> 	<dece:Current> 		<dece:Value>urn:dece:type:status:pending</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RTObjType</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DbResultRT-SoldAsXml</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DbResultRT-PMPPXml</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DbResultRT-FFLocXml</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>DbResultRT-StatusHistoryXml</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RTG_rcStatusHistory</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RTC_rcStatusHistory</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsResourceStatusUpdate Response Validation" searchProperties="true" id="35dc8b52-f6a8-4c9f-8478-94c62cac7cdf">
      <con:settings/>
      <con:testStep type="groovy" name="ValidateRightsTokenStatusUpdate RESPONSE" id="01b4cf98-6c19-4072-84b0-15f6b190c23f">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

String major = context.expand( '${#Project#V1}' );
String minor = context.expand( '${#Project#V2}' );

testCase.setPropertyValue("errorStatusCode",null);
testCase.setPropertyValue("errorReason",null);
testCase.setPropertyValue("errorID", null);
def ValerrorID;
def QAResp_ErrorID;

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("rightstokenid"));
testCase.setPropertyValue("Accountid",CallingTCase.getPropertyValue("Accountid"));
testCase.setPropertyValue("expectErrTypeRTRSUpdate",CallingTCase.getPropertyValue("expectErrTypeRTRSUpdate"));
testCase.setPropertyValue("ErrorDataVal",CallingTCase.getPropertyValue("ErrorDataVal"));

def DeceUrl   = testProject.getPropertyValue("targetHost");
def DecePort  = testProject.getPropertyValue("targetPort");
def ResponseXML = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest").getPropertyValue("ResponseAsXml");
def RT_ResponseHeader = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenStatusUpdate Request").getTestStepByName("RightsTokenStatusUpdateRequest").httpRequest.response.getResponseHeaders();
def rightstokenid = testCase.getPropertyValue("rightstokenid");
def accountid  = testCase.getPropertyValue("Accountid");
def errorRespType = testCase.getPropertyValue("expectErrTypeRTRSUpdate");
def Resp_HTTPstatus = RT_ResponseHeader.getAt("#status#");
def Resp_HTTPconnection = RT_ResponseHeader.getAt("Connection");
def Resp_HTTPcontenttype = RT_ResponseHeader.getAt("Content-Type");
def Resp_HTTPcontentlength = RT_ResponseHeader.getAt("Content-Length");
def Resp_HTTPLocation = RT_ResponseHeader.getAt("Location");

	
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean Responsebodynull = false;

String Resp_ErrorID = "";
String Resp_errorReason = "";
String Resp_errorLink  = "";
String Resp_errorHost  = "";

//  Expected Http Response
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";


if (DeceUrl.length() == 0) {
	Resp_errorHost = "http://error.decellc.org";
} else {
	Resp_errorHost = "https://qa.q.uvvu.com:$DecePort";
}
this.log.info "errorRespType[$errorRespType]";


switch (errorRespType) {
	
	case "StatusUpdateSuccess":
		expectHTTPstatus = "HTTP/1.1 303 See Other";
		processXMLFlag   = false;
		Responsebodynull = false;
	break;
	
	case "ACCOUNT_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountNotActive";
	QAResp_ErrorID = "ForbiddenAccountNotActive"
	ValerrorID = 1;
	//Resp_errorReason = "Account is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountNotActive";
	break;
	case "API_NOT_AUTH":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	//Resp_errorReason = "API call not authorized";
	Resp_errorReason = "The API call is not authorized.";
	
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;
	
	case "CONTENT_NOT_FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentIDNotFound";
	QAResp_ErrorID = "NotFoundContentIDNotFound"
	ValerrorID = 1;
	//Resp_errorReason = "ContentID is not found";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotFound";
	break;
	
	case "CONTENT_NOT_VALID":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:ContentIDNotValid";
	QAResp_ErrorID = "BadRequestContentIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentIDNotValid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;


	case "UnAuthorized":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
			
	case "LOGICAL_ASSET_NOT_ACTIVE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	ValerrorID  = 1;
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive"
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	break;

	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
	QAResp_ErrorID = "ForbiddenUserIdUnmatched"
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
	
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	Resp_errorReason = "User is not active";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
		
	case "ACCOUNTID NOT MATCH":
	expectHTTPstatus = "HTTP/1.1 403 Forbidden"
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
	QAResp_ErrorID = "ForbiddenAccountIdUnmatched";
	//Resp_errorReason = "Request Account ID not match";
	ValerrorID  = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	
	break;
			
	case "ALID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotValid";
	QAResp_ErrorID = "BadRequestAssetLogicalIDNotValid";
	ValerrorID  = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "AssetLogicalID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotValid";
	
	break;
	
	case "ALID NOT ACTIVE":
	//expectHTTPstatus = "HTTP/1.1 403 Forbidden";
	Resp_ErrorID     = "urn:dece:errorid:org:dece:AssetLogicalIDNotActive";
	QAResp_ErrorID = "ForbiddenAssetLogicalIDNotActive";
	ValerrorID = 1;
	//Resp_errorReason = "The AssetLogicalID (ALID) is not active.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotActive";
	
	break;
	
	case "ALID NOT FOUND":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:AssetLogicalIDNotFound";
	QAResp_ErrorID = "NotFoundAssetLogicalIDNotFound";
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	ValerrorID = 1;
	//Resp_errorReason = "The supplied AssetLogicalID (ALID) was not found.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#AssetLogicalIDNotFound";
	
	break;

	case "BUNDLEID NOT VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotValid";
	QAResp_ErrorID = "BadRequestBundleIDNotValid"
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "The identified bundle is invalid.";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotValid";
	
	break;
	case "BUNDLEID NOT FOUND":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:BundleIDNotFound";
	QAResp_ErrorID = "NotFoundBundleIDNotFound";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 404 Not Found";
	//Resp_errorReason = "BundleID is not found";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotFound";
	
	break;
	
	case "INVALID_DISPLAY_LANGUAGE":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:DisplayNameLanguageNotValid";
	QAResp_ErrorID = "BadRequestDisplayNameLanguageNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "DisplayNameLanguage is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DisplayNameLanguageNotValid";
	
	break;

	case "INVALID_DM_REMAIN":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
		expectHTTPcontenttype = "application/xml"
	break;

	case "CONTENTPROFILE_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:ContentProfileNotValid";
	QAResp_ErrorID = "BadRequestContentProfileNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "ContentProfile is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ContentProfileNotValid";
	break;

	case "FULLFILLMENTLOC_NOT_VALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:FulfillmentLocNotValid";
	ValerrorID = 1;
	QAResp_ErrorID = "BadRequestFulfillmentLocNotValid";
	//Resp_errorReason = "FulfillmentLoc is not valid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#FulfillmentLocNotValid";
	break;
	
	case "FULLFILLMENTLOC_MISSING":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	expectHTTPcontenttype = "application/xml"
	processXMLFlag  = false;
	errorIDFlag     = false;
	errorReasonFlag = false;
	errorLinkFlag   = false;
	break;
	
	case "STANDARD_DEF_MISSING":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:StandardDefinitionMissing";
	QAResp_ErrorID = "BadRequestStandardDefinitionMissing";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "StandardDefinition is missing";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#StandardDefinitionMissing";
	break;

	case "PURCHASE_ACCOUNTID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseAccountNotValid";
	QAResp_ErrorID = "BadRequestPurchaseAccountNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseAccount is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseAccountNotValid";
	break;
	case "PURCHASE_USERID_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:PurchaseUserNotValid";
	QAResp_ErrorID = "BadRequestPurchaseUserNotValid";
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseUser is not valid";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseUserNotValid";
	break;
	case "PURCHASE_NODEID_INVALID":
	Resp_ErrorID    = "urn:dece:errorid:org:dece:PurchaseNodeIDNotValid";
	QAResp_ErrorID = "BadRequestPurchaseNodeIDNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "PurchaseNodeID is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#PurchaseNodeIDNotValid";
	break;
	
	case "LICACQBASE_LOC_INVALID":
	Resp_ErrorID     = "urn:dece:errorid:org:dece:LicenseAcqBaseLocNotValid";
	QAResp_ErrorID = "BadRequestLicenseAcqBaseLocNotValid";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#LicenseAcqBaseLocNotValid";
	break;

	case "BUNDLEID NOT ACTIVE":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:BundleIDNotActive";
	QAResp_ErrorID = "BadRequestBundleIDNotActive";
	ValerrorID = 1;
	//expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	//Resp_errorReason = "LicenseAcqBaseLoc is not valid";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#BundleIDNotActive";
	break;
	
	case "RIGHTSTOKEN_NOT_FOUND":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenNotFound";
	QAResp_ErrorID = "NotFoundRightsTokenNotFound";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenNotFound";
	break;

	case "RIGHTSTOKEN_INVALID":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:RightsTokenIDNotValid";
	QAResp_ErrorID = "BadRequestRightsTokenIDNotValid"
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#RightsTokenIDNotValid";
	break;

	case "RIGHTSTOKEN_STATUS_NOT_UPDATED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:ResourceAlreadyinSameStatus";
	QAResp_ErrorID = "ConflictRequestResourceAlreadyinSameStatus"
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceAlreadyinSameStatus";
	break;

	case "RIGHTSTOKEN_STATUSUPDATE_NOT_ALLOWED": 
	Resp_ErrorID  = "urn:dece:errorid:org:dece:ResourceStatusTransitionRequestedNotAllowed";
	QAResp_ErrorID = "ForbiddenResourceStatusTransitionRequestedNotAllowed"
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusTransitionRequestedNotAllowed";
	break;

	
	case "RESOURCE_STATUS_ELEMENT_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
	QAResp_ErrorID = "ForbiddenResourceStatusElementNotAllowed";
	ValerrorID = 1;
	//Resp_errorReason = "User ID does not match security token";
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
	break;

	case "DISCRETEMEDIA_RIGHTS_REMAINING_ELEMENT_NOT_ALLOWED":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:DiscreteMediaRightsRemainingNotAllowed";
	QAResp_ErrorID = "BadRequestDiscreteMediaRightsRemainingNotAllowed";
	testCase.setPropertyValue("PPContentProfile",CallingTCase.getPropertyValue("PPContentProfile3"));
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#DiscreteMediaRightsRemainingNotAllowed";
	break;
	
	case "USER_NOT_ACTIVE":
	Resp_ErrorID  = "urn:dece:errorid:org:dece:UserNotActive";
	QAResp_ErrorID = "ForbiddenUserNotActive";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	

	case "AdultContentNotAllowed":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:AdultContentNotAllowed";
	QAResp_ErrorID = "ForbiddenAdultContentNotAllowed";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:AdultContentNotAllowed";
	break;

	case "RatingPolicyExists":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:RatingPolicyExists";
	QAResp_ErrorID = "ForbiddenRatingPolicyExists";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:RatingPolicyExists";
	break;

	case "UnratedContentBlocked":
	Resp_ErrorID   = "urn:dece:errorid:org:dece:Policy:UnratedContentBlocked";
	QAResp_ErrorID = "ForbiddenUnratedContentBlocked";
	ValerrorID = 1;
	Resp_errorLink   = "$Resp_errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:UnratedContentBlocked";
	break;

 }


testCase.setPropertyValue("errorID",Resp_ErrorID.toString());
testCase.setPropertyValue("QAerrorID",QAResp_ErrorID.toString());
log.info "From ValidateRights ---" + Resp_ErrorID;

if(ValerrorID.toString() == '1') {
def RTErrors = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsError2 Validation");

RTErrors.setPropertyValue("TCaseName",testCase.getName());
RTErrors.setPropertyValue("TSuiteName",testSuite.getName());

WsdlTestCaseRunner TSrunnerRTC = new WsdlTestCaseRunner( RTErrors, null );

TSrunnerRTC.runTestStepByName("Validate Rights Errors");

assert TSrunnerRTC.status == Status.INITIALIZED;

Resp_errorReason = testCase.getPropertyValue("errorReason");
expectHTTPstatus = testCase.getPropertyValue("errorStatusCode");
log.info 'here'
log.info Resp_errorReason.toString();
}

// HTTP header status

this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + Resp_HTTPstatus[0];
assert Resp_HTTPstatus[0] == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + Resp_HTTPconnection[0];
//assert Resp_HTTPconnection[0] == expectHTTPconnection;

//Content-Length

//log.info "Content-Length:"+ Resp_HTTPcontentlength[0];
//assert Resp_HTTPcontentlength[0].toInteger() > 0; 

//Content-Type

log.info "Content-Type:" + Resp_HTTPcontenttype[0];
assert Resp_HTTPcontenttype[0] == expectHTTPcontenttype;

//XML body should be null test
if (Responsebodynull) {
assert ResponseXML == null;
}

//this.log.info "ResponseXML Length [" + ResponseXML.length() + "] processXMLFlag[$processXMLFlag]";

if (ResponseXML != null &amp;&amp; processXMLFlag == true) {
	
	def Resp_XML = new XmlSlurper().parseText(ResponseXML);

// Verify response sizes...
	
     ErrorDataVal = testCase.getPropertyValue("ErrorDataVal");

	assert Resp_XML.Error.size() == ErrorDataVal.toInteger();
	assert Resp_XML.Error.Reason.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.OriginalRequest.size() ==  ErrorDataVal.toInteger();
	assert Resp_XML.Error.ErrorLink.size() ==  ErrorDataVal.toInteger();
		
// ErrorCode
	log.info "Received ErrorID [" + Resp_XML.Error[0].@ErrorID.toString() + "] Exp[$Resp_ErrorID]";
	log.info Resp_ErrorID
	log.info Resp_XML.Error[0].@ErrorID.toString()
	assert Resp_XML.Error[0].@ErrorID.toString() == Resp_ErrorID;
	
// ErrorReason
	if(Resp_ErrorID.toString() == 'urn:dece:errorid:org:dece:DiscreteMediaRightsRemainingNotAllowed'){
	log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason" +" - "+ testCase.getPropertyValue("PPContentProfile")+ "]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason +" - " + testCase.getPropertyValue("PPContentProfile");
	}
	else{
	log.info "ErrorReason Received [" + Resp_XML.Error[0].Reason.toString() + "] Exp[$Resp_errorReason]";
	assert Resp_XML.Error[0].Reason.toString() == Resp_errorReason;
	}
// ErrorLink
	log.info "ErrorLink [" + Resp_XML.Error[0].ErrorLink.toString() + "] errorLink[$Resp_errorLink]";
	assert Resp_XML.Error[0].ErrorLink.toString() == Resp_errorLink;
}</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_30022 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Retailer_CS</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>05RightsResourceStatusUpdate_Invocation_ByPermission_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>Accountid</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:C9A677094C5EBBA3E0401F0A07990448</con:value>
        </con:property>
        <con:property>
          <con:name>ErrorDataVal</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTGet</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>errorStatusCode</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>errorReason</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>errorID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>RTObjType</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>QAerrorID</con:name>
          <con:value>null</con:value>
        </con:property>
        <con:property>
          <con:name>expectErrTypeRTRSUpdate</con:name>
          <con:value>StatusUpdateSuccess</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TestCase Shared Properties" searchProperties="true" id="9705c3ac-ffb7-4766-89f2-abb557580a85">
      <con:settings/>
      <con:testStep type="transfer" name="Retailer Property" id="af6d7789-6c7e-4a0c-8b6d-9e799e9d9c09">
        <con:settings/>
        <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false">
            <con:name>assertionUUID</con:name>
            <con:sourceType>assertionUUID</con:sourceType>
            <con:sourceStep>#TestCase#</con:sourceStep>
            <con:targetType>assertionUUID</con:targetType>
            <con:targetStep>#Project#</con:targetStep>
          </con:transfers>
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true">
            <con:name>NodeID</con:name>
            <con:sourceType>NodeID</con:sourceType>
            <con:sourceStep>#TestCase#</con:sourceStep>
            <con:targetType>NodeID</con:targetType>
            <con:targetStep>#Project#</con:targetStep>
          </con:transfers>
          <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true">
            <con:name>Assert</con:name>
            <con:sourceType>assert</con:sourceType>
            <con:sourceStep>#TestCase#</con:sourceStep>
            <con:targetType>assert</con:targetType>
            <con:targetStep>#Project#</con:targetStep>
          </con:transfers>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_30018 - RightsLockerDataGet - PERM - SecurityRoleValid - Invocation with Retailer_CS</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>RightsTokenGet_Invocation_ByPermission_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>assertionUUID</con:name>
          <con:value>c51fd1c7-0c0e-44c1-97c0-78968c69aed0</con:value>
        </con:property>
        <con:property>
          <con:name>NodeID</con:name>
          <con:value>0799</con:value>
        </con:property>
        <con:property>
          <con:name>assert</con:name>
          <con:value>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</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsError Validation" searchProperties="true" id="c0104eeb-b5d4-48fd-b600-783f906a9a73">
      <con:settings/>
      <con:testStep type="groovy" name="Validate Rights Errors" id="aafc7d35-e6c2-46d2-8584-a2f090a8a591">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbErrors;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def targetSystem = context.expand( '${#Project#targetSystem}' )

mydbRights = new dbRightsToken(log,targetSystem);


def callTSuitename = tC.getPropertyValue("TSuiteName");
def callTCasename = tC.getPropertyValue("TCaseName");

def CallingTCase = tP.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
def errId = CallingTCase.getPropertyValue("errorID");
log.info errId.tokenize(':').last();

//ErrorID = errId.tokenize(':').last();
//ErrorID = tC.getPropertyValue("errId");

//log.info ErrorID;
if(errId.contains('Policy'))
{
	log.info 'Policy:' + errId.tokenize(':').last();
	ErrorID = 'Policy:' + errId.tokenize(':').last();
}
else
{
	log.info errId.tokenize(':').last();
	ErrorID = errId.tokenize(':').last();
}

def xmlData = "";

try {
			 xmlData = RightsErrors.errGetIdInfo(ErrorID.toString());
                log.info xmlData;
                
                assert xmlData.trim().length() > 1;

                def myXML = new XmlSlurper().parseText(xmlData);
                

                log.info myXML.ResultSet.Row.size();
                tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
                tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
                tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

                /*
                *  The DB does not contain the complete HTTP status
                *  string, only the code.  Thus, we must adjust.
                */
                switch (tC.getPropertyValue("errorStatusCode")) {
                                case "400":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
                                                break;
                                case "403":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
                                                break;
                                case "404":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
                                                break;
                                case "409":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
                                                break;
                }
}
catch (Throwable e) {
                log.info "STEP FAILURE! --- " + e;
                
}


CallingTCase.setPropertyValue("errorStatusCode",tC.getPropertyValue("errorStatusCode"));
CallingTCase.setPropertyValue("errorReason",tC.getPropertyValue("errorReason"));
CallingTCase.setPropertyValue("errorID",tC.getPropertyValue("errorID"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>RightsResourceStatusUpdate Response Validation</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Common Test Steps</con:value>
        </con:property>
        <con:property>
          <con:name>errorStatusCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>errorReason</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>errorID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>errId</con:name>
          <con:value>UnratedContentBlocked</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get-Set Account Status" searchProperties="true" id="882128d5-7219-46fd-89d1-9f037115a783">
      <con:settings/>
      <con:testStep type="groovy" name="Get Account Status for RTSU" id="bc940960-7c86-4b6a-9599-2314293d1803">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbAccount;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();

AccountID = callingTCase.getPropertyValue("accountoid");
def targetSystem = context.expand( '${#Project#targetSystem}' )


myDb = new dbUtils(log,targetSystem);

SqlStr = callingTCase.getPropertyValue("SqlStr");

log.info SqlStr;

AccountStatusXML = myDb.SelectFromDB(SqlStr, targetSystem);

log.info AccountStatusXML.toString();

testCase.setPropertyValue("AccountStatusXML",AccountStatusXML.toString());
callingTCase.setPropertyValue("AccountStatusXML",testCase.getPropertyValue("AccountStatusXML"));

AccXML = new XmlSlurper().parseText(AccountStatusXML.toString());

AccountStatus = AccXML.ResultSet.Row.STATUS

testCase.setPropertyValue("AccountStatus",AccountStatus.toString());
callingTCase.setPropertyValue("AccountStatus",testCase.getPropertyValue("AccountStatus"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Account Status for RTSU" id="8e8b14ba-e310-47c3-9e0e-2a6eb8c8f7d2">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbAccount;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();

log.info callingTCase.getPropertyValue("accountoid");

testCase.setPropertyValue("AccountID",callingTCase.getPropertyValue("accountoid"));

AccountStatus = callingTCase.getPropertyValue("AccountStatus");
def targetSystem = context.expand( '${#Project#targetSystem}' )

myAccount = new dbAccount(log,targetSystem);

AccountID = testCase.getPropertyValue("AccountID");

UserStatus = myAccount.accountSetStatus(AccountID.toString(),AccountStatus.toString());

log.info AccountStatus.toString();

testCase.setPropertyValue("AccountStatus",AccountStatus.toString());
callingTCase.setPropertyValue("AccountStatus",testCase.getPropertyValue("AccountStatus"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_00003_RightsResourceStatusUpdate_FUNC_RTL_with_inactive_Accountid in URL</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>02RightsResourceStatusUpdate_RET_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>AccountStatus</con:name>
          <con:value>active</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>AccountStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>archived</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>blocked</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>blocked:tou</STATUS>
    </Row>
    <Row rowNumber='4'>
      <STATUS>deidentified</STATUS>
    </Row>
    <Row rowNumber='5'>
      <STATUS>deleted</STATUS>
    </Row>
    <Row rowNumber='6'>
      <STATUS>forcedeleted</STATUS>
    </Row>
    <Row rowNumber='7'>
      <STATUS>mergedeleted</STATUS>
    </Row>
    <Row rowNumber='8'>
      <STATUS>other</STATUS>
    </Row>
    <Row rowNumber='9'>
      <STATUS>pending</STATUS>
    </Row>
    <Row rowNumber='10'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get-Set User Status" searchProperties="true" id="d0032911-1f92-4d4b-909f-e5c93a79c546">
      <con:settings/>
      <con:testStep type="groovy" name="Get User Status for RTSU" id="beb9982a-c1b8-486e-acce-f91f39d29522">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbUser;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();
def targetSystem = context.expand( '${#Project#targetSystem}' )
USerID = callingTCase.getPropertyValue("useroid");
myUser = new dbUser(log,targetSystem);

UserStatus = myUser.userGetStatus(USerID);

log.info UserStatus.toString();

myDb = new dbUtils(log,targetSystem);

SqlStr = callingTCase.getPropertyValue("SqlStr");

UserStatusXML = myDb.SelectFromDB(SqlStr,targetSystem);

log.info UserStatusXML.toString();

testCase.setPropertyValue("UserStatusXML",UserStatusXML.toString());
callingTCase.setPropertyValue("UserStatusXML",testCase.getPropertyValue("UserStatusXML"));

testCase.setPropertyValue("UserStatus",UserStatus.toString());
callingTCase.setPropertyValue("UserStatus",testCase.getPropertyValue("UserStatus"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set User Status for RTSU" id="ca8c483d-220b-482f-9444-82507e178ae3">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbUser;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();

def targetSystem = context.expand( '${#Project#targetSystem}' )

USerID = callingTCase.getPropertyValue("useroid");
testCase.setPropertyValue("UserOid",USerID.toString());

UserSetStatus = callingTCase.getPropertyValue("UserStatus");

myUser = new dbUser(log,targetSystem);

UserStatus = myUser.userSetStatus(USerID.toString(),UserSetStatus.toString());

log.info UserStatus.toString();

testCase.setPropertyValue("UserStatus",UserStatus.toString());
callingTCase.setPropertyValue("UserStatus",testCase.getPropertyValue("UserStatus"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_00010_RightsResourceStatusUpdate_FUNC_RTL_with_inactive_user</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>02RightsResourceStatusUpdate_RET_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>UserStatus</con:name>
          <con:value>0</con:value>
        </con:property>
        <con:property>
          <con:name>UserOid</con:name>
          <con:value>null</con:value>
        </con:property>
        <con:property>
          <con:name>UserStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>archived</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>blocked</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>blocked:clg</STATUS>
    </Row>
    <Row rowNumber='4'>
      <STATUS>blocked:tou</STATUS>
    </Row>
    <Row rowNumber='5'>
      <STATUS>deidentified</STATUS>
    </Row>
    <Row rowNumber='6'>
      <STATUS>deleted</STATUS>
    </Row>
    <Row rowNumber='7'>
      <STATUS>forcedeleted</STATUS>
    </Row>
    <Row rowNumber='8'>
      <STATUS>mergedeleted</STATUS>
    </Row>
    <Row rowNumber='9'>
      <STATUS>other</STATUS>
    </Row>
    <Row rowNumber='10'>
      <STATUS>pending</STATUS>
    </Row>
    <Row rowNumber='11'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get-Set RightsToken Data" searchProperties="true" id="adb97a09-7ed8-4f5e-897f-96e8ce4a5a48">
      <con:settings/>
      <con:testStep type="groovy" name="Set Rights Token Data" id="0523eb93-75fe-4994-8b5d-ed8f0240fb9a">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import dbUtils.dbSAMLAssertion;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

testCase.setPropertyValue("TbName",CallingTCase.getPropertyValue("TbName"));
testCase.setPropertyValue("ColumnName",CallingTCase.getPropertyValue("ColumnName"));
testCase.setPropertyValue("ColumnValue",CallingTCase.getPropertyValue("ColumnValue"));
def targetSystem = context.expand( '${#Project#targetSystem}' )

TbName = testCase.getPropertyValue("TbName");
ColumnName = testCase.getPropertyValue("ColumnName");
ColumnValue = testCase.getPropertyValue("ColumnValue");
rightstokenid = testCase.getPropertyValue("DBrightstokenid");

mydb = new dbUtils(log,targetSystem);

def SqlStr = "UPDATE $TbName set $ColumnName = '$ColumnValue' where RIGHTS_TOKEN_OID = hextoraw('$rightstokenid')"
log.info SqlStr;

RightsRcount = mydb.UpdateDB(SqlStr);

if (RightsRcount == 1){
log.info "$ColumnName has been updated $ColumnValue: " + RightsRcount;
}
else
{
log.info "$ColumnName has not been updated : " + RightsRcount;
}</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get RightsToken Data info" id="129aef4e-d03e-408d-ad92-a742bbbb8751">
        <con:settings/>
        <con:config><script>import dbUtils.dbRightsToken;
import dbUtils.dbUtils;
import dbUtils.dbSAMLAssertion;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);

testCase.setPropertyValue("ColumnName",CallingTCase.getPropertyValue("ColumnName"));
testCase.setPropertyValue("ColumnValue",CallingTCase.getPropertyValue("ColumnValue"));
testCase.setPropertyValue("rightstokenid",CallingTCase.getPropertyValue("RightsTokenID"));
testCase.setPropertyValue("DBrightstokenid",CallingTCase.getPropertyValue("DBrightstokenid"));
testCase.setPropertyValue("Accountid",CallingTCase.getPropertyValue("Accountid"));

ColumnName = testCase.getPropertyValue("ColumnName");
ColumnValue = testCase.getPropertyValue("ColumnValue");
rightstokenid = testCase.getPropertyValue("DBrightstokenid");
def targetSystem = context.expand( '${#Project#targetSystem}' )

mydb = new dbUtils(log,targetSystem);

def SqlStr = "SELECT  $ColumnName from RIGHTS_TOKEN where RIGHTS_TOKEN_OID = hextoraw('$rightstokenid')"
log.info SqlStr;

mydb.SelectFromDB(SqlStr);

CallingTCase.setPropertyValue("ColumnName",testCase.getPropertyValue("ColumnName"));
CallingTCase.setPropertyValue("ColumnValue",testCase.getPropertyValue("ColumnValue"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_10048_RightsTokenGet_RTR_FUNC_with_RightsToken_Rental_DOWNLOAD_TO_PLAY_MAX_NULL</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>RightsTokenGet_ByRightsTokenID_Retailer_CS_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:A5A6FB38FA72008FE0401F0A05994F51</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>A5A6FB38FA72008FE0401F0A05994F51</con:value>
        </con:property>
        <con:property>
          <con:name>Accountid</con:name>
          <con:value>urn:dece:accountid:org:dece:A49F28BF260F2548E0401F0A0599026A</con:value>
        </con:property>
        <con:property>
          <con:name>DbResultRTXml</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <RIGHTS_TOKEN_OID>9D5CF73DE5D33519E0401F0A07997F4A</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>7001</ACCOUNT_OID>
      <USER_OID>799999</USER_OID>
      <RIGHTS_LOCKER_OID>7001</RIGHTS_LOCKER_OID>
      <NODE_OID>0799</NODE_OID>
      <PURCHASE_NODE_ACCOUNT_OID>107002</PURCHASE_NODE_ACCOUNT_OID>
      <RETAILER_TRANSACTION>RetailerTransaction_1_node0799_RetailerNode</RETAILER_TRANSACTION>
      <PURCHASE_NODE_USER_OID>9A9CCCF13ABCD94FE0401F0A05992F63</PURCHASE_NODE_USER_OID>
      <PURCHASE_TIME>2011-06-24 15:12:03.0</PURCHASE_TIME>
      <ALID>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_4.txt</ALID>
      <CONTENT_ID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_4.txt</CONTENT_ID>
      <RENTAL_ABSOLUTE_EXPIRATION>null</RENTAL_ABSOLUTE_EXPIRATION>
      <RENTAL_DOWNLOAD_TO_PLAY_MAX>200</RENTAL_DOWNLOAD_TO_PLAY_MAX>
      <RENTAL_PLAY_DURATION_MAX>null</RENTAL_PLAY_DURATION_MAX>
      <LICENSE_ACQ_BASE_LOC>https://dl.bestbuy.com/p/bb93827398sdjdhds</LICENSE_ACQ_BASE_LOC>
      <CREATED_DATE>2011-02-28 20:26:05.539</CREATED_DATE>
      <CREATED_BY>0799</CREATED_BY>
      <UPDATED_DATE>null</UPDATED_DATE>
      <UPDATED_BY>null</UPDATED_BY>
      <STATUS_ID>active</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>ColumnName</con:name>
          <con:value>RENTAL_DOWNLOAD_TO_PLAY_MAX</con:value>
        </con:property>
        <con:property>
          <con:name>ColumnValue</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>TbName</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get-Set ASSET Statuses" searchProperties="true" id="27c9ecbe-db41-4b80-8b92-50862636c824">
      <con:settings/>
      <con:testStep type="groovy" name="Get ASSET Statuses for RTC" id="9a2128b3-1ae7-4dab-8ebf-e102fb5a77fb">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbNode;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();
def targetSystem = context.expand( '${#Project#targetSystem}' )
myDb = new dbUtils(log,targetSystem);
AssetStatusXML = myDb.SelectFromDB("select Status from ASSET_STATUS_REF where Status != 'active'",targetSystem);

log.info AssetStatusXML.toString();

testCase.setPropertyValue("AssetStatusXML",AssetStatusXML.toString());
callingTCase.setPropertyValue("AssetStatusXML",testCase.getPropertyValue("AssetStatusXML"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set ASSET Statuses for RTC" id="7959903b-b426-47dd-9ea0-0f22c7454d5d">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbNode;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);

log.info CallingTCase.getName();
//log.info CallingTCase.getPropertyValue("nodeid");
def targetSystem = context.expand( '${#Project#targetSystem}' )
myDb = new dbUtils(log,targetSystem);

testCase.setPropertyValue("ALID",CallingTCase.getPropertyValue("ALID"));
testCase.setPropertyValue("AssetStatus",CallingTCase.getPropertyValue("AssetStatus"));

ALID = testCase.getPropertyValue("ALID");
AssetStatus = testCase.getPropertyValue("AssetStatus");

AssetStatusXML = myDb.UpdateDB("Update  ASSET_MAP_LP set STATUS ='$AssetStatus'where ALID ='$ALID'",targetSystem);

Upd_AssetStatusXML = myDb.SelectFromDB("select Status from ASSET_MAP_LP where ALID = '$ALID'",targetSystem);

log.info Upd_AssetStatusXML.toString();
def Val_AssetStatusXML = new XmlSlurper().parseText(Upd_AssetStatusXML);

Upd_AssetStatus =  Val_AssetStatusXML.ResultSet.Row.STATUS

testCase.setPropertyValue("AssetStatus",Upd_AssetStatus.toString());

CallingTCase.setPropertyValue("AssetStatus",testCase.getPropertyValue("AssetStatus"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>NodeStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>deleted</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>pending</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_10038_RightsTokenGet_RTR_FUNC_with_RightsToken_ALID_Status_Inactive</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>RightsTokenGet_ByRightsTokenID_Retailer_CS_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>AssetStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>deleted</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>other</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>ALID</con:name>
          <con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value>
        </con:property>
        <con:property>
          <con:name>AssetStatus</con:name>
          <con:value>active</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get-Set Node Role" searchProperties="true" id="974293cf-ae97-4d03-abea-0a9d3a0c0281">
      <con:settings/>
      <con:testStep type="groovy" name="Set Node Role for RTSU" id="b4b578a2-3241-4074-bd25-9b5e261bb354">
        <con:settings/>
        <con:config>
          <script>import dbUtils.dbUtils;
import dbUtils.dbNode;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();

testCase.setPropertyValue("nodeid", callingTCase.getPropertyValue("nodeid"));
testCase.setPropertyValue("NodeRole", callingTCase.getPropertyValue("NodeRole"));

myDbNode = new dbUtils.dbNode(log,"LP1");

nodeid = testCase.getPropertyValue("nodeid");
NodeRole = testCase.getPropertyValue("NodeRole");

rcNode = myDbNode.nodeSetRole(nodeid,NodeRole);

log.info  testCase.getPropertyValue("NodeRole") + " has been NodeRole Updated" ;</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Get Node Role for RTSU" id="e8092fb8-285c-4ebb-a7dd-518be2499f15">
        <con:settings/>
        <con:config>
          <script>import dbUtils.dbUtils;
import dbUtils.dbNode;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();

myDbNode = new dbUtils.dbNode(log,"LP1");

testCase.setPropertyValue("nodeid", callingTCase.getPropertyValue("nodeid"));

nodeid = testCase.getPropertyValue("nodeid");

NodeRole = myDbNode.nodeGetRole(nodeid);

log.info "NODE Role : " + NodeRole.toString();

testCase.setPropertyValue("NodeRole",NodeRole.toString());
callingTCase.setPropertyValue("NodeRole",testCase.getPropertyValue("NodeRole"));</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_00003_RightsResourceStatusUpdate_FUNC_RTL_All_UserStatus_RightsToken_Status_pending to active(ISC_R2)</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>04RightsResourceStatusUpdate_UserStatus</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>2277</con:value>
        </con:property>
        <con:property>
          <con:name>NodeStatus</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>NodeRole</con:name>
          <con:value>urn:dece:role:retailer</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsError2 Validation" searchProperties="true" id="ef9237dc-fbef-427f-a6ae-a781df065662">
      <con:settings/>
      <con:testStep type="groovy" name="Validate Rights Errors" id="f9942683-624f-420c-b025-45f963370488">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbErrors;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.testcase.WsdlTestCaseRunner

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )
def RightsErrors = new dbErrors(log,targetSystem);


def callTSuitename = tC.getPropertyValue("TSuiteName");
def callTCasename = tC.getPropertyValue("TCaseName");

def CallingTCase = tP.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
def errId = CallingTCase.getPropertyValue("QAerrorID");
log.info errId;

//ErrorID = errId.tokenize(':').last();

def xmlData = "";

try {
			 xmlData = RightsErrors.errGetIdInfo(errId.toString());
                log.info xmlData;
                
                assert xmlData.trim().length() > 1;

                def myXML = new XmlSlurper().parseText(xmlData);
                

                log.info myXML.ResultSet.Row.size();
                tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
                tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
                tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

                /*
                *  The DB does not contain the complete HTTP status
                *  string, only the code.  Thus, we must adjust.
                */
                switch (tC.getPropertyValue("errorStatusCode")) {
                                case "400":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
                                                break;
                                case "403":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
                                                break;
                                case "404":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
                                                break;
                                case "409":
                                                tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
                                                break;
                }
}
catch (Throwable e) {
                log.info "STEP FAILURE! --- " + e;
                
}


CallingTCase.setPropertyValue("errorStatusCode",tC.getPropertyValue("errorStatusCode"));
CallingTCase.setPropertyValue("errorReason",tC.getPropertyValue("errorReason"));
CallingTCase.setPropertyValue("errorID",tC.getPropertyValue("errorID"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>RightsResourceStatusUpdate Response Validation</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Common Test Steps</con:value>
        </con:property>
        <con:property>
          <con:name>errorStatusCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>errorReason</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>errorID</con:name>
          <con:value/>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Extract RightsToken-Create Information" searchProperties="true" id="d7cd4564-e6bd-4592-a752-336dce7b61ea">
      <con:settings/>
      <con:testStep type="groovy" name="Extract RightsToken Request XML" id="e550d363-b548-47fc-be31-91866a63b393">
        <con:settings/>
        <con:config>
          <script>import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);

def RT_RequestBody = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenCreateRequest").getTestStepByName("RightsTokenCreate Request POST").testRequest.response.rawRequestData;

def rawData = new String(RT_RequestBody);
 
testCase.setPropertyValue("RightsReqXml",rawData.tokenize('\n').last());

log.info testCase.getPropertyValue("RightsReqXml");
callingTCase.setPropertyValue("RightsReqXml",testCase.getPropertyValue("RightsReqXml"));</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract RightsToken Info from the Response" id="a6146223-6b0f-448a-b370-a55a3f065002">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status;
import java.net.URLDecoder;
import java.net.URLEncoder;


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName)

def RightsResHeader = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenCreateRequest").getTestStepByName('RightsTokenCreate Request POST').httpRequest.response.getResponseHeaders(); 
def RightsResXml = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenCreateRequest").getTestStepByName('RightsTokenCreate Request POST').httpRequest.response.getContentAsString();
def RightsResTime = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenCreateRequest").getTestStepByName('RightsTokenCreate Request POST').httpRequest.response.getTimeTaken();
def RightsResHttpStatus = RightsResHeader.getAt("#status#");
def RightsResLocation = RightsResHeader.getAt("Location");
log.info RightsResHttpStatus[0];
log.info RightsResLocation;

log.info "Response Time : $RightsResTime:ms";

testCase.setPropertyValue("RightsResXml",RightsResXml);
testCase.setPropertyValue("RightsResTime",RightsResTime.toString());

if(RightsResHttpStatus[0] == "HTTP/1.1 201 Created")
{
def RTKLoc = RightsResLocation[0].tokenize('/')
log.info RTKLoc[RTKLoc.indexOf("RightsToken").next()];
//testCase.setPropertyValue("rightstokenid",RTKLoc[RTKLoc.indexOf("RightsToken").next()] );
def decodeRTKLoc = URLDecoder.decode(RTKLoc[RTKLoc.indexOf("RightsToken").next()], "UTF-8");
log.info "decodeRTKLoc=="+decodeRTKLoc;
testCase.setPropertyValue("rightstokenid",decodeRTKLoc);

log.info RTKLoc[RTKLoc.indexOf("Account").next()];
def decodeAccountIDLoc = URLDecoder.decode(RTKLoc[RTKLoc.indexOf("Account").next()], "UTF-8");
log.info "decodeAccountIDLoc=="+decodeAccountIDLoc;
testCase.setPropertyValue("Accountid",decodeAccountIDLoc);

//log.info RTKLoc[RTKLoc.indexOf("Account").next()];
//testCase.setPropertyValue("Accountid",RTKLoc[RTKLoc.indexOf("Account").next()]);
//com.eviware.soapui.support.UISupport.showInfoMessage("RightsToken has been Created"); 
}
else{
log.info " RightsToken Create failed - [ " + RightsResHttpStatus[0] + " ]"
}
// Returns Rights token , Account id
testCase.setPropertyValue("DBrightstokenid",testCase.getPropertyValue("rightstokenid").tokenize(':').last());
callingTCase.setPropertyValue("rightstokenid",testCase.getPropertyValue("rightstokenid"));
callingTCase.setPropertyValue("DBrightstokenid",testCase.getPropertyValue("DBrightstokenid"));
callingTCase.setPropertyValue("RightsResXml",testCase.getPropertyValue("RightsResXml"));
callingTCase.setPropertyValue("RightsReqXml",testCase.getPropertyValue("RightsReqXml"));
callingTCase.setPropertyValue("RightsResTime",testCase.getPropertyValue("RightsResTime"));
//callingTCase.setPropertyValue("Accountid",testCase.getPropertyValue("Accountid"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Call RightsTokenGet for ETag Value"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenGet Request")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

def runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;

RTCRequest = testProject.getTestSuiteByName("Common Test Steps").getTestCaseByName("Extract RightsToken-Get Information")

RTCRequest.setPropertyValue("TCaseName",testCase.getName());
RTCRequest.setPropertyValue("TSuiteName",testSuite.getName());

runnerRTC = RTCRequest.run( null , false )

assert runnerRTC.status == Status.FINISHED;</script></con:config></con:testStep><con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>RightsTokenCreate_With_Valid_AccountId</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Staging Rights UPDATE</con:value>
        </con:property>
        <con:property>
          <con:name>rightstokenid</con:name>
          <con:value>urn:dece:rightstokenid:org:dece:EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>Accountid</con:name>
          <con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value>
        </con:property>
        <con:property>
          <con:name>DBrightstokenid</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>RightsReqXml</con:name>
          <con:value><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  xmlns:ns4="http://www.decellc.org/schema/2013/10/coordinator"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt" ContentID="urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt"> 	<ns4:SoldAs> 		<ns4:DisplayName Language="en">Avatar BestBuy Special Packaging</ns4:DisplayName> 		<ns4:ContentID>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</ns4:ContentID> 	</ns4:SoldAs> 	<ns4:RightsProfiles> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:pd"> 			<ns4:CanDownload>true</ns4:CanDownload> 			<ns4:CanStream>true</ns4:CanStream> 		</ns4:PurchaseProfile> 	</ns4:RightsProfiles> 	<ns4:LicenseAcqBaseLoc>ns3.google.com</ns4:LicenseAcqBaseLoc> 	<ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/aaa</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/bbb</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/ccc</ns4:Location> 		<ns4:Preference>3</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>https://dl.bestbuy.com/p/ddd</ns4:Location> 		<ns4:Preference>1</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:PurchaseInfo> 		<ns4:NodeID>urn:dece:org:org:dece:RET_CS_1</ns4:NodeID> 		<ns4:RetailerTransaction>RetailerTransaction_1_nodeRET_CS_1_RetailerNode</ns4:RetailerTransaction> 		<ns4:PurchaseAccount>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</ns4:PurchaseAccount> 		<ns4:PurchaseUser>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</ns4:PurchaseUser> 		<ns4:PurchaseTime>2011-06-24T15:12:03</ns4:PurchaseTime> 	</ns4:PurchaseInfo> </ns4:RightsTokenData>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 404 - /rest/1/21/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/RightsToken</h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u>/rest/1/21/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/RightsToken</u></p><p><b>description</b> <u>The requested resource (/rest/1/21/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/RightsToken) is not available.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>7</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
      <con:property><con:name>FeedRTCReq</con:name><con:value>OK</con:value></con:property><con:property><con:name>RTObjType</con:name><con:value>RightsTokenFull</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get-Set Node Statuses" searchProperties="true" id="27808f77-2a2d-4299-aea9-d63b4e7baf99">
      <con:settings/>
      <con:testStep type="groovy" name="Get Node Statuses for RTSU" id="05c1dadb-b570-48b1-aabf-bdd5f5c49c13">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbNode;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();
def targetSystem = context.expand( '${#Project#targetSystem}' )
myDb = new dbUtils(log,targetSystem);
NodeStatusXML = myDb.SelectFromDB("select Status from NODE_STATUS where Status != 'active'",targetSystem);

log.info NodeStatusXML.toString();

testCase.setPropertyValue("NodeStatusXML",NodeStatusXML.toString());
callingTCase.setPropertyValue("NodeStatusXML",testCase.getPropertyValue("NodeStatusXML"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set Node Statuses for RTSU" id="83e743cf-ec89-40fb-9597-c47abe931ebf">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbNode;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def CallingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);

log.info CallingTCase.getName();
//log.info CallingTCase.getPropertyValue("nodeid");
def targetSystem = context.expand( '${#Project#targetSystem}' )
myNode = new dbNode(log,targetSystem);

testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));
testCase.setPropertyValue("NodeStatus",CallingTCase.getPropertyValue("NodeStatus"));

nodeid = testCase.getPropertyValue("nodeid");
NodeStatus = testCase.getPropertyValue("NodeStatus");

myNode.nodeSetStatus(nodeid ,NodeStatus);

Upd_NodeStatus = myNode.nodeGetStatus(nodeid);

testCase.setPropertyValue("NodeStatus",Upd_NodeStatus);

CallingTCase.setPropertyValue("NodeStatus",testCase.getPropertyValue("NodeStatus"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>NodeStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS>deleted</STATUS>
    </Row>
    <Row rowNumber='2'>
      <STATUS>pending</STATUS>
    </Row>
    <Row rowNumber='3'>
      <STATUS>suspended</STATUS>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_00005_RightsResourceStatusUpdate_FUNC_RTL_CS_with_inactive_NodeId</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>01RightsResourceStatusUpdate_RTL_CS_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value>CCE44AF42FD7063BE0401F0A07991776</con:value>
        </con:property>
        <con:property>
          <con:name>NodeStatus</con:name>
          <con:value>active</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get-Set RightsToken Status" searchProperties="true" id="91ce0de7-a123-4dd6-bb02-7f9257b242cb">
      <con:settings/>
      <con:testStep type="groovy" name="Get RightsToken Status for RTSU" id="edf58cc9-10ae-4e50-821f-227726075197">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbRightsToken;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )
def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();

RightsTokenId = callingTCase.getPropertyValue("rightstokenid");
dbRighttoken = RightsTokenId.tokenize(':').last();
testCase.setPropertyValue("dbRighttoken", dbRighttoken);

myRT = new dbRightsToken(log,targetSystem);

RTStatus = myRT.rightstokenGetStatus(dbRighttoken);

log.info "Current RightsTokenStatus : " + RTStatus.toString();

myDb = new dbUtils(log,targetSystem);

SqlStr = callingTCase.getPropertyValue("SqlStr");

RTStatusXML = myDb.SelectFromDB(SqlStr,targetSystem);

log.info RTStatusXML.toString();

testCase.setPropertyValue("RTStatusXML",RTStatusXML.toString());
callingTCase.setPropertyValue("RTStatusXML",testCase.getPropertyValue("RTStatusXML"));

testCase.setPropertyValue("RTStatus",RTStatus.toString());
callingTCase.setPropertyValue("RTStatus",testCase.getPropertyValue("RTStatus"));</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Set RightsToken Status for RTSU" id="efab8791-8c3a-4bc1-8784-17913da2a44a">
        <con:settings/>
        <con:config><script>import dbUtils.dbUtils;
import dbUtils.dbRightsToken;
import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.WsdlResponseMessageExchange

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def targetSystem = context.expand( '${#Project#targetSystem}' )
def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName);
log.info callingTCase.getName();


RightsTokenId = callingTCase.getPropertyValue("rightstokenid");
dbRighttoken = RightsTokenId.tokenize(':').last();
testCase.setPropertyValue("dbRighttoken", dbRighttoken);

myRT = new dbRightsToken(log,targetSystem);

RTStatus = callingTCase.getPropertyValue("RTStatus");

RTStatus = myRT.rightsTokenSetStatus(dbRighttoken.toString(),RTStatus.toString());

log.info RTStatus.toString();

testCase.setPropertyValue("RTStatus",RTStatus.toString());
callingTCase.setPropertyValue("RTStatus",testCase.getPropertyValue("RTStatus"));</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>TC_DECE_30022 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Retailer_CS</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>05RightsResourceStatusUpdate_Invocation_ByPermission_TestCases</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatus</con:name>
          <con:value>1</con:value>
        </con:property>
        <con:property>
          <con:name>RTStatusXML</con:name>
          <con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STATUS_ID>other</STATUS_ID>
    </Row>
    <Row rowNumber='2'>
      <STATUS_ID>suspended</STATUS_ID>
    </Row>
  </ResultSet>
</Results>]]></con:value>
        </con:property>
        <con:property>
          <con:name>dbRighttoken</con:name>
          <con:value>EF8F51ED2E1C2ED2E0401F0A07991D59</con:value>
        </con:property>
        <con:property>
          <con:name>synced</con:name>
          <con:value>true</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
  <con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenGet Request" searchProperties="true" id="bab0104b-68ff-407f-a559-824110ccc212">
      <con:settings/>
      <con:testStep type="groovy" name="Get the Required Rights Get Properties" id="40d9b207-4d8f-4f88-aba5-bbf9a1665442">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.support.types.StringToStringMap


def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSuitename = testCase.getPropertyValue("TSuiteName");
def callTCasename = testCase.getPropertyValue("TCaseName");

//log.info callTSuitename.getName();
//log.info callTCasename.getName();

def CallingTCase = testProject.getTestSuiteByName(callTSuitename).getTestCaseByName(callTCasename);
testCase.setPropertyValue("nodeid",CallingTCase.getPropertyValue("nodeid"));
//testCase.setPropertyValue("nodeid","0701");
//SetUp SAML assertion in Request header

def headers = new StringToStringMap()
//headers.put("Authorization","SAML2 assertion="+ CallingTCase.getPropertyValue("assert"));

headers.put("Authorization",context.expand( '${#Project#SAML}' ));

testRunner.testCase.getTestStepByName("RightsTokenGet byTokenID").testRequest.setRequestHeaders(headers);


//SetUp test properties
def v2 = context.expand( '${#Project#V2}' )
if (v2!='07')
{
	testCase.setPropertyValue("encodedAccountID",URLEncoder.encode(CallingTCase.getPropertyValue("AccountID"),"UTF-8"));
	testCase.setPropertyValue("encodedRightsTokenID",URLEncoder.encode(CallingTCase.getPropertyValue("RightsTokenID"),"UTF-8"));
}
else
{
	testCase.setPropertyValue("encodedAccountID",CallingTCase.getPropertyValue("AccountID"));
	testCase.setPropertyValue("encodedRightsTokenID",CallingTCase.getPropertyValue("RightsTokenID"));
}


testCase.setPropertyValue("PolicyLockerViewAllConsent",CallingTCase.getPropertyValue("PolicyLockerViewAllConsent"));
//Testing RightTokenCreate Request Properties Loaded correctly.

testCase.setPropertyValue("FeedRTCReq","OK");
CallingTCase.setPropertyValue("FeedRTCReq",testCase.getPropertyValue("FeedRTCReq"));</script></con:config>
      </con:testStep>
      <con:testStep type="delay" name="Delay" id="a1e5a6b8-eed7-4c6c-bebe-4d8564066826" disabled="true"><con:settings/><con:config><delay>190000</delay></con:config></con:testStep>
      <con:testStep type="groovy" name="pem set" id="7941add4-6c92-475e-903a-44887cc40132">
        <con:settings/>
        <con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String keyStorePath  = "";
String nodeId = testProject.getPropertyValue("Node_OID");
log.info "nodeid:"+nodeId;
testCase.setPropertyValue("keyStorePath","");

def myTC = testProject.getTestSuiteByName("E2E").getTestCaseByName("SetPem");

myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());

def runnerTC = myTC.run( null , false );

//assert runnerTC.status == Status.FINISHED;

keyStorePath = testCase.getPropertyValue("keyStorePath");

RestTestRequestStep testStep = testCase.getTestStepByName("RightsTokenGet byTokenID");
this.log.info "testStep [$testStep]";
soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);

</script></con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="RightsTokenGet byTokenID" id="f361fd3b-0661-4116-9c09-5d5179e94013">
        <con:settings/>
        <con:config service="RightsTokenGet" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/RightsToken/{RightsTokenID}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="RightsTokenGet byTokenID" mediaType="application/xml" sslKeystore="RET_CS_1_concat.pem" accept="">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI=" xmlns="http://eviware.com/soapui/config"/></con:setting>
            <con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings>
            <con:endpoint>${#Project#Provision_HostName}</con:endpoint>
            <con:request/>
            
            <con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:jmsPropertyConfig/>
            <con:parameters>
  <con:entry key="AccountID" value="${#TestCase#encodedAccountID}"/>
  <con:entry key="RightsTokenID" value="${#TestCase#encodedRightsTokenID}"/>
</con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      
      
      
      
      <con:properties>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Extract RightsToken-Create Information</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Common Test Steps</con:value>
        </con:property>
        <con:property>
          <con:name>AccountID</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>RightsTokenID</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>FeedRTCReq</con:name>
          <con:value>OK</con:value>
        </con:property>
        <con:property>
          <con:name>nodeid</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
        <con:property>
          <con:name>PolicyLockerViewAllConsent</con:name>
          <con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
        </con:property>
      <con:property><con:name>encodedAccountID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AEF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>encodedRightsTokenID</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AEF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property></con:properties>
      <con:reportParameters/>
    </con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Extract RightsToken-Get Information" searchProperties="true" id="27746a49-4b2e-4d60-a570-348946edd6ef">
      <con:settings/>
      <con:testStep type="groovy" name="Extract RightsTokenGet Response" id="c8e200c1-c750-4888-a4ca-3d2a8ed56e26">
        <con:settings/>
        <con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callingTSuiteName = testCase.getPropertyValue("TSuiteName");
def callingTCaseName = testCase.getPropertyValue("TCaseName");

def callingTCase = testProject.getTestSuiteByName(callingTSuiteName).getTestCaseByName(callingTCaseName)

// Http Header
def RightsResHeader = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenGet Request").getTestStepByName('RightsTokenGet byTokenID').httpRequest.response.getResponseHeaders(); 
def RightsResXml = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenGet Request").getTestStepByName('RightsTokenGet byTokenID').httpRequest.response.getContentAsString();
def RightsResTime = testRunner.testCase.testSuite.project.getTestSuiteByName("Common Test Steps").getTestCaseByName("RightsTokenGet Request").getTestStepByName('RightsTokenGet byTokenID').httpRequest.response.getTimeTaken();
def RightsResHttpStatus = RightsResHeader.getAt("#status#");

testCase.setPropertyValue("RightsResXml",RightsResXml);
testCase.setPropertyValue("RightsResTime",RightsResTime.toString());


// Rights Response Object type

def Val_RightsResXml =  new XmlSlurper().parseText(testCase.getPropertyValue("RightsResXml"));
def Resp_RightTokenObj = Val_RightsResXml.children().collect{ it[0].name()};
testCase.setPropertyValue("RTObjType", Resp_RightTokenObj[0]);
log.info Resp_RightTokenObj[0];

// Evaluate RightsToken Success &amp; Failure

if(RightsResHttpStatus[0] == "HTTP/1.1 200 OK")
{
log.info "Response Code : ${RightsResHttpStatus.toString()}";
log.info "Response Time : $RightsResTime:ms";
log.info "RightsObject Returned :"+ testCase.getPropertyValue("RTObjType");
}
else{
log.info " RightsToken Get failed - [ $RightsResHttpStatus ]"
log.info " Error Code Validation +++++ "
}
// Returns Rights Response Information
callingTCase.setPropertyValue("RightsResXml",testCase.getPropertyValue("RightsResXml"));
callingTCase.setPropertyValue("RightsResTime",testCase.getPropertyValue("RightsResTime"));
callingTCase.setPropertyValue("RTObjType",testCase.getPropertyValue("RTObjType"));
def expectedHeader=callingTCase.getPropertyValue("expectErrTypeRTGet");
log.info "expectedHeader: "+expectedHeader;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath 
//def logFile = new File(projectPath +"\\" +testSuite.project.name +".xls")
def etag= RightsResHeader.ETag.toString();
log.info "etag: "+etag;
//logFile.append("${callingTCaseName}"+"\t" +RightsResHeader.ETag.toString() +"\t"+ "$expectedHeader" +"\t"+"${RightsResHttpStatus.toString()}"  +"\n");
if (etag == 'null')
{
testProject.setPropertyValue("ETag",'*');
}
else
{
	testProject.setPropertyValue("ETag",'*');
	//testProject.setPropertyValue("ETag",RightsResHeader.ETag[0].toString());
}

</script></con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>RightsResXml</con:name>
          <con:value><![CDATA[<html><head><title>JBoss Web/2.1.3.GA - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 404 - /rest/1/21/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AEF900A05D353E6F7E0401F0A0599234B/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AEF8F51ED2E1C2ED2E0401F0A07991D59</h1><HR size="1" noshade="noshade"><p><b>type</b> Status report</p><p><b>message</b> <u>/rest/1/21/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AEF900A05D353E6F7E0401F0A0599234B/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AEF8F51ED2E1C2ED2E0401F0A07991D59</u></p><p><b>description</b> <u>The requested resource (/rest/1/21/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3AEF900A05D353E6F7E0401F0A0599234B/RightsToken/urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AEF8F51ED2E1C2ED2E0401F0A07991D59) is not available.</u></p><HR size="1" noshade="noshade"><h3>JBoss Web/2.1.3.GA</h3></body></html>]]></con:value>
        </con:property>
        <con:property>
          <con:name>RightsResTime</con:name>
          <con:value>11</con:value>
        </con:property>
        <con:property>
          <con:name>TCaseName</con:name>
          <con:value>Extract RightsToken-Create Information</con:value>
        </con:property>
        <con:property>
          <con:name>TSuiteName</con:name>
          <con:value>Common Test Steps</con:value>
        </con:property>
        <con:property>
          <con:name>RTObjType</con:name>
          <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RightsTokenFull</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase></con:testSuite><con:testSuite name="E2E" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" disabled="true" id="e0beba22-f62d-4073-87bc-ee9103950aa9"><con:settings/><con:testStep type="groovy" name="SetPem"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}

if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows";
            certPath = testProject.getPropertyValue("certsPath_Windows");
      } 
else 
      {
            log.info "it's not Windows"
            certPath = testProject.getPropertyValue("certsPath_Linux");
      }



File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>RightsTokenStatusUpdate Request</con:value></con:property><con:property><con:name>sName</con:name><con:value>Common Test Steps</con:value></con:property><con:property><con:name>nodeId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate API" searchProperties="true" id="189bc286-58c0-42c1-bcc4-63aaf0402555"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Set Environment Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def env = context.expand( '${#Project#ENV}' )
log.info 'Env == '+env

if (env == 'QALP1')
{
tP.setPropertyValue("Device_HostName","https://qa.d.uvvu.com:7001");
tP.setPropertyValue("nodeIdAccportal","ACCESS");
tP.setPropertyValue("nodeIdAccportalCS","ACCESCS");
tP.setPropertyValue("nodeIdCON","CON");
tP.setPropertyValue("nodeIdCONCS","CON_CS_1");
tP.setPropertyValue("nodeIdCoo","COO");
tP.setPropertyValue("nodeIdCoordCS","coord:cs");
tP.setPropertyValue("nodeIdDECE","DECE");
tP.setPropertyValue("nodeIdDECECS","dece:cs");
tP.setPropertyValue("nodeIdDEV","DEV");
tP.setPropertyValue("nodeIdDEVCS","DEV_CS_1");
tP.setPropertyValue("nodeIdDLASP","DLASP");
tP.setPropertyValue("nodeIdDLASPCS","DLASP_CS_1");
tP.setPropertyValue("nodeIdDSP","DSP");
tP.setPropertyValue("nodeIdDSPCS","DSP_CS_1");
tP.setPropertyValue("nodeIdLLASP","LLASP");
tP.setPropertyValue("nodeIdLLASPCS","LLASP_CS_1");
tP.setPropertyValue("nodeIdportal","iscportal1");
tP.setPropertyValue("nodeIdportalCS","isportalcs1");
tP.setPropertyValue("nodeIdRTL","RET");
tP.setPropertyValue("nodeIdRTLCS","RET_CS_1");
tP.setPropertyValue("Provision_HostName","https://qa.p.uvvu.com:7001");
tP.setPropertyValue("Query_HostName","https://qa.q.uvvu.com:7001");
tP.setPropertyValue("targerHostd","qa.d.uvvu.com");
tP.setPropertyValue("targetDeviceDomain","qa.d.uvvu.com:7001");
tP.setPropertyValue("targetHost","qa.p.uvvu.com");
tP.setPropertyValue("targetHostq","qa.q.uvvu.com");
tP.setPropertyValue("targetPort","7001");
tP.setPropertyValue("targetPortq","7001");
tP.setPropertyValue("targetSystem","LP1");
tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");
tP.setPropertyValue("targetUrlSHost","qa.s.uvvu.com:7001");
tP.setPropertyValue("TOUUrl","qa.c.uvvu.com:7001");
}
else if (env == "QALP2")
{
tP.setPropertyValue("Device_HostName","https://qa.d.uvvu.com:7002");
tP.setPropertyValue("nodeIdAccportal","ACCESS");
tP.setPropertyValue("nodeIdAccportalCS","ACCESCS");
tP.setPropertyValue("nodeIdCON","CON");
tP.setPropertyValue("nodeIdCONCS","CON_CS_1");
tP.setPropertyValue("nodeIdCoo","COO");
tP.setPropertyValue("nodeIdCoordCS","coord:cs");
tP.setPropertyValue("nodeIdDECE","DECE");
tP.setPropertyValue("nodeIdDECECS","dece:cs");
tP.setPropertyValue("nodeIdDEV","DEV");
tP.setPropertyValue("nodeIdDEVCS","DEV_CS_1");
tP.setPropertyValue("nodeIdDLASP","DLASP");
tP.setPropertyValue("nodeIdDLASPCS","DLASP_CS_1");
tP.setPropertyValue("nodeIdDSP","DSP");
tP.setPropertyValue("nodeIdDSPCS","DSP_CS_1");
tP.setPropertyValue("nodeIdLLASP","LLASP");
tP.setPropertyValue("nodeIdLLASPCS","LLASP_CS_1");
tP.setPropertyValue("nodeIdportal","iscportal1");
tP.setPropertyValue("nodeIdportalCS","isportalcs1");
tP.setPropertyValue("nodeIdRTL","RET");
tP.setPropertyValue("nodeIdRTLCS","RET_CS_1");
tP.setPropertyValue("Provision_HostName","https://qa.p.uvvu.com:7002");
tP.setPropertyValue("Query_HostName","https://qa.q.uvvu.com:7002");
tP.setPropertyValue("targerHostd","qa.d.uvvu.com");
tP.setPropertyValue("targetDeviceDomain","qa.d.uvvu.com:7002");
tP.setPropertyValue("targetHost","qa.p.uvvu.com");
tP.setPropertyValue("targetHostq","qa.q.uvvu.com");
tP.setPropertyValue("targetPort","7002");
tP.setPropertyValue("targetPortq","7002");
tP.setPropertyValue("targetSystem","LP2");
tP.setPropertyValue("targetURL","qa.p.uvvu.com:7002");
tP.setPropertyValue("targetUrlSHost","qa.s.uvvu.com:7002");
tP.setPropertyValue("TOUUrl","qa.c.uvvu.com:7002");
}
else if (env == "QALP3")
{
tP.setPropertyValue("Device_HostName","https://qa.d.uvvu.com:7003");
tP.setPropertyValue("nodeIdAccportal","ACCESS");
tP.setPropertyValue("nodeIdAccportalCS","ACCESCS");
tP.setPropertyValue("nodeIdCON","CON");
tP.setPropertyValue("nodeIdCONCS","CON_CS_1");
tP.setPropertyValue("nodeIdCoo","COO");
tP.setPropertyValue("nodeIdCoordCS","coord:cs");
tP.setPropertyValue("nodeIdDECE","DECE");
tP.setPropertyValue("nodeIdDECECS","dece:cs");
tP.setPropertyValue("nodeIdDEV","DEV");
tP.setPropertyValue("nodeIdDEVCS","DEV_CS_1");
tP.setPropertyValue("nodeIdDLASP","DLASP");
tP.setPropertyValue("nodeIdDLASPCS","DLASP_CS_1");
tP.setPropertyValue("nodeIdDSP","DSP");
tP.setPropertyValue("nodeIdDSPCS","DSP_CS_1");
tP.setPropertyValue("nodeIdLLASP","LLASP");
tP.setPropertyValue("nodeIdLLASPCS","LLASP_CS_1");
tP.setPropertyValue("nodeIdportal","iscportal1");
tP.setPropertyValue("nodeIdportalCS","isportalcs1");
tP.setPropertyValue("nodeIdRTL","RET");
tP.setPropertyValue("nodeIdRTLCS","RET_CS_1");
tP.setPropertyValue("Provision_HostName","https://qa.p.uvvu.com:7003");
tP.setPropertyValue("Query_HostName","https://qa.q.uvvu.com:7003");
tP.setPropertyValue("targerHostd","qa.d.uvvu.com");
tP.setPropertyValue("targetDeviceDomain","qa.d.uvvu.com:7003");
tP.setPropertyValue("targetHost","qa.p.uvvu.com");
tP.setPropertyValue("targetHostq","qa.q.uvvu.com");
tP.setPropertyValue("targetPort","7003");
tP.setPropertyValue("targetPortq","7003");
tP.setPropertyValue("targetSystem","LP3");
tP.setPropertyValue("targetURL","qa.p.uvvu.com:7003");
tP.setPropertyValue("targetUrlSHost","qa.s.uvvu.com:7003");
tP.setPropertyValue("TOUUrl","qa.c.uvvu.com:7003");
}
else if (env == "DEV")
{
tP.setPropertyValue("Device_HostName","https://lp2.dev.d.uvvu.com:8443");
tP.setPropertyValue("nodeIdAccportal","ISC_ACCESS");
tP.setPropertyValue("nodeIdAccportalCS","ISC_ACCESSCS");
tP.setPropertyValue("nodeIdCON","CON");
tP.setPropertyValue("nodeIdCONCS","CON_CS_1");
tP.setPropertyValue("nodeIdCoo","ISC_COO");
tP.setPropertyValue("nodeIdCoordCS","ISC_COOCS");
tP.setPropertyValue("nodeIdDECE","ISC_DECE");
tP.setPropertyValue("nodeIdDECECS","ISC_DECECS");
tP.setPropertyValue("nodeIdDEV","ISC_DEVICE");
tP.setPropertyValue("nodeIdDEVCS","ISC_DEVICECS");
tP.setPropertyValue("nodeIdDLASP","ISC_DLASP");
tP.setPropertyValue("nodeIdDLASPCS","ISC_DLASPCS");
tP.setPropertyValue("nodeIdDSP","ISC_DSP");
tP.setPropertyValue("nodeIdDSPCS","ISC_DSPCS");
tP.setPropertyValue("nodeIdLLASP","ISC_LLASP");
tP.setPropertyValue("nodeIdLLASPCS","ISC_LLASPCS");
tP.setPropertyValue("nodeIdportal","ISC_PORTAL");
tP.setPropertyValue("nodeIdportalCS","ISC_PORTALCS");
tP.setPropertyValue("nodeIdRTL","ISC_RET");
tP.setPropertyValue("nodeIdRTLCS","ISC_RETCS");
tP.setPropertyValue("Provision_HostName","https://lp2.dev.p.uvvu.com:8443");
tP.setPropertyValue("Query_HostName","https://lp2.dev.q.uvvu.com:8443");
tP.setPropertyValue("targerHostd","lp2.dev.d.uvvu.com");
tP.setPropertyValue("targetDeviceDomain","lp2.dev.d.uvvu.com:8443");
tP.setPropertyValue("targetHost","lp2.dev.p.uvvu.com");
tP.setPropertyValue("targetHostq","lp2.dev.q.uvvu.com");
tP.setPropertyValue("targetPort","8443");
tP.setPropertyValue("targetPortq","8443");
tP.setPropertyValue("targetSystem","DEV");
tP.setPropertyValue("targetURL","lp2.dev.p.uvvu.com:8443");
tP.setPropertyValue("targetUrlSHost","lp2.dev.s.uvvu.com:8443");
tP.setPropertyValue("TOUUrl","lp3.dev.uvvu.com:8443");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("accountname",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);

tC.setPropertyValue("ResponseType","SUCCESS");

tP.setPropertyValue("Request_XML",tP.getPropertyValue("Request_XML_Buffer"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

//def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);
def callTS = tP.getTestSuiteByName(callTSname);

tP.setPropertyValue("Country",callTS.getPropertyValue("Country"));
tC.setPropertyValue("nodeid",callTS.getPropertyValue("nodeid"));

def b = tC.getPropertyValue("nodeid");

log.info b;</script></con:config></con:testStep><con:testStep type="groovy" name="Set TOU Policy Resource"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def targetSystem = context.expand( '${#Project#targetSystem}' )

def policy_TOU = context.expand( '${#Project#Policy_TOU}' )
def v2 = context.expand( '${#Project#V2}' )

String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )
def targetPort = context.expand( '${#Project#targetPort}' )


def a = new dbUtils.dbUtils(log,targetSystem);
     
        String sql = """select consent_version from (select
            consent_version            
            from
            CONSENT
            where
            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
            and
            COUNTRY = '$country'
            order by
            consent_version desc)
            where rownum &lt; 2""";             


        
        log.info sql;
        
        results = a.SelectFromDB(sql,targetSystem);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                
//log.info "v2:"+v2;
def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

       tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');
</script></con:config></con:testStep><con:testStep type="groovy" name="Generate AccountName"><con:settings/><con:config><script>def tC = testRunner.getTestCase();

def today= new Date().format( 'yyyyMMdd_hhmms' );

tC.setPropertyValue("AccountName","accname_"+today);</script></con:config></con:testStep><con:testStep type="groovy" name="Set coordinatorSchema"><con:settings/><con:config><script>
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "V2: "+tP.getPropertyValue("V2");
if(tP.getPropertyValue("V2") == "07")
{
	tP.setPropertyValue("coordinatorSchema","http://www.decellc.org/schema/2013/06/coordinator");
	log.info "Setting the coordinatorSchema value at project level: http://www.decellc.org/schema/2013/06/coordinator";
	tP.setPropertyValue("SchemaNameSpace","http://www.decellc.org/schema/2013/06/coordinator");
}
else if(tP.getPropertyValue("V2") == "11")
{
	tP.setPropertyValue("coordinatorSchema","http://www.decellc.org/schema/2013/10/coordinator");
	log.info "Setting the coordinatorSchema value at project level: http://www.decellc.org/schema/2013/10/coordinator";
	tP.setPropertyValue("SchemaNameSpace","http://www.decellc.org/schema/2013/10/coordinator");
}

else if(tP.getPropertyValue("V2") == "21")
{
	tP.setPropertyValue("coordinatorSchema","http://www.decellc.org/schema/2013/10/coordinator");
	log.info "Setting the coordinatorSchema value at project level: http://www.decellc.org/schema/2013/10/coordinator";
	tP.setPropertyValue("SchemaNameSpace","http://www.decellc.org/schema/2013/10/coordinator");
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 
import soapUIUtils.soapUIUtils;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
//def certPath = groovyUtils.projectPath

//Set fileKeyStorePath value 
//log.info "certPath: "+certPath;
//tP.setPropertyValue("certPath",""+certPath);

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("SetPem")

myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="application/xml" sslKeystore="RET_CS_1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#TestCase#AccountName}</DisplayName>
<Country>${#Project#Country}</Country>
</Account>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="947149be-7bb0-4a3f-9591-1927886d48ad"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

</script></con:config></con:testStep><con:testStep type="groovy" name="Validate Response"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#V1}' );
String minor = context.expand( '${#Project#V2}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
      assert context.expand( '${#TestCase#httpLocation}') != null;

      //def a = context.expand( '${#TestCase#httpLocation}');
      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode")){
                                
		assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
                 
          int lastColon = urlStr.lastIndexOf(':');
	     int lastSlash = urlStr.lastIndexOf('/');
	     accountid     = urlStr.substring(lastColon + 1);
	     def node_Account = urlStr.substring(lastSlash + 1);
	      				 tP.setPropertyValue("Node_Account",node_Account);                       
                                 
                                tP.setPropertyValue("Node_Account_ID",node_Account);
                                log.info "node_Account---"+node_Account;

                                tP.setPropertyValue("Node_Account_OID",accountid);

                                c = new dbUtils.dbAccount(log,context.expand( '${#Project#targetSystem}' ));

                                def accountID = c.accountGetfromNodeAccountId(context.expand( '${#Project#Node_Account_OID}'));

                                log.info 'AccountID Retrived - ' + accountID;

                                tP.setPropertyValue("AccountOID",accountID);

          tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
                    
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);                        
          tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);                                                   
          
      } else {
            assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
            int lastColon = urlStr.lastIndexOf('%3A');
            int lastSlash = urlStr.lastIndexOf('/');
            accountid     = urlStr.substring(lastColon + 3);
            def node_Account = urlStr.substring(lastSlash + 1);
            tP.setPropertyValue("Node_Account",node_Account);                   

                                tP.setPropertyValue("Node_Account_ID",node_Account);

                                tP.setPropertyValue("Node_Account_OID",accountid);

                                c = new dbUtils.dbAccount(log,context.expand( '${#Project#targetSystem}' ));

                                def accountID = c.accountGetfromNodeAccountId(context.expand( '${#Project#Node_Account_OID}'));

                                log.info 'AccountID Retrived - ' + accountID;

                                tP.setPropertyValue("AccountOID",accountID);

            tC.setPropertyValue("NODE_ACCOUNT_ID",accountid);
            
            tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",node_Account);
		  tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",node_Account);
      }

} else {
      	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the NodeAccountId to the Calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("accountname",tC.getPropertyValue("accountname"));
callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));

def dbAccount = new dbUtils.dbAccount(log,context.expand( '${#Project#targetSystem}' ));

def a = dbAccount.accountGetfromNodeAccountId(tC.getPropertyValue("NODE_ACCOUNT_ID"));
		                  
tC.setPropertyValue("account_oid", a);
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));
</script></con:config></con:testStep><con:properties><con:property><con:name>httpConnect</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET_CS_1</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.</con:value></con:property><con:property><con:name>sName</con:name><con:value>E2E</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>accountname</con:name><con:value>accname_20140623_083919</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>EF900A05D354E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>b8ba87db-df08-4f36-8c88-c580bb3ec25b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9ce61892-9d8a-4055-b161-e19938292410</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c50a4409-da80-4892-a2c3-07a22e674bd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fd13479c-f25a-495b-8c94-31e5557a93a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>dbd205af-6a2e-447d-a1c5-eb49c82ff6e4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>64613dd6-4244-4f8a-8186-0d4745fa0115</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate API" searchProperties="true" id="3a190358-2084-4922-a573-50169dd408a6"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("userType",null);
tC.setPropertyValue("Privilege",null);
tC.setPropertyValue("Username",null);
tC.setPropertyValue("GivenName",null);
tC.setPropertyValue("SurName",null);
tC.setPropertyValue("PrimaryEmail",null);
tC.setPropertyValue("Language1",null);
tC.setPropertyValue("DisplayImageURL",null);
tC.setPropertyValue("AlternateEmail",null);
tC.setPropertyValue("PostalAddress",null);
tC.setPropertyValue("PostalCode",null);
tC.setPropertyValue("Locality",null);
tC.setPropertyValue("StateOrProvince",null);
tC.setPropertyValue("Country",null);
tC.setPropertyValue("TelephoneNumber",null);
tC.setPropertyValue("MobileTelephoneNumber",null);
tC.setPropertyValue("MeetsAgeOfMajority",null);
tC.setPropertyValue("DateOfBirth",null);
tC.setPropertyValue("urnUser",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("QuestionID1",null);
tC.setPropertyValue("QuestionResponse1",null);
tC.setPropertyValue("QuestionID2",null);
tC.setPropertyValue("QuestionResponse2",null);
tC.setPropertyValue("ResourceStatus",null);

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_USER_ID_FULL",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
tC.setPropertyValue("user_oid1",null);
tC.setPropertyValue("account_oid",null);

tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpLocation",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("ResponseType",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("ResponseType",callTC.getPropertyValue("ResponseTypeUserCreate"));

tC.setPropertyValue("Privilege",callTC.getPropertyValue("Privilege"));
tC.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("userType",callTC.getPropertyValue("userType"));
tC.setPropertyValue("GivenName",callTC.getPropertyValue("GivenName"));
tC.setPropertyValue("SurName",callTC.getPropertyValue("SurName"));
tC.setPropertyValue("PrimaryEmail",callTC.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("Language1",callTC.getPropertyValue("Language1"));
tC.setPropertyValue("DisplayImageURL",callTC.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",callTC.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",callTC.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",callTC.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",callTC.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",callTC.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",callTC.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",callTC.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",callTC.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",callTC.getPropertyValue("urnUser"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",callTC.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",callTC.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",callTC.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",callTC.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",callTC.getPropertyValue("ResourceStatus"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID", callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL", callTC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
tC.setPropertyValue("user_oid1",callTC.getPropertyValue("user_oid"));
tC.setPropertyValue("account_oid",callTC.getPropertyValue("account_oid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Setting constants based on Geo Profile"><con:settings/><con:config><script>import java.text.SimpleDateFormat;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/* Setting constants based on Geo Profile*/

if(tP.getPropertyValue("Country")=="US")
{
  tP.setPropertyValue("GeoProfile","US");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="CA")
{
  tP.setPropertyValue("GeoProfile","CA");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","13");
  tP.setPropertyValue("CHILD_MAX_AGE","12");
}
else
if(tP.getPropertyValue("Country")=="GB")
{
  tP.setPropertyValue("GeoProfile","GB");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AU")
{
  tP.setPropertyValue("GeoProfile","AU");          
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="NZ")
{
  tP.setPropertyValue("GeoProfile","NZ");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="IE")
{
  tP.setPropertyValue("GeoProfile","IE");             
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
else
if(tP.getPropertyValue("Country")=="AT")
{
  tP.setPropertyValue("GeoProfile","AT");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
else
if(tP.getPropertyValue("Country")=="DE")
{
  tP.setPropertyValue("GeoProfile","DE");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","14");
  tP.setPropertyValue("CHILD_MAX_AGE","13");
}
  else
if(tP.getPropertyValue("Country")=="CH")
{
  tP.setPropertyValue("GeoProfile","CH");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("YOUTH_MIN_AGE","16");
  tP.setPropertyValue("CHILD_MAX_AGE","15");
}
  else
if(tP.getPropertyValue("Country")=="FR")
{
  tP.setPropertyValue("GeoProfile","FR");           
  tP.setPropertyValue("ADULT_MIN_AGE","18");
  tP.setPropertyValue("CHILD_MAX_AGE","17");
}

	def userType = tC.getPropertyValue("userType")
	log.info "userType: "+userType;
	
	switch(userType){
	
	case "ADULT":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("ADULT_MIN_AGE").toInteger()+1)*365);
	log.info "Adult DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTH":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("YOUTH_MIN_AGE").toInteger()+1)*365);
	log.info "YOUTH DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "CHILD":
	
	Date dob = (new Date());
	dob = dob - ((tP.getPropertyValue("CHILD_MAX_AGE").toInteger()-1)*365);
	log.info "CHILD DateOfBirth: "+dob.format('yyyy-MM-dd');
	tC.setPropertyValue("DateOfBirth",dob.format('yyyy-MM-dd'));
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTPlus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "AdultPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "ADULTMinus":
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTHPlus":
		
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, -1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHPlus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob);
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd')); 
	break;

	case "YOUTHMinus":
   	
   	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, +1);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHMinus DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("CHILD_DOB_XML",dob.format('yyyy-MM-dd')); 
	break;

	case "ADULTToday":
	 
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear = today.get(Calendar.YEAR) - tP.getPropertyValue("ADULT_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "ADULTToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("ADULT_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	case "YOUTHToday":

	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	Calendar today = Calendar.getInstance();
	int curYear1 = today.get(Calendar.YEAR)- tP.getPropertyValue("YOUTH_MIN_AGE").toInteger();
	int curMonth = today.get(Calendar.MONTH);
	int curDay = today.get(Calendar.DAY_OF_MONTH);

	if(curDay==29){
		curDay==28
		}

	Date now = new Date(curYear1-1900,curMonth,curDay);  
	Calendar calendar = Calendar.getInstance();
	calendar.setTime(now);  
	calendar.add(Calendar.DAY_OF_YEAR, 0);
	def dob = sdf.format(calendar.getTime());
	log.info "YOUTHToday DateOfBirth: "+dob;
	tC.setPropertyValue("DateOfBirth",dob); 
	tC.setPropertyValue("YOUTH_DOB_XML",dob.format('yyyy-MM-dd'));
	break;

	default:
	log.info "userType is not matched!!"
	break;

	}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{AccountID}/User" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_CS_1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#Project#Request_XML}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1" id="dc7939c7-4e38-4936-ab5e-97a276c8b7cf"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#TestCase#NODE_ACCOUNT_ID_FULL}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 			
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');
def primaryEmail = context.expand( '${#TestCase#PrimaryEmail}');
//def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#V1}' );
String minor = context.expand( '${#Project#V2}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/

if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
		errorReason = "The supplied country code is invalid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
		expectHTTPconnection = "close";
	break;

	case "NULL_COUNTRY":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
		errorReason = "The country code cannot be null.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
		expectHTTPconnection = "close";
	break;
	
	case "API_NOT_AUTH":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
		errorReason = "API call not authorized";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserNotActive";
		errorReason = "User is not active";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
		errorReason = "Requesting User ID Not Specified";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
		expectHTTPconnection = "close";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
		errorReason = "The first member must be 18 years or older.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
		errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorReason = "The first member must be a full-access member.";
		errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;

	case "INVALID_PASSWORD":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "The password is not valid.";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPasswordNotValid";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPasswordNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_PRIMARY_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserPrimaryEmailNotValid";
		errorReason = "The primary email address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserPrimaryEmailNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_TELEPHONE":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserTelephoneNumberNotValid";
		errorReason = "The telephone number is not valid. - "+ context.expand('${#TestCase#TelephoneNumber}');
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserTelephoneNumberNotValid";
		expectHTTPconnection = "close";
	break;

	case "DUPLICATE_LANG":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserLanguageDuplicated";
		errorReason = "The language is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserLanguageDuplicated";
		expectHTTPconnection = "close";
	break;

	case "INVALID_ALTERNATE_EMAIL":
			expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
			errorID     = "urn:dece:errorid:org:dece:AccountUserAlternateEmailNotValid";

			if(tC.getPropertyValue("AlternateEmail")=="")
			{
			  errorReason = "The alternate email address is not valid.";
			}
			else
			{
				errorReason = "The alternate email address is not valid. - " + tC.getPropertyValue("AlternateEmail");
			}
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAlternateEmailNotValid";
			expectHTTPconnection = "close";
	break;	

	case "SaxParserException":
	     expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorReason = "cvc-complex-type.2.4.a: Invalid content was found starting with element 'AlternateEmail'. One of '{&quot;http://www.decellc.org/schema/2013/06/coordinator&quot;:Address, &quot;http://www.decellc.org/schema/2013/06/coordinator&quot;:TelephoneNumber, &quot;http://www.decellc.org/schema/2013/06/coordinator&quot;:MobileTelephoneNumber}' is expected.";
		errorID     = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#SaxParserException";
		expectHTTPconnection = "close";
	break;

	case "DUPLICATE_EMAIL":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserEmailAddressDuplicated";
		errorReason = "The email address is a duplicate.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserEmailAddressDuplicated";
		expectHTTPconnection = "close";
	break;

	case "INVALID_SECURITY_ANS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSecurityAnswerNotValid";
		errorReason = "The answer to the security question is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSecurityAnswerNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_DOB":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserBirthDateNotValid";
		errorReason = "The date of birth is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserBirthDateNotValid";
		expectHTTPconnection = "close";
	break;

	case "STATUS_NOT_ALLOWED":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:ResourceStatusElementNotAllowed";
		errorReason = "The resource status element is not allowed.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#ResourceStatusElementNotAllowed";
     break;

     case "INVALID_USER_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUsernameNotValid";
		errorReason = "The sign-in name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUsernameNotValid";
		expectHTTPconnection = "close";
	break;

	 case "ACC_STATUS_INVALID":
		expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountStatusNotValid";
		errorReason = "The account status is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountStatusNotValid";
		expectHTTPconnection = "close";
	break;

	case "ACC_NOT_MATCH_TOKEN":
	     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:AccountIdUnmatched";
		errorReason = "The account ID does not match.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountIdUnmatched";
	break;

	case "INVALID_GIVEN_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserGivenNameNotValid";
		errorReason = "The given name is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserGivenNameNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_ADDRESS":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserAddressNotValid";
		errorReason = "The address is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserAddressNotValid";
		expectHTTPconnection = "close";
	break;

	case "INVALID_SURNAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountUserSurnameNotValid";
		errorReason = "The surname is not valid.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountUserSurnameNotValid";
		expectHTTPconnection = "close";
	break;



}

tC.setPropertyValue("expectHTTPstatus",expectHTTPstatus);


// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;

//Content-Length
this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
/*
if (XMLbodynull) {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
} else {
	assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}
*/
//Location Header

if (httpLocationHeader) {
	 assert context.expand( '${#TestCase#httpLocation}') != null;

      def a = context.expand( '${#TestCase#httpLocation}');
      def b = a.toURL();
      def urlStr = b.getPath();

      if (tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode")){
                                
         assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
         
         int lastColon = urlStr.lastIndexOf(':');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 1);
         def node_User = urlStr.substring(lastSlash + 1);
         tP.setPropertyValue("Node_User",node_User);

                                  tP.setPropertyValue("NODE_USER_ID",node_User);

                                  tP.setPropertyValue("NODE_USER_OID",userid);
                                           
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL1",node_User);
      } else {
         assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
         int lastColon = urlStr.lastIndexOf('%3A');
         int lastSlash = urlStr.lastIndexOf('/');
         userid     = urlStr.substring(lastColon + 3);
         def node_User = urlStr.substring(lastSlash + 1);
          tP.setPropertyValue("Node_User",node_User);

           tP.setPropertyValue("NODE_USER_ID",node_User);
            tP.setPropertyValue("NODE_USER_OID",userid);
                                
         tC.setPropertyValue("NODE_USER_ID",userid);

         tC.setPropertyValue("NODE_USER_ID_FULL",node_User);
         tC.setPropertyValue("NODE_USER_ID_FULL1",node_User);
      }
                                
} else {
                                
       	assert context.expand( '${#TestCase#httpLocation}') == "";
}


//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		log.info errorLink;
		log.info myXML.Error.ErrorLink.toString()
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Extract_Account_OID_and_User_OID"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def dbUser;

def expectHTTPstatus = tC.getPropertyValue("expectHTTPstatus");

if (expectHTTPstatus == "HTTP/1.1 201 Created")
     {  	
  		def targetSystem = context.expand( '${#Project#targetsystem}' )
		
		try          {
		                dbUser = new dbUtils.dbUser(log,targetSystem);
		                }
		catch(Throwable e) {
		                log.info "ERROR - dbUtils.dbUser - $e";
		                assert 1 == 2;
		                }
		finally {
		         try {
		         		  def uname=tC.getPropertyValue("UserName").toLowerCase();
		         		  String u = dbUser.userGetUserOID(tC.getPropertyValue("UserName"));
		                 //String a = dbUser.userGetAccountOIDbyUsername(tC.getPropertyValue("UserName"))
					  String a = dbUser.userGetAccountOIDbyUsername(uname)
		                 assert u.length() > 0;
		                 assert a.length() > 0;
		                 
		                 tC.setPropertyValue("user_oid", u);
		                 tP.setPropertyValue("account_oid", a);
		                 
		              }
		          catch(Throwable e) {
		                 log.info "ERROR - dbUtils.userGetUserOID - $e";
		                 assert 1 == 2;                     
		     		     }
				}
     }
     else
     {
     	log.info ("Can not retreive User_OID for a negative scenario");
     }
     

</script></con:config></con:testStep><con:testStep type="groovy" name="Return the Username and NodeUserId to the Calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL1"));
callTC.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
tP.setPropertyValue("UserName",tC.getPropertyValue("UserName"));
callTC.setPropertyValue("user_oid1",tC.getPropertyValue("user_oid"));
callTC.setPropertyValue("account_oid",tC.getPropertyValue("account_oid"));
callTC.setPropertyValue("DateOfBirth",tC.getPropertyValue("DateOfBirth"));</script></con:config></con:testStep><con:properties><con:property><con:name>AlternateEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">test_rsu123@uvvutesting.biz</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value/></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>${#Project#coordinatorSchema}</con:value></con:property><con:property><con:name>Country</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1995-01-14</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>FirstFullUsername</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>GivenName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/User/urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>Language1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</con:value></con:property><con:property><con:name>Locality</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">full</con:value></con:property><con:property><con:name>QuestionID</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1650</con:value></con:property><con:property><con:name>QuestionResponse</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>ResponseType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>sName</con:name><con:value>E2E</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">+1.703598741</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.</con:value></con:property><con:property><con:name>urnUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>userType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ADULT</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>user_oid</con:name><con:value>EF8F74F6BDA7D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>EF900A05D354E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E8DF1631C1AC7AB0E0401F0A07995186</con:value></con:property><con:property><con:name>expectHTTPstatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1995-01-14</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-10-19</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1999-10-20</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3d78db1c-105b-43a0-b406-6bb0f690c833</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>662fb201-c4e7-401c-b10a-548ea13f5020</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6afcd2ee-d125-48d3-86d9-0b8f90dcad31</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="STS_API" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="34adde46-6c1e-41ac-af39-cb3336f6338c">
      <con:settings/>
      <con:testStep type="groovy" name="Establish Test Case Properties">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("audience",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);

tC.setPropertyValue("expectErrType","SUCCESS");</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract Required Properties from Calling Test Case">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

def callTS = tP.getTestSuiteByName(callTSname);

tC.setPropertyValue("audience",callTS.getPropertyValue("audience"));

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("UserName"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));

if( tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
	tC.setPropertyValue("audience","urn%3Adece%3Aorg%3Aorg%3Adece%3ARET_CS_1");
}
else
{
	tC.setPropertyValue("tokentype",URLEncoder.encode(tP.getPropertyValue("urntokenType_userpassword"), "UTF-8"));
	tC.setPropertyValue("audience","urn%3Adece%3Aorg%3Aorg%3Adece%3ARET_CS_1");
}

	</script></con:config>
      </con:testStep>
      
      
      
      
      <con:testStep type="groovy" name="Establish pem">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - STS");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");

def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config>
      </con:testStep>
      
      <con:testStep type="restrequest" name="POST - STS"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/SecurityToken/SecurityTokenExchange?tokentype={tokentype}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - STS" mediaType="application/xml" postQueryString="false" accept="" sslKeystore="RET_CS_1_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
  <Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#username}</Username> 
  <Password>${#TestCase#password}</Password> 
  </Credentials>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="audience" value="${#TestCase#audience}"/>
  <con:entry key="tokentype" value="${#TestCase#tokentype}"/>
</con:parameters></con:restRequest></con:config></con:testStep>
      <con:testStep type="groovy" name="Extract Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep = tC.getTestStepByName('POST - STS');

tC.setPropertyValue("status", null);
tC.setPropertyValue("connection", null);
tC.setPropertyValue("contentType", null);
tC.setPropertyValue("contentLength", null);
tC.setPropertyValue("contentLocation", null);
/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("V1");
String minor = tP.getPropertyValue("V2");

tP.setPropertyValue("targetURL","qa.p.uvvu.com:7001");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);

this.log.info "contentLength [$contentLength]";
this.log.info "status [$status]";
this.log.info "contentType [$contentType]";
this.log.info "contentLocation [$contentLocation]";

/*
 *if (contentLength.toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
     rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);

     int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
  
	String XMLbody  = strVal.substring(startAssert, strVal.length());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}
*/</script></con:config>
      </con:testStep>
      <con:testStep type="groovy" name="Extract ERROR table information" disabled="true">
        <con:settings/>
        <con:config>
          <script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrType[" + tC.getPropertyValue("expectErrType") + "]";

switch (tC.getPropertyValue("expectErrType")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script>
        </con:config>
      </con:testStep>
      
      <con:testStep type="groovy" name="Verify Response Body and Headers and save assertion">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String major = context.expand( '${#Project#V1}' );
String minor = context.expand( '${#Project#V2}' );
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = true;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection
log.info "doConnectionClose=="+doConnectionClose;
if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	assert tC.getPropertyValue("contentLength").toInteger() > 0;
} else {
	assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
log.info "doContentLocaton=="+doContentLocaton;
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	log.info "Path=="+b.getPath();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	//assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
	}
}</script></con:config>
      </con:testStep>
      
      
      
      
      
      
      
      
      
      
      <con:testStep type="groovy" name="Return the assertion information to the Calling Test Case">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionUUID",tC.getPropertyValue("assertionUUID"));
callTC.setPropertyValue("assertionUUID1",tC.getPropertyValue("assertionUUID"));</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="GET - STS"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/SecurityToken/Assertion/{ASSERTION}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="RET_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ASSERTION" value="${#TestCase#assertionUUID}"/>
  <con:entry key="assertionUUID" value="${#TestCase#assertionUUID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def tStep  = tC.getTestStepByName('GET - STS');

/*
*  Get the HTTP headers
*/
String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("V1");
String minor = tP.getPropertyValue("V2");
String XMLbody = "";

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();

rawResp = new ByteArrayOutputStream();

rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
log.info  "startAssert: "+startAssert;

if (startAssert > 0) {
	XMLbody  = strVal.substring(startAssert, strVal.length());
}

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
tC.setPropertyValue("contentLength", contentLength);
tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Extract Key Elements from &lt;Assertion> Body">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

int lastColon = 0;
int lastSlash = 0;

if (expectErrType == "" || expectErrType == "SUCCESS") {
	tC.setPropertyValue("SAML",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID",null);
	tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",null);
	tC.setPropertyValue("NODE_USER_ID",null);
	tC.setPropertyValue("NODE_USER_ID_FULL",null);
	
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

			// Verify response sizes...
			assert myXML.size() == 1;

			def accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
			def userId    = myXML."saml2:Subject"."saml2:NameID";
			def NotBefore = myXML."saml2:Conditions".@NotBefore.text();
			def NotOnOrAfter = myXML."saml2:Conditions".@NotOnOrAfter.text();
			def AudienceRestriction = myXML."saml2:Conditions".AudienceRestriction;
			
			this.log.info "accountId [$accountId]";
			this.log.info "userId [$userId]";
			this.log.info "NotBefore [$NotBefore]";
			this.log.info "NotOnOrAfter [$NotOnOrAfter]";
			this.log.info "AudienceRestriction [$AudienceRestriction]";
						
			tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
			tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
			tC.setPropertyValue("assertionNotBefore",NotBefore.toString());
			tC.setPropertyValue("assertionNotOnOrAfter",NotOnOrAfter.toString());
			tC.setPropertyValue("assertionAudienceRestriction",NotBefore.toString());
			tC.setPropertyValue("NODE_ACCOUNT_ID",accountId.toString().substring(accountId.toString().lastIndexOf(':') + 1).toString());
			tC.setPropertyValue("NODE_USER_ID",userId.toString().substring(userId.toString().lastIndexOf(':') + 1).toString());

			if (tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
			{
                    tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",accountId.toString());
				tC.setPropertyValue("NODE_USER_ID_FULL",userId.toString());
        	     } 
        	     else 
        	     {
				tC.setPropertyValue("NODE_ACCOUNT_ID_FULL",URLEncoder.encode(accountId.toString()));
				tC.setPropertyValue("NODE_USER_ID_FULL",URLEncoder.encode(userId.toString()));        	     	
		     }
	} 
	else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def expectErrType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = false;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/dece/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 200 OK";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml;charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
	default:
		expectHTTPstatus = "HTTP/1.1 200 OK";
		expectHTTPcontenttype = "application/xml";
		contentLengthZero = false;
		doContentLocaton  = false;
		doContentTypeHeader = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
//assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}
/*
//Content-Length
if (contentLengthZero) {
	assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
*/	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/dece/SecurityToken/Assertion/[0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.saml2:Assertion.size() == 1;
		assert myXML.ds:Signature.size()    == 1;
		assert myXML.ds:SignedInfo.size()   == 1;
		assert myXML.ds:DigestValue.size()  == 1;
		assert myXML.ds:SignatureValue.size()  == 1;
		assert myXML.ds:X509Certificate.size() == 1;
		assert myXML.saml2:NameID.size()    == 1;
		assert myXML.saml2:AudienceRestriction.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
		assert myXML.saml2:AssertionURIRef.size() == 1;
/*
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
		*/
	} else {
		return false;
	}
}



</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>">
        <con:settings/>
        <con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)


int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");


String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);
// finally, URL encode it
tC.setPropertyValue("SAML", "SAML2 Assertion="+base64encodeStr);


</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Return extracted Properties back to calling Test Case">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctID = tC.getPropertyValue("NODE_ACCOUNT_ID");
String userID = tC.getPropertyValue("NODE_USER_ID");

callTC.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
tP.setPropertyValue("SAML",tC.getPropertyValue("SAML"));
//callTC.setPropertyValue("SAML_USER1",tC.getPropertyValue("SAML"));

if (acctID != null &amp;&amp; acctID.length() > 0) {
	
	callTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID1",tC.getPropertyValue("NODE_ACCOUNT_ID"));
	callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
	//callTC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionAccountId","ERROR");
}
if (userID != null &amp;&amp; userID.length() > 0) {
	callTC.setPropertyValue("NODE_USER_ID",tC.getPropertyValue("NODE_USER_ID"));
	//callTC.setPropertyValue("NODE_USER_ID1",tC.getPropertyValue("NODE_USER_ID"));
	callTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL"));
	//callTC.setPropertyValue("NODE_USER_ID_FULL1",tC.getPropertyValue("NODE_USER_ID_FULL"));
} else {
	callTC.setPropertyValue("assertionUserId","ERROR");
}
</script></con:config>
      </con:testStep><con:properties>
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
      <con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted.</con:value></con:property><con:property><con:name>sName</con:name><con:value>E2E</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>audience</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn%3Adece%3Aorg%3Aorg%3Adece%3ARET_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>connection</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>contentType</con:name><con:value>text/xml;charset=UTF-8</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>2933</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>assertionUUIDprior</con:name><con:value>_732606f9-3702-470e-9ecf-2bbb514a18ba</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_f0713d3b-da34-4460-831e-c19c453793bf</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<saml2:Assertion ID="_f0713d3b-da34-4460-831e-c19c453793bf" IssueInstant="2014-01-09T19:59:30.202Z" Version="2.0" xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
<ds:Reference URI="#_f0713d3b-da34-4460-831e-c19c453793bf">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
<ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces PrefixList="ds saml2 xs xsi" xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#"/></ds:Transform>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/>
<ds:DigestValue>dabAPolJtg9GBLQ8w3yFj0br+QE=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue>
rqGLxfKVao6B6D30vp3UApJyGvjDqHoQUu2t7wViX93uX40T0YCHkNn/qnC+tBjWdTqLREKnk8M/
kbpAGtv124Vak/iIwhVrszWh1++1YH3Oa90/3PdQnhYJOLEOYLI5z0rqNvl79S542ubuwSudh7Gc
2xXE9qJOvrk1WyiHV/4=
</ds:SignatureValue>
</ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_2EE54ACC014FC292BA64AA0887A7BE30" NotOnOrAfter="2014-01-09T22:59:30.202Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/RET_CS_1"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2014-01-09T19:59:20.202Z" NotOnOrAfter="2014-01-10T01:59:30.202Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:RET_CS_1</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa.q.uvvu.com:7001/rest/1/07/SecurityToken/Assertion/_f0713d3b-da34-4460-831e-c19c453793bf</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2014-01-09T19:59:30.202Z" SessionIndex="_f0713d3b-da34-4460-831e-c19c453793bf"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>username1</con:name><con:value>firstuser20130726_035156</con:value></con:property><con:property><con:name>SAML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI=</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>assertionNotBefore</con:name><con:value>2014-01-09T19:59:20.202Z</con:value></con:property><con:property><con:name>assertionNotOnOrAfter</con:name><con:value>2014-01-10T01:59:30.202Z</con:value></con:property><con:property><con:name>assertionAudienceRestriction</con:name><con:value>2014-01-09T19:59:20.202Z</con:value></con:property><con:property><con:name>assertId</con:name><con:value>_f0713d3b-da34-4460-831e-c19c453793bf</con:value></con:property></con:properties>
      <con:reportParameters/>
    <con:breakPoints><con:testStepId>555384c9-6fa2-448b-a38e-713264e945f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateULC_API" searchProperties="true" id="35120891-026a-4808-9a1d-2955eb353f58"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if( tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:UserLinkConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:UserLinkConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_ULC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ULC"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ULC" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_ULC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI=</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E26A4604E1520139E0401F0A05990BBB</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/User/urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1/Policy/urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:UserLinkConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43c5dbf9-3574-4373-9d3f-f1b49a7247c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateTOU_API" searchProperties="true" id="297cdef7-3106-4827-85fe-b6ca337ceab5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if( tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:TermsOfUse");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:TermsOfUse", "UTF-8"));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
    <dece:Resource>${#Project#policy_TOU}</dece:Resource>
    <dece:RequestingEntity>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_TOU');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/User/urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI=</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateCLGAttestation" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if( tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:CLGAttestation");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:CLGAttestation", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

//tC.setPropertyValue("Policy_Class", "urn:dece:type:policy:CLGAttestation");


</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_CLGAttestation"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_CLGAttestation" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CHILD}</dece:Resource>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_CLGAttestation');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZdc5s6EH3vr2DoYwcDNsSGiT2DjdPQfPXGbtLm5Y4iFlsNSAQJ2/Gvr4QDsR0nN71PjJbV7tndoyMdc5SlbT/gHApBGNWisK//e+QmGFle18DYSgyn20mMe3x/b/Q8z3Vtr4MccHQt4ryEiHKBqOjrbcvuGLZltNtTy/Nt1+/YrV6vfadrN1BwGVq6tCxdW2Up5X6Vtq+XBfUZ4oT7FGXAfYH9SXBx7ktPH9WY9MHxBmWVsBjMhch908StGDCkKW5hlpnH5o7Pccz9CZlRJMoCnnPGvK8/710ul61lp8WKmdm2LMu0PFP6xJzMPuuDT/VmiCOasM16hCijBKOUrJECdQFizmItSGesIGKevRHaNm1LhTZghQ1sO/Szbr4kqNB9MNIOyIIjg8+RXQe7hgQKoBi0H9dRX//8sQlu9k4LRHnCiozvrf8OEtAFpCyH2OB1ZTW6j0c80K7BMWA/ojgtOVnApaJJjjBw7XsBCVmdEy7JF3OtGr+24jXDAP/NSI7NbZwStnmgMyGZARf/Z17bs9pEuUFpCQPAhXs7KZyjYi2m6PSKn/0e8snKWV/+6lcQtp03oJpRP6/3idrw6nnTxWNhR19ufn25PV0vpvmCjs3R0e169nSZz76Gobg4W7oZGTo/GQTmHb8Kn+yT0fDyzl6ObebyH+O2t15aj+Fk5n39lKzcuOvxUfDdc76U39bon9Rh31Zfj4QZJxnKHh4scZ6cehgNeZ4Pp7dx5+zsfCHsHrs0g2vxkHeyc+chcTpe9Mk6Or1K8PJ2HfQeoruTcH6x7L/UtF3DrrGWg0l5/xuwqJeKGlGonch5IfG+tCgLiY2kcvVzpU9cABX6QO1SsuKXUnxI7MthbtZjz7VDa9gb9sKh7YTh2HIs+8QKLNfz7G4Y1PqzQbEHccRoQlQupbAb/rwPEGc+BxpDYSxYiefA9XcihkggLaLX8mAwymHKpIJ3eyf2SWfc7rjDUKILOl6vGzieFbreqDcKQ127ZOKKXhVBIqDYUW+7vaPe14BJTkBJvOI5l0TnQrbkES1KkdqtBWpRKOUlUCgd9ttOzzU5yfIUFGAzY3GZQiuf51WDTL75tg2EeWW9Hk+r8/dmefv/6k5In5goB65qGYKcJhy4htp1IW8X7G4XXIcPypioYybbKgqCN0h2f72wRdGkoYqsqIbceO4bdqKa+wU1ieIFwQ3fm0taarxUgUE9jkfUemyVi0VZDaCrFK6Q4U3btLrmBHApZeppyh6Amk0I80M3RIN6L3Nj38VXijmdCCQgk3TRquUHngcT4Op5EEm6rz769thJKfsmYCUO2UapfEUoxO8+NLCPlZ80f5efJSvil3EdiLWVR9Yp3wSC0Jlaqfvg6Q1SYCbDEilgrNgOfijAoeS7xqbJDRYh2XRfCnj7j6aUqa8jjFlJRaQUQBq21bLCKZ5y8F+cXoWpFPn5il3xN6/YnxfnE6lbGdIbX/Lfzgap6IJB7uKkwtLXV/K1KJPT2ZY6PwM8LNCj8D2B3q1k8Mr82rLV0/3zMPgD</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00012_UserCreate_Child_BAU and COPPA_TOU is accepted.</con:value></con:property><con:property><con:name>sName</con:name><con:value>UVConnect_Users</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E48705C62976FCB4E0401F0A079971D7</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>E951D0B8B8CD14DDE0401F0A059917DA</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:E951D0B8B8CD14DDE0401F0A059917DA/User/urn:dece:userid:org:dece:E951D0B8B91E14DDE0401F0A059917DA/Policy/urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:CLGAttestation</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:/certs/RET_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E951D0B8B91E14DDE0401F0A059917DA</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E951D0B8B8CD14DDE0401F0A059917DA</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E486FC50804D1AE5E0401F0A05991EF2</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E2E22E83505CC024E0401F0A0599357E</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E951D0B8B8DB14DDE0401F0A059917DA</con:value></con:property><con:property><con:name>CHILD_NODE_USER_ID</con:name><con:value>E2E25B1DF5BEDD19E0401F0A07991448</con:value></con:property><con:property><con:name>NODE_USER_ID_CHILD</con:name><con:value>E951D0B8B91E14DDE0401F0A059917DA</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMAC" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("NODE_USER_ID",null);
tC.setPropertyValue("NODE_ACCOUNT_ID",null);
tC.setPropertyValue("ENCODED_NODE_USER_ID",null);
tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("SAML",null);
tC.setPropertyValue("expectErrType",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Required Properties from Calling Test Case"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("NODE_ACCOUNT_ID",callTC.getPropertyValue("NODE_ACCOUNT_ID"));
tC.setPropertyValue("NODE_USER_ID",callTC.getPropertyValue("NODE_USER_ID"));
if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", URLEncoder.encode("urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"), "UTF-8"));
			}else{
			tC.setPropertyValue("ENCODED_NODE_ACCOUNT_ID", "urn:dece:accountid:org:dece:"+callTC.getPropertyValue("NODE_ACCOUNT_ID"));
			}
tC.setPropertyValue("SAML","SAML2 Assertion="+callTC.getPropertyValue("assert"));
tC.setPropertyValue("expectErrType",callTC.getPropertyValue("PolicyCreateResponseType"));
tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageAccountConsent", "UTF-8"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MAC");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_MAC"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/Policy/{PolicyClass}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_MAC" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="7600.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageAccountConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:accountid:org:dece:${#TestCase#NODE_ACCOUNT_ID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#ENCODED_NODE_ACCOUNT_ID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MAC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                               log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";
if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_11018 - STSCreate - retailer - unamepasswd - Different users on save account share same node accountID - P2</con:value></con:property><con:property><con:name>sName</con:name><con:value>1_STS Create Tokentype unamepasswd - Payload</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>DC428B882C31FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>DC428B882C23FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>7600</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 400 Bad Request</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>829</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:DC428B882C23FB8CE0401F0A07996D53/Policy/urn:dece:type:policy:ManageAccountConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3ADC428B882C23FB8CE0401F0A07996D53</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Users\raju.ganji\Desktop\STSAPI_Projects\7600.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreateMUC_API" searchProperties="true" id="61fc8f62-cd12-436f-9159-afb6294eef3d"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("httpStatus",null);
tC.setPropertyValue("httpConnect",null);
tC.setPropertyValue("httpContentType",null);
tC.setPropertyValue("httpContentLength",null);
tC.setPropertyValue("httpLocation",null);

tC.setPropertyValue("expectErrType","SUCCESS");

if( tP.getPropertyValue("V2") != tP.getPropertyValue("versionURLEncode"))
{
	tC.setPropertyValue("Policy_Class","urn:dece:type:policy:ManageUserConsent");
}
else
{
	tC.setPropertyValue("Policy_Class", URLEncoder.encode("urn:dece:type:policy:ManageUserConsent", "UTF-8"));
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeId"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyCreateSinglePolicyPost_MUC");
def keyStorePath = tC.getPropertyValue("keyStorePath");

this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_MUC"><con:settings/><con:config service="E2EServices" resourcePath="/rest/${#Project#V1}/${#Project#V2}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_MUC" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="RET_CS_1_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#TestCase#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.settings.CommonSettings@entitizeProperties">false</con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd"  xmlns:dece="${#Project#coordinatorSchema}"  xmlns:ds="http://www.w3.org/2000/09/xmldsig#"  xmlns:md="http://www.movielabs.com/md"  xmlns:xenc="http://www.w3.org/2001/04/xmlenc#"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <dece:Policy>
    <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
    <dece:Resource>urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_REQ_ENTITY}</dece:Resource>
    <dece:RequestingEntity>urn:dece:org:org:dece:${#TestCase#nodeid}</dece:RequestingEntity>
    <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
    <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#NODE_USER_ID_CREATED_BY}">
        <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
    </dece:ResourceStatus>
  </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#TestCase#NODE_USER_ID_FULL}"/>
  <con:entry key="PolicyClass" value="${#TestCase#Policy_Class}"/>
  <con:entry key="NodeAccountId" value="${#TestCase#NODE_ACCOUNT_ID_FULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyCreateSinglePolicyPost_MUC');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

tStep.httpRequest.response.responseHeaders.each() { header, value ->
                switch (header) {
                                case "Location": 
                                             log.info "V2: "+tP.getPropertyValue("V2");
			if (tP.getPropertyValue("V2")=="06" || tP.getPropertyValue("V2")=="07"){
			contentLocation = URLDecoder.decode(value[0], "UTF-8");
			}else{
				contentLocation = value[0];
			}
                                                break;
                                case "#status#": 
                                                status = value[0]; 
                                                break;
                                case "Connection": 
                                                connection = value[0]; 
                                                break;
                                case "Content-Type": 
                                                contentType = value[0]; 
                                                break;
                                case "Content-Length": 
                                                contentLength = value[0]; 
                                                break;
                                case "Transfer-Encoding": 
                                                httpContentEncoding = value[0]; 
                                                break;
                }
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrType");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 201 Created";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml";

if (errorRespType == "" || errorRespType == null) {
	errorRespType = "SUCCESS";
}
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
                case "SUCCESS":
                                expectHTTPstatus = "HTTP/1.1 201 Created";
                break;
}
                
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;</script></con:config>
      </con:testStep><con:properties><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI=</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00005_UserUpdate_FUNC_NonCS_Full_Update_UserName_Others</con:value></con:property><con:property><con:name>sName</con:name><con:value>User_Update_Access_NonCS</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>contentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa.q.uvvu.com:7001/rest/1/06/Account/urn:dece:accountid:org:dece:D12F2DD48A10D559E0401F0A059918B0/User/urn:dece:userid:org:dece:D12F2DD48A1ED559E0401F0A059918B0/Policy/urn:dece:type:policy:TermsOfUse</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml;charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/07/Account/urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B/User/urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1/Policy/urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn:dece:type:policy:ManageUserConsent</con:value></con:property><con:property><con:name>ENNODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AD3CD43AEEE91F252E0401F0A079913BF</con:value></con:property><con:property><con:name>ENNODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AD3CD44C830AA5460E0401F0A079913BD</con:value></con:property><con:property><con:name>ENCODED_NODE_USER_ID</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE1B04F1ACAC275C1E0401F0A079905C0</con:value></con:property><con:property><con:name>ENCODED_NODE_ACCOUNT_ID</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE1B04F1ACAA475C1E0401F0A079905C0</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs//RET_CS_1_concat.pem</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E4E99389111664AEE0401F0A07990AF6</con:value></con:property><con:property><con:name>NODE_USER_ID_REQ_ENTITY</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID_CREATED_BY</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ce02e137-2b56-4bd6-a4b9-e1e9fdc05e16</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>46677643-d11e-4e41-a0a4-e6e1d2901adb</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bd6efb96-bbf3-4226-9917-48245caf20c5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_00002_UV_UserCreate_ Adult_FAU_TOU_Accepted." searchProperties="true" id="dab8a938-6c1a-43ec-bfa6-a56ac699ae15"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue(tS.getPropertyValue("role")));



</script></con:config></con:testStep><con:testStep type="groovy" name="Call Account Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("AccountCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Feed data for First User Create"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def uname= "uv_adult_fau_"+new Date().format( 'yyMMdd_hhmms' );

tC.setPropertyValue("ResponseTypeUserCreate","SUCCESS");

tC.setPropertyValue("userType","ADULT");
tC.setPropertyValue("Privilege","full");
tC.setPropertyValue("GivenName",uname);
tC.setPropertyValue("SurName",uname);
tC.setPropertyValue("UserName",uname);

tC.setPropertyValue("PrimaryEmail",tP.getPropertyValue("PrimaryEmail"));
tC.setPropertyValue("DisplayImageURL",tP.getPropertyValue("DisplayImageURL"));
tC.setPropertyValue("AlternateEmail",tP.getPropertyValue("AlternateEmail"));
tC.setPropertyValue("PostalAddress",tP.getPropertyValue("PostalAddress"));
tC.setPropertyValue("PostalCode",tP.getPropertyValue("PostalCode"));
tC.setPropertyValue("Locality",tP.getPropertyValue("Locality"));
tC.setPropertyValue("StateOrProvince",tP.getPropertyValue("StateOrProvince"));
tC.setPropertyValue("Country",tP.getPropertyValue("Country"));
tC.setPropertyValue("TelephoneNumber",tP.getPropertyValue("TelephoneNumber"));
tC.setPropertyValue("MobileTelephoneNumber",tP.getPropertyValue("MobileTelephoneNumber"));
tC.setPropertyValue("Language1",tP.getPropertyValue("Language1"));
tC.setPropertyValue("MeetsAgeOfMajority",tP.getPropertyValue("MeetsAgeOfMajority"));
tC.setPropertyValue("urnUser",tP.getPropertyValue("urnUser"));
tC.setPropertyValue("password",tP.getPropertyValue("password"));
tC.setPropertyValue("QuestionID1",tP.getPropertyValue("QuestionID1"));
tC.setPropertyValue("QuestionResponse1",tP.getPropertyValue("QuestionResponse1"));
tC.setPropertyValue("QuestionID2",tP.getPropertyValue("QuestionID2"));
tC.setPropertyValue("QuestionResponse2",tP.getPropertyValue("QuestionResponse2"));
tC.setPropertyValue("ResourceStatus",tP.getPropertyValue("ResourceStatus"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Call First User Create"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("FirstUserCreate API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS API for First User">
        <con:settings/>
        <con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("STS_API")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

tC.setPropertyValue("SAML_USER1",context.expand( '${#TestCase#SAML}'));
tC.setPropertyValue("NODE_ACCOUNT_ID1",context.expand( '${#TestCase#NODE_ACCOUNT_ID}'));
tC.setPropertyValue("NODE_ACCOUNT_ID_FULL1",context.expand( '${#TestCase#NODE_ACCOUNT_ID_FULL}'));
tC.setPropertyValue("NODE_USER_ID1",context.expand( '${#TestCase#NODE_USER_ID}'));
tC.setPropertyValue("NODE_USER_ID_FULL1",context.expand( '${#TestCase#NODE_USER_ID_FULL}'));
</script></con:config>
      </con:testStep><con:testStep type="groovy" name="Call Policy Create - TOU"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("PolicyCreateTOU_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - ULC"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("PolicyCreateULC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call Policy Create - MUC"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("E2E").getTestCaseByName("PolicyCreateMUC_API")

myTC.setPropertyValue("nodeid",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("SAML",tC.getPropertyValue("SAML_USER1"));
myTC.setPropertyValue("NODE_USER_ID_REQ_ENTITY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_USER_ID_CREATED_BY",tC.getPropertyValue("NODE_USER_ID1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID",tC.getPropertyValue("NODE_ACCOUNT_ID"));
myTC.setPropertyValue("NODE_USER_ID_FULL",tC.getPropertyValue("NODE_USER_ID_FULL1"));
myTC.setPropertyValue("NODE_ACCOUNT_ID_FULL",tC.getPropertyValue("NODE_ACCOUNT_ID_FULL"));


def runnerTC = myTC.run( null , false );
if (runnerTC.status == Status.FINISHED){
	tC.setPropertyValue("E2EStatus","FINISHED");
}
else{
	tC.setPropertyValue("E2EStatus",null);
}

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Disable TCs if E2E Failed" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase()
def tS = tC.getTestSuite()
def tP = tS.getProject()


def testSuite = tS.name;
def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList(); 
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();
log.info "TestSuite  " + testSuite +"  TCCount:"+TCCount;

if (tC.getPropertyValue("E2EStatus") != "FINISHED")
	{                    
		for(i in (0..TCCount-1))                                                                  
          {     
          	if (TCList[i].name != tC.name)
	          	{ 
	          		def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	                    targetTestCase.disabled = true;
	           	}
                                                 
            }
	}
else
	{
		for(i in (0..TCCount-1))                                                                  
          {     
          	if (TCList[i].name != tC.name)
	          	{ 
	          		def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	                    targetTestCase.disabled = false;
	           	}
                                                 
            }
	}


</script></con:config></con:testStep><con:properties><con:property><con:name>accountname</con:name><con:value>accname_20140109_025929</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>EF900A05D354E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1994-10-21</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_rsu123@uvvutesting.biz</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>ERROR</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_f0713d3b-da34-4460-831e-c19c453793bf</con:value></con:property><con:property><con:name>assertionUUID1</con:name><con:value>_f0713d3b-da34-4460-831e-c19c453793bf</con:value></con:property><con:property><con:name>assertionUUID2</con:name><con:value>_ccd8a52c-110d-4d18-ad98-45a1a1dba01c</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>1997-10-17</con:value></con:property><con:property><con:name>CLG_NODE_USER_ID</con:name><con:value>E8DF1F23CF76E5BCE0401F0A05993422</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1995-01-14</con:value></con:property><con:property><con:name>DateOfBirthFirstUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthSecondUser</con:name><con:value>1994-08-06</con:value></con:property><con:property><con:name>DateOfBirthThirdUser</con:name><con:value>2002-08-04</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>ETag</con:name><con:value>"E4CAEBB846D3A3A4E0401F0A079941A1"</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID</con:name><con:value>EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID1</con:name><con:value>EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL1</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_USER_ID</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID2</con:name><con:value>E8DF1631C1AB7AB0E0401F0A07995186</con:value></con:property><con:property><con:name>NODE_USER_ID3</con:name><con:value>E4CA4B2029182EE6E0401F0A07991857</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL1</con:name><con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL2</con:name><con:value>urn:dece:userid:org:dece:E8DF1631C1AB7AB0E0401F0A07995186</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL3</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE4CA4B2029182EE6E0401F0A07991857</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>full</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>ResponseTypeUserCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>ResponseTypeUserUpdate</con:name><con:value>CANT_CHANGE_PRIVILEGE</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI=</con:value></con:property><con:property><con:name>SAML_USER1</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI=</con:value></con:property><con:property><con:name>SAML_USER2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML_USER3</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>Username1</con:name><con:value>firstuser20130905_121133</con:value></con:property><con:property><con:name>UserName2</con:name><con:value>seconduser20130902_101821</con:value></con:property><con:property><con:name>UserName3</con:name><con:value>seconduser20130825_11255</con:value></con:property><con:property><con:name>userType</con:name><con:value>ADULT</con:value></con:property><con:property><con:name>user_oid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">E8DF1631C1AC7AB0E0401F0A07995186</con:value></con:property><con:property><con:name>user_oid1</con:name><con:value>EF8F74F6BDA7D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>user_oid2</con:name><con:value>E8DF1631C1AC7AB0E0401F0A07995186</con:value></con:property><con:property><con:name>user_oid3</con:name><con:value>E4CA4B2029192EE6E0401F0A07991857</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>1995-10-17</con:value></con:property><con:property><con:name>LegalGuardian</con:name><con:value>&lt;LegalGuardian>urn:dece:userid:org:dece:${#TestCase#CLG_NODE_USER_ID}&lt;/LegalGuardian></con:value></con:property><con:property><con:name>E2EStatus</con:name><con:value>FINISHED</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_30022 - RightsResourceStatusUpdate - PERM - SecurityRoleValid - Invocation with Retailer_CS</con:value></con:property><con:property><con:name>sName</con:name><con:value>05RightsResourceStatusUpdate_Invocation_ByPermission_TestCases</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>fcf8c68a-683f-4af1-a418-a1f5b5384672</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>03943527-847a-44f0-b73d-d2fad4b59708</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0c103a15-a364-4f18-b7ce-fb035223d68a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6ea8959-c4f0-4f1c-95fc-32fa117a7bca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>53aa8488-3ed5-4102-a539-344b534c55e8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db4d0f7f-a067-4b2f-9cf7-625b1b493f19</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>88e56319-5f02-4645-9b71-642ab080fda8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>67200c2d-bef7-4dad-b3b8-50326a533129</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c7eebc88-5d13-4ec1-bbfa-1c46c9ff6bff</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98691a52-212f-4ea8-a57e-1d7f76f36c48</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>993be89d-0c7a-4f1d-9fa2-28c7ce77ee5d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c2c3525e-10ed-4830-81eb-999f78352e69</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>NodeRole</con:name><con:value>urn:dece:role:accessportal:customersupport</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_00004_AccountStatusUpdate_PERM_API_Invocation_from_NonCS_DLASP_P0_403Forbidden</con:value></con:property><con:property><con:name>sName</con:name><con:value>01AccountStatusUpdate_PERM</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>role</con:name><con:value>nodeIdRTLCS</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:requirements/>
  <con:properties>
    
    
    
    
    
    <con:property><con:name>AccountDisplayName</con:name><con:value>Acc_Create_20131022_051719</con:value></con:property><con:property><con:name>AccountOID</con:name><con:value>EF900A05D354E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>account_oid</con:name><con:value>EF900A05D354E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>ADULT_DOB</con:name><con:value>29-Jul-94</con:value></con:property><con:property><con:name>ADULT_DOB_XML</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>ADULT_MIN_AGE</con:name><con:value>18</con:value></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_rsu123@uvvutesting.biz</con:value></con:property><con:property><con:name>AppHost</con:name><con:value>https://qa.q.uvvu.com</con:value></con:property><con:property><con:name>AppPort</con:name><con:value>7001</con:value></con:property><con:property><con:name>assert</con:name><con:value>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</con:value></con:property><con:property><con:name>assertId</con:name><con:value>_ff154253-5b6a-49af-875f-50db9be0236f</con:value></con:property><con:property><con:name>assertionUID</con:name><con:value>E19E3D2D6A904D06E0401F0A05994A7A</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_61057eb2-ffa6-4999-b212-9109edbed161</con:value></con:property><con:property><con:name>audience</con:name><con:value>urn:dece:org:org:dece:RET_CS_1</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>/opt/dece/certs/</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>C:/certs</con:value></con:property><con:property><con:name>CHILD_DOB</con:name><con:value>27-Jul-02</con:value></con:property><con:property><con:name>CHILD_DOB_XML</con:name><con:value>2002-08-15</con:value></con:property><con:property><con:name>CHILD_MAX_AGE</con:name><con:value>12</con:value></con:property><con:property><con:name>cid</con:name><con:value>urn:dece:cid:file:SARVJEET_CID_DONT_TOUCH_5.txt</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>CSchemaNameSpace</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1994-08-17</con:value></con:property><con:property><con:name>DateOfBirthXML</con:name><con:value>1999-07-19</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP2</con:value></con:property>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  <con:property><con:name>DBPasswords</con:name><con:value>dec2010</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>deqa1</con:value></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>DisplayImageURL</con:name><con:value>http://www.mamut.com/media/company/press/resources/eilerthanoa/EilertHanoa_4_800x1200.jpg</con:value></con:property><con:property><con:name>encodedUserID</con:name><con:value/></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>ETag</con:name><con:value>*</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value/></con:property><con:property><con:name>GeoProfile</con:name><con:value>US</con:value></con:property><con:property><con:name>GivenName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>ISCnodes</con:name><con:value>yes</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:DEQA1_APP/lp1db_23@10.31.153.5:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>JDBCDriver</con:name><con:value>DECEOracle</con:value></con:property><con:property><con:name>Language1</con:name><con:value>en</con:value></con:property><con:property><con:name>Language2</con:name><con:value>de</con:value></con:property><con:property><con:name>Locality</con:name><con:value>Sterling</con:value></con:property><con:property><con:name>maxUserName</con:name><con:value>64</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>true</con:value></con:property><con:property><con:name>minUserName</con:name><con:value>6</con:value></con:property><con:property><con:name>MobileTelephoneNumber</con:name><con:value>+1.703598742</con:value></con:property><con:property><con:name>NeustarVM</con:name><con:value>OFF</con:value></con:property><con:property><con:name>NODEACCID</con:name><con:value>E1AF78725D9E6410E0401F0A07997B12</con:value></con:property><con:property><con:name>NodeId</con:name><con:value>urn:dece:org:org:dece:500500</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDECECS1</con:name><con:value>truststore-dece-cs</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>isportalcs1</con:value></con:property><con:property><con:name>nodeIdRetailerforDeviceAuthToken</con:name><con:value/></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRTL1</con:name><con:value>35001001</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS1</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdSPCLCS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>NodeOid</con:name><con:value>500500</con:value></con:property><con:property><con:name>Node_Account</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>Node_Account_ID</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>node_Account_IDbak</con:name><con:value>urn:dece:accountid:org:dece:EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>NODE_ACCOUNT_ID_FULL</con:name><con:value>urn:dece:accountid:org:dece:E528648B66BDACF7E0401F0A05994DAF</con:value></con:property><con:property><con:name>Node_Account_OID</con:name><con:value>EF900A05D353E6F7E0401F0A0599234B</con:value></con:property><con:property><con:name>Node_ID</con:name><con:value>urn:dece:org:org:dece:dece:cs</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>40</con:value></con:property><con:property><con:name>Node_User</con:name><con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>Node_User_ID</con:name><con:value>urn:dece:userid:org:dece:EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>NODE_USER_ID1</con:name><con:value>E151F333D66812AFE0401F0A07996C63</con:value></con:property><con:property><con:name>NODE_USER_ID_FULL</con:name><con:value>urn:dece:userid:org:dece:E528808A600535F3E0401F0A07996230</con:value></con:property><con:property><con:name>NODE_USER_OID</con:name><con:value>EF8F74F6BDA6D23CE0401F0A079970D1</con:value></con:property><con:property><con:name>ParamRTCReq</con:name><con:value><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  xmlns:ns4="${#Project#SchemaNameSpace}"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="${#TestCase#ALID}" ContentID="${#TestCase#ContentID}"> 	<ns4:SoldAs> 		<ns4:DisplayName Language="${#TestCase#SoldAsLanguage}">${#TestCase#SoldAsDisplayName}</ns4:DisplayName> 		<ns4:ContentID>${#TestCase#SoldAsContentID}</ns4:ContentID> 	</ns4:SoldAs> 	<ns4:RightsProfiles> 		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile1}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad1}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream1}</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile2}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad2}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream2}</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile MediaProfile="${#TestCase#PPContentProfile3}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad3}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream3}</ns4:CanStream> 		</ns4:PurchaseProfile> 	</ns4:RightsProfiles> 	<ns4:LicenseAcqBaseLoc>${#TestCase#LICAcqBaseLoc}</ns4:LicenseAcqBaseLoc> 	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFWebLocLocation1}</ns4:Location> 		<ns4:Preference>${#TestCase#FFWebLocPreference1}</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentWebLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFWebLocLocation2}</ns4:Location> 		<ns4:Preference>${#TestCase#FFWebLocPreference2}</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFManifestLocLocation1}</ns4:Location> 		<ns4:Preference>${#TestCase#FFManifestLocPreference1}</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:FulfillmentManifestLoc MediaProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFManifestLocLocation2}</ns4:Location> 		<ns4:Preference>${#TestCase#FFManifestLocPreference2}</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:PurchaseInfo> 		<ns4:NodeID>${#TestCase#PINodeID}</ns4:NodeID> 		<ns4:RetailerTransaction>${#TestCase#PIRetailerTransx}</ns4:RetailerTransaction> 		<ns4:PurchaseAccount>${#TestCase#PIPurchaseAccount}</ns4:PurchaseAccount> 		<ns4:PurchaseUser>${#TestCase#PIPurchaseUser}</ns4:PurchaseUser> 		<ns4:PurchaseTime>${#TestCase#PIPurchaseTime}</ns4:PurchaseTime> 	</ns4:PurchaseInfo> </ns4:RightsTokenData>]]></con:value></con:property><con:property><con:name>ParamRTCReqWithDMRR</con:name><con:value><![CDATA[<ns4:RightsTokenData ALID="${#TestCase#ALID}" xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/WEB-INF/dece.xsd" ContentID="${#TestCase#ContentID}" xmlns:ns4="http://www.decellc.org/schema/2011/06/coordinator" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> 	<ns4:SoldAs> 		<ns4:DisplayName Language="${#TestCase#SoldAsLanguage}">${#TestCase#SoldAsDisplayName}</ns4:DisplayName> 		<ns4:ContentID>${#TestCase#SoldAsContentID}</ns4:ContentID> 	</ns4:SoldAs> 	<ns4:RightsProfiles> 	<ns4:PurchaseProfile ContentProfile="${#TestCase#PPContentProfile3}"> 			<ns4:DiscreteMediaRightsRemaining FulfillmentMethod="${#TestCase#PPDiscreteMediaProfile3}">${#TestCase#PPDiscreteMediaRemaining3}</ns4:DiscreteMediaRightsRemaining> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad3}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream3}</ns4:CanStream> 		</ns4:PurchaseProfile> 	</ns4:RightsProfiles> 	<ns4:LicenseAcqBaseLoc>${#TestCase#LICAcqBaseLoc}</ns4:LicenseAcqBaseLoc> 	<ns4:FulfillmentWebLoc ContentProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFWebLocLocation1}</ns4:Location> 		<ns4:Preference>${#TestCase#FFWebLocPreference1}</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentWebLoc ContentProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFWebLocLocation2}</ns4:Location> 		<ns4:Preference>${#TestCase#FFWebLocPreference2}</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentManifestLoc ContentProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFManifestLocLocation1}</ns4:Location> 		<ns4:Preference>${#TestCase#FFManifestLocPreference1}</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:FulfillmentManifestLoc ContentProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFManifestLocLocation2}</ns4:Location> 		<ns4:Preference>${#TestCase#FFManifestLocPreference2}</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:PurchaseInfo> 		<ns4:NodeID>${#TestCase#PINodeID}</ns4:NodeID> 		<ns4:RetailerTransaction>${#TestCase#PIRetailerTransx}</ns4:RetailerTransaction> 		<ns4:PurchaseAccount>${#TestCase#PIPurchaseAccount}</ns4:PurchaseAccount> 		<ns4:PurchaseUser>${#TestCase#PIPurchaseUser}</ns4:PurchaseUser> 		<ns4:PurchaseTime>${#TestCase#PIPurchaseTime}</ns4:PurchaseTime> 	</ns4:PurchaseInfo> </ns4:RightsTokenData>]]></con:value></con:property><con:property><con:name>ParamRTCReqWithRS</con:name><con:value><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  xmlns:ns4="http://www.decellc.org/schema/2011/06/coordinator"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="${#TestCase#ALID}" ContentID="${#TestCase#ContentID}"> 	<ns4:SoldAs> 		<ns4:DisplayName Language="${#TestCase#SoldAsLanguage}">${#TestCase#SoldAsDisplayName}</ns4:DisplayName> 		<ns4:ContentID>${#TestCase#SoldAsContentID}</ns4:ContentID> 	</ns4:SoldAs> 	<ns4:RightsProfiles> 		<ns4:PurchaseProfile ContentProfile="${#TestCase#PPContentProfile1}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad1}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream1}</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile ContentProfile="${#TestCase#PPContentProfile2}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad2}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream2}</ns4:CanStream> 		</ns4:PurchaseProfile> 		<ns4:PurchaseProfile ContentProfile="${#TestCase#PPContentProfile3}"> 			<ns4:CanDownload>${#TestCase#PPCanDownLoad3}</ns4:CanDownload> 			<ns4:CanStream>${#TestCase#PPCanStream3}</ns4:CanStream> 		</ns4:PurchaseProfile> 	</ns4:RightsProfiles><ns4:ResourceStatus>       <ns4:Current CreatedBy="${#TestCase#RSCreatedby}" CreationDate="${#TestCase#RSCreationDate}">          <ns4:Value>${#TestCase#RSValue}</ns4:Value>          <ns4:Description>${#TestCase#RSDescription}</ns4:Description>       </ns4:Current>    </ns4:ResourceStatus> 	<ns4:LicenseAcqBaseLoc>${#TestCase#LICAcqBaseLoc}</ns4:LicenseAcqBaseLoc> 	<ns4:FulfillmentWebLoc ContentProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFWebLocLocation1}</ns4:Location> 		<ns4:Preference>${#TestCase#FFWebLocPreference1}</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentWebLoc ContentProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFWebLocLocation2}</ns4:Location> 		<ns4:Preference>${#TestCase#FFWebLocPreference2}</ns4:Preference> 	</ns4:FulfillmentWebLoc> 	<ns4:FulfillmentManifestLoc ContentProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFManifestLocLocation1}</ns4:Location> 		<ns4:Preference>${#TestCase#FFManifestLocPreference1}</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:FulfillmentManifestLoc ContentProfile="${#TestCase#PPContentProfile1}" xsi:type="ns4:ResourceLocation-type"> 		<ns4:Location>${#TestCase#FFManifestLocLocation2}</ns4:Location> 		<ns4:Preference>${#TestCase#FFManifestLocPreference2}</ns4:Preference> 	</ns4:FulfillmentManifestLoc> 	<ns4:PurchaseInfo> 		<ns4:NodeID>${#TestCase#PINodeID}</ns4:NodeID> 		<ns4:RetailerTransaction>${#TestCase#PIRetailerTransx}</ns4:RetailerTransaction> 		<ns4:PurchaseAccount>${#TestCase#PIPurchaseAccount}</ns4:PurchaseAccount> 		<ns4:PurchaseUser>${#TestCase#PIPurchaseUser}</ns4:PurchaseUser> 		<ns4:PurchaseTime>${#TestCase#PIPurchaseTime}</ns4:PurchaseTime> 	</ns4:PurchaseInfo> </ns4:RightsTokenData>]]></con:value></con:property><con:property><con:name>ParamRTRSUReq</con:name><con:value><![CDATA[<dece:ResourceStatus xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd "> 	<dece:Current> 		<dece:Value>${#TestCase#ResourceStatusValue}</dece:Value> 	</dece:Current> </dece:ResourceStatus>]]></con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>Policy_Class</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3ATermsOfUse</con:value></con:property><con:property><con:name>Policy_TOU</con:name><con:value>https://qa.c.uvvu.com:7001/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20121024/html</con:value></con:property><con:property><con:name>PostalAddress</con:name><con:value>46000 Center Oak Plaza</con:value></con:property><con:property><con:name>PostalCode</con:name><con:value>20166</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>PrimaryEmailConfirmationEndpoint</con:name><con:value>www.abc.com</con:value></con:property><con:property><con:name>Privilege</con:name><con:value>basic</con:value></con:property><con:property><con:name>projectPath</con:name><con:value/></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>QC_AutoMapping</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_BulkUpdate</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_Domain</con:name><con:value>DEFAULT</con:value></con:property><con:property><con:name>QC_password</con:name><con:value>******</con:value></con:property><con:property><con:name>QC_Project</con:name><con:value>DECE</con:value></con:property><con:property><con:name>QC_ProjectPath</con:name><con:value/></con:property><con:property><con:name>QC_ReExport</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_ResultExportLevel</con:name><con:value>high</con:value></con:property><con:property><con:name>QC_RunName</con:name><con:value/></con:property><con:property><con:name>QC_soapUI_ARGS</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value>Root\DECE_API\DECE_API_1.0.1.1</con:value></con:property><con:property><con:name>QC_TestPlanDirectory</con:name><con:value>Subject\DECE_1.0_Release\DECE_API\APIs\RightsResourceStatusUpdate</con:value></con:property><con:property><con:name>QC_TestSet</con:name><con:value>RightsResourceStatusUpdate</con:value></con:property><con:property><con:name>QC_TestType</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>QC_URL</con:name><con:value>http://stprqc01.va.neustar.com:8080/qcbin</con:value></con:property><con:property><con:name>QC_user</con:name><con:value>schhinna</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa.q.uvvu.com:7001</con:value></con:property><con:property><con:name>QuestionID1</con:name><con:value>1200</con:value></con:property><con:property><con:name>QuestionID2</con:name><con:value>1650</con:value></con:property><con:property><con:name>QuestionResponse1</con:name><con:value>myname</con:value></con:property><con:property><con:name>QuestionResponse2</con:name><con:value>myname</con:value></con:property><con:property><con:name>RandomPwdFlag</con:name><con:value/></con:property><con:property><con:name>RequestXML</con:name><con:value/></con:property><con:property><con:name>Request_XML</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"> 	<Name> 		<GivenName>${#TestCase#GivenName}</GivenName> 		<SurName>${#TestCase#SurName}</SurName> 	</Name> 	<DisplayImage> 		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL} 		</DisplayImageURL> 	</DisplayImage> 	<ContactInfo> 		<PrimaryEmail> 			<Value>${#TestCase#PrimaryEmail}</Value>	<ConfirmationEndpoint>confirmed</ConfirmationEndpoint> 			</PrimaryEmail> 			<AlternateEmail> 				<Value>${#TestCase#AlternateEmail}</Value> 				</AlternateEmail> 			<Address> 				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress> 				<PostalCode>${#TestCase#PostalCode}</PostalCode> 				<Locality>${#TestCase#Locality}</Locality> 				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince> 				<Country>${#TestCase#Country}</Country> 			</Address> 			<TelephoneNumber>			 					<Value>${#TestCase#TelephoneNumber}</Value> 				</TelephoneNumber> 				<MobileTelephoneNumber> 					<Value>${#TestCase#MobileTelephoneNumber}</Value> 				</MobileTelephoneNumber> 	</ContactInfo> 	<Languages> 		<Language>${#TestCase#Language1}</Language> 	</Languages> 	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth> 	${#TestCase#LegalGuardian} 	<Credentials> 		<Username>${#TestCase#UserName}</Username> 		<Password ${#Project#RandomPwdFlag}>${#TestCase#password}</Password> 	</Credentials> 	<UserRecoveryTokens> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID1}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse> 		</RecoveryItem> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID2}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse> 		</RecoveryItem> 	</UserRecoveryTokens> 	${#TestCase#ResourceStatus} </User>]]></con:value></con:property><con:property><con:name>Request_XML_Buffer</con:name><con:value><![CDATA[<User UserClass="urn:dece:role:user:class:${#TestCase#Privilege}" xmlns="${#TestCase#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#"> 	<Name> 		<GivenName>${#TestCase#GivenName}</GivenName> 		<SurName>${#TestCase#SurName}</SurName> 	</Name> 	<DisplayImage> 		<DisplayImageURL Height="1" MimeType="" Width="1">${#TestCase#DisplayImageURL} 		</DisplayImageURL> 	</DisplayImage> 	<ContactInfo> 		<PrimaryEmail> 			<Value>${#TestCase#PrimaryEmail}</Value>	<ConfirmationEndpoint>confirmed</ConfirmationEndpoint> 			</PrimaryEmail> 			<AlternateEmail> 				<Value>${#TestCase#AlternateEmail}</Value> 				</AlternateEmail> 			<Address> 				<PostalAddress>${#TestCase#PostalAddress}</PostalAddress> 				<PostalCode>${#TestCase#PostalCode}</PostalCode> 				<Locality>${#TestCase#Locality}</Locality> 				<StateOrProvince>${#TestCase#StateOrProvince}</StateOrProvince> 				<Country>${#TestCase#Country}</Country> 			</Address> 			<TelephoneNumber>			 					<Value>${#TestCase#TelephoneNumber}</Value> 				</TelephoneNumber> 				<MobileTelephoneNumber> 					<Value>${#TestCase#MobileTelephoneNumber}</Value> 				</MobileTelephoneNumber> 	</ContactInfo> 	<Languages> 		<Language>${#TestCase#Language1}</Language> 	</Languages> 	<DateOfBirth MeetsAgeOfMajority="${#TestCase#MeetsAgeOfMajority}">${#TestCase#DateOfBirth}</DateOfBirth> 	${#TestCase#LegalGuardian} 	<Credentials> 		<Username>${#TestCase#UserName}</Username> 		<Password ${#Project#RandomPwdFlag}>${#TestCase#password}</Password> 	</Credentials> 	<UserRecoveryTokens> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID1}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse1}</QuestionResponse> 		</RecoveryItem> 		<RecoveryItem> 			<QuestionID>${#TestCase#QuestionID2}</QuestionID> 			<QuestionResponse>${#TestCase#QuestionResponse2}</QuestionResponse> 		</RecoveryItem> 	</UserRecoveryTokens> 	${#TestCase#ResourceStatus} </User>]]></con:value></con:property><con:property><con:name>ResourceStatus</con:name><con:value/></con:property><con:property><con:name>RightsTokenID</con:name><con:value>urn%3Adece%3Arightstokenid%3Aorg%3Adece%3AEF8F51ED2E1C2ED2E0401F0A07991D59</con:value></con:property><con:property><con:name>SAML</con:name><con:value>SAML2 Assertion=nVZbb+I6EH7fXxFlH6tg5wIhUUEKt5YuvcLS9rysjGPAbXAgdgLtrz92aFKgtKd7JCTkyXjmm5nPn33K0SKy/IBzkggaM63faeh/ptA17dCeGCGyHcNxatCo2yYxsOlhp2q7nj2Z6lqf85T0GReIiYZuQdMxoGlAb2R6ftXzbVixoPWPro1JwmVo6VKBurZZRIz7edqGnibMjxGn3GdoQbgvsD8MLge+9PRRgUlvnm5R5gmT5lyIpQ8AroQEkyjCFRwvwCnY8zkNuT+kM4ZEmpC3nCFv6G971+t1ZW1X4mQGLAghgB6QPiGns59680exmYR9No236zZiMaMYRfQVKVCXRMzjUAuiWZxQMV98EtoEJlShDbLBsn0O+6mD9wQ5um9G2gOZcGTwOTKLYHdkShLCMNF+3/Ub+s/vTXC7d5QgxqdxsuAH67+DRFhGonhJQoMXlRXovh/xSLuapwT7fYajlNOMXCmaLBEmXLtJyJRuBpRL8oVcy8evbbj80YJlBP/NWE7BLlYJHRzpTofOCBf/Z2a789pGGaMoJc0QTYKbOLoQM++sNbitr+2X3hOcJCe33UYOYdd5C6oc99v6kKwlt942JauzwWb6a4ziWqvWsWG2tH8Hy4uXs+ypszqPb3+nlnDXY/rg2emDA0fwsX3+fMXAirVPROvpPhytBnfdX+y5fgl+PE+WwZnITMsZo2dA++v5OOGv93Pz5MR8PLevkQeBfRPesvnjxfWge/046FdfYbK6yiLXG1YdK52k62Eazt0z/MPaPHS91cV1ljyb9y/0fAycxntNuzXsGwtJGKaTJ4JFsVT06He0npwXEl/Li7LQ0Jjmrv5SaRQXhAm9qXYpafFTKUA09OUwt+tur95znV6t1QlqHctud6EDzR4MoOt5LuyYhQZtURxAbMdsSlUupbJb/nwNEC98TlhIEiOLUzwnXP8iYgcJpPXZnTwcMeNkFEsVt7rdqhO021KYe23Ls1pBzQkCWK+7gdvq2lKLr2Jxza6TYCpIsqfglrWn4HcE0yUlSuYVz7kkOheyJSuUpSIyKxmqMJLKiyBRWuxbTr0KOF0sI6IAg0UcphGpLOfLvEGAb/8tA2GeW++6oz/t4R8zP4Sf1nj4rWiH9AmpcuCqoBaRIyVH7iOrqOZ41aakvblbdRE+SEOqzprsrUgo3iLZ//ROGcWVki9FWQXu0v3QsBcaHFZVZgszikvml1e2VHypB81iMCtUWVXSLEvzUbhK6xIZHpgAumBIcCoF62UUPxMGyhDgW/dFifogc2nfx5eKORsKJMhCEkfLl994LAwJV4+FviT+5rsvkb2Usm+CbMQxWzuSbwqF+MtnB/ax8pPmG/m3jpPwfVxHYu3kkXXKF4KgbKZW6mZ4+YQZOJZhqZSyONkNfizAseT7xrLJJRYh2TRJBfn8i6Y0qqEjjOOUiX5Hzw27upnjFC9L4r87fQiTa/PbZbvhn162D5eDoVSwBdJLX/rfzgbN6YKJru70HEtD38i3o0zOZjs6/QZwX6o9KIW52rGrdrfWc0uprnqeZTutsoF7lTQ/mD9adnp6eB6a/wI=</con:value></con:property><con:property><con:name>SAML1</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SAML2</con:name><con:value>SAML2 Assertion=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</con:value></con:property><con:property><con:name>SchemaNameSpace</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>StateOrProvince</con:name><con:value>VA</con:value></con:property><con:property><con:name>SurName</con:name><con:value>user20130716_022720</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetDECEDB</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com:7001</con:value></con:property><con:property><con:name>targetHost</con:name><con:value>qa.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa.q.uvvu.com</con:value></con:property><con:property><con:name>targetPort</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7001</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa.s.uvvu.com:7001</con:value></con:property><con:property><con:name>TelephoneNumber</con:name><con:value>+1.703598741</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa.c.uvvu.com:7001</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>urnError</con:name><con:value>urn:dece:errorid:org:dece:</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>urnNode_Account_ID</con:name><con:value>urn:dece:accountid:org:dece:${#Project#Node_Account_ID}</con:value></con:property><con:property><con:name>urnNode_User_ID</con:name><con:value>urn:dece:userid:org:dece:${#Project#Node_User_ID}</con:value></con:property><con:property><con:name>urnRating</con:name><con:value>urn:dece:type:rating:</con:value></con:property><con:property><con:name>urntokenType_deviceauthtoken</con:name><con:value>urn:dece:type:tokentype:DeviceAuthToken</con:value></con:property><con:property><con:name>urntokenType_saml</con:name><con:value>urn:dece:type:tokentype:saml2</con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>UserName</con:name><con:value>uv_adult_fau_140109_025929</con:value></con:property><con:property><con:name>userType</con:name><con:value>CHILD</con:value></con:property><con:property><con:name>User_OID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>User_Status</con:name><con:value>pending</con:value></con:property><con:property><con:name>V1</con:name><con:value>1</con:value></con:property><con:property><con:name>V2</con:name><con:value>21</con:value></con:property><con:property><con:name>versionURLEncode</con:name><con:value>06</con:value></con:property><con:property><con:name>YOUTH_DOB</con:name><con:value>28-Jul-99</con:value></con:property><con:property><con:name>YOUTH_DOB_XML</con:name><con:value>yyyy-MM-dd</con:value></con:property><con:property><con:name>YOUTH_MIN_AGE</con:name><con:value>13</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property></con:properties>
  <con:wssContainer>
    
    
    
  </con:wssContainer>
  <con:databaseConnectionContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:sensitiveInformation/>
</con:soapui-project>