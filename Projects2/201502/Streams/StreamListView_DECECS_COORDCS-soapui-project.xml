<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="StreamListViewDeceCS_CoordCS" resourceRoot="" soapui-version="4.6.1" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="D:\StreamListView"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="true"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Documents and Settings\ashwin.tikle\Desktop\Reports\Reports 1.0.6 Patch 2\LP1_R3\Stream List View"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="true"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="DECE StreamCreate API" type="rest" id="e8d8593c-70d3-4bdf-a7c5-929bbe22a53e" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="StreamView" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" id="7ce2232c-bb0b-4a20-8ea9-b1c96112a425"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>STREAM</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="ccee026a-5616-4a8a-8996-dcb7ae4e570c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:Stream</con:element></con:representation><con:request name="StreamView" mediaType="application/xml" id="cfe0247c-3025-41ff-9f65-5ddc9bc841e8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamListView" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" id="6b9feffd-7a70-4246-9aa6-75586d630abf"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="86e0c157-4d9a-4138-8ccb-b768e4bf7c39"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404 500</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Streams</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>500 400 401 404 409 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:StreamList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=ISO-8859-1</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2015/03/coordinator">coor:ErrorList</con:element></con:representation><con:request name="StreamListView" mediaType="application/xml" id="ce70a987-dd34-46f5-99fb-d9b77a22c965"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="RightsTokenCreate" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/RightsToken" id="45571e64-eda1-494b-8e6f-0c12df3ae165"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="582ae345-a288-499c-9b0e-4ddd4c85708b"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 0</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400 404 401 500 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>500 400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2015/03/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="RightsTokenCreate" mediaType="application/xml" postQueryString="false" id="7c913954-7a39-45a6-84ff-1f0389b44f63"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ns4:RightsTokenData xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/WEB-INF/dece.xsd" ALID="${#Project#alid}" ContentID="${#Project#cid}" xmlns:ns1="http://www.w3.org/2001/04/xmlenc#" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.decellc.org/schema/2010/10/dece" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <ns4:SoldAs>
                <ns4:DisplayName Language="en">Avatar BestBuy Special Packaging</ns4:DisplayName>
                <ns4:ContentID>${#Project#cid}</ns4:ContentID>
<!--                    <ns4:BundleID>urn:dece:cho</ns4:BundleID>-->
            </ns4:SoldAs>
            <ns4:RightsProfiles>
                <ns4:PurchaseProfile ContentProfile="urn:dece:type:mediaprofile:highdefinition">
                    <ns4:DiscreteMediaRightsRemaining DiscreteMediaProfile="urn:dece:type:discretemediaformat:securesd:cprm">1</ns4:DiscreteMediaRightsRemaining>
                    <ns4:CanDownload>true</ns4:CanDownload>
                    <ns4:CanStream>true</ns4:CanStream>
                </ns4:PurchaseProfile>
                <ns4:PurchaseProfile ContentProfile="urn:dece:type:mediaprofile:standarddefinition">
                    <ns4:DiscreteMediaRightsRemaining DiscreteMediaProfile="urn:dece:type:discretemediaformat:securesd:cprm">2</ns4:DiscreteMediaRightsRemaining>
                    <ns4:CanDownload>true</ns4:CanDownload>
                    <ns4:CanStream>true</ns4:CanStream>
                </ns4:PurchaseProfile>                
                <ns4:PurchaseProfile ContentProfile="urn:dece:type:mediaprofile:portabledefinition">
                    <ns4:DiscreteMediaRightsRemaining DiscreteMediaProfile="urn:dece:type:discretemediaformat:securesd:cprm">2</ns4:DiscreteMediaRightsRemaining>
                    <ns4:CanDownload>true</ns4:CanDownload>
                    <ns4:CanStream>true</ns4:CanStream>
                </ns4:PurchaseProfile>
                <ns4:RentalProfile>
                    <ns4:AbsoluteExpiration>2011-09-17T15:12:03</ns4:AbsoluteExpiration>
                    <ns4:DownloadToPlayMax>P5Y2M7DT1H10M0S</ns4:DownloadToPlayMax>
                    <ns4:PlayDurationMax>P2Y1M8DT1H10M0S</ns4:PlayDurationMax>
                </ns4:RentalProfile>
            </ns4:RightsProfiles>
            <ns4:ResourceStatus>
                <ns4:Current CreationDate="2011-02-17T15:12:03" CreatedBy="urn:dece:iby" DeletionDate="2012-02-22T15:12:03" DeletedBy="urn:dece:" ModificationDate="2011-06-29T15:12:03" ModifiedBy="urn:dece:">
                    <ns4:Value>urn:dece:type:status:blocked:eula</ns4:Value>
                    <ns4:Description>dnFu.WQ2R06AV900TAEZEw</ns4:Description>
                </ns4:Current>
                <ns4:History>
                    <ns4:Prior ModificationDate="2011-11-01T15:12:03" ModifiedBy="urn:dece:uq">
                        <ns4:Value>urn:dece:type:status:deleted</ns4:Value>
                        <ns4:Description>RiF67oz2tfdzfJyDq5GM17oEm</ns4:Description>
                    </ns4:Prior>
                    <ns4:Prior ModificationDate="2011-02-18T15:12:03" ModifiedBy="urn:dece:">
                        <ns4:Value>urn:dece:type:status:archived</ns4:Value>
                        <ns4:Description>AXvGDbjiIc9q35QeTtD81-FY</ns4:Description>
                    </ns4:Prior>
                </ns4:History>
            </ns4:ResourceStatus>
    <ns4:LicenseAcqBaseLoc>https://dl.bestbuy.com/p/bb93827398sdjdhds</ns4:LicenseAcqBaseLoc>
            <ns4:FulfillmentWebLoc>
                <ns4:Location>https://dl.bestbuy.com/p/aaa</ns4:Location>
                <ns4:Preference>1</ns4:Preference>
            </ns4:FulfillmentWebLoc>
            <ns4:FulfillmentWebLoc>
                <ns4:Location>https://dl.bestbuy.com/p/bbb</ns4:Location>
                <ns4:Preference>2</ns4:Preference>
            </ns4:FulfillmentWebLoc>
            <ns4:FulfillmentManifestLoc>
                <ns4:Location>https://dl.bestbuy.com/p/ccc</ns4:Location>
                <ns4:Preference>3</ns4:Preference>
            </ns4:FulfillmentManifestLoc>
            <ns4:FulfillmentManifestLoc>
                <ns4:Location>https://dl.bestbuy.com/p/ddd</ns4:Location>
                <ns4:Preference>4</ns4:Preference>
            </ns4:FulfillmentManifestLoc>
        <ns4:PurchaseInfo>
            <ns4:NodeID>urn:dece:org:org:dece:${#TestCase#nodeid}</ns4:NodeID>
            <ns4:RetailerTransaction>RetailerTransaction_1</ns4:RetailerTransaction>
            <ns4:PurchaseAccount>${#TestCase#assertionAccountIdFULL}</ns4:PurchaseAccount>
            <ns4:PurchaseUser>${#TestCase#assertionUserIdFULL}</ns4:PurchaseUser>
            <ns4:PurchaseTime>2011-06-24T15:12:03</ns4:PurchaseTime>
        </ns4:PurchaseInfo>
        <ns4:ViewControl>
            <ns4:AllowedUser>${#TestCase#assertionUserIdFULL}</ns4:AllowedUser>
        </ns4:ViewControl>
</ns4:RightsTokenData>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamCreate" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream" id="5d66e029-ad89-492a-814d-5affec81771a"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="11d227a0-126b-4cf7-8935-9674af39f79d"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>401 404 400 500 403</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500 404 502</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>405 400 500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>201 0</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:StreamCreate-resp</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=ISO-8859-1</con:mediaType><con:status>503</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2015/03/coordinator">coor:ErrorList</con:element></con:representation><con:request name="StreamCreate" mediaType="application/xml" accept="" postQueryString="false" id="a70ad676-bfb9-49b2-8590-943a25c0ed81"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Stream xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
 <StreamClientNickname>${#TestCase#nickname}</StreamClientNickname>
 <RequestingUserID>${#TestCase#assertionUserIdFULL}</RequestingUserID>
 <RightsTokenID>${#TestCase#rightstokenidFULL}</RightsTokenID>
</Stream>

]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STS" path="/rest/{MAJOR}/{MINOR}/SecurityToken/SecurityTokenExchange" id="a4e06100-336b-485f-9ad1-34f93eed6c23"><con:settings/><con:parameters><con:parameter><con:name>tokentype</con:name><con:value>${#TestCase#tokentype}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#tokentype}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#VersionMajor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="e8312f3b-c4b6-4d5a-99d8-43fad96876ba"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 502 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain</con:mediaType><con:status>201 0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>0</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="STS" mediaType="application/xml" postQueryString="false" id="2649c135-238d-40b8-a205-9c6f5b73e947"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="STS Get" path="/rest/{MAJOR}/{MINOR}/SecurityToken/Assertion/{ASSERTION}" id="2502de79-5b04-412c-8cc7-9cdf14f6c2be"><con:settings/><con:parameters><con:parameter><con:name>ASSERTION</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionUUID}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="a57ed856-49a1-4b4a-a72d-40b70a23a2e1"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:protocol">urn:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="STS Get" mediaType="application/xml" id="faee3374-2407-48ad-ae87-5967131c67aa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamRenew" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" id="515a7f09-ec21-45a9-a73d-ab063b866759"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>STREAM</con:name><con:value>${#TestCase#streamhandleFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#VersionMajor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="PUT" method="PUT" id="fa82caaa-b57e-49b1-aef5-6a48cf10cfc7"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:request name="StreamRenew" mediaType="application/xml" postQueryString="false" id="13570ea0-7ea0-479d-9586-05e259a58526"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GET" method="PUT" id="91b2959b-9e30-4e01-9210-dda1d39e980b"><con:settings/><con:parameters/><con:request name="StreamRenew" mediaType="application/xml" id="39376562-9f83-4137-9a1c-3b494c530976"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamListView1" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" id="b585baeb-08d7-4fd3-961b-50c27a247689"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="HEAD" method="HEAD" id="16a4ab09-edc8-4429-86ae-5baa9e5d77d9"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Streams</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>500 400 401 404 409 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="StreamListView" mediaType="application/xml" id="25a8c3e0-dadb-45a6-97f1-c224a4824827"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamListViewQHost" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" id="3d3546dc-a401-448d-abb2-d02dee678cde"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="e7983034-c739-4b87-bb1e-a3b38af88222"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Streams</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>500 400 401 404 409 403</con:status><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:Errors</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:sch="http://www.decellc.org/schema">sch:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="StreamListView" mediaType="application/xml" id="9468eac1-532b-4653-a796-596c6bf86d3c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamRenew_Get" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}/Renew" id="1d423ace-2586-4645-aad5-a95fa6760ceb"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>STREAM</con:name><con:value>${#TestCase#streamhandleFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#VersionMajor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="4ba39ce8-3d4d-4c04-87bd-b49e2e38b0e2"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" id="70ece325-57d8-4c82-b442-bdf4cd754591"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Coordinator APIs" type="rest" basePath="" id="1441975b-edb4-4183-add6-0f15f7559f90" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="PolicyGet I" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" id="401858fd-150d-4ba5-a3ff-f7a44a69bebc"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>USER</con:name><con:value>${#TestCase#assertionUserIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionUserIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="2f6762f6-43df-4795-be43-074f2b85537a"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:request name="PolicyGet I" mediaType="application/xml" id="2ef57908-05c6-46a0-a76c-88b0bf69814f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://${#Project#targetHost}:${#Projec#targetPort}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="StreamDelete" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" id="e7e54774-cf13-496b-b840-8d6997850906"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>STREAM</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="Delete" method="DELETE" id="c5ed752c-722c-43ff-ab32-e3472d76034d"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="StreamDelete I" mediaType="application/xml" id="662d5787-a0b9-4b36-bf5f-b5c0d4f1b7b4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGet Account" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" id="098e61f7-4a13-44ad-b656-4637fcbaf6ef"><con:settings/><con:parameters><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="11cd2a0f-c888-487e-81b7-45e33946ef20"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200 0</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>403 404</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:request name="PolicyGet I" mediaType="application/xml" id="973e699a-0e2e-49a1-9ee1-ab2d16cd6e7b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://${#Project#targetHost}:${#Projec#targetPort}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy Create" type="rest" basePath="" id="b19aa0ed-0a05-4f9e-8f58-c54715b931b8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="PolicyCreate Account" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" id="88174ee8-e536-4b26-8b83-7639e3f3e1b4"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="394c039c-2a6c-45ef-8c8e-cd162ce9bc1d"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0 201</con:status><con:params/><con:element xmlns:dece="http://www.decellc.org/schema/2010/10/dece">dece:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>0</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/06/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="PolicyCreate I" mediaType="application/xml" postQueryString="false" id="e37725af-7d9c-4720-b8dc-3d7c36a78fa9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreate User" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" id="6557abf6-f58c-480e-9642-973a0367a351"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>USER</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionUserIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="POST" method="POST" id="4fcd426c-c1b8-42b9-87bb-7976a86967c9"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>0</con:status><con:params/></con:representation><con:request name="PolicyCreate User" mediaType="application/xml" postQueryString="false" id="3b8441db-ba0c-4f77-ab67-67889879e318"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="StreamDelete" type="rest" id="8da2ee46-9bd1-4a2b-a5b3-5557f32b807b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="StreamDelete" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{SH}" id="2984b4c4-2ef6-484f-b0e8-98a147773595"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>SH</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#streamhandleFULL}</con:default></con:parameter></con:parameters><con:method name="Delete" method="DELETE" id="b814fb35-dbc0-4f6f-9e7c-0ca8d187f79e"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/082012/12/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2015/03/coordinator">coor:ErrorList</con:element></con:representation><con:request name="StreamDelete" mediaType="application/xml" id="c45a5338-77f3-401a-b45f-29880b91f317"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy Get" type="rest" basePath="" id="b7ca0308-0ac3-4900-a9bf-8e34c285eea1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Query_HostName}</con:endpoint></con:endpoints><con:resource name="PolicyGet User" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" id="24a69715-25b2-4173-bb82-fffb3ee7a2c7"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>USER</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="e752c836-423d-4fd7-844a-55936276ea84"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:PolicyList</con:element></con:representation><con:request name="PolicyGet User" mediaType="application/xml" id="150768de-6b9f-4aef-ac26-2c603ab192d8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyGet Account" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" id="088259a6-4990-471c-90b6-35d74456d7de"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#VersionMajor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:value>${#TestCase#policyClass}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="GET" method="GET" id="228c8b60-74c2-4928-9b01-f71b3c60b31c"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>0</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>0</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2011/06/coordinator">coor:PolicyList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2015/03/coordinator">coor:PolicyList</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2015/03/coordinator">coor:ErrorList</con:element></con:representation><con:request name="PolicyGet Account" mediaType="application/xml" id="1c0254a2-027c-4a9c-9f48-64d08dd56ca0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Policy Delete" type="rest" basePath="" id="9fb71725-cb76-4cfe-947b-52d8cb96692c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Provision_HostName}</con:endpoint></con:endpoints><con:resource name="Policy Delete for User" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" id="68ae7e6b-b912-417f-9ae3-9c142bb42777"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#VersionMajor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>USER</con:name><con:value>${#TestCase#assertionUserIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionUserIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="DELETE" method="DELETE" id="b54399e4-93bf-4713-98fa-e8cd76f5c7fd"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/></con:representation><con:request name="PolicyDelete for User" mediaType="application/xml" id="efaee60e-4e77-4edb-b4ba-e8192785f254"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyDeleteForAccount" path="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" id="c3edf632-36ea-444b-8804-61170cad621c"><con:settings/><con:parameters><con:parameter><con:name>MAJOR</con:name><con:value>${#Project#VersionMajor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMajor}</con:default></con:parameter><con:parameter><con:name>MINOR</con:name><con:value>${#Project#VersionMinor}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#VersionMinor}</con:default></con:parameter><con:parameter><con:name>ACCT</con:name><con:value>${#TestCase#assertionAccountIdFULL}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#assertionAccountIdFULL}</con:default></con:parameter><con:parameter><con:name>POLICYCLASS</con:name><con:value>${#TestCase#policyClass}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestCase#policyClass}</con:default></con:parameter></con:parameters><con:method name="DELETE" method="DELETE" id="44fa49b3-7c35-4e99-9ea3-cae14425bb15"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>403 412 400</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2015/03/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" mediaType="application/xml" id="9b40f004-9d70-45d9-832b-8e567dc26fc6"><con:settings/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="E2E" type="rest" basePath="" definitionUrl="" id="73666e04-048d-4b22-b674-374d266e082c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="AccountCreate" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account" id="cf6ca364-dbc1-44a4-aef8-d13dca44ec7b"><con:settings/><con:parameters/><con:method name="AccountCreate" method="POST" id="b93c5bcc-3563-486f-accd-3c7330e8f529"><con:settings/><con:parameters/><con:request name="Request 1" id="39e8107e-8f75-4f2a-9cd9-8579f6992fa7" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="UserCreate" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{AccountID}/User" id="238ee70c-839f-4820-a19b-a6cd514fb242"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="UserCreate" method="POST" id="7792ce37-884c-4233-86b5-dbd4ec9af0c4"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="85158d81-1226-4d8a-ad4a-484bf16be2ad" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSCreate" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/SecurityToken/SecurityTokenExchange" id="3a9f3e09-e693-4088-8be7-b8884d7ee1db"><con:settings/><con:parameters><con:parameter><con:name>tokentype</con:name><con:value>${#TestCase#tokentype}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#tokentype}</con:default></con:parameter><con:parameter><con:name>audience</con:name><con:value>${#TestCase#audienceList}</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#audienceList}</con:default></con:parameter></con:parameters><con:method name="STSCreate" method="POST" id="152924d7-a23e-435b-a680-861371deca2d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>text/plain; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:request name="Request 1" id="ab664950-efbc-4858-a34d-43de9543c979" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="STSGet" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/SecurityToken/Assertion/{ASSERTION}" id="942dbbe9-e9ce-429d-9403-c988ca61e444"><con:settings/><con:parameters><con:parameter><con:name>ASSERTION</con:name><con:value>${#TestCase#assertionUUID}</con:value><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>${#TestCase#assertionUUID}</con:default></con:parameter></con:parameters><con:method name="STSGet" method="GET" id="592ac52a-e3b3-4ff6-9598-13e6a435633b"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>text/xml;charset=ISO-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:oasis:names:tc:SAML:2.0:assertion">urn:Assertion</con:element></con:representation><con:request name="Request 1" id="45a924b2-bc3e-4785-801d-162ebcf66fab" mediaType="application/json"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateUser" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" id="086de33e-fad2-465c-aa9a-0d1ce5d0635d"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>NodeUserId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="PolicyCreateUser" method="POST" id="30ecd9fc-6c68-49cc-87ee-95e09ee8851d"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>text/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400 403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2013/10/coordinator">coor:ErrorList</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="e1a449ae-d6f7-47b5-ae5c-14da289a0108" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="PolicyCreateAccount" path="rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/Policy/{PolicyClass}" id="300c46eb-d3ee-4c1e-83e6-ecd4331152e7"><con:settings/><con:parameters><con:parameter><con:name>NodeAccountId</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter><con:parameter><con:name>PolicyClass</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="PolicyCreateAccount" method="POST" id="5322098e-1817-4274-b29c-5cecefd9075f"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:PolicyList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" id="d685a925-a629-4f05-bc50-13757be1109a" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="AccountUserCreate" path="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account" id="238ee70c-839f-4820-a19b-a6cd514fb242"><con:settings/><con:parameters><con:parameter><con:name>AccountID</con:name><con:value/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default/></con:parameter></con:parameters><con:method name="AccountUserCreate" method="POST" id="7792ce37-884c-4233-86b5-dbd4ec9af0c4"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:ErrorList</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status/><con:params/><con:element xmlns:coor="http://www.decellc.org/schema/2012/12/coordinator">coor:User</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml; charset=UTF-8</con:mediaType><con:status>201</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="85158d81-1226-4d8a-ad4a-484bf16be2ad" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="00SetupScripts" id="70869d2c-3f03-4c3a-b2ca-a1a4e918ea8a"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Setup" searchProperties="true" id="82be2031-4423-46e2-a92b-ca887ee17488"><con:settings/><con:testStep type="groovy" name="Set ENV Properties" id="600939b0-b383-4909-8c2b-9ee7966b10eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info("Set Environment properties!!!");
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath
log.info("Project Path : '" + projectPath + "'");

def eNV = context.expand( '${#Project#ENV}' )
log.info("Environment: '" + eNV+ "'");

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");


def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));
log.info("Load property file : '" + propertiesPath + "/" + eNV +"project.properties"+ "'");
String line;
while ((line = reader.readLine()) != null)
	{
		if (line.trim().length()==0) continue;
		if (line.charAt(0)=='#') continue;

		int delimPosition = line.indexOf("=");
		String key = line.substring(0, delimPosition-0).trim();
		String value = line.substring(delimPosition+1).trim();
		propMap.put(key, value);
	}

propMap.each{ k, v -> tP.setPropertyValue(k,v)}

tP.setPropertyValue("APID",tP.getPropertyValue("Streams_APID"));
tP.setPropertyValue("ALID",tP.getPropertyValue("Streams_ALID"));
tP.setPropertyValue("CID",tP.getPropertyValue("Streams_CID"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set_CoordinatorSchema" id="f1a36c79-de6a-4694-8685-8c62bcf2080e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

log.info "V2: "+tP.getPropertyValue("VersionMinor");

def v2 = context.expand( '${#Project#VersionMinor}' )
def schema = tP.getPropertyValue("coordinatorSchema_"+v2);

tP.setPropertyValue("coordinatorSchema",schema);
log.info "Setting the coordinatorSchema value ---- "+schema;

//a = new dbUtils.dbCID(log,tP.getPropertyValue("targetSystem"));
//assert a.cidSetStatusActive('urn:dece:cid:eidr-s:512F-4CA1-D6E8-D57D-5012-I')==1</script></con:config></con:testStep><con:testStep type="datasource" name="Country" id="5c1abb5d-bb6e-4160-8f9c-0eded6981837"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Grid"><con:configuration><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">US&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">GB&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CA&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">IE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AU&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NZ&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">AT&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">DE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">CH&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">FR&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">BE&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">NL&lt;/con:entry></row><row>&lt;con:entry xmlns:con="http://eviware.com/soapui/config">LU&lt;/con:entry></row></con:configuration></con:dataSource><con:property>Country</con:property><con:restartOnRun>true</con:restartOnRun></con:config></con:testStep><con:testStep type="groovy" name="TOUSetup" id="6266b0c7-ba69-4507-a4ed-6e8a0cb4d111"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def tP = testSuite.getProject();

def dBHost = context.expand( '${#Project#targetSystem}' )

def country = context.expand( '${Country#Country}' )

def a = new dbUtils.dbUtils(log,dBHost);
String sql = """select consent_version from (select
	            consent_version            
	            from
	            CONSENT
	            where
	            CONSENT_URN = 'urn:dece:type:policy:TermsOfUse'
	            and
	            COUNTRY = '""" + country + """'
	            order by
	            consent_version desc)
	            where rownum &lt; 2""";             
	log.info sql;
        
        results = a.SelectFromDB(sql,dBHost);

//                            a.dbConnClose();
       assert results.length() > 0;
       log.info "results" + results;

       def myXML = new XmlSlurper().parseText(results);   

       log.info myXML.ResultSet.Row.CONSENT_VERSION.text();
                testCase.setPropertyValue("Consent_Version",myXML.ResultSet.Row.CONSENT_VERSION.text());
                

def consent_Version = context.expand( '${#TestCase#Consent_Version}' )

tP.setPropertyValue("TOU_"+country,consent_Version);


</script></con:config></con:testStep><con:testStep type="datasourceloop" name="DataSource Loop" disabled="true" id="460d54d2-6798-4a25-87d5-8e4d0634297c"><con:settings/><con:config><dataSourceStep>Country</dataSourceStep><targetStep>TOUSetup</targetStep></con:config></con:testStep><con:testStep type="groovy" name="Set TOU Policy Resource" id="57b435cd-954d-43ce-ab73-4aae86d79d1b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def policy_TOU = context.expand( '${#Project#Policy_TOU}' )


String country = context.expand( '${#Project#Country}' );
def tOUUrl = context.expand( '${#Project#TOUUrl}' )

def touForCountry = "TOU_"+country
def consent_Version =  tP.getPropertyValue(touForCountry);

tP.setPropertyValue("policy_TOU",'https://'+ tOUUrl + '/Consent/Text/' + country + '/urn:dece:type:policy:TermsOfUse:' + consent_Version + '/html');

log.info "Policy TOU from Project level property " + tP.getPropertyValue("policy_TOU");
</script></con:config></con:testStep><con:testStep type="groovy" name="MicroService Enable/Disable Testcases" id="7c0278e5-c66d-4fd8-917d-35e43d0125ae"><con:settings/><con:config><script><![CDATA[
//TestCase
def testCase  = testRunner.getTestCase();
def microService = context.expand( '${#Project#microService}' ).toString();
ArrayList<String> Suit_lst=new ArrayList<String>();
//Get Arguments
 
def project = context.testCase.testSuite.project;

for (suiteName in project.testSuiteList) {
log.info suiteName.name;
Suit_lst.add(suiteName.name);
  
}

//log.info "suit"+Suit_lst.get(1);





ArrayList<String> Tstep=new ArrayList<String>();

def TStep1  = "Remove Account's StreamHandles";
def TStep2 = "Verify STREAM_DATA_HISTORY row";
def TStep3 = "Verify STREAM_DATA, STREAM_HISTORY row counts for the Account";
def TStep4 = "Post Test Cleanup";
def TStep5 ="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts"
def TStep6 ="Verify STREAM_DATA row"
def TStep7 = "Remove account's stream handles"
def TStep8 =  "Post Test Execution cleanup"
def TStep9 =  "Manually remove the stream from the DB"

Tstep.add(TStep1);
Tstep.add(TStep2);
Tstep.add(TStep3);
Tstep.add(TStep4);
Tstep.add(TStep5);
Tstep.add(TStep6);
Tstep.add(TStep7);
Tstep.add(TStep8);

for (String suit : Suit_lst)
{  def testSuite = suit;
     def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
     def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

   for(i = 0; i <= TCCount - 1; i++)
     {                                              
                def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
                testStepList  = targetTestCase.getTestStepList();
                testStepCount = targetTestCase.getTestStepCount();
                if(targetTestCase.isDisabled() == false)
                {
                                for(j = 0; j <= testStepCount - 1; j++)
                                {              
                                	      def q=0;  
                                                try
                                                {     
                                                          for (String T_step : Tstep)	
					                                {
                                                                if (testStepList[j].name == T_step) {
                                                                                
                                                                                targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
                                                                                //targetTestCase.removeTestStep(targetTestStep);
                                                                                if(microService=="ON")
																				{  
																				   targetTestStep.setDisabled(true)
																				   log.info "Disabled Step " + testStepList[j].name;
																				}
																				else
																				{  
																				   targetTestStep.setDisabled(false)
																				   log.info "Enabled Step " + testStepList[j].name;
																				}
                                                                         }
													q++;
																  
												}
                                                                
                                                                //stepScript = testStepList[j].getScript();
                                                                //stepScript = stepScript.replace(oldString, newString);
                                                                //targetTestStep.setScript(stepScript);                  
                                                }
                                                catch(Throwable e)
                                                {
                                                                log.info "ERROR:" + e;
                                                }              
                                }
                }
    } 
}                                                                                             
]]></script></con:config></con:testStep><con:testStep type="groovy" name="Identify Flaky Testcases" id="5caad64e-e27b-4392-977e-cc9cbe37912d"><con:settings/><con:config><script>//Project Level Variable name – FLAKYSELECTOR.
//Possible Values – all, only_flaky, without_flaky
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tc_condition  = context.expand( '${#Project#FLAKYSELECTOR}' ).toString();
log.info tc_condition

tP.getTestSuiteList().each
{
      if(!it.getName().toLowerCase().contains("setup") &amp;&amp; !it.isDisabled())
       {
                it.getTestCaseList().each
         {
             if(tc_condition.toLowerCase()=="all")
             {
                                
                 if(it.getName().toLowerCase().contains("migrated"))
                       it.setDisabled(true);  
                   else 
                         if (!it.isDisabled()) {
                               it.setDisabled(false);
                           }
                                                                                                              
                }
                                                                
             else if(tc_condition.toLowerCase()=="only_flaky")
               {
                  if(it.getName().toLowerCase().contains("flaky"))
                                                it.setDisabled(false);  
                  else
                         it.setDisabled(true);
                }
                else
                {
                   if(it.getName().toLowerCase().contains("migrated") || it.getName().toLowerCase().contains("flaky"))
                                           it.setDisabled(true);  
                   else
                        if (!it.isDisabled()) {
                                it.setDisabled(false);
                                 }
 
                }
           }
        }
}

</script></con:config></con:testStep><con:properties><con:property><con:name>Consent_Version</con:name><con:value>20140811</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>48eef7a0-e5f2-4926-99bb-c9ecd11b1888</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c0f3550c-c4aa-4ddc-abb8-3d629c23599f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>396d1d6b-33dd-48d6-b41d-40fc4be4bc57</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="DECE Customer Support Test Cases_P1" id="fa421b8a-2359-4c93-9131-5a8537c6733f"><con:description/><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Users\ashwin.tikle\Desktop</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_60000 - StreamListView - DECECS - Test Suite Staging" searchProperties="true" id="c1e993df-a835-4eea-ab56-6f2e2a5647a6"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Create data for retailer,lasp and non lasp" id="a8252c9f-ad59-4cef-9489-5a7c1e45ecb4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTS = tP.getTestSuiteByName("E_2_E");

def runnerTC = myTS.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");
tP.setPropertyValue("StreamDeleteList","");
tP.setPropertyValue("accountList","");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="ef7074b7-49ea-4188-aebb-581d0a08de2e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");

tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");
tP.setPropertyValue("StreamDeleteList","");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="0493a970-1d36-4d81-95e0-1185634e9643"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="f5503e38-558a-4c7b-8433-a407dd077c52"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="bddb1a7c-3d24-4702-8238-21ef40a4d8b4"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="- Remove all Parental Control Policies Clean-up" id="da8eac8c-9bf1-4e76-a121-fddf7e742e73" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove all Parental Control Policies")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set CIDs Rating to G" id="1e58768e-111b-4b5f-a33b-ccb44b793ec5" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbCID(log);

String cid     = tP.getPropertyValue("cid");
String region  = "US"
String country = "US"
String system  = "MPAA";
String rating  = "G";

this.log.info "rating[$rating]";

assert a.sqlSetRating(cid,region,country,system,rating) == 1;

</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="98bd89a8-b379-4661-a789-7b0c222c428d" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="a7f4f2ab-b0b6-4849-aa04-a66f7037604e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="54796cbb-8d41-4d65-9ecf-bfc508a7a005" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" id="ebfcdfcb-27e9-4571-9962-c1852cef758f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvO4ZXwlxK5AFZdkxwlMMiEzTPZlS8gNKLFl0MU4+fqVDHgwuSy7Ty61W92nu4+OdMFRmrhhj3NggmS0UaQJ5WFp7RiS0TBDnPCQohR4KHA46Y1Hodu0Q7TfYjSiYcf4O5jHrbYLyJwFnmP6M9cxgyCwTfts5p35yGsDBuXKuYSIcoGo6Biu7bRM2zfd4MFxQrcV2mfNdtv5y2j8BMZVbOXStI0dqIJ3jKUQq9CyNptNc+M1M7awXNt2rF/j0QQvIUVG92JbUZmIdXf+uBmr9EmCmzhLrQur5nMR83BCFhQJyWCXK/4ol23ZgaV8Yk4WX4xqL8QRnWflcoBoRglGCXlFuj9jEMssbvSSRcaIWKYfFuHYOrAJBTax49MvhlWHdmKgGkLGkcmXyNnFuoc5MKAYGj/uo47x5bSplVsfGKJ8nrGU15f/DQ/QHJJsBbHJ92XtoJ0e8J1OdS8AhxHFieQkh2+arCuEge+mCfj0UI07BnNSjAhXBC24RmcdwjtabrsxJAvg4v8M6GA42yA/USKh2yKtpdNP8mB0eTWC/ndU3ICfE8m+8k4J4NC5NFSj3S6PSFmRaLvjmr30H1ZX+eiP6czyLkdrBfjGHTH5nPRs3o9/4eDx1X2KIbJvcTqnYyt4hr6MyfJp/Ny3h39K6V+vf/G2vzgHitaPfHKOCmv6RKEtB3cJug3uiuELvHrRwr+eF1M0YI/XfMoec2aPV7f54MY5t6Yob7PJ9Edffo2yGUsX555zlxTfR9Ni3IsuJ8H0Zz7uVOUc4K/b9md+ImdPgMV+qWkQDRtXakpIfC5m2kJic166histPlwAFUZX79LaEUoldyQO1Qy3a8cf9i/7vV7g+W777Kp1abc8ux0EzpXd67uOtxeZLYojiIOMzonOpSV3S5vPAeI05EBjYGaeSaV03Pgk4hAJ1IjovToEGeXwkCl5lnPfb7OV3GxannN2FqdPJKWb56WS72+ZuKW3rDcXwOqa7Nc0+R4wWRHQwq15zRWxuVC9WKNcisRp5qhJQSppZ1plQ9c/b1mcpKsENFIrzWKZQHO1XJWdsfj265oI89JathVvT9yHtR3/27dB+cREO3BdTx/UKOHNBeOHrX0x7xft2UcX0T58T3FfHy7VU8EI3iKp//pNFc2Riie7qvawK+9jQy2ydVxUlSzOCa4IX13bSs3V+e/ux7JGTnPdlHkuy0n4vmcxFd7SZVq2a00AS6VQLw/ZM1CrimKddB1UwI+SV/Y6RCmWdCKQgFQxp1EuT7j/J8D1/R8pyhenPi5qKVXrBBTiPdsgUW8XjfjT5w0OsfZT5jv12WQs/j2xd2Id5FF1qutfELrQK30VvHzADZypsESJWMYOg78X4L3kdWPV5AqLUISaSQEf/2lodeoYCONMUhENjdJwqJglTvGygvC305swpShXrzTy7880k5QU0C9C5V/G15dtqI8AXRyo7i7pkfAOXNvzAq9le+e9mvAOg15QNaWGrvvG/NZy0Kdjjnf/AQ==</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value>0</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlp</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>80164</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>0</con:value></con:property><con:property><con:name>StreamCreateCount</con:name><con:value>0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value> </con:value></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value>0</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934676F5E05307991F0AB213</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>54796cbb-8d41-4d65-9ecf-bfc508a7a005</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a8252c9f-ad59-4cef-9489-5a7c1e45ecb4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65106 - StreamListView - DECECS - Account has single active stream and no deleted streams" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7f45d03c-6895-455c-862e-ea7672ab1f07"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single active stream and no deleted (historical) streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3662cd63-9166-4378-98b8-d8e285ae5cd7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBRenewedBy",null);
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="606c8f3f-7009-48f6-9ec7-935c5a277b37"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="a182862d-84ce-40de-ba59-a98b51fbdd52" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="03df46d4-6b6b-44d7-abae-9384e44f822f"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="f84c1eac-214f-4c8a-bc63-961694b8a9a9"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="e6f8d7e1-5c05-4d7c-b2f3-1081ba314146"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="e89eaac3-49b1-4cb2-9f73-a7e78ae264fd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="70e98b86-5271-419d-80f4-108d3d3eadae" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="e2945369-5180-46c0-9420-2f7978f98fdf" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="31ad6f8e-66a6-47cc-b496-3ee8d3541c84" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value>14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVbbcuI4EP0VyvO4ZXwlxK5AFZdkxwlMMiEzTPZlS8gNKLFl0MU4+fqVDHgwuSy7Ty61W92nu4+OdMFRmrhhj3NggmS0UaQJ5WFp7RiS0TBDnPCQohR4KHA46Y1Hodu0Q7TfYjSiYcf4O5jHrbYLyJwFnmP6M9cxgyCwTfts5p35yGsDBuXKuYSIcoGo6Biu7bRM2zfd4MFxQrcV2mfNdtv5y2j8BMZVbOXStI0dqIJ3jKUQq9CyNptNc+M1M7awXNt2rF/j0QQvIUVG92JbUZmIdXf+uBmr9EmCmzhLrQur5nMR83BCFhQJyWCXK/4ol23ZgaV8Yk4WX4xqL8QRnWflcoBoRglGCXlFuj9jEMssbvSSRcaIWKYfFuHYOrAJBTax49MvhlWHdmKgGkLGkcmXyNnFuoc5MKAYGj/uo47x5bSplVsfGKJ8nrGU15f/DQ/QHJJsBbHJ92XtoJ0e8J1OdS8AhxHFieQkh2+arCuEge+mCfj0UI07BnNSjAhXBC24RmcdwjtabrsxJAvg4v8M6GA42yA/USKh2yKtpdNP8mB0eTWC/ndU3ICfE8m+8k4J4NC5NFSj3S6PSFmRaLvjmr30H1ZX+eiP6czyLkdrBfjGHTH5nPRs3o9/4eDx1X2KIbJvcTqnYyt4hr6MyfJp/Ny3h39K6V+vf/G2vzgHitaPfHKOCmv6RKEtB3cJug3uiuELvHrRwr+eF1M0YI/XfMoec2aPV7f54MY5t6Yob7PJ9Edffo2yGUsX555zlxTfR9Ni3IsuJ8H0Zz7uVOUc4K/b9md+ImdPgMV+qWkQDRtXakpIfC5m2kJic166histPlwAFUZX79LaEUoldyQO1Qy3a8cf9i/7vV7g+W777Kp1abc8ux0EzpXd67uOtxeZLYojiIOMzonOpSV3S5vPAeI05EBjYGaeSaV03Pgk4hAJ1IjovToEGeXwkCl5lnPfb7OV3GxannN2FqdPJKWb56WS72+ZuKW3rDcXwOqa7Nc0+R4wWRHQwq15zRWxuVC9WKNcisRp5qhJQSppZ1plQ9c/b1mcpKsENFIrzWKZQHO1XJWdsfj265oI89JathVvT9yHtR3/27dB+cREO3BdTx/UKOHNBeOHrX0x7xft2UcX0T58T3FfHy7VU8EI3iKp//pNFc2Riie7qvawK+9jQy2ydVxUlSzOCa4IX13bSs3V+e/ux7JGTnPdlHkuy0n4vmcxFd7SZVq2a00AS6VQLw/ZM1CrimKddB1UwI+SV/Y6RCmWdCKQgFQxp1EuT7j/J8D1/R8pyhenPi5qKVXrBBTiPdsgUW8XjfjT5w0OsfZT5jv12WQs/j2xd2Id5FF1qutfELrQK30VvHzADZypsESJWMYOg78X4L3kdWPV5AqLUISaSQEf/2lodeoYCONMUhENjdJwqJglTvGygvC305swpShXrzTy7880k5QU0C9C5V/G15dtqI8AXRyo7i7pkfAOXNvzAq9le+e9mvAOg15QNaWGrvvG/NZy0Kdjjnf/AQ==</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value>0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value>2015/04/29 11:25:28</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value>urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:14DC20C876253D29E05307991F0A459E</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14DC20C876253D29E05307991F0A459E</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dececs</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>80179</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value>14DC20C876253D29E05307991F0A459E</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14DC20C876253D29E05307991F0A459E</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14DC20C876253D29E05307991F0A459E</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>14DC20C876253D29E05307991F0A459E</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>7B7E8C07E23B431D848AFDA9AEF34603</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:7B7E8C07E23B431D848AFDA9AEF34603</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value>urn:dece:streamhandleid:org:dece:7B7E8C07E23B431D848AFDA9AEF34603</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value>7B7E8C07E23B431D848AFDA9AEF34603</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>useroid</con:name><con:value>14DBEBAA934676F5E05307991F0AB213</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_60052 - StreamListView - DECECS - nodeaccountid and URL accountId mismatch" searchProperties="true" id="f48460b2-ad4e-4342-9515-fcd026b2656d"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2b0fe75c-a6e9-4b81-bacc-51f54581c553"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="2e867603-b979-4d48-9f7b-d6eb26828780"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove all the Account's StreamHandles" id="44f5c8bd-2352-4557-80e0-6a42c04fdb93" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="bf22fc4a-b8bb-4622-a418-c4bdb84c7641"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Change nodeaccountid" id="cbbae64a-6318-49f1-95b2-be64514ed7a8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

tC.setPropertyValue("assertionAccountIdFULL","urn:dece:accountid:org:dece:1");</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="5249eb5e-5bae-4bb9-9664-c4bd61b6e166"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934676F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvO4ZXwlxK5AFZdkxwlMMiEzTPZlS8gNKLFl0MU4+fqVDHgwuSy7Ty61W92nu4+OdMFRmrhhj3NggmS0UaQJ5WFp7RiS0TBDnPCQohR4KHA46Y1Hodu0Q7TfYjSiYcf4O5jHrbYLyJwFnmP6M9cxgyCwTfts5p35yGsDBuXKuYSIcoGo6Biu7bRM2zfd4MFxQrcV2mfNdtv5y2j8BMZVbOXStI0dqIJ3jKUQq9CyNptNc+M1M7awXNt2rF/j0QQvIUVG92JbUZmIdXf+uBmr9EmCmzhLrQur5nMR83BCFhQJyWCXK/4ol23ZgaV8Yk4WX4xqL8QRnWflcoBoRglGCXlFuj9jEMssbvSSRcaIWKYfFuHYOrAJBTax49MvhlWHdmKgGkLGkcmXyNnFuoc5MKAYGj/uo47x5bSplVsfGKJ8nrGU15f/DQ/QHJJsBbHJ92XtoJ0e8J1OdS8AhxHFieQkh2+arCuEge+mCfj0UI07BnNSjAhXBC24RmcdwjtabrsxJAvg4v8M6GA42yA/USKh2yKtpdNP8mB0eTWC/ndU3ICfE8m+8k4J4NC5NFSj3S6PSFmRaLvjmr30H1ZX+eiP6czyLkdrBfjGHTH5nPRs3o9/4eDx1X2KIbJvcTqnYyt4hr6MyfJp/Ny3h39K6V+vf/G2vzgHitaPfHKOCmv6RKEtB3cJug3uiuELvHrRwr+eF1M0YI/XfMoec2aPV7f54MY5t6Yob7PJ9Edffo2yGUsX555zlxTfR9Ni3IsuJ8H0Zz7uVOUc4K/b9md+ImdPgMV+qWkQDRtXakpIfC5m2kJic166histPlwAFUZX79LaEUoldyQO1Qy3a8cf9i/7vV7g+W777Kp1abc8ux0EzpXd67uOtxeZLYojiIOMzonOpSV3S5vPAeI05EBjYGaeSaV03Pgk4hAJ1IjovToEGeXwkCl5lnPfb7OV3GxannN2FqdPJKWb56WS72+ZuKW3rDcXwOqa7Nc0+R4wWRHQwq15zRWxuVC9WKNcisRp5qhJQSppZ1plQ9c/b1mcpKsENFIrzWKZQHO1XJWdsfj265oI89JathVvT9yHtR3/27dB+cREO3BdTx/UKOHNBeOHrX0x7xft2UcX0T58T3FfHy7VU8EI3iKp//pNFc2Riie7qvawK+9jQy2ydVxUlSzOCa4IX13bSs3V+e/ux7JGTnPdlHkuy0n4vmcxFd7SZVq2a00AS6VQLw/ZM1CrimKddB1UwI+SV/Y6RCmWdCKQgFQxp1EuT7j/J8D1/R8pyhenPi5qKVXrBBTiPdsgUW8XjfjT5w0OsfZT5jv12WQs/j2xd2Id5FF1qutfELrQK30VvHzADZypsESJWMYOg78X4L3kdWPV5AqLUISaSQEf/2lodeoYCONMUhENjdJwqJglTvGygvC305swpShXrzTy7880k5QU0C9C5V/G15dtqI8AXRyo7i7pkfAOXNvzAq9le+e9mvAOg15QNaWGrvvG/NZy0Kdjjnf/AQ==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80166</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65107 - StreamListView - DECECS - Account has single deleted stream and no active streams" searchProperties="true" id="528899e7-8e0d-4936-8d49-3d21bf148cfe"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and no active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="291ebece-933d-47ad-8ca3-9fad9ffbf4f8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="7c619f25-ba3a-42c5-80d1-3426ab6494cc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();



def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="4013aec7-ae7b-43ac-98bb-b570749378cb" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="84580d14-a273-4ba1-8f00-8056b9f45ac5"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="84523f8e-1e68-4cdb-9ba1-eee6bacaf861"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="46296e2d-3582-4d15-a592-a2c095a8e066"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="5a48483c-9c4e-4f8f-859c-25537e513a51"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="718f12eb-292a-419d-a1f3-32d6ac5bfe34"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="42455f8b-63e6-4c6a-a42d-92508baa917e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="1f00556e-c81e-4cc0-b7bd-043ce3fcb9bf" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 2;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="1b93fad6-70bb-423b-a111-25dd5c14a4c1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:32061AC4FA08480CBB09AF71FB993E4E</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934676F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvO4ZXwlxK5AFZdkxwlMMiEzTPZlS8gNKLFl0MU4+fqVDHgwuSy7Ty61W92nu4+OdMFRmrhhj3NggmS0UaQJ5WFp7RiS0TBDnPCQohR4KHA46Y1Hodu0Q7TfYjSiYcf4O5jHrbYLyJwFnmP6M9cxgyCwTfts5p35yGsDBuXKuYSIcoGo6Biu7bRM2zfd4MFxQrcV2mfNdtv5y2j8BMZVbOXStI0dqIJ3jKUQq9CyNptNc+M1M7awXNt2rF/j0QQvIUVG92JbUZmIdXf+uBmr9EmCmzhLrQur5nMR83BCFhQJyWCXK/4ol23ZgaV8Yk4WX4xqL8QRnWflcoBoRglGCXlFuj9jEMssbvSSRcaIWKYfFuHYOrAJBTax49MvhlWHdmKgGkLGkcmXyNnFuoc5MKAYGj/uo47x5bSplVsfGKJ8nrGU15f/DQ/QHJJsBbHJ92XtoJ0e8J1OdS8AhxHFieQkh2+arCuEge+mCfj0UI07BnNSjAhXBC24RmcdwjtabrsxJAvg4v8M6GA42yA/USKh2yKtpdNP8mB0eTWC/ndU3ICfE8m+8k4J4NC5NFSj3S6PSFmRaLvjmr30H1ZX+eiP6czyLkdrBfjGHTH5nPRs3o9/4eDx1X2KIbJvcTqnYyt4hr6MyfJp/Ny3h39K6V+vf/G2vzgHitaPfHKOCmv6RKEtB3cJug3uiuELvHrRwr+eF1M0YI/XfMoec2aPV7f54MY5t6Yob7PJ9Edffo2yGUsX555zlxTfR9Ni3IsuJ8H0Zz7uVOUc4K/b9md+ImdPgMV+qWkQDRtXakpIfC5m2kJic166histPlwAFUZX79LaEUoldyQO1Qy3a8cf9i/7vV7g+W777Kp1abc8ux0EzpXd67uOtxeZLYojiIOMzonOpSV3S5vPAeI05EBjYGaeSaV03Pgk4hAJ1IjovToEGeXwkCl5lnPfb7OV3GxannN2FqdPJKWb56WS72+ZuKW3rDcXwOqa7Nc0+R4wWRHQwq15zRWxuVC9WKNcisRp5qhJQSppZ1plQ9c/b1mcpKsENFIrzWKZQHO1XJWdsfj265oI89JathVvT9yHtR3/27dB+cREO3BdTx/UKOHNBeOHrX0x7xft2UcX0T58T3FfHy7VU8EI3iKp//pNFc2Riie7qvawK+9jQy2ydVxUlSzOCa4IX13bSs3V+e/ux7JGTnPdlHkuy0n4vmcxFd7SZVq2a00AS6VQLw/ZM1CrimKddB1UwI+SV/Y6RCmWdCKQgFQxp1EuT7j/J8D1/R8pyhenPi5qKVXrBBTiPdsgUW8XjfjT5w0OsfZT5jv12WQs/j2xd2Id5FF1qutfELrQK30VvHzADZypsESJWMYOg78X4L3kdWPV5AqLUISaSQEf/2lodeoYCONMUhENjdJwqJglTvGygvC305swpShXrzTy7880k5QU0C9C5V/G15dtqI8AXRyo7i7pkfAOXNvzAq9le+e9mvAOg15QNaWGrvvG/NZy0Kdjjnf/AQ==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1C37EEE038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1C37EEE038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:32061AC4FA08480CBB09AF71FB993E4E</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">32061AC4FA08480CBB09AF71FB993E4E</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">32061AC4FA08480CBB09AF71FB993E4E</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:25:41</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1C37EEE038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:25:43</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1C37EEE038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1C37EEE038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1C37EEE038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80180</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65108 - StreamListView - DECECS - Account has single deleted stream and a single active stream" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7d7a0ce8-f60b-4aeb-864f-43e4552ecc98"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5811a733-e6e3-4ad9-86ec-07da1de4a0a5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="1df9bbd6-b25b-4bd4-8409-b8c115e97721" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="45aa9d21-f9a1-4469-8449-4584ddfab72e" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="767b64c8-85f4-4508-9977-bf179622df7b" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="92b4a5c8-d7f3-4684-b132-ff994243a5d9" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="cd43ffee-e2f1-4123-b0d9-0cac8a83a3b0" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="7c57b6b8-ee30-4fb3-986b-d76f1d513d48" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="55ea64fb-736a-4337-a576-970457715cac" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="1cf02c19-16fa-49c1-9569-6b14c256d424" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DLASP" id="bed66688-94ba-430a-ad7c-b48fbf6072ac" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView for DLASP" id="30e885c6-7294-4e67-930c-d83f06eff17e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="a6f9d600-a79a-4060-b8a8-306ccde94788" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="a265154e-ba88-4084-b637-b8ee97b1de25" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DACA2D17167E88E05305991F0A0EDE</con:value></con:property><con:property><con:name>assert</con:name><con:value>pVZbc+I6DP4rTPaxE3IHkinMUEJbzkDLAm13+7LjOgqYkzghdiDtrz92KCnQy2F3nzJWZOmT9FnSOUNxZHpdxiDjJKG1Io4o80ppW8kz6iWIEeZRFAPzOPam3dHQM+u6h3ZXlNrAbyu/AssMdavVVEO7Fai2Y4UqcjGohms5EDw1A8C6UGUshwFlHFHeVkzdcFTdVk13Zuiebnu6VW82nUeldg8ZE7aFSl3c2oIqWFtZcJ56mrbZbOobq55kc83UdUP7MRpO8QJipHTOtxGVjrLOqz6uC/cQRbiOk1g71w50zgPmTcmcIp5n8Oor+MyXrumuJnQCRubflOouBAMaJuWxh2hCCUYReUEyPyPgiySodaN5khG+iD8NwtClYRUKrGLDpt8U7RDaiYYOEGYMqWyBjFdbEwghA4qhdjcZtJVvp1WtvDrLEGVhksXs8Ph7eICuIUpSCFS2C+sV2ukGP8hU5xywN6A4yhlZw40ka4owsNdqAj7dVG2cQUiKIWGCoAWT6LR9eEfHbTZ8MgfG/6RAe8XZGrlHUQ6d5mxE4uHET5vX172X4vYKr0YPt651hfR2CWBfuRRUpd0ej0hZkWh7I76IX2hrMuQ/nDRaOfeXdMTJY7DOfi5n4+vUZ/fjx4e0uE+GznIcgj4dXI9nP9wz+8UPho42Sdcj+siXd/Sm5zSL55cJPUPdHN/cPPX/CexZXBjXqVX07FV0ETbS5RUZwJiZ9uXi58Y+cyffFy22dPEc3T5du5n7wBoXKdxdrcLizF4Nn+NH17rM1md9S7O+t6tw9vAfynZvfpo/LQHz3VHSYODXLkWVEP+6mUkJCdSwVPVS2XwYB8qVjrwle4eXi3ZHAk/UcHs2bL/r9xqO2/AbzqXZ7euOpTdd17jUuxeue7FrMlsURxB7CQ2J9CVb7pY2XwPEsceABpCp6yQXnY4pX1j0EUe1AZ2IR5BQBrNEtGej4ZotPVm2bDNfGebc2dhu1Gzla6V2k/Bbept1Qw7ZYU+2DnryBDBJCcjGLXnNBLEZF7lYoXXOI6O+RnUKuWjtmeyynmm3HI2ROI1AItXiJMgjqKeLtMyMxrZfU0WYldJJf1a+tk/jOv63S4HQCYhUYDKWCxBlhHfDxfKcXSDvAm58OIR25rt5QOTDEvnkGcFbJIe/3mgi+VFxxB92p+Md6Er3N+7+6k1/GX9oYPgXzod/61zU8v1N7Yt8aselrBwFa7Lndrd1iPklOl5nR8QVMuqrer5e5yX3bNvSMmFekyTQdFObAs5FT36eJf8C1Sor2kkDsAJ+5LySH0LM+YJOOeIQi7dSK48nbDxTYHLjGYhHXpy6Th24FKnjUPCPZL1IbGsS8ZcLHfaw1BPisfhskix4q9gHtvb8iDjFwsMJncuTHH7Pn/ACJ8IsEW07yfaNf2TgI+eHwirJFRYuCPWUc/j8T03247aCME5yyge+Ugr2Z0SJkz+n4L0pvTNTjqFqLyX/v5iqpKQABrHNMlLal+uFJ58Ane/NmVenx6Om1zV9o2k4zX6rVY4aZztq9L7fr5JygK7zTvxespenY453/gM=</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14DACA2D17157E88E05305991F0A0EDE</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DACA2D17157E88E05305991F0A0EDE</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14DADC6596D65F2AE05307991F0AB99B</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14DADC6596D65F2AE05307991F0AB99B</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>2</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value>1</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value>2015/04/29 10:04:59</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value>2015/04/29 10:05:02</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value>2015/04/29 10:05:01</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value>active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:14DADC6596D65F2AE05307991F0AB99B</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value>urn:dece:userid:org:dece:14DADC6596D65F2AE05307991F0AB99B</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value>urn:dece:userid:org:dece:14DADC6596D65F2AE05307991F0AB99B</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:14DAD4AC5F0121A1E05305991F0ADA09</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14DAD4AC5F0121A1E05305991F0ADA09</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value>urn:dece:rightstokenid:org:dece:14DAD4AC5F0121A1E05305991F0ADA09</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dececs</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>80181</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>14DACA2D171D7E88E05305991F0A0EDE</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14DACA2D171D7E88E05305991F0A0EDE</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>14DAD4AC5F0121A1E05305991F0ADA09</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14DAD4AC5F0121A1E05305991F0ADA09</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14DAD4AC5F0121A1E05305991F0ADA09</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>14DAD4AC5F0121A1E05305991F0ADA09</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>AED6F4E5D46D4F8F835D729F4C0FB1FE</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:AED6F4E5D46D4F8F835D729F4C0FB1FE</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value>urn:dece:streamhandleid:org:dece:88339AC3CD5A4BFD9760948A772EB6E1</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value>urn:dece:streamhandleid:org:dece:AED6F4E5D46D4F8F835D729F4C0FB1FE</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value>88339AC3CD5A4BFD9760948A772EB6E1</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value>AED6F4E5D46D4F8F835D729F4C0FB1FE</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_060345</con:value></con:property><con:property><con:name>useroid</con:name><con:value>14DADC6596D75F2AE05307991F0AB99B</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>bed66688-94ba-430a-ad7c-b48fbf6072ac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>30e885c6-7294-4e67-930c-d83f06eff17e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65123 - StreamListView - DECECS - Verify stream order based on STREAM_DATA.CREATED_DATE" searchProperties="true" id="03a6cd46-3c4b-430e-94c6-4b25d762d87f"><con:description> This test case will verify the returned stream list will be order by the stream's STREAM_DATA.CREATED_DATE column; descending order.

1.      All Streams in the list bust be sorted by Stream_Data.created_date in descending order, that is recent one will be first in the returned list. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5513f8aa-f294-4d23-a0fa-bf6b7faa6a80"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","3");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish User Context" id="8791dd25-6259-45b8-a5a8-fdf29dc828da"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def uArray = tP.getPropertyValue("userPropertyNameArray").toString().split(",");

if (tC.getPropertyValue("userIndex") == null) {
	tC.setPropertyValue("userIndex","0")
}

int userIndex = tC.getPropertyValue("userIndex").toInteger();

String userPropName = uArray[userIndex];
String userName = tP.getPropertyValue(userPropName);

assert userName.length() > 0;

tC.setPropertyValue("username", userName);
tC.setPropertyValue("password","testing");
tC.setPropertyValue("userIndex",userIndex.toString());

log.info "userPropName[$userPropName] - userName[$userName]";




</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="ecfce150-2a60-486b-ab22-10c4bf286eee"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="238eb8fd-6ff0-4390-9764-9b1c7092f465" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {
	a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
	a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="28b27cca-bc90-4e65-901e-2b463877e356"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="0576382f-b346-4cc1-a3fc-9551f17d9df0"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Random delay milliseconds" id="47b38f03-8ef7-402b-bf24-2dfd968e2ec0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

Random rand = new Random();

def v = rand.nextInt((10000-5000)+1)+5000;

tC.setPropertyValue("delay",v.toString());


</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="67a913aa-0569-4145-a88c-29b878e5c9b5"><con:settings/><con:config><delay>${#TestCase#delay}</delay></con:config></con:testStep><con:testStep type="groovy" name="Increment loop counter &amp; save Stream Handle" id="608c9c78-8342-4532-b321-ab73611ca550"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call RightsTokenCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="8d87aab8-e3a9-49d0-9245-48c447d2ab80"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="db54e01a-a5ef-4f6d-a134-b6976c0fbf6d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="69bb4d7b-873e-46e2-9030-9126df217554" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="b9bd8267-eb4b-47ff-a811-eb06c6b5f5f1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:65ECC9099784427BA33E054A5D0A0428</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934676F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvO4ZXwlxK5AFZdkxwlMMiEzTPZlS8gNKLFl0MU4+fqVDHgwuSy7Ty61W92nu4+OdMFRmrhhj3NggmS0UaQJ5WFp7RiS0TBDnPCQohR4KHA46Y1Hodu0Q7TfYjSiYcf4O5jHrbYLyJwFnmP6M9cxgyCwTfts5p35yGsDBuXKuYSIcoGo6Biu7bRM2zfd4MFxQrcV2mfNdtv5y2j8BMZVbOXStI0dqIJ3jKUQq9CyNptNc+M1M7awXNt2rF/j0QQvIUVG92JbUZmIdXf+uBmr9EmCmzhLrQur5nMR83BCFhQJyWCXK/4ol23ZgaV8Yk4WX4xqL8QRnWflcoBoRglGCXlFuj9jEMssbvSSRcaIWKYfFuHYOrAJBTax49MvhlWHdmKgGkLGkcmXyNnFuoc5MKAYGj/uo47x5bSplVsfGKJ8nrGU15f/DQ/QHJJsBbHJ92XtoJ0e8J1OdS8AhxHFieQkh2+arCuEge+mCfj0UI07BnNSjAhXBC24RmcdwjtabrsxJAvg4v8M6GA42yA/USKh2yKtpdNP8mB0eTWC/ndU3ICfE8m+8k4J4NC5NFSj3S6PSFmRaLvjmr30H1ZX+eiP6czyLkdrBfjGHTH5nPRs3o9/4eDx1X2KIbJvcTqnYyt4hr6MyfJp/Ny3h39K6V+vf/G2vzgHitaPfHKOCmv6RKEtB3cJug3uiuELvHrRwr+eF1M0YI/XfMoec2aPV7f54MY5t6Yob7PJ9Edffo2yGUsX555zlxTfR9Ni3IsuJ8H0Zz7uVOUc4K/b9md+ImdPgMV+qWkQDRtXakpIfC5m2kJic166histPlwAFUZX79LaEUoldyQO1Qy3a8cf9i/7vV7g+W777Kp1abc8ux0EzpXd67uOtxeZLYojiIOMzonOpSV3S5vPAeI05EBjYGaeSaV03Pgk4hAJ1IjovToEGeXwkCl5lnPfb7OV3GxannN2FqdPJKWb56WS72+ZuKW3rDcXwOqa7Nc0+R4wWRHQwq15zRWxuVC9WKNcisRp5qhJQSppZ1plQ9c/b1mcpKsENFIrzWKZQHO1XJWdsfj265oI89JathVvT9yHtR3/27dB+cREO3BdTx/UKOHNBeOHrX0x7xft2UcX0T58T3FfHy7VU8EI3iKp//pNFc2Riie7qvawK+9jQy2ydVxUlSzOCa4IX13bSs3V+e/ux7JGTnPdlHkuy0n4vmcxFd7SZVq2a00AS6VQLw/ZM1CrimKddB1UwI+SV/Y6RCmWdCKQgFQxp1EuT7j/J8D1/R8pyhenPi5qKVXrBBTiPdsgUW8XjfjT5w0OsfZT5jv12WQs/j2xd2Id5FF1qutfELrQK30VvHzADZypsESJWMYOg78X4L3kdWPV5AqLUISaSQEf/2lodeoYCONMUhENjdJwqJglTvGygvC305swpShXrzTy7880k5QU0C9C5V/G15dtqI8AXRyo7i7pkfAOXNvzAq9le+e9mvAOg15QNaWGrvvG/NZy0Kdjjnf/AQ==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBFD6B2C676A8EE05307991F0A2879</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">65ECC9099784427BA33E054A5D0A0428</con:value></con:property><con:property><con:name>delay</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9022</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EDC81B1654554B1DA08A861C1EB21B30</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:BBF314A843C24135AB1DF23DF4520C49</con:value></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:65ECC9099784427BA33E054A5D0A0428</con:value></con:property><con:property><con:name>rightstokenFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EDC81B1654554B1DA08A861C1EB21B30</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:25:51</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">BBF314A843C24135AB1DF23DF4520C49</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:26:01</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879</con:value></con:property><con:property><con:name>streamhandle_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">65ECC9099784427BA33E054A5D0A0428</con:value></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:26:12</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBFD6B2C676A8EE05307991F0A2879</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80195</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65124 - StreamListView - DECECS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of deleted is displayed" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="05a2e85d-c34a-49ab-932c-d73f28f462c6"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of deleted will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="b43ad87a-122e-4d48-b9d4-39919a7639f5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="25b1b0aa-a06f-43f4-ae6b-109f9138b592"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c62071f2-b0d7-451d-902a-34a81ef40580" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="b66afc3b-c6e3-446d-bfae-ba3b1f5de9ae"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="59b62bc3-5a8c-4f39-a9f0-a891c9fd6f28"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'deleted'" id="2a7c55c2-96dc-4ee6-9206-0da8114f387d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusDeleted(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="9e092231-e46b-4f85-b34b-354888fefd8b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="a56a9ec6-b13e-4e8c-bace-399a7a4e8cb5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="6db94fc5-4790-474b-af4c-0de03a736592" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="ab0e165e-a063-489d-9c98-c2b90242205e" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5fd75606-c272-43c6-8c78-6624de63070a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:01A1B92F4E07491BBF87E9BF293CE918</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934676F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvO4ZXwlxK5AFZdkxwlMMiEzTPZlS8gNKLFl0MU4+fqVDHgwuSy7Ty61W92nu4+OdMFRmrhhj3NggmS0UaQJ5WFp7RiS0TBDnPCQohR4KHA46Y1Hodu0Q7TfYjSiYcf4O5jHrbYLyJwFnmP6M9cxgyCwTfts5p35yGsDBuXKuYSIcoGo6Biu7bRM2zfd4MFxQrcV2mfNdtv5y2j8BMZVbOXStI0dqIJ3jKUQq9CyNptNc+M1M7awXNt2rF/j0QQvIUVG92JbUZmIdXf+uBmr9EmCmzhLrQur5nMR83BCFhQJyWCXK/4ol23ZgaV8Yk4WX4xqL8QRnWflcoBoRglGCXlFuj9jEMssbvSSRcaIWKYfFuHYOrAJBTax49MvhlWHdmKgGkLGkcmXyNnFuoc5MKAYGj/uo47x5bSplVsfGKJ8nrGU15f/DQ/QHJJsBbHJ92XtoJ0e8J1OdS8AhxHFieQkh2+arCuEge+mCfj0UI07BnNSjAhXBC24RmcdwjtabrsxJAvg4v8M6GA42yA/USKh2yKtpdNP8mB0eTWC/ndU3ICfE8m+8k4J4NC5NFSj3S6PSFmRaLvjmr30H1ZX+eiP6czyLkdrBfjGHTH5nPRs3o9/4eDx1X2KIbJvcTqnYyt4hr6MyfJp/Ny3h39K6V+vf/G2vzgHitaPfHKOCmv6RKEtB3cJug3uiuELvHrRwr+eF1M0YI/XfMoec2aPV7f54MY5t6Yob7PJ9Edffo2yGUsX555zlxTfR9Ni3IsuJ8H0Zz7uVOUc4K/b9md+ImdPgMV+qWkQDRtXakpIfC5m2kJic166histPlwAFUZX79LaEUoldyQO1Qy3a8cf9i/7vV7g+W777Kp1abc8ux0EzpXd67uOtxeZLYojiIOMzonOpSV3S5vPAeI05EBjYGaeSaV03Pgk4hAJ1IjovToEGeXwkCl5lnPfb7OV3GxannN2FqdPJKWb56WS72+ZuKW3rDcXwOqa7Nc0+R4wWRHQwq15zRWxuVC9WKNcisRp5qhJQSppZ1plQ9c/b1mcpKsENFIrzWKZQHO1XJWdsfj265oI89JathVvT9yHtR3/27dB+cREO3BdTx/UKOHNBeOHrX0x7xft2UcX0T58T3FfHy7VU8EI3iKp//pNFc2Riie7qvawK+9jQy2ydVxUlSzOCa4IX13bSs3V+e/ux7JGTnPdlHkuy0n4vmcxFd7SZVq2a00AS6VQLw/ZM1CrimKddB1UwI+SV/Y6RCmWdCKQgFQxp1EuT7j/J8D1/R8pyhenPi5qKVXrBBTiPdsgUW8XjfjT5w0OsfZT5jv12WQs/j2xd2Id5FF1qutfELrQK30VvHzADZypsESJWMYOg78X4L3kdWPV5AqLUISaSQEf/2lodeoYCONMUhENjdJwqJglTvGygvC305swpShXrzTy7880k5QU0C9C5V/G15dtqI8AXRyo7i7pkfAOXNvzAq9le+e9mvAOg15QNaWGrvvG/NZy0Kdjjnf/AQ==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E45B23147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E45B23147E05307991F0A6CD1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">01A1B92F4E07491BBF87E9BF293CE918</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:01A1B92F4E07491BBF87E9BF293CE918</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">01A1B92F4E07491BBF87E9BF293CE918</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:26:32</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E45B23147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E45B23147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E45B23147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E45B23147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80196</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65125 - StreamListView - DECECS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of pending is displayed" searchProperties="true" id="53a2eafc-6a9e-4c37-96aa-5825c7d6ae4d" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of pending will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d5886646-4160-4d26-b0f9-1ae328efb1ab"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="f2897a57-7a9e-42d9-a972-e51ace66b05b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="f22539e7-378e-4a06-bfe5-d99ef2bf8f53" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="c71c7b6e-8104-486d-aedf-63652aab8367"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="1557a05d-34d0-4ee7-a6bc-fb29c45dc428"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'pending'" id="0aee3d2c-5626-4af0-8ac2-5dc95195dbdf"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusPending(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="c1d0bb53-86f7-418d-9b7e-ae062d029c03"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="6258b84e-977e-4cdb-8f78-9bc79f9a26a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="e041099a-e937-4779-b1b1-fda3c05fb5e7" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="889627e3-57e6-460c-8fe1-b2b3603ff11d" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="523d7d16-774a-4781-831c-26c163606a30" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC70C6E7CE999548E0401F0A05995359</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC70C6E7CE999548E0401F0A05995359</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC70C6E72B29CA3DE0401F0A0599534D</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC70C6E72B29CA3DE0401F0A0599534D</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC70C6E72B29CA3DE0401F0A0599534D</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 17:19:57</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC70C6E7CE999548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC70C6E7CE999548E0401F0A05995359</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC70C6E7CE999548E0401F0A05995359</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC70C6E7CE999548E0401F0A05995359</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80197</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65126 - StreamListView - DECECS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of suspended is displayed" searchProperties="true" id="c5de0590-35fa-4ef6-8117-527f42567d3e" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of suspended will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="67955ec3-e5d9-4450-ac33-7b8dab97902e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="f1638281-e24d-4ff3-979e-0344a02e5d84"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="26f948df-590a-45df-8da9-183f62918a63" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="48ace3ab-d7c6-4c1f-9e29-d93a03faf9eb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="6fdb2058-4140-450b-8699-4f5bd5b01a48"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'suspended'" id="bc3d56e1-9287-46e0-8590-3b8c38090135"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusSuspended(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="370de25d-2707-427d-a335-6cb05fcdb1cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="be9fdd8e-22ae-4929-b77f-f1572ed0f607"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="21cbb95b-8fa1-49bb-baaa-0be5ce2e2d07" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="c5a69aff-05b7-47fb-bdb7-4383628ff278" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5ad5dbcd-d692-44a7-80c9-409dda890f2d" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC70C6FEACCC78F7E0401F0A07992160</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC70C6FEACCC78F7E0401F0A07992160</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC70C6E78E195548E0401F0A05995353</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC70C6E78E195548E0401F0A05995353</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC70C6E78E195548E0401F0A05995353</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 17:20:15</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC70C6FEACCC78F7E0401F0A07992160</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC70C6FEACCC78F7E0401F0A07992160</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC70C6FEACCC78F7E0401F0A07992160</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC70C6FEACCC78F7E0401F0A07992160</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80198</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65127 - StreamListView - DECECS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of other is displayed" searchProperties="true" id="02c18489-69c6-47a2-84db-bdd2dbc63f00" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of other will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="045cb63e-9cb7-4701-aabe-17d14b23864e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="963de7af-970d-438b-b6e8-ed017fab5e36"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="8e295790-87a4-4e0f-8b99-24e9582894f8" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="cd249e1d-6a3d-446d-9d22-291294f237a1"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="0b1358a7-fb72-4bb9-a78a-2d26c096bafa"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'other'" id="1599990c-871a-4475-95c0-69ff1ab5770d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusOther(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="b56cd875-94d1-4d07-b22c-f0073853c8e9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4ad0789f-9a60-4d1f-9838-d4779dd3e6c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="c6a7af4c-b8b8-46a9-bee5-dae380c0d90c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="eb524db7-dbb9-467e-bcd3-50682a8c7959" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="f930c9e4-9e3f-47cd-a21e-c3a6222536f1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140910_05295</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:02B39B161D453142E05307991F0AB54B</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEAB4AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35E97FE135A61E05305991F0A1343</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbZcuI4FP0Vyv2YMt4AY1egyoFk2ulsjcnS/TKlyNegxJbBkoDw9SMZcGOyDDNPLl1fnXvuoiOdMpSlth8wBgUnOW2sspQyv7T2NFFQP0eMMJ+iDJjPsR8F11e+3TR9tNuiNcJhT/vbtsAz3bije57b0VvdFtafY9fSPRslNrbB7TqxdGVMQEgZR5T3NNu0Wrrp6ZY5Nj3f9vxWt+na3m+t8QAFk9jSpWlqW1Ir1tOmnM98w1gul82l08yLiWGbpmU8XV9FeAoZ0vqnm4zKQEV/64+bMWBIU9zEeWacGjWf05j5EZlQxEUB21jxZ7FMw/QM6RMzMvmmVXshDmmSl8sBojklGKVkjVR9roFP87gRpJO8IHyafZqEZSpgHVZYx1aLftOMOrUjgWoMC4Z0NkXWFmsECRRAMTTuR2FP+3Zc18qt4wJRluRFxurL/8YH6ALSfAaxznZpbakdD/hBpfqngP2Q4lQwsoAbNawzhIFtuwn4eKjGXQEJWV0RJgd0xRQ7Y5/ewXJTjSGZAOP/p0F7zdmAPKBUQH+wmD+xYLhYnaxGqM2T9VvE3Lv45CQKeyWBfefSULV2szwYymqINjvuW+P2zcO1Q6Mz14s7w++jp8df166zvJ2Il3tvxT3nBp5+R9wA/mv2+vMvY/rdXqzjm+XzcsR+WK/2nRXeP7wGP14uhfuwLubXUza6vMiuHtuB9csZvji3cRA/Z/lLeCIW0cl3+yLxorU7ZbSDyfzubfDYdh+iJCos+jinb0tx8zpEYRLh5Gf2s315uX4cj1fnf7XMXpXOHv+6bXfmI/H8ApjvlmoMwmHjQnYJ8a/FTFlIrCelqz9T4sM4UK711S6lHb6QckdiX/ZwszbtM6d97rkX5+ZFO+hY52bbMdueZ12YgeW0nJ3IbFgcUBzkNCEqlpLczdh8TRBnPgMaQ6EvciGVjmlfIA4RR42QjuQhyCmDcS7l2bLXhTntmKlJRcFY1xQd3pp1RUdr3OT8lt4WQcKhqGmyZdc0eQSYzAgo4VZzzeRgMy5rMUcLwVOruUBNCkJKe6FU1rdb3bbBSDZLQTE1sjwWKTRn01lZGYNtvraOMCutZVnx5sR9mtvhv10ZpE9MlANT+ZyBbCV8cME4u2Q+Sdo6uIh28IGIiTpcsqa8IHjDpP7rz6ioGanmZJvVjnblfWioIRuHSVXB4gXB1cBX17ZUc3n++7u2zFFz3hSLhSgb4SqdKyS8FB+rbZi2EQEWUqHexvkrUKNCMY66DiriB8Ere52i4FMaccQhk5PTKJdH3P8RMHX/h3LkV8c+LmohZek4rPhHtkEq3y6K8ZfPG+xj5SfNd/KzzIs/iX+EtRdH5imvf07oRK3UVfD2yWzgXMISKWJ5sQ/+EcBHwevGqsgVFy4H6llw+PxPQ6lTT0MY54LycKiVhn3FLHnytxn4f5zewZSiXL3SyL8/03RSjgAG+bZjpMRXl62vjgCd7KnuNug74R143vl54LaCoVMKr7sR3kG3dVYVpcau/8783rJXp8MZ7/8D</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B35E97FE0F5A61E05305991F0A1343</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35E97FE0F5A61E05305991F0A1343</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEA74AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEB24AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:02B35C99EEA74AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3AC003E9705EEE05305991F0A20CA</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3AC003E9705EEE05305991F0A20CA</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B39B161D453142E05307991F0AB54B</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:02B39B161D453142E05307991F0AB54B</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B39B161D453142E05307991F0AB54B</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/09/10 09:32:16</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3AC003E9705EEE05305991F0A20CA</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3AC003E9705EEE05305991F0A20CA</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3AC003E9705EEE05305991F0A20CA</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3AC003E9705EEE05305991F0A20CA</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80199</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEB24AD3E05307991F0AC84B</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65128 - StreamListView - DECECS - Active stream associated with RightsToken with RENTAL_ABSOLUTE_EXPIRATION expired" searchProperties="true" id="679c9ac3-855d-4da3-9591-43624716b41a"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d2cf6e1b-5808-4bfc-b00d-c3f9cc570afe"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="1d4d8407-1592-45d1-8dba-05b418f78472"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="dd930c40-55f1-4107-96c7-2fb5894b0e5f" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="55bc8fd7-daa7-492c-9a25-60b3a58f6eee"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="967a30e3-4a54-43bd-bb79-5cfac4796853"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Expire the RightsToken" id="f5740689-b910-4d42-a8f1-8b9adf9e40ec"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenExpireHours(rt,1) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="0652fc7c-207d-49d0-a4fa-930a588f6931"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="bab9e92a-bbd8-4395-b3fe-fc26f9195c53"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="0956a9f6-0abf-43eb-96ad-2f4bd6ec26fb" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="69a2b502-166b-4eb0-807a-9d92b0cdad3b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="34252345-06ec-4814-b932-10bdf07b5d6c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D2A566175F76441DB4C67EB2845C731A</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934676F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvO4ZXwlxK5AFZdkxwlMMiEzTPZlS8gNKLFl0MU4+fqVDHgwuSy7Ty61W92nu4+OdMFRmrhhj3NggmS0UaQJ5WFp7RiS0TBDnPCQohR4KHA46Y1Hodu0Q7TfYjSiYcf4O5jHrbYLyJwFnmP6M9cxgyCwTfts5p35yGsDBuXKuYSIcoGo6Biu7bRM2zfd4MFxQrcV2mfNdtv5y2j8BMZVbOXStI0dqIJ3jKUQq9CyNptNc+M1M7awXNt2rF/j0QQvIUVG92JbUZmIdXf+uBmr9EmCmzhLrQur5nMR83BCFhQJyWCXK/4ol23ZgaV8Yk4WX4xqL8QRnWflcoBoRglGCXlFuj9jEMssbvSSRcaIWKYfFuHYOrAJBTax49MvhlWHdmKgGkLGkcmXyNnFuoc5MKAYGj/uo47x5bSplVsfGKJ8nrGU15f/DQ/QHJJsBbHJ92XtoJ0e8J1OdS8AhxHFieQkh2+arCuEge+mCfj0UI07BnNSjAhXBC24RmcdwjtabrsxJAvg4v8M6GA42yA/USKh2yKtpdNP8mB0eTWC/ndU3ICfE8m+8k4J4NC5NFSj3S6PSFmRaLvjmr30H1ZX+eiP6czyLkdrBfjGHTH5nPRs3o9/4eDx1X2KIbJvcTqnYyt4hr6MyfJp/Ny3h39K6V+vf/G2vzgHitaPfHKOCmv6RKEtB3cJug3uiuELvHrRwr+eF1M0YI/XfMoec2aPV7f54MY5t6Yob7PJ9Edffo2yGUsX555zlxTfR9Ni3IsuJ8H0Zz7uVOUc4K/b9md+ImdPgMV+qWkQDRtXakpIfC5m2kJic166histPlwAFUZX79LaEUoldyQO1Qy3a8cf9i/7vV7g+W777Kp1abc8ux0EzpXd67uOtxeZLYojiIOMzonOpSV3S5vPAeI05EBjYGaeSaV03Pgk4hAJ1IjovToEGeXwkCl5lnPfb7OV3GxannN2FqdPJKWb56WS72+ZuKW3rDcXwOqa7Nc0+R4wWRHQwq15zRWxuVC9WKNcisRp5qhJQSppZ1plQ9c/b1mcpKsENFIrzWKZQHO1XJWdsfj265oI89JathVvT9yHtR3/27dB+cREO3BdTx/UKOHNBeOHrX0x7xft2UcX0T58T3FfHy7VU8EI3iKp//pNFc2Riie7qvawK+9jQy2ydVxUlSzOCa4IX13bSs3V+e/ux7JGTnPdlHkuy0n4vmcxFd7SZVq2a00AS6VQLw/ZM1CrimKddB1UwI+SV/Y6RCmWdCKQgFQxp1EuT7j/J8D1/R8pyhenPi5qKVXrBBTiPdsgUW8XjfjT5w0OsfZT5jv12WQs/j2xd2Id5FF1qutfELrQK30VvHzADZypsESJWMYOg78X4L3kdWPV5AqLUISaSQEf/2lodeoYCONMUhENjdJwqJglTvGygvC305swpShXrzTy7880k5QU0C9C5V/G15dtqI8AXRyo7i7pkfAOXNvzAq9le+e9mvAOg15QNaWGrvvG/NZy0Kdjjnf/AQ==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1C37EFA038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1C37EFA038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D2A566175F76441DB4C67EB2845C731A</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D2A566175F76441DB4C67EB2845C731A</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D2A566175F76441DB4C67EB2845C731A</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:26:41</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1C37EFA038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1C37EFA038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1C37EFA038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1C37EFA038A3E05307991F0A7A99</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80200</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65150 - StreamListView - DECECS - &lt;StreamClientNickname> verification when value is NULL" searchProperties="true" id="f7f77df6-a825-417c-99ba-3a7ee16d1091"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="12b0a6c0-2890-4ae1-836c-f2b8f71931d9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="8e5f6bae-7ed9-4b74-bff1-5ca3898b8d5c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="b044b3d3-0a97-4a81-b7e3-5b6b83b1a6f9" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="5cbcc6f4-c2f9-4331-8ec4-f7dbedff186a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="a5ced317-abcc-4ec8-b606-8022efa9fea4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="b1de4cc5-7eaa-40e2-a416-58bc36cce54d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="4b5e1259-aae8-4f15-b1ba-e5580fcc6ccb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="6ad728b0-f6e9-4077-9f44-1fed21cad0fa" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="6d701e91-a9c9-486f-8ff6-81d8cf31808f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="6ac2d4ff-f6e9-4f8a-959b-884a5e6c60cc" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:447BDCE150A245DEA26952EE879B0BCC</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934676F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvO4ZXwlxK5AFZdkxwlMMiEzTPZlS8gNKLFl0MU4+fqVDHgwuSy7Ty61W92nu4+OdMFRmrhhj3NggmS0UaQJ5WFp7RiS0TBDnPCQohR4KHA46Y1Hodu0Q7TfYjSiYcf4O5jHrbYLyJwFnmP6M9cxgyCwTfts5p35yGsDBuXKuYSIcoGo6Biu7bRM2zfd4MFxQrcV2mfNdtv5y2j8BMZVbOXStI0dqIJ3jKUQq9CyNptNc+M1M7awXNt2rF/j0QQvIUVG92JbUZmIdXf+uBmr9EmCmzhLrQur5nMR83BCFhQJyWCXK/4ol23ZgaV8Yk4WX4xqL8QRnWflcoBoRglGCXlFuj9jEMssbvSSRcaIWKYfFuHYOrAJBTax49MvhlWHdmKgGkLGkcmXyNnFuoc5MKAYGj/uo47x5bSplVsfGKJ8nrGU15f/DQ/QHJJsBbHJ92XtoJ0e8J1OdS8AhxHFieQkh2+arCuEge+mCfj0UI07BnNSjAhXBC24RmcdwjtabrsxJAvg4v8M6GA42yA/USKh2yKtpdNP8mB0eTWC/ndU3ICfE8m+8k4J4NC5NFSj3S6PSFmRaLvjmr30H1ZX+eiP6czyLkdrBfjGHTH5nPRs3o9/4eDx1X2KIbJvcTqnYyt4hr6MyfJp/Ny3h39K6V+vf/G2vzgHitaPfHKOCmv6RKEtB3cJug3uiuELvHrRwr+eF1M0YI/XfMoec2aPV7f54MY5t6Yob7PJ9Edffo2yGUsX555zlxTfR9Ni3IsuJ8H0Zz7uVOUc4K/b9md+ImdPgMV+qWkQDRtXakpIfC5m2kJic166histPlwAFUZX79LaEUoldyQO1Qy3a8cf9i/7vV7g+W777Kp1abc8ux0EzpXd67uOtxeZLYojiIOMzonOpSV3S5vPAeI05EBjYGaeSaV03Pgk4hAJ1IjovToEGeXwkCl5lnPfb7OV3GxannN2FqdPJKWb56WS72+ZuKW3rDcXwOqa7Nc0+R4wWRHQwq15zRWxuVC9WKNcisRp5qhJQSppZ1plQ9c/b1mcpKsENFIrzWKZQHO1XJWdsfj265oI89JathVvT9yHtR3/27dB+cREO3BdTx/UKOHNBeOHrX0x7xft2UcX0T58T3FfHy7VU8EI3iKp//pNFc2Riie7qvawK+9jQy2ydVxUlSzOCa4IX13bSs3V+e/ux7JGTnPdlHkuy0n4vmcxFd7SZVq2a00AS6VQLw/ZM1CrimKddB1UwI+SV/Y6RCmWdCKQgFQxp1EuT7j/J8D1/R8pyhenPi5qKVXrBBTiPdsgUW8XjfjT5w0OsfZT5jv12WQs/j2xd2Id5FF1qutfELrQK30VvHzADZypsESJWMYOg78X4L3kdWPV5AqLUISaSQEf/2lodeoYCONMUhENjdJwqJglTvGygvC305swpShXrzTy7880k5QU0C9C5V/G15dtqI8AXRyo7i7pkfAOXNvzAq9le+e9mvAOg15QNaWGrvvG/NZy0Kdjjnf/AQ==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBEBAA934276F5E05307991F0AB213</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DC2033935038A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E461B3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E461B3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">447BDCE150A245DEA26952EE879B0BCC</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:447BDCE150A245DEA26952EE879B0BCC</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">447BDCE150A245DEA26952EE879B0BCC</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:26:50</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E461B3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E461B3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E461B3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E461B3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2033935B38A5E05307991F0AD9A9</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65151 - StreamListView - DECECS - &lt;StreamClientNickname> verification when value is single character" searchProperties="true" id="5367d0f1-0b66-4633-81f2-183c130a1d21"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Create data for retailer,lasp and non lasp" id="23173f24-8f5c-4089-8c92-ec700415a505"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTS = tP.getTestSuiteByName("E_2_E");

def runnerTC = myTS.run( null , false )

assert runnerTC.status == Status.FINISHED;

tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");
tP.setPropertyValue("StreamDeleteList","");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="50b7cbe2-c798-4ed4-865d-a9b1bf2e66c5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("nickname","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="0288648f-5d86-4099-b8d5-d8697217425c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="003dd907-52da-4790-a9c3-ba010adfa5b4" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="47cb1204-2322-41ad-95f2-1ab7bd63a7bb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="1af976f6-8233-43f7-b6fd-65c68dda7de2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tC.setPropertyValue("nickname","a");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="577baa93-ea5c-4e58-94d9-cccc1040ef9d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="9f864861-3f44-46f4-b691-2f9091739733"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="12cc0bcc-8ed5-43be-9084-c6a808825d14" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="b08b4b08-8d0b-445b-9d16-7d8323ad9192" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="cf985752-44b6-4e4a-91e1-3819926379d1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DE51C1D737609CE05305991F0AF469</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_073253</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1A8B55AC763748F18001801A957141D2</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1A8B55AC763748F18001801A957141D2</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1A8B55AC763748F18001801A957141D2</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1A8B55AC763748F18001801A957141D2</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DE1597C83A0EF8E05307991F0A9290</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DE1597C83A0EF8E05307991F0A9290</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DE1597C03F0EF8E05307991F0A9290</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">.</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DE1597C83A0EF8E05307991F0A9290</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DE1597C3280EF8E05307991F0A9290</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">.</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 14:08:34</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DE1597C3280EF8E05307991F0A9290</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DE1597C3280EF8E05307991F0A9290</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DE1597C3260EF8E05307991F0A9290</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DE1597C3260EF8E05307991F0A9290</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZtU+o6EP4rTM9Hp/QNtO0IMwjo4VwQj6BXzxcnpFuItmlJUl789TcpUCmil3s/dbLd7D67++RJLjmKI9tvcQ5MkIRWVnFEuZ9bG1rGqJ8gTrhPUQzcF9gftQZ9366aPtpt0Sq9TkN7mWAcAkwcvT5BWK9ZrqdPwsDRXddzwjqAe45C6cp5Bj3KBaKiodmmVdfNmm57Y6vmm5ZvuVWnfvFHqzwC4zK2dKma2hbUije0mRCpbxjL5bK6dKoJmxq2aVrG06A/wjOIkda83FSUJ2LNrT+uBoAhinAVJ7FxaZR8LgPuj8iUIpEx2OYKvsplGqZnSJ+Ak+kPrdgLQY+GSb5sI5pQglFE3pHqzwDELAkqrWiaMCJm8ZdFWKYKrMMK69iq0R+aUYZ2YqASQsaRzmfI2sa6hxAYUAyVh/teQ/tx2tTyrWOGKA8TFvPy8r/hAbqAKEkh0PmurC200wMe6VTzErDfozjKOFnArSJrijDw7TQBnx6qcscgJKs+4ZKgK67QGfvwDpabbnTIFLj4PwPaG84myCOKMmgmv36djVtjjy66P4NXHvdu193h/Baia7eRA9h3zg3FaDfLA1IWJNrsuGWv7/h8PUDG21D8/ddq9dD/YwFJr39fPbjk5mrwbkNNnN/F3RQ/1t00cJ9u+umy+9Cnr+HN+fis7a1/3cY1Hq568VN9+ugxc333nj7OvMDo42iY3ETevF97fcJ31HWvh+ssjmfmz2Vv0O2w7uzpDf80BmfB29BxL67it3QQ3v+ePziR+2g+i+ebdvupz96D+1nruVGUs4e/bNud+VE2eQUsdktFg16nci2nhMT3YqYsJNDD3NVPlfhwAVRoTbVLaYefSbkjgS9nuFlbtU7XqnsXbcd2ze612zXrjnnheda12fJsz9yJzAbFAcR2QkOicinJ3dDme4A49jnQAJi+SDKpdFz7JmIHCVTp0Xt5CBLKYZxIeZ7NCcW1xTuyJ5llialgiek4a2epVW4TMaRD1goFsLImX5Q0+R4wSQko4Va85pLYXMhezNEiE5FVXaAqhUxKO1Mq69s1t25wEqcRKKRGnARZBNV0luadMfjma+sI89za6bdGdy/t0YudH7ovyzv8t+uE9AmIcuCqpCuQ04Qjd4y5q+dT3edH76Jd+FYWEHW+ZFsFI3iDpPzrgy2KJgVVPgrbIS82HBpKwY3Duop8wYLggvbF5S01XapAczecObKq82q2WGT5PGo1x2AyvKE6Ypi2MQKcSZ1aj5M3oEYRxTjpUiiAHyQv7GWImZjRkUACYsmfSr484RUwAq5eAT1J/NWpT4xSStk6AStxzNaO5AtGIf72kYN9rPyk+U5+lgkLPiZ2JNZeHlmnfAQIQqdqpS6E9Rf0wIkMS6SUJWw/+LEAx5KXjUWTCyxCEmqSCfj6T0VpVENDGCcZFb2Olhv2dTPHKdYp+B9On8Lk0ly81ci/P9Z0klMAg3zhcZLHV1eur44Ane5p7zbpF/J7/p38ltE1P5k/W/b6dMjx5j8=</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DE1597C0380EF8E05307991F0A9290</con:value></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DE1597C3280EF8E05307991F0A9290</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DE1597C83A0EF8E05307991F0A9290</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DE1597C83A0EF8E05307991F0A9290</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DE1597C83A0EF8E05307991F0A9290</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DE1597C03F0EF8E05307991F0A9290</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>23173f24-8f5c-4089-8c92-ec700415a505</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65152 - StreamListView - DECECS - &lt;StreamClientNickname> verification when value is max allowed" searchProperties="true" id="c144b5e1-6d3c-4d2e-a638-97025aaf28a6"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8e93c2c3-eb9b-4db9-a63c-c360022a1697"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("nickname",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="25ac21a5-cd15-4220-a720-c5470609a85d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="b9b7b8f5-18e0-44ec-9384-4788c5efcbd4" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="8edde6cb-1664-411f-8357-0f222b292698"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="8493689f-7e47-43d9-9e8f-0049159612a2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nickname","aaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIoooo");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="d055ae37-e629-4647-b0ea-b653c6897546"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="7d47a05e-5846-484d-b747-5a9db47483c5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="dc60d87a-3f0a-44b5-9627-a4e55f680d46" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="fb865154-b5d6-4896-8059-fc3b86e60009" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="0f379a84-658e-4d0f-8eda-d7b6a4afa8e1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_072656</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D243657D40F0441AB197E77491578D2E</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E464D3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2695CAE4572FE05307991F0A2D9E</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZWQbE8AVqOKWHWcJk0DIJLykhCxAwZZAkg3k61cy4GBCsuw+udRunT590ZGuBYxCx2sKgbkkjBY2UUiFl1rrRsypx6AgwqMwwsKTyBs273qeU7Q8eNhiFPxO3XitTioVp2SXzUo5qJouqpTNaqVqmYFddq5gFSIUBMpViBj7VEhIZd1wLOVvuaZTe7Rtz6l4jlu0atWxUXjCXChs5VK0jD2pjagbcymXHgDr9bq4LhUZnwHHsmzwfNcbojmOoNG43mWUBuKNvT8qBhjhMERFxCJwDXI+14HwhmRGoYw53scKvoplAasGlE8gyOyHke3FgU+nLF22IWWUIBiSd6jrc4flnAWFZjhjnMh59GUStqWBTbxBJrJd+sMAeWoXAuUYcgFNMYf2HmuAp5hjinBhNPDrxo/LupZufeSQiinjkcgv/xsfTBMcsiUOTHFIa0/tcsAzlWpcY+T5FIWxIAnu62FdQoTFvpsYXQ5VuOd4SjY9ItSAboRmB47pnSx31eiQGRby/zToqDk7kCcYxrjRaj0wsnjig+iBgZ/b8Z/2z+YouGXjql9PCRw7p4astbvlyVBmQ7TbsfrLqb1twcjnt2A+em521iswuBqIq+jprvd3b3wrX5KN4EHtuVOxn8ujWb99H3ZfiPNAf90uWreVl8lmcbN52Y55P3A6butPzV/XwnGvF5NWMlkATsrPfbAg4Zi0+jjqum+/3IcSfk/GYDba+nC7iG7e12MUdcnkTTYfp5P3bms+oOP3NyKxLwAquwNWvusv6lk6R/zztsOZH8aTN4zkYanHwO8UblSXoPxezLSFBOY0dfWWWnyExFQaDb1La4cXK7kjgad6uFvbbqdtt5yue9WySrZb6VrlklWp1ewbq3nV7tgHkdmxOKHYZnRKdCwtubux+Z4gijyBaYC5mbBYKZ0wvkHsQAkLPh2oQ8CowI9MyfM8WFaS1XJusySyF5PZap2wOcVOYhT6TP6mv3lzKjHPa7Kb0+QBRmRJsBZuPddCDbaQqhYrmMQytIsJLFIcK2nnWmXVvmoZCBItQ6yZgogFcYiLy/kyrQwQu69jQiRSa6fXHN6/toevTnrovkzv9N+hEsonINpB6JRaWHUTn7lj7EM+n/K+OnsXHeCbcUD0+VJllZygHZP8r49p0WOSjcpHYgfm2YZTQw4cnOaVxQsSgrKxzy5vpelKBRqH5qygXVwV4ySJ0364bglwBQ90RYDlgCFGsdKp7SNbYAoyFHDRpZARPwme2fMUYzmnQwkljtT8FNLlBa+AIRb6FeCrwd9c+sTIhVSlk3gjz9naoXrBaMbfPnKQh7SfMt+rz5rxj8TPYR3FUXmqR4AkdKZX+kLYfjEeiClYoqSM8WPwcwDngueNWZEzLlIN1CSW+Os/Ba1RdUPVj8VU+h0jNRzrZspTbpfY+3D6BJNKc/ZWI//+WDNJOgIIqxeeICm+vnI9fQTo7Eh790HPy2+z+5385tk1Ppk/W47qdDrjjX8A</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DC1B2E46B03147E05307991F0A6CD1</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E46B03147E05307991F0A6CD1</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E46AE3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E46543147E05307991F0A6CD1</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DC1B2E46AE3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E48063147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E48063147E05307991F0A6CD1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 0000</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D243657D40F0441AB197E77491578D2E</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D243657D40F0441AB197E77491578D2E</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 900abc-rr 0000</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">5</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D243657D40F0441AB197E77491578D2E</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:28:30</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DC1B2E46B03147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E48063147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DC1B2E46B03147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E48063147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E48063147E05307991F0A6CD1</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DC1B2E48063147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E46543147E05307991F0A6CD1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65153 - StreamListView - DECECS - &lt;StreamClientNickname> verification when value contains XML-allowed special characters" searchProperties="true" id="6502d35d-0eef-4059-89e4-06e0acf78680"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="a1f2a701-4028-49f3-9f0c-f7230e2733ed"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="b209628f-5b9d-447f-a81a-31f3fac655e2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="8f009b76-0def-4cec-8c5f-0688dc8f888f" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="a215b427-5d97-4739-9600-9af9bb0e0bff"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="93607f97-cb9f-4968-ba01-97dbe824b572"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tC.setPropertyValue("nickname","&amp;apos;hello hello&amp;apos;");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="6bd5c19b-89c5-4c25-a9d9-df1015c04925"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="34ddf821-f8c9-46f6-a1ce-e3e229d2560e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="7900ae26-5225-4feb-b704-d7fc81340b50" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="43b09357-ae82-4569-9f4e-ef95891b34fb" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="25dc7c2f-d6ed-4003-9c51-287f9391fb68" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_072656</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:3F977AC7B4384A029C2AD7A709271222</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E464D3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC2695CAE4572FE05307991F0A2D9E</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZWQbE8AVqOKWHWcJk0DIJLykhCxAwZZAkg3k61cy4GBCsuw+udRunT590ZGuBYxCx2sKgbkkjBY2UUiFl1rrRsypx6AgwqMwwsKTyBs273qeU7Q8eNhiFPxO3XitTioVp2SXzUo5qJouqpTNaqVqmYFddq5gFSIUBMpViBj7VEhIZd1wLOVvuaZTe7Rtz6l4jlu0atWxUXjCXChs5VK0jD2pjagbcymXHgDr9bq4LhUZnwHHsmzwfNcbojmOoNG43mWUBuKNvT8qBhjhMERFxCJwDXI+14HwhmRGoYw53scKvoplAasGlE8gyOyHke3FgU+nLF22IWWUIBiSd6jrc4flnAWFZjhjnMh59GUStqWBTbxBJrJd+sMAeWoXAuUYcgFNMYf2HmuAp5hjinBhNPDrxo/LupZufeSQiinjkcgv/xsfTBMcsiUOTHFIa0/tcsAzlWpcY+T5FIWxIAnu62FdQoTFvpsYXQ5VuOd4SjY9ItSAboRmB47pnSx31eiQGRby/zToqDk7kCcYxrjRaj0wsnjig+iBgZ/b8Z/2z+YouGXjql9PCRw7p4astbvlyVBmQ7TbsfrLqb1twcjnt2A+em521iswuBqIq+jprvd3b3wrX5KN4EHtuVOxn8ujWb99H3ZfiPNAf90uWreVl8lmcbN52Y55P3A6butPzV/XwnGvF5NWMlkATsrPfbAg4Zi0+jjqum+/3IcSfk/GYDba+nC7iG7e12MUdcnkTTYfp5P3bms+oOP3NyKxLwAquwNWvusv6lk6R/zztsOZH8aTN4zkYanHwO8UblSXoPxezLSFBOY0dfWWWnyExFQaDb1La4cXK7kjgad6uFvbbqdtt5yue9WySrZb6VrlklWp1ewbq3nV7tgHkdmxOKHYZnRKdCwtubux+Z4gijyBaYC5mbBYKZ0wvkHsQAkLPh2oQ8CowI9MyfM8WFaS1XJusySyF5PZap2wOcVOYhT6TP6mv3lzKjHPa7Kb0+QBRmRJsBZuPddCDbaQqhYrmMQytIsJLFIcK2nnWmXVvmoZCBItQ6yZgogFcYiLy/kyrQwQu69jQiRSa6fXHN6/toevTnrovkzv9N+hEsonINpB6JRaWHUTn7lj7EM+n/K+OnsXHeCbcUD0+VJllZygHZP8r49p0WOSjcpHYgfm2YZTQw4cnOaVxQsSgrKxzy5vpelKBRqH5qygXVwV4ySJ0364bglwBQ90RYDlgCFGsdKp7SNbYAoyFHDRpZARPwme2fMUYzmnQwkljtT8FNLlBa+AIRb6FeCrwd9c+sTIhVSlk3gjz9naoXrBaMbfPnKQh7SfMt+rz5rxj8TPYR3FUXmqR4AkdKZX+kLYfjEeiClYoqSM8WPwcwDngueNWZEzLlIN1CSW+Os/Ba1RdUPVj8VU+h0jNRzrZspTbpfY+3D6BJNKc/ZWI//+WDNJOgIIqxeeICm+vnI9fQTo7Eh790HPy2+z+5385tk1Ppk/W47qdDrjjX8A</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DC1B2E46B03147E05307991F0A6CD1</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E46B03147E05307991F0A6CD1</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E46AE3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E46543147E05307991F0A6CD1</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DC1B2E46AE3147E05307991F0A6CD1</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBFD6B2FFB6A8EE05307991F0A2879</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2FFB6A8EE05307991F0A2879</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&amp;lt;test10&amp;gt;</con:value></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3F977AC7B4384A029C2AD7A709271222</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:3F977AC7B4384A029C2AD7A709271222</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&amp;lt;test10&amp;gt;</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3F977AC7B4384A029C2AD7A709271222</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 11:28:43</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DC1B2E46B03147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2FFB6A8EE05307991F0A2879</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DC1B2E46B03147E05307991F0A6CD1</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2FFB6A8EE05307991F0A2879</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DBFD6B2FFB6A8EE05307991F0A2879</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DBFD6B2FFB6A8EE05307991F0A2879</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DC1B2E46543147E05307991F0A6CD1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66500 - StreamListView - DECECS - Account single deleted stream and a single active stream as Full user" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6747f6ce-f517-425b-a1c6-6aaf86cdb509"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="10264cf8-f1ef-459b-a781-0881b1bd507a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="934fb759-974a-46ca-ab29-04c7a1930959"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="7b6327f8-5306-4bf7-b113-8e1d515c81da" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="df2f302a-00c6-4f88-ab10-4ac7e26ff45a"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="ea02a972-64a3-4161-88e8-68f62fea8165"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="bfd97663-5b0f-4edc-a140-08cc65b1fecb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call StreamCreate" id="20bca46b-406b-4e5c-b3cf-a8e5c527e8be"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="1ca2ac05-0716-4483-b808-b07b9efc960a" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

//def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")
//
//myTC.setPropertyValue("tName",tC.getName());
//myTC.setPropertyValue("sName",tS.getName());
//
//def runnerTC = myTC.run( null , false )
//
//assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="35608878-59dc-45cc-942f-9b120a633c09"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="f8241ed9-dfd7-4b2e-986c-fa0bbe09e0c0" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="c7499e9f-1e50-4998-8c0d-eefbfbb55ef7" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="38d095c4-2753-48e6-9e22-2f63be6843a5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_064545</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:4522A82048064C8B8E8F8F9D666CEFB9</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CDC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7BA9F4F57865E05305991F0A6E46</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZbc6M6DP4rGfaxQ4AEcmGazNCQbDlN2jRpO7t92XGNAJ+Codjksr/+2CRhc2l7srtPjIUsfZI+S7pkKIkbtsMY5JyktLZKYsrsUtpTipzaKWKE2RQlwGyO7bkzGduNum6j3RWl5rk95UfbxEG7jZDaaWOkmgFuqC/dAKmB39V9v2FB2+wIVcYK8CjjiPKe0tANS9VNtdF9MHTbbNm6Ubc6zWel9gQ5E7aFSl1XtqBWrKdEnGe2pi2Xy/qyWU/zUGvouqF9m4znOIIEKf3LTUSlo7y/1cd1HzDEMa7jNNEutQOdS5/ZcxJSxIsctr78j3zpmt7VhI7PSPhFqe6C79EgLY8DRFNKMIrJTyTzMwEepX7NicM0JzxKPgzC0KVhFVZYxYZJvyjaIbQzDR0gzBlSWYSMra0ZBJADxVB7nHk95ct5VSuvPuSIsiDNE3Z4/D08QBcQpxn4KtuFtYV2vsF3MtW/BGx7FMcFIwu4lWTNEAa2rSbg803VpjkEZDUmTBB0xSQ6bR/e0XGTDZeEwPifFGivOBsjTyguoO/85FbxLezQx+Yii5ppJxhedy/0V5h6vRLAvnIpqEq7OR6RsiLR5sZ3I7zAHc1P1vc3Q8P3+T/BzfV1fm8mF14Rau6370/Li9fm/Vf3baplL7f+neW22msatR6HN0xj0dx6CG+i5/CxnZHbTE+K57cbY11AMbqDyfj2Jh3OCMVvI2Pij+nq6evyuXCt7D4zl27Lc+4H83GCnOlj5F7BGl1fdWbZ+P6u5U0X+kT/avyctFb6Sne+h69OrwpnD/+hbPfm58XLv4D57ihp4Lm1kagS4p83MykhvhqUqnYmmw/jQLnSl7dk77AL0e6Ib4sabs6G6V61r5zuyByZ7U7LGupWU7e6XWOkO62h2do1mQ2KI4iDlAZE+pItd0ObzwHixGZAfcjVRVqITseUTyy6iKOaR2fiEaSUwUMq2vO/Jnt9BTNatrlPun6+WJirjh+tlNptyu/oXe4EHPLDltw8aMkzwCQjIPu2pDUTvGZcpOINLQoeG/UFqlMoRGfPZZO1G2bH0hhJshgkUC1J/SKGehZlZWI0tvk2VIRZKZ0NH8rH9mFYx/92GRA6PpEKTMZyBaKKcDJbLNvaBXIScOvdGbQz7xQ+ke9KpJPnBG+QHP76xRJJj4oi7tiZT3egK93fuPtjMP9h/KGB8V84H/+tc1HL05vaJ/nUjktZOfIXZM/tbukQ40s0vP6OiG/IqL/Vi8WiKLlnmk0tF+Y1SQJNb2hzwIVoyeuH9BWoVlnRzpp/FfAj55X8EGLBIzrniEMi3kqtPJ6x8MyByYXHE298de42deBSpI7Dir8nG8RiWZOIP93nsI2lnhBPxWeZ5v6vir1ja8+PiFPsO5zQUJ7k7Ft/wAucCrNEdO003zf+noH3nB8KqyRXWLgg1EvB4eM/NdmOewrCOC0o91ylFOyPiBInX2dg/1I6MVNOoWotJf+/l6qkpAAGscwyUtqX24UtnwAN98bM1unJpBlcNVsD8e0Mu+WkaW8mTXMwaldJOUDXPxGfSvbydMzx/n8=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F47865E05305991F0A6E46</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7BA9F4F47865E05305991F0A6E46</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CDB78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DB7CB36CDB78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36E6F78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7CB36E6F78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4522A82048064C8B8E8F8F9D666CEFB9</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:4522A82048064C8B8E8F8F9D666CEFB9</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4522A82048064C8B8E8F8F9D666CEFB9</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:46:46</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F47865E05305991F0A6E46</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7CB36E6F78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:46:44</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F47865E05305991F0A6E46</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7CB36E6F78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36E6F78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7CB36E6F78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80212</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>20bca46b-406b-4e5c-b3cf-a8e5c527e8be</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66501 - StreamListView - DECECS - Account single deleted stream and a single active stream as Standard user" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4c99b870-98f9-4b74-81b2-60434bdd8ba6"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7c1e680f-5c68-4973-8ec7-d4df96e182d7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="4ae13ad9-6a18-4f93-be78-f29f36392a4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="37eefc0d-3b3f-495f-bc4c-39a76934f159" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="6d78fb4c-5334-4a0a-b837-eec20465f234"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="ab9aaf13-0156-43d6-828b-a7c33fa5f826"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="95c34bfa-f9e8-48bf-ae7f-914c7ceba63d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="80d11b8b-122b-4626-8ad0-d0fae4f7aeed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4ddfcad3-7ba6-4037-b16c-aa518653d573"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="45d8c50f-8811-45b1-bb03-1226596c7dcc" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="4742152e-2f77-44cb-bc57-db7f44a8c5bc" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_064546</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2CDDF97E625346E7A7AA0775A0A97DAB</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CDC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E8227322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbU8I4FP4rTH3c6R1q6QgzXES7inJRlH3ZCWmASElKkwLy6zdpoVJEl90XmJyefOc7l3zJDQPL0PIajKGYY0pK22VImJdaa0oSE48ChplHwBIxj0Nv2Og+epZmeOCwRSn57Zryt1u9DipVx1XL9kT8OBZUq6YxUV3TrLjImJhTgIQrYwnyCeOA8JpiGWZFNcqqVX0xDa/seJahlW33L6U0QjET2MJFM5Q9qS2rKXPOI0/XN5uNtrE1Gs90yzBM/b37OIRztARK/SbLKA0U1/f+UAsQRGEINUiX+o1e8LkJmDfEMwJ4EqN9rOCnWIZuVHXhEzA8u1LyvSjwyZSmyxYglGAIQrwDsj5dxOc0KDXCGY0xny9/TMI0JLCKtlCFZplcKXqR2oVABYYxAyqbA3OPNUBTFCMCUel14NeUq8u6lm59iQFhUxovWXH53/ggskYhjVCgskNae2qXA56pVP0GQc8nMEwYXqMnOawRgIjtu4ng5VClXoymePuImRjQLZPs9GN6J8usGm08Q4z/nwYdNScDGYEwQfVKc9fd0OZn0Avhw7D3MJ5TU38O3V4yrqUEjp1TQ97abHkylPkQZTs2/bL10rKqG9+JHP9joi93XdKlYDxuvkXtEPuDRbjeBaP7VqW5CAzjqdMerFv9N9DBUav5PO9b4Z11//T+vJgNptF4RZ3gbvY4entNYjbm/c/Z8N2mK5sHvYXf7w0Gk4c2fX3d6HP9vfH+EZitBVoYzt1gGGxHOzi5763++HMyZo1Hyt7C18Tszxu7B6czgk65lqdzxL9oO5z5YTL5QJAflnIM/HapI7oE+O9iJi04UKepqxdJ8WEcEa7U5S6pHV4i5A4HnuhhtjbL7aZj3bqW5XQs67Z6a1Rso1Ktmh2j0bi+vT6ITMbihGKLkimWsaTkZmPzO0G49BgiAYrVNU2E0jHlF8Q24KDkk4E4BJQw9EKFPEeJtZhGkZusd445q7jT7Y4Q12ZK6YnyZ/IcN6YcxUVJtguSPEAQRxhJ3ZZjzcRcMy5KsQLrhIemtgYaQYlQ9liKrGeV3YrO8DIKkSSqL2mQhEiL5lFaGJ1l/5YKIEutaVVhduB+TO3026EKwifA0oHJfJpIdBKduV/MQzLnk7aNk3voAN9IAizPligpjzHMmBQ/fU2KHJF8TPZZHWjn3qeGArJ+mlQeLFhjmM97fmsLMRfHv35oywqY2kpL1usk7US5bOuxgNdlmrph6UMEEyFQny90gYieo+gX3QY58ZPgub1IMeFzMuSAo6WYnFK6vOD6HyImr39fTPz20rdFIaQoHUdbfs7WCsXTRTL+9XUDPSj9hLkn/jY0Dr46dgbrKI7IU9z+HJOZXMmb4POH2YBUwGKhYTQ+Bj8HcC540ZgXOefCxUBNEo5+/lKS4lRTAIQ0IdxvK6nhWDBTnvwzQt6X0zeYVJPzRxr+91eaitMRgOJBKPxTfHnXevIIkNmR6O6DnurudatpO622e+3udfc601271cl1t8iu/s383XJUp9MZr/8D</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB62E8226F22E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E8226F22E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CD878E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DB7CB36CD878E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36E7B78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7CB36E7B78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2CDDF97E625346E7A7AA0775A0A97DAB</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2CDDF97E625346E7A7AA0775A0A97DAB</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2CDDF97E625346E7A7AA0775A0A97DAB</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:46:56</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB62E8227222E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7CB36E7B78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:46:59</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB62E8227222E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7CB36E7B78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36E7B78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7CB36E7B78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80213</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66520 - StreamListView - DECECS - Full User can view stream created by Full User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="59928584-15e8-4612-ad02-da2277cd9625"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0dbfc9ba-32be-4bc2-8de3-d3ee5e259589"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1"));
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="70460164-8f6d-45c8-8cd4-a6c9101f9327"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c921c210-d835-453b-947d-e46db3841790" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="2fc19e19-2945-4568-a033-1393a08157ed"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="37fa4bf0-ded1-4f2c-900b-1adcfbd125b8"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="af423a84-1396-4150-a213-b38b826d57ac"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="f5e5bcdb-b368-4b4e-952e-1baab50399b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="a1a43142-7fd7-476c-920d-4336f419eb54" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="544ff86a-404b-45e2-9f6f-9a7c56c323fb" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="ed744f32-59ee-4149-be02-9e25259eedec" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_064545</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:44907A234AFB4AC3A2FB72DC9B2117D1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CDC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7BA9F4F57865E05305991F0A6E46</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0Vynmc8hUbsCtQBTgkLLkwgckk87IlZBmL2LJjSVzy9SsZcDAhWXafXGq3uk93Hx3pkoIktrwupShnOCW1dRIT6hXWtsJz4qWAYuoRkCDqMehNune3nqUZHthvUWpDv638DVpOwwChqzq2bat2a+aqoDmzVBc6M+TUXdMJoXCllKMhoQwQ1lYsw3RUw1Ytd2oant3wzJZmGPU/Su0J5VTEFi6aoexArWlbiRjLPF1frVbaqq6l+Vy3DMPUn+9uJzBCCVA6l9uKikR5Z+cPtQBBFMdQg2miX+oVn8uAehM8J4DxHO1yBV/lMnTD1YVPQPH8Qin3omBIwrRY9gFJCYYgxu9A9ucOsSgNat14nuaYRcmXRZiGDKyiNVShaZMLRa9COzNQBWFOgUojYO5iPaIQ5YhAVPv1OGwrF+dNrdg6zQGhYZontLr8b3gQWaI4zVCg0n1ZO2jnBzzRqc4lgt6QwJhTvET3kqwZgIjupong+aFq4xyFeH2LqSDomkp0+iG8o+W2Gz6eI8r+z4AOhrMN8gRijjrMak42kxEftGDy+wceh/PnptMdO8Go2y4AHDoXhnK02+URKUsSbXdkPGDXo/V6sbj/McidTTZe9FZMj6ZWs6dPyXPf9rs/Qyt5euuvf1s32frebozeo6tp4I9G79dh8PZqtxp8/Tr1N3+FT/Y1rrdCBK+tBp/Q0V334fbVCHo+H72AP4EZ3/7i9nJmD8LJotd3X25cw72fvc+GA8az+pTf+GMXRtEiquu3i/HVy3Rh+frjSyu7+Wms2mU5B/irtv2Zn/DZAkG2X0oaDP3aQEwJsO/FTFpwoIaFq5dJ8aEMEaZ05C6pHR4XcocDT8xwuzZtv9fsdd2BPTCbrYZzZTh1w3Fdc2B0G1d2Yy8yWxRHEPspCbHMJSV3S5vvAcLEo4gEKFeXKRdKR5VvIvqAgdqQPIpDkBKKpqmQZzMWfAsa2Wxj2sw0FnMDpE1nxs25UrtP2QN5yLshQ3lVlOsVUX5EEGcYSeWWxKaC2ZSJZryBJWexqS2BRhAX2p5LmfUsu+XoFCdZjCRUPUkDHiMti7KiNTrdfi0VQFpYi77C7ZH7srjjf/s+CJ8ASwcq6+khMUt04oYx9sWcLrpuHN1E+/BdHmB5ukRTWY7hFkn11wdXJElKouyq2sMuvY8Nlcj6cVFlsmCJYcn48t4Wci4EoLMfyxswtTeNL5e8mIRt1/VchNdlmbph6RMEuZCozTR9RUQvo+hn3Qcl8KPkpb0KkbOITBhgKBHMqRXLMx4AE0TlA2AoOL8+93VRSSlax9CanbL1Y/F4kYi/fd9AD0o/YR6LzyrNg4+JnYh1kEfUKe5/hslcruRdsPmCGzAVYbFQsTQ/DH4qwKnkVWPZ5BILE4SacYa+/lOT8tRWAIQpJ2zoK4XhUDILnGyTIe/D6VOYQpXLZxr+93eaigsKQCQedxQX8eVt68kjQOYHsrtL+kl5+716o++3mq0rt1De5lZ56/1Bs2xKBV3nk/mz5aBPxxzv/AM=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7BA9F4F17865E05305991F0A6E46</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CD878E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F17865E05305991F0A6E46</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DB7CB36CD878E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E822C722E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822C722E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">44907A234AFB4AC3A2FB72DC9B2117D1</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:44907A234AFB4AC3A2FB72DC9B2117D1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">44907A234AFB4AC3A2FB72DC9B2117D1</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:47:10</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F47865E05305991F0A6E46</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822C722E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F47865E05305991F0A6E46</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822C722E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E822C722E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822C722E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80215</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66521 - StreamListView - DECECS - Full User can view stream created by Standard User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fdfa63bb-2c02-4d22-9832-d28ff50eb51a"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5cf45651-f782-46fe-9f47-5eb8536dccd0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="83e3b5d1-0515-4731-a4b8-ca280a5be300"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="d0b194a1-2907-4ef1-8618-a12b4d036597" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="02c8164b-a090-4c0f-adc5-73f92e93bd4b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="32a402ca-ab73-4fef-8e70-981065607eee"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="088a52b0-0381-4711-b1b4-12992cc03a3d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="bc13e846-9a01-4442-b2af-74f43ce26d1a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="10fca6e9-ddb4-4b6d-9d96-ce18613bb0c1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="f4337d1c-9eee-4a83-89a5-b48ff1007cb4" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_064546</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:0680C0E5A5CE40D0A21EDD907895235F</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CDC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E8227322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbU8I4FP4rTH3c6R1q6QgzXES7inJRlH3ZCWmASElKkwLy6zdpoVJEl90XmJyefOc7l3zJDQPL0PIajKGYY0pK22VImJdaa0oSE48ChplHwBIxj0Nv2Og+epZmeOCwRSn57Zryt1u9DipVx1XL9kT8OBZUq6YxUV3TrLjImJhTgIQrYwnyCeOA8JpiGWZFNcqqVX0xDa/seJahlW33L6U0QjET2MJFM5Q9qS2rKXPOI0/XN5uNtrE1Gs90yzBM/b37OIRztARK/SbLKA0U1/f+UAsQRGEINUiX+o1e8LkJmDfEMwJ4EqN9rOCnWIZuVHXhEzA8u1LyvSjwyZSmyxYglGAIQrwDsj5dxOc0KDXCGY0xny9/TMI0JLCKtlCFZplcKXqR2oVABYYxAyqbA3OPNUBTFCMCUel14NeUq8u6lm59iQFhUxovWXH53/ggskYhjVCgskNae2qXA56pVP0GQc8nMEwYXqMnOawRgIjtu4ng5VClXoymePuImRjQLZPs9GN6J8usGm08Q4z/nwYdNScDGYEwQfVKc9fd0OZn0Avhw7D3MJ5TU38O3V4yrqUEjp1TQ97abHkylPkQZTs2/bL10rKqG9+JHP9joi93XdKlYDxuvkXtEPuDRbjeBaP7VqW5CAzjqdMerFv9N9DBUav5PO9b4Z11//T+vJgNptF4RZ3gbvY4entNYjbm/c/Z8N2mK5sHvYXf7w0Gk4c2fX3d6HP9vfH+EZitBVoYzt1gGGxHOzi5763++HMyZo1Hyt7C18Tszxu7B6czgk65lqdzxL9oO5z5YTL5QJAflnIM/HapI7oE+O9iJi04UKepqxdJ8WEcEa7U5S6pHV4i5A4HnuhhtjbL7aZj3bqW5XQs67Z6a1Rso1Ktmh2j0bi+vT6ITMbihGKLkimWsaTkZmPzO0G49BgiAYrVNU2E0jHlF8Q24KDkk4E4BJQw9EKFPEeJtZhGkZusd445q7jT7Y4Q12ZK6YnyZ/IcN6YcxUVJtguSPEAQRxhJ3ZZjzcRcMy5KsQLrhIemtgYaQYlQ9liKrGeV3YrO8DIKkSSqL2mQhEiL5lFaGJ1l/5YKIEutaVVhduB+TO3026EKwifA0oHJfJpIdBKduV/MQzLnk7aNk3voAN9IAizPligpjzHMmBQ/fU2KHJF8TPZZHWjn3qeGArJ+mlQeLFhjmM97fmsLMRfHv35oywqY2kpL1usk7US5bOuxgNdlmrph6UMEEyFQny90gYieo+gX3QY58ZPgub1IMeFzMuSAo6WYnFK6vOD6HyImr39fTPz20rdFIaQoHUdbfs7WCsXTRTL+9XUDPSj9hLkn/jY0Dr46dgbrKI7IU9z+HJOZXMmb4POH2YBUwGKhYTQ+Bj8HcC540ZgXOefCxUBNEo5+/lKS4lRTAIQ0IdxvK6nhWDBTnvwzQt6X0zeYVJPzRxr+91eaitMRgOJBKPxTfHnXevIIkNmR6O6DnurudatpO622e+3udfc601271cl1t8iu/s383XJUp9MZr/8D</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CD878E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E8226F22E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB62E8226F22E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DB7CB36CD878E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E822D322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822D322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0680C0E5A5CE40D0A21EDD907895235F</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:0680C0E5A5CE40D0A21EDD907895235F</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0680C0E5A5CE40D0A21EDD907895235F</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:47:23</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB62E8227222E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822D322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB62E8227222E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822D322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E822D322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822D322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80216</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66530 - StreamListView - DECECS - Standard User can view stream created by Full User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f06a69df-86fe-403c-8c73-4917272cc7c5"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="bfadb56e-15b7-40cc-b9c9-3599e35c6518"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="c19917a2-1642-407e-bc6c-32e49000695b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="bb36054c-f072-4ff3-89b6-fd2ab52bc48d" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="f435b05f-7810-4e19-b553-f03ac865289d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="ef917562-e9b6-46b4-9120-813499ed1d76"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="730c041a-db17-4083-a689-d738f696d627"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4f9728e2-41e2-48aa-b713-d8aebddae7dd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="14610490-253e-4d8a-966d-20e3bd1d7bc1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="7725da76-6bf5-4ea9-af55-604c98f70368" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_064545</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:6190FC8F4F634FD79D1E92968B2355A3</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CDC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7BA9F4F57865E05305991F0A6E46</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0Vynmc8hUbsCtQBTgkLLkwgckk87IlZBmL2LJjSVzy9SsZcDAhWXafXGq3uk93Hx3pkoIktrwupShnOCW1dRIT6hXWtsJz4qWAYuoRkCDqMehNune3nqUZHthvUWpDv638DVpOwwChqzq2bat2a+aqoDmzVBc6M+TUXdMJoXCllKMhoQwQ1lYsw3RUw1Ytd2oant3wzJZmGPU/Su0J5VTEFi6aoexArWlbiRjLPF1frVbaqq6l+Vy3DMPUn+9uJzBCCVA6l9uKikR5Z+cPtQBBFMdQg2miX+oVn8uAehM8J4DxHO1yBV/lMnTD1YVPQPH8Qin3omBIwrRY9gFJCYYgxu9A9ucOsSgNat14nuaYRcmXRZiGDKyiNVShaZMLRa9COzNQBWFOgUojYO5iPaIQ5YhAVPv1OGwrF+dNrdg6zQGhYZontLr8b3gQWaI4zVCg0n1ZO2jnBzzRqc4lgt6QwJhTvET3kqwZgIjupong+aFq4xyFeH2LqSDomkp0+iG8o+W2Gz6eI8r+z4AOhrMN8gRijjrMak42kxEftGDy+wceh/PnptMdO8Go2y4AHDoXhnK02+URKUsSbXdkPGDXo/V6sbj/McidTTZe9FZMj6ZWs6dPyXPf9rs/Qyt5euuvf1s32frebozeo6tp4I9G79dh8PZqtxp8/Tr1N3+FT/Y1rrdCBK+tBp/Q0V334fbVCHo+H72AP4EZ3/7i9nJmD8LJotd3X25cw72fvc+GA8az+pTf+GMXRtEiquu3i/HVy3Rh+frjSyu7+Wms2mU5B/irtv2Zn/DZAkG2X0oaDP3aQEwJsO/FTFpwoIaFq5dJ8aEMEaZ05C6pHR4XcocDT8xwuzZtv9fsdd2BPTCbrYZzZTh1w3Fdc2B0G1d2Yy8yWxRHEPspCbHMJSV3S5vvAcLEo4gEKFeXKRdKR5VvIvqAgdqQPIpDkBKKpqmQZzMWfAsa2Wxj2sw0FnMDpE1nxs25UrtP2QN5yLshQ3lVlOsVUX5EEGcYSeWWxKaC2ZSJZryBJWexqS2BRhAX2p5LmfUsu+XoFCdZjCRUPUkDHiMti7KiNTrdfi0VQFpYi77C7ZH7srjjf/s+CJ8ASwcq6+khMUt04oYx9sWcLrpuHN1E+/BdHmB5ukRTWY7hFkn11wdXJElKouyq2sMuvY8Nlcj6cVFlsmCJYcn48t4Wci4EoLMfyxswtTeNL5e8mIRt1/VchNdlmbph6RMEuZCozTR9RUQvo+hn3Qcl8KPkpb0KkbOITBhgKBHMqRXLMx4AE0TlA2AoOL8+93VRSSlax9CanbL1Y/F4kYi/fd9AD0o/YR6LzyrNg4+JnYh1kEfUKe5/hslcruRdsPmCGzAVYbFQsTQ/DH4qwKnkVWPZ5BILE4SacYa+/lOT8tRWAIQpJ2zoK4XhUDILnGyTIe/D6VOYQpXLZxr+93eaigsKQCQedxQX8eVt68kjQOYHsrtL+kl5+716o++3mq0rt1De5lZ56/1Bs2xKBV3nk/mz5aBPxxzv/AM=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7BA9F4F17865E05305991F0A6E46</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CD878E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F17865E05305991F0A6E46</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DB7CB36CD878E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7BA9F5AC7865E05305991F0A6E46</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7BA9F5AC7865E05305991F0A6E46</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6190FC8F4F634FD79D1E92968B2355A3</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:6190FC8F4F634FD79D1E92968B2355A3</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6190FC8F4F634FD79D1E92968B2355A3</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:47:36</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F47865E05305991F0A6E46</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7BA9F5AC7865E05305991F0A6E46</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB7BA9F4F47865E05305991F0A6E46</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7BA9F5AC7865E05305991F0A6E46</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7BA9F5AC7865E05305991F0A6E46</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB7BA9F5AC7865E05305991F0A6E46</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80218</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66531 - StreamListView - DECECS - Standard User can view stream created by Standard User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b4e8974f-913c-45a5-a31c-124628bb9cfa"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="38c52a54-8e70-443c-975f-9435b0a74b7d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="31673bda-6a1f-4b1a-be92-98f486f52d7a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="a98e4f58-0b90-4620-9fdb-ea073ea76498" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="17f74cf1-df9d-4602-b7f4-c220dd7ccd63"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="0196f205-59ff-4857-84f6-fda2c648bc42"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="b594b08f-4c41-4b8c-934a-9e9bdc379e06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="3c735b2c-86bf-4b7b-9210-977ce30db2bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="6e78668d-b075-4cc9-98a1-b03d669414c9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="55b2d9d2-6c7f-4ce9-8c1b-7358ebe38db9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_064546</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CDC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E8227322E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVbZcuI6EP0VyvOYMrINZnEFqgCTCYQAAbLMfUkpsgARWwJJZsnXj2TAAbJcZubJpXbr9OlF3X0pYBQ6Xk0IzCVhNLOOQiq8RFoxYk49BgURHoURFp5E3rB22/GcrOXB/RUj0/IrxnPBGQc5WLRN9GKVzTxyA7OUL7hmuVQold1ywQlgoFSFiHGLCgmprBiOZbumlTed8si2vHzBs3JZp+D8Z2QeMBcKW6lkLWNHai0qxlTKuQfAarXKrnJZxifAsSwbPN12hmiKI2hUL7ceJYZ4daePsgFGOAxRFrEIXIIjnctAeEMyoVDGHO9sBV/ZsoBVBkonEGTyw0jv4qBFxyw5NiBllCAYkjeo43OL5ZQFmVo4YZzIafSlE7algU28Riay8/SHAY6pnQl0xJALaIoptHdYAzzGHFOEM/eDVsX4cV7WkqsjDqkYMx6J4+Of8cF0iUM2x4Ep9m7tqJ0P+EmkqpcYeS2KwliQJe7qYp1DhMUumxidD5Xpczwm6w4RqkDXQrMDh/ROjtto+GSChfybBB0kZwvyAMMYV68er52o2xg3b+9b9XlzjV/xI5m37y+empWEwKFyIkhTuz2eFGVaRNsbdzf9RoMvWN6v+Rf1R9bOreBo4/dK/Y7rs97iteS2ezO/zq9D3Cb9tjv7Vb8IyrfT9eNANkJSmPVHv4oXgPtP12/k/mnyML6pg3lk95wW8sHFBr298pIFat2N+5ON5IuzbiH2urq7KLWdny/dWvN+M7166V2177qLQtmdFXgMmgM4tmUucnnz8cYJlqPZNF8XldSdA/7Hsv2bH8YvM4zk/qjLoOVnrlSWoPy+mWkJCcxxourNdfMRElNpVPUt3Tu8WLU7Engqh9uznffrBadZcpyi4zjNctNyc5ZbLttXVq1WbBb3TWbL4oRig9Ex0bZ0y92WzfcEUeQJTAPMzSWLVacTxjeIPpQw06ID9QgYFXjEdHu2eTGkdLZYLt5sO6ARD9Y050y4keky2aM9XhtLzI97cu6oJw8wInOCdePWdS1UYQupYrGAy1iGdnYJsxTHqrVz3WU9J19ygSDRPMSaKYhYEIc4O5/Ok8gAsf06JkQikQ6ao+S1fenX6b99CJROQLSC0L7UsUoj/jBcXM/dO/K1w4VDh/fwtTgg+mGpeEpO0JbJ8a/3MtH1kdaI36kN+3vSqe4f3H1uDJ/tvwTo/IPxzr8aV7n8eBN8E09wmsrUULAkB2b3W4eaX6rjVfeFuIB2dpGNl8s4qb18Pge4ggc6ucBywBCjWPXkzYi9YgpSFHDWAEyJnxhP5ccUYzmlQwkljtRbySTHMzaeIRZ642mpR74+d506MqlCJ/FafiZrhGpb04y/XeiQh7SeEvfVZ8X4u+OfYR3YUX6qhUcSOtEnPfw2X9QFYgqWqLbN+CH4ZwCfGT8WpkFOuUhVUC+xxF//yeh+XDEgQiymsuUbieBwRiQ85WaOvXelDzDJGEr3UvL/i6lJkhJAWG2zgiT4er3w9BOgk4M5szN6OmqKjXqu0FDf0m7UFLejJte4SkfNMbvqB/FHyUGcTmu8+hs=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E8227222E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CDB78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB62E8227222E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DB7CB36CDB78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E822E022E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822E022E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3EF02E7FA4D64CADA43EB5DF01A67FE0</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:3EF02E7FA4D64CADA43EB5DF01A67FE0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3EF02E7FA4D64CADA43EB5DF01A67FE0</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:37:50</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB4428508A319DE05307991F0AF861</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91EA71147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB4428508A319DE05307991F0AF861</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91EA71147E05307991F0AA89B</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB62E822E022E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB62E822E022E9E05305991F0AA7E7</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80219</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB7CB36CE378E9E05307991F0A3CF7</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66700 - StreamListView - DECECS - API invocation after StreamRenew by Full User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="01be88d4-4704-4856-859c-ef5217b050b6"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="38b882b0-5d94-4825-b768-3083007b485f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="0e43f985-e031-4824-852c-39818c4b44ba"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="397f241e-6b59-4795-bc43-ba1406df4d60" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="86295728-5a85-44ee-9166-4c2bdb68909d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="fb0b6d8a-762b-46f8-8fdf-980e9dd8f7de"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamView" id="3c58f985-719f-4cdd-b2da-4e6dbb30f144" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ExpirationDateTime for Stream Renew Request sysdate + 2 hours" id="8cb8a9ee-b6db-4f01-8a00-95ce2f0f8d90"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="015c31d1-1f9d-43c8-b530-135f02fdfa90"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="fa9ec5be-2d9c-476f-93d9-fbd599f3a633"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4801050b-0d2f-46bf-8dcf-279dd2a73faa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="ecd4d275-dcba-49b5-b102-8fede33c5ee2" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="b5e56ce7-d257-4b1c-a423-06d698046b05" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_063752</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:AE3D37D76B254C50BA54FD73A8AF3EE4</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB44285142319DE05307991F0AF861</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB41C91EB91147E05307991F0AA89B</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZtc6I6FP4rDvtxByGAW2WqM7522W1tr9pu2y93YjhgLARLAtr99TdBZcXaXu/9xORw8pznvORJLjmOI8vtcg6poAmrbeKIcbewtrUsZW6COeUuwzFwVxB32r25dq266eL9Fq3mDdra3zgwifNt3tKxSbDuBGZTb7UCrFs2mpswn/sENaQr5xl4jAvMRFuzTNTQTUe3WjNkunbTtb7VkXXxrNUeIOUSW7rUTW1HasPb2kKIlWsY6/W6vrbrSRoalmki4/HmekoWEGOtc7nNqAiUdnb+pO4DgSgidZLExqVR8bn0uTulIcMiS2EXy/8olmmYLUP6+JyGX7RyL/geC5Ji2ccsYZTgiP7Gqj43IBaJX+tGYZJSsYg/TAKZCliHDdEJctgXzahSOxOowjDlWOcLjHZYEwggBUagdj/x2tqX87pWbJ2lmPEgSWNeXf43PsByiJIV+Drfp7Wjdj7giUp1LoG4HiNRxmkOYzWsK0yA77oJ5Hyo2l0KAd1cUy4HdMMVO+OQ3tFyW40BDYGL/9Ogg+ZsQR5wlEHn4utoFpOnv9aP0Tq8C1czdh28fWV3o8dmuyBw6FwYytZul0dDWQ7RdkeWWPPQfpnaqfc0fI3j76J7k49fl9niouffsp/jZre3jPLncHG16E3scc+CYNnoBlM+XWfe68uv3ng2ur2/Am+CzJkxfVr3J637Z3J7/2OJfl55fR+md28Aw3iY/WJvDXiIrVTc9K/H6PvYGD0PEWK28+vFyZuPXvfH7++bh2k6eSK3EUrz697saglXD0b6MAx26R7xr9r2Z36azZdAxH6pxsAb1EayS1h8LmbKQn09KFzdlRIfLoAJraN2Ke1wMyl31HdlD7dr5Ax6Duq30LDXQMi5GJoN27xotdDI7Habrd5eZLYsjij2ExZQFUtJ7nZsPidIYpcD8yHV8ySTSse1TxAHWOCaxybyECSMwyyR8uzkWZg4TZwvoxXCcysioYlWF1mo1caJuGW3aTcQkFY12a5o8gQIXVFQwq3mmsvB5kLW4hXnmYhQPcd1BpmU9lSprGs5zYbBabyKQDE14sTPIqivFquiMgbffi0dE15Yi7KS7Yn7MLfjf/sySB+fKgeu8umBbCWcuGDQPpnTSdvm0UW0h+9mPlWHS9ZUpJRsmVR//RkVNSPlnOyy2tMuvY8NFWTjOKkymJ9TUg58eW1LNZfnv7NvyytG9dd6ludZ0QnHsY1UwhsqTcO0jCmQTCrU2yx5AWaUKMZZ10FJ/Ch4aa9SzMSCTQUWEMvJqRXLM+7/KXB1/3ty5DfnPi4qIWXpBGzEKVs/km8XxfjT5w1xifKT5jv5WSep/6djJ7AO4sg85fUvKAvVSl0Fbx/MBkkkLJUilqSH4KcATgWvGssil1yEHKh5JuDjPzWlTm0NE5JkTHgDrTAcKmbBU7ytwP3j9A6mEOXylUb//Zmm02IECMi3HacFvrpsXXUEWHigurug74TXsZoNZA9t1BocCu+o+Q2VRamw67wzv7cc1Ol4xjv/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB41C91EB51147E05307991F0AA89B</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB4428513E319DE05307991F0AF861</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB44285149319DE05307991F0AF861</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB41C91EB51147E05307991F0AA89B</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DB4428513E319DE05307991F0AF861</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB41C91F341147E05307991F0AA89B</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91F341147E05307991F0AA89B</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AE3D37D76B254C50BA54FD73A8AF3EE4</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:AE3D37D76B254C50BA54FD73A8AF3EE4</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">AE3D37D76B254C50BA54FD73A8AF3EE4</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:38:40</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB41C91EB81147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91F341147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB41C91EB81147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91F341147E05307991F0AA89B</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB41C91F341147E05307991F0AA89B</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91F341147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80224</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB44285149319DE05307991F0AF861</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>3c58f985-719f-4cdd-b2da-4e6dbb30f144</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66701 - StreamListView - DECECS - API invocation after StreamRenew by Standard User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1bfdf0cc-c525-4163-a9e3-cf7ee2a802cf"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="21a1b0f7-5821-44bc-b0f7-2fad5eb6cbf8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="dc03c68e-e1fc-4568-93e6-589401e600e5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="52713fe9-5127-4802-84b9-92179fcf990e" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="cdc9c8bb-75ef-4aab-9ee2-978ceaff283d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="32fccb6e-814b-4df2-89bb-4159c102c2a2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamView" id="84671ed5-3c73-4eb1-a399-c51d06f4f319" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ExpirationDateTime for Stream Renew Request sysdate + 2 hours" id="d106b375-62b3-49c9-8789-2cf75c842141"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to Standard User" id="139e6922-919b-46a1-abd3-ab3bda65587f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="af9a8847-5ce6-4818-83cc-4383b98b6675"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="37c815d6-88ee-42f1-b49c-81ff8a5b719b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="a965490a-7659-4984-832a-3be24cdb27a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="eb90aa75-26c2-4341-bf3a-98676b21ded8" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="c4ae7dd5-1a83-410d-8c8b-884d4f925a30" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_063753</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:737883282C274094BE2E658AE7B5B400</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB44285142319DE05307991F0AF861</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB41C91EE01147E05307991F0AA89B</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VynlMGV8htitQxS0bdpJAgGQmedkSchs0sWVjyVzy9SMZcDAhWXafXGq3Tp++6EjXDEWh6bUYg5STmFbWUUiZl1sbSpZSL0aMMI+iCJjHsTdu3d95ZlX30H6LUul3G8o/NccN6uA7auCDq9pmzVKRXq+pdWT4Necq8AOoC1fGMuhTxhHlDcXUjZqq26rpTgzdsxzPvKq6jvuqVJ4hZQJbuFR1ZUdqzRrKnPPE07TValVdWdU4nWmmrhvar/u7MZ5DhJTm9TajPFDa3Pnjqg8YwhBXcRxp11rJ59pn3pjMKOJZCrtY/lexdE13NeHjMzK7UIq94PdpEOfLDqIxJRiF5B3J+twDn8d+pRXO4pTwefRlEoYugVVYYxUbNr1QtDK1M4FKDFOGVDZHxg5rBAGkQDFUnkb9hnJxXtfyrZMUURbEacTKy//GB+gSwjgBX2X7tHbUzgc8UanmNWCvT3GYMbKEBzmsCcLAdt0EfD5UZZhCQNZ3hIkBXTPJTjukd7TcVqNLZsD4/2nQQXO2IM8ozKC5mbSffm9m3Yj9ZT2/PtwFqGu/22uLwKyREzh0zg1Fa7fLo6Eshmi7IxuNF7p1P3wJyXTYTsc/ahZ7eTUfX83BQltcjqcRWwUhm/duU9d3Ftovsz13L5OHVWca81sa1Ce99SKeDx7Y2NiY9Tfz8TLtPiVhrz571+Z30XtvZQf6ZNbpWJ163Zr5dPBqkaVzO/kx+Ll5a2d/G2hwtQkvh4/PUQvxaAqj1eRy03NrzrDVNtsj88Xq/AzZsNco0jngX7btz/w4m/4GzPdLOQb9buVGdAnx78VMWoivBrmrl0jxYRwoV5pyl9QOLxNyR3xP9HC7Nuxu2zY6rtHrdgzDvurpNUu/cl3jRm+1HLe9F5ktiyOKnZgGRMaSkrsdm+8J4shjQH1I1WWcCaVjyjeIXcRRpU9H4hDElMEkFvK8rlkC2xYT8hYbNbRx/KuFnQSEKJWHmA/oIG0FHNKyJlslTR4BJgkBKdxyrpkYbMZFLRZomfHQqC5RlUImpD2VKuuZtlPTGImSECRTLYr9LIRqMk/yymhs+zVVhFluzcuKtyfuy9yO/+3LIHx8Ih2YzKcNopVw4oIx9smcTtrSjy6iPXwr84k8XKKmPCV4y6T862NU5IwUc7LLak+78D42lJC146SKYP6S4GLgi2tbqLk4/819WxbIqC6q2XKZ5Z2wbUtLBbwm09R0UxsDzoRCbSbxG1CtQNHOug4K4kfBC3uZYsbndMwRh0hMTiVfnnH/j4HJ+78vRn597uOiFFKUjsOan7J1QvF2kYy/fd5gD0s/YR6KzypO/Y+OncA6iCPyFNc/J3QmV/Iq2HwxGzgWsESIWJwegp8COBW8bCyKXHDhYqCmGYev/1SkOjUUhHGcUd7vKrnhUDFznnyTgPfh9AkmF+XilUb+/ZmmknwEMIi3HSM5vrxsPXkE6OxAdXdBPwmvbTo1w+pZhts9FN4bp24URSmxa34yf7Yc1Ol4xpt/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB41C91EDC1147E05307991F0AA89B</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB4428513E319DE05307991F0AF861</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB44285149319DE05307991F0AF861</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB41C91EDC1147E05307991F0AA89B</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14DB4428513E319DE05307991F0AF861</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB41C91F401147E05307991F0AA89B</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91F401147E05307991F0AA89B</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">737883282C274094BE2E658AE7B5B400</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:737883282C274094BE2E658AE7B5B400</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">737883282C274094BE2E658AE7B5B400</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:38:54</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB41C91EDF1147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91F401147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DB41C91EDF1147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91F401147E05307991F0AA89B</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB41C91F401147E05307991F0AA89B</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DB41C91F401147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80225</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14DB44285149319DE05307991F0AF861</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>84671ed5-3c73-4eb1-a399-c51d06f4f319</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_55091 - StreamListView - DECECS - Stream view by dececs_ManageAccountConsentPresent_DifferentOrg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="927fb281-ac1b-49c1-be62-a0b1f6861418" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a01cee12-5ba4-4cd0-836a-fc6d015d6728"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="a7ccf1c9-5f75-4544-8912-6433cb1ba78d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c3827518-fb28-409d-be05-17a01bde7d1e" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" disabled="true" id="c54c06b6-dd2f-4c71-a589-cfeeef0e37a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="702a463f-d63c-4620-9c03-f57508b1a648"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="db2b2d37-7418-4674-8164-1292235373f3"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="c79e2b03-41cb-4b1a-bd85-99ab0fe20c7b" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="932b303a-6ed9-4729-9781-396db20346d0" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="delay" name="Delay II" id="facd822c-4db4-4a0f-882a-7b14e5089621" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="014627d6-9fb8-4bab-85ea-d160f3f1882f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="f0daa003-c651-4398-af00-279fdc445189"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="4d625091-3f51-49c0-8eb0-ebd7e52e4434"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent1" id="15d9b6a0-c58d-409f-baef-e4f872a38c1b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="c5dca43d-b870-498c-9d79-1db118913b5c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="f1d74d2a-1705-414d-858c-774652b71107" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="4ade734a-69df-483f-b416-edcaa61390c2" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EB6EC2CA965DD1EFE0401F0A07990FFB</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7132B6C250683FE0401F0A07997870</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7132B6C250683FE0401F0A07997870</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323BB41573DAE0401F0A0799786C</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC71323BB41573DAE0401F0A0799786C</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EB73E65E80E6B07BE0401F0A07992F31</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323BB41573DAE0401F0A0799786C</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EB73E65E80E6B07BE0401F0A07992F31</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 17:45:24</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7132B6C250683FE0401F0A07997870</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/18 14:04:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/18 14:04:18</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EB73E65E7FB0B07BE0401F0A07992F31</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7132B6C250683FE0401F0A07997870</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79691</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>FC7132B6C250683FE0401F0A07997870</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:FC7132B6C250683FE0401F0A07997870</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>515727f8-a3ef-4d9b-b7c7-2f5f3eae9968</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d1533e-db88-4f69-94ac-c8dbacee678e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2612d590-4e41-4806-bcc3-86275ee34584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4d625091-3f51-49c0-8eb0-ebd7e52e4434</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_55092 - StreamListView - DECECS - Stream view by dececs_ManageAccountConsentNotPresent_DifferentOrg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e1610628-c323-42a8-80cb-9453d12c83e1" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7c46eaf7-79a4-4fd9-b59e-c611088f1563"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamFlagCreateDateOld","true");
tC.setPropertyValue("streamAccountActiveCount","1");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="704fe27c-0c34-4deb-afdf-e083def23e36"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="98f2517a-06b2-463c-a428-bb5763e772d0" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" disabled="true" id="380cfa63-4373-496b-82e3-58e3152071fb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="c991651d-a4c8-4130-87b2-75f6aec007af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="17d74a33-b8b4-4033-8a3a-d6fffbd79c07"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="db365e8f-f4d5-4667-b9c2-6f215d86b0cb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="b5df845b-cb77-45ab-96dd-d997721e0802" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="685539ad-37d8-46ff-ab62-99627e7bdb30" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="delay" name="Delay II" id="1e118c5e-3f74-426f-aaf7-b5eb8d12a0f1" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="022abbaf-f86f-4784-b0f5-8cee736261b4" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="38fb485d-7cd6-4ad1-ae49-7727c705b4c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent1" disabled="true" id="817ca8e9-bb14-4cb1-868f-d282f6874ec2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="d1062c21-d41b-4608-b6d6-58ce52f8a7ec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="9aa6df6b-3f06-469b-ab1f-b0b70d27489a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5a68fd08-38a4-4452-809e-4b7f44fbb7fb" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A0650B9C7E0401F0A05994218</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A0650B9C7E0401F0A05994218</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323BB41973DAE0401F0A0799786C</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC71323BB41973DAE0401F0A0799786C</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D2AE8985F4BE188BE0401F0A07991678</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323BB41973DAE0401F0A0799786C</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D2AE8985F4BE188BE0401F0A07991678</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 17:45:42</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A0650B9C7E0401F0A05994218</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/26 09:03:37</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/01/07 07:12:04</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:D2AE80936BF4468DE0401F0A0799063E</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A0650B9C7E0401F0A05994218</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79691</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>FC71323A0650B9C7E0401F0A05994218</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:FC71323A0650B9C7E0401F0A05994218</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>515727f8-a3ef-4d9b-b7c7-2f5f3eae9968</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d1533e-db88-4f69-94ac-c8dbacee678e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2612d590-4e41-4806-bcc3-86275ee34584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db295cf1-ada5-4262-9aa7-1d3cb4e13390</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19050 - StreamListView - DECECS - AccountNotActive - ACCOUNT.STATUS of deleted status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="d81a1047-698b-420e-8d07-b8a6c40760af" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8efd45e6-7c85-405e-b7c8-c86673e8f57c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="d3c487cf-fec0-46f5-b26d-aacefeb89c4e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="aa076a27-1753-4369-816a-28c8fcdaf647" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="060fbbf9-7abe-4f19-be1e-c4f54cad30af"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="b2104f8d-8335-4f1a-a37a-b3f90d2689d7"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to deleted" id="98ee36e4-b61e-4fd4-9cbe-89127a0e7269"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"deleted") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="bbb5f836-cf6d-4cf2-9b88-9a03590ba8a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="104f9020-1bfc-403e-a20f-e83f4018d44c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to active" id="254965a3-55f1-4438-91ad-d90c8af95979"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="3577e695-4963-4155-beaf-17ef4a4c7665" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="d4568ea8-33b0-47c3-ba72-889b158e2b86" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="a2c15ecc-17aa-4e41-8eb8-5bf070d8c5a7" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140910_05298</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:02B3C0D57F8146A5E05307991F0A2498</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEAB4AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEF64AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXwBj7ErUMUtCZMEksBcMi9bQm5AG1vyWJKB+fqVDHgwQ7LsPrnUbp0+fdGRrjhKYjfscg6ZIIzWNklMeVhY24bMaMgQJzykKAEeChxOuw/3oVu3Q3TYYtRGg7bxVxMQOIDmZgv5ntl08MJsgRuZ4C9sL2p6/ie/oVw5lzCiXCAq2oZrO03TDkzHntlB6Aah59Z92/5h1L5CxhW2cqnbxp7UhreNlRBpaFnr9bq+btRZtrRc23as7w/3U7yCBBmdq11GRaCss/fH9QgwxDGuY5ZYV1bF5yri4ZQsKRIyg32s6K1YtmUHlvKJOFl+MMq9EI3oghXLPqKMEoxi8gvp+jyAWLGo1o2XLCNilbyZhGNrYBM22MROk34wrCq1C4EqDDOOTL5Czh7rGRaQAcVQ+/I8ahsfLutasXWWIcoXLEt4dfnf+ADNIWYpRCY/pLWndjngmUp1rgCHI4pjyUkOYz2sKcLA990EfDlU7TGDBdncE64GdMM1O+uY3slyV40BWQIX/6dBR83ZgXxFsYROzrN8nm/d1niSfByKb443j3posLl94e2CwLFzYShbu1ueDGU5RLsddzciGTeGm4B+6oqFu/k1vknc1qzZe3hxyEBO/Nucxunm5tfoaRqwv/uPz+vu4FvCreWnuy83a/Q5DuxR3Pi4lL0vdp+2mrOJ2K7d1+Vi+9Xj62gw+bEaPknpP3zuzSaJ+2DP7bvH++nk/kcyvr8bPD31XnnQcl++X7MbJp9tOXblzB/eTtLPWfD0dNvz02y+6r14L+0ynSP+VdvhzE/l/G/A4rDUYzAa1K5Vl5B4X8y0hUTmonANUy0+XAAVRkfv0toRSiV3JApVD3dr2+01vH4QDIfXbrM7aAxtr2H7QeBc291+q9k7iMyOxQnFPqMLomNpyd2NzfsEcRJyoBFkZs6kUjpuvIM4QALVRvRZHQJGOcyYkmcnXfIUmlufZ56dN1qux2KeuK/MqI2ZmNBJ1l0IyCqa7LgVTX4GTFICWrj1XHM12FyoWvxEuRSxU89RnYJU0p5plQ3dZsuzOEnSGDRTK2GRjKGertKiMhbffV0TYV5Yi7Li3Yl7M7fTf4cyKJ+IaAeu8+mBaiWcuWCah2TeSNo5uYgO8F0ZEX24VE1FRvCOSfXX71HRM1LOyT6rA+3S+9RQQbZOkyqDRTnB5cCX17ZSc3X+O4e2/ET1n3WZ57JohK91LlPwSnwcz7JdawpYKoXaztgrUKtEsS66DkriJ8FLe5WiFCs6FUhAoianViwvuP+nwPX9P1Ijv7n0cVEJqUonYCPO2fqxertoxu8+b3CItZ8yP6rPmmXR746dwTqKo/JU178gdKlX+irYvjEbmClYokSMZcfg5wDOBa8ayyKXXIQaqLkU8PafmlantoEwZpKK0cAoDMeKWfAU2xTC305/wBSiXL7SyL8/00xSjAAG9bbjpMDXl22ojwBdHqnuPuh54e367wlvlV3nD/OflqM6nc545x8=</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEF24AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEA74AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEB24AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B35C99EEF24AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:02B35C99EEA74AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3AC0040C005EEE05305991F0A20CA</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3AC0040C005EEE05305991F0A20CA</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3C0D57F8146A5E05307991F0A2498</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:02B3C0D57F8146A5E05307991F0A2498</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3C0D57F8146A5E05307991F0A2498</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/09/10 09:35:55</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B35C99EEF54AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3AC0040C005EEE05305991F0A20CA</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:02B35C99EEF54AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3AC0040C005EEE05305991F0A20CA</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEB24AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B3AC0040C005EEE05305991F0A20CA</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:02B3AC0040C005EEE05305991F0A20CA</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbb5f836-cf6d-4cf2-9b88-9a03590ba8a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19052 - StreamListView - DECECS - AccountNotActive - ACCOUNT.STATUS of pending status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="109f143c-7af2-4322-ac96-26c8751ea3af" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3180d39c-ea67-4ecc-b6f5-c622a58c922b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="258f38b6-ffd6-43b8-ac7c-df0c71af0628"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="7ab4b0b0-bbc5-4590-92be-3ab3511cd764" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="48cc9591-038b-4860-a2e9-08ebbb525858"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="34fc179a-3776-4cbd-8557-88341d961d9e"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to pending" id="49152d61-3427-4ad5-9eb2-21351b251ffd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"pending") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="76ef6fa2-ff52-41f8-bd23-98152b93a546"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="20c938eb-20d3-486d-9b73-7dcfa1063faf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to active" id="22e51505-8494-40fe-bc93-cdfe13ef1323"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="d3752db0-29c7-44f1-82e3-42e9a8ee4df5" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="dacff6fc-6196-4777-97d3-fb30c24a010f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="72c1e0ef-2f73-494d-990d-c0a9272a2b38" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A5D07E728E0401F0A05994224</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A5D07E728E0401F0A05994224</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323D1344B1D2E0401F0A0599421C</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC71323D1344B1D2E0401F0A0599421C</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323D1344B1D2E0401F0A0599421C</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:00:58</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A5D07E728E0401F0A05994224</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A5D07E728E0401F0A05994224</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A5D07E728E0401F0A05994224</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A5D07E728E0401F0A05994224</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76ef6fa2-ff52-41f8-bd23-98152b93a546</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19056 - StreamListView - DECECS - AccountNotActive - ACCOUNT.STATUS of blocked:tou status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="78ba6b0e-0431-4199-b34b-e0935170c8a7" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="31dc83e3-ad6e-46bb-bdd7-e78e02f3a784"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="e06ad930-8af0-40e3-8fe1-2582e31bc135"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="cec49031-dc13-47a4-a486-c826deccd0a4" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="4f47aea4-4bfc-4813-9eb6-3667444bd795"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="f1597646-f832-40a6-bf44-535579909160"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to blocked:tou" id="badededf-4154-4bee-a53c-898d46277d16"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"blocked:tou") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="aed16a19-a19a-4363-88f3-605102c29dd0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4967c93f-deb4-49dd-a20b-dddd02d5ce38"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to active" id="e01169b1-c45e-4fb2-9a52-7cbba21f1957"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="ddc48a98-a3a7-40e2-b051-c7073c611955" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="02fe5bc1-1fee-496c-9709-7dd19db56324" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="24fdb0cf-b8ce-4e85-87d4-d6744baee83b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323BB8C073DAE0401F0A0799786C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323BB8C073DAE0401F0A0799786C</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A4761FB1CE0401F0A05994220</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC71323A4761FB1CE0401F0A05994220</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A4761FB1CE0401F0A05994220</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:01:55</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323BB8C073DAE0401F0A0799786C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323BB8C073DAE0401F0A0799786C</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323BB8C073DAE0401F0A0799786C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323BB8C073DAE0401F0A0799786C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed16a19-a19a-4363-88f3-605102c29dd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19081 - StreamListView - DECECS - UserNotActive - User with a deleted status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6233b86b-2300-4a94-b5b1-4404de29ac57" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c089f58f-90b3-4864-a527-9f38ec49d2a9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="7d9604e6-aaf0-4d9c-9e5d-468466594adb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="85dab94a-fc48-4676-968c-058f7a44c240" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="ef2f4fda-3077-4306-9fa2-0ad3bd6a2a81"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="f79768ab-0665-4515-8124-8cd86eb345cc"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update USER.STATUS to deleted" id="1f38b2e9-010d-48ce-9228-f2c1e22af51a"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"deleted") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="828395d1-053d-4c26-a544-baf8d8c2808a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="96692c69-4b8d-44f1-a3a8-dc37b31812d3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update USER.STATUS to active" id="b694d0ca-ca12-4f2f-aad4-5e286f69ff16"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="e25c8af5-e725-4c33-8248-3de89ace5c2e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="6d7a5524-f644-4da8-9af2-0adb8192a7ae" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="6155acd0-683b-443a-b58b-fb7dc080674c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323BB8CB73DAE0401F0A0799786C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323BB8CB73DAE0401F0A0799786C</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A4764FB1CE0401F0A05994220</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC71323A4764FB1CE0401F0A05994220</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A4764FB1CE0401F0A05994220</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:02:35</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323BB8CB73DAE0401F0A0799786C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323BB8CB73DAE0401F0A0799786C</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323BB8CB73DAE0401F0A0799786C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323BB8CB73DAE0401F0A0799786C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>828395d1-053d-4c26-a544-baf8d8c2808a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19082 - StreamListView - DECECS - UserNotActive - User with a pending status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="a8884329-edb9-4640-8e9c-802e3f5186ff" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6f74f639-7232-4387-975c-bcffb40375a4"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="855db03e-d25b-43da-bbec-ff6489f56ac9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="fbdc338f-2429-46b9-b2df-e15799b15594" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="2cdfcdee-d81a-46df-b255-33c67439ef53"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="1feff0bf-decd-453f-96b4-f50f8f3418c0"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update USER.STATUS to pending" id="fd8cff10-758f-46ff-8365-77db16e34a15"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"pending") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="43684ebb-af1d-483c-ab05-bcbb52a644bf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="6788e553-2a22-4a41-bd4f-4701afdc91c8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update USER.STATUS to active" id="ee4a961f-f435-47d9-9f5f-0ed79e368889"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="229a4bac-d3d0-47a3-80a8-e718167708e2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="ba5939b6-5eaa-428a-80d7-e4e6c18db79c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="908a1561-7708-429b-b921-c921011cfad3" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71332B2C02C18FE0401F0A07997868</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71332B2C02C18FE0401F0A07997868</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7132B6C825683FE0401F0A07997870</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC7132B6C825683FE0401F0A07997870</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7132B6C825683FE0401F0A07997870</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:02:48</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71332B2C02C18FE0401F0A07997868</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71332B2C02C18FE0401F0A07997868</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71332B2C02C18FE0401F0A07997868</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71332B2C02C18FE0401F0A07997868</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>43684ebb-af1d-483c-ab05-bcbb52a644bf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19086 - StreamListView - DECECS - UserNotActive - User with a blocked:tou status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="666381a0-135b-4fd8-8cb9-fb6d1f12d8e4" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c2c5cd08-0ba7-42db-be67-bcd877b42697"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="6b0f08f9-51c7-423b-bde2-51b5e382d930"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="400cef02-ae54-4e61-b42f-bf3263e96c5c" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="3d307238-a299-483b-8e86-94eb74f499ac"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3d29e041-c544-4746-beba-777e851b914d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update USER.STATUS to blocked:tou" id="0aee76d2-8188-4a42-b66f-8fd86da2acfe"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"blocked:tou") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECECS" id="cac45cd5-8c7d-462a-bda1-778f1295b8b0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4c8d4a2d-712b-4b27-9002-6d882dc2aeca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update USER.STATUS to active" id="9c4e7092-4143-4980-afec-c4e95fa01ff7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="04c180d7-081a-47e5-b64a-425124840f93" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="9d527734-a7ec-4bfa-adb1-4db06c463f54" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="ce5e8007-9753-4081-936f-21f5d1be4659" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A5D33E728E0401F0A05994224</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A5D33E728E0401F0A05994224</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323D1350B1D2E0401F0A0599421C</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC71323D1350B1D2E0401F0A0599421C</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323D1350B1D2E0401F0A0599421C</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:03:38</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A5D33E728E0401F0A05994224</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A5D33E728E0401F0A05994224</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC71323A5D33E728E0401F0A05994224</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC71323A5D33E728E0401F0A05994224</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cac45cd5-8c7d-462a-bda1-778f1295b8b0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DECE0113- StreamListView  Account has single active stream and one deleted streams" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ee93ea16-9878-49c6-a123-9176b18cb1ad"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single active stream and no deleted (historical) streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="79302b2e-5b9c-47e0-9782-a8250dd37ac9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBRenewedBy",null);
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="95728ec7-aad3-4543-827b-40c4366af81a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" disabled="true" id="75037ba2-3d69-48b3-8221-fe52b8dba08b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="d90c9062-c859-43d1-a0f6-17c9fbf37335"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate DLASP" id="f229a780-5056-439c-99eb-9a0e66dff177"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to LLASP" id="14c91d0e-7571-408f-b746-1e9a47c20a90"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","LLASP");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid14").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView LLASP" id="916dd6ab-d910-4ddd-8f2d-aabc5c33c7ca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate LLASP" id="a877b009-9da1-47e5-9686-151044194b5f"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context DLASP" id="22aea9da-3e03-4230-8e8a-e634a22500b7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","RET");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView DLASP" id="77122f91-ccca-46df-9318-99118489dec8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to RET" id="c96f8d82-a45f-48d1-8ad3-0147fecacace"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","RET");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView RET" id="09635109-5420-4272-82e2-3655132754ce"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Establish Entity Authentication Context DLASP" id="d373c47e-af3a-4a68-ba8e-b83912ce809a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","RET");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete DLASP" id="6a7cd4f7-e09f-4832-900f-8d32eb5e5af0"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Establish Entity Authentication Context to RET" id="3d9ddfc5-688c-4aee-8107-988485bb9b2c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","RET");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Call StreamListView RET" id="d659eb75-62a7-40d9-bde2-fbc5cf97a6f3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call policyGet for RET" id="735401aa-484a-4e60-8950-0e4ef608a07d" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call policyDelete for RET" id="c72ae0ac-4573-495d-b46b-1b8d4f3bd3b5" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView for  RET Node" id="703e46c4-464e-4bdf-a88d-5abf3846c0a8" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECE" id="4128933a-ec05-4bb3-be87-7ca930209eac" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","RET");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView DECE" id="472af96e-6865-46c5-aece-700fbf6ed3d1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to DECE-CS" id="00411e56-80b3-4223-94e8-24fd2e1400a1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","RET");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView DECE-CS" id="6ee3163d-9df6-4bf4-a63c-c7b096211ca1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" disabled="true" id="7ce59e31-f023-4ce8-a60c-470f71009bcf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" disabled="true" id="a8885946-92fa-4812-80ae-9b0cd1ffd577"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" disabled="true" id="091b6711-5b33-4eab-bafe-4f1f25d517ba"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value>1</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value>2015/04/29 10:39:14</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value>2015/04/29 10:39:18</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:14DB41C91EB81147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value>urn:dece:userid:org:dece:14DB41C91EB81147E05307991F0AA89B</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:14DB7CB36ACC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14DB7CB36ACC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>RET</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:106F835F59F849A9E05305991F0A7901">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:11.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106F82402FDA49A1E05305991F0A39D4">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:LLASP_CS_1</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:16.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106F823E1E54499FE05305991F0A2ABC">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:DLASP</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:20.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106F834EA9C849A5E05305991F0A55C6">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:DLASP_CS_1</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:24.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106F823BFD5E499DE05305991F0A492A">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:LLASP</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:28.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>Policy_id</con:name><con:value>urn:dece:policyid:org:dece:106F835F59F849A9E05305991F0A7901</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80179</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value>14DB7CB36ACC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14DB7CB36ACC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14DB7CB36ACC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>14DB7CB36ACC78E9E05307991F0A3CF7</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>70921BB895EC40CE8D1A6312895DB518</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:70921BB895EC40CE8D1A6312895DB518</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value>urn:dece:streamhandleid:org:dece:70921BB895EC40CE8D1A6312895DB518</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value>70921BB895EC40CE8D1A6312895DB518</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_063752</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>a877b009-9da1-47e5-9686-151044194b5f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>916dd6ab-d910-4ddd-8f2d-aabc5c33c7ca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>14c91d0e-7571-408f-b746-1e9a47c20a90</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>22aea9da-3e03-4230-8e8a-e634a22500b7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>77122f91-ccca-46df-9318-99118489dec8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6a7cd4f7-e09f-4832-900f-8d32eb5e5af0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d373c47e-af3a-4a68-ba8e-b83912ce809a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>3d9ddfc5-688c-4aee-8107-988485bb9b2c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d659eb75-62a7-40d9-bde2-fbc5cf97a6f3</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>735401aa-484a-4e60-8950-0e4ef608a07d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>c72ae0ac-4573-495d-b46b-1b8d4f3bd3b5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>703e46c4-464e-4bdf-a88d-5abf3846c0a8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4128933a-ec05-4bb3-be87-7ca930209eac</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>472af96e-6865-46c5-aece-700fbf6ed3d1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>00411e56-80b3-4223-94e8-24fd2e1400a1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6ee3163d-9df6-4bf4-a63c-c7b096211ca1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Coordinator Customer Support Test Cases_P1" id="84ee3217-08d0-49d2-a857-b1cb07b68845"><con:description/><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting><con:setting id="GeneratableJUnitReport@Style">Single Page (Print)</con:setting><con:setting id="GeneratableJUnitReport@Folder">C:\Documents and Settings\ashwin.tikle\Desktop\Reports\Reports 1.0.1.3.F\P0's and P1's\Stream List View</con:setting></con:settings><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_60000 - StreamListView - COORDINATORCS - Test Suite Staging" searchProperties="true" id="c03cd13c-c48a-44e6-a1c9-2bced3bc9a57"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Create data for retailer,lasp and non lasp" id="68438ee7-9277-4dcf-9ca9-e2e0cb56664a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTS = tP.getTestSuiteByName("E_2_E");

def runnerTC = myTS.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="cc3ad48e-ce23-4032-afc1-bc17ac2e8d28"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");
tP.setPropertyValue("StreamCreateCount","0");
tP.setPropertyValue("StreamDeleteCount","0");
tP.setPropertyValue("StreamDeleteList","");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="07fd1252-aa4b-4661-af53-6e0bf5c64a55"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT.STATUS to 'active'" id="4d60b7e5-b151-43a3-8828-5bf74d656b0f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ACCOUNT_USER.STATUS to 'active'" id="61922132-861f-40a4-a835-13e3a9ec9595"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="- Remove all Parental Control Policies Clean-up" id="2b5387e6-1c27-4ed8-b114-ea3446268861" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove all Parental Control Policies")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Set CIDs Rating to G" id="fb4aa871-94e9-4ed8-bc9b-20d8d71c479f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbCID(log);

String cid     = tP.getPropertyValue("cid");
String region  = "US"
String country = "US"
String system  = "MPAA";
String rating  = "G";

this.log.info "rating[$rating]";

assert a.sqlSetRating(cid,region,country,system,rating) == 1;

</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="206dc475-19e3-4c5b-b846-e0a184ae54d5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="233cb1a2-3f49-4a8e-9a97-56c05429e0b9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="a145c628-a08b-4886-a5fc-ee82b7902892" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" id="27eba25c-5a02-4d0b-a326-2b5ba1bd3ce7" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80164</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>54796cbb-8d41-4d65-9ecf-bfc508a7a005</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>68438ee7-9277-4dcf-9ca9-e2e0cb56664a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_60052 - StreamListView - COORDINATORCS - nodeaccountid and URL accountId mismatch" searchProperties="true" id="75049870-df0c-4984-a350-1647e9fa9ad8"><con:description>This test case will verify proper response from the StreamCreate API when the supplied SAML assertion references a node account that is in pending status</con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f15a9355-87b6-4472-b54f-5f037837c4eb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","STREAM_ACCOUNTID_MISMATCH");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="3abb8f54-a335-4e26-8188-ee1bd44fda64"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove all the Account's StreamHandles" id="e1c4574d-3fed-4a9c-b691-c09bb7d69581"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="baf3bf1d-2048-4722-9d3a-819ff4bb8f83"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Change nodeaccountid" id="8b6b49e6-e84c-44c0-8391-e6770a0ba6fa"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

tC.setPropertyValue("assertionAccountIdFULL","urn:dece:accountid:org:dece:1");</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="ed1cb712-c6f8-46b3-adc4-9cb71e920294"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamstatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">STREAM_ACCOUNTID_MISMATCH</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80166</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65106 - StreamListView - COORDINATORCS - Account has single active stream and no deleted streams" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="525f5ca7-d458-4e0a-84a5-43b025ae1827"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single active stream and no deleted (historical) streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9a7e7841-384b-4855-8d68-bb037c828273"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBRenewedBy",null);
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="8bd62e8c-f15f-4398-a834-62ab0f495a28"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="48b3230f-dc9e-46af-8762-1f5ca2058555" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="d7eb804f-974b-4208-a54f-3841316e3994"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="01ee6d60-5d9f-4552-afb8-6926232a8979"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="a59dab0b-044b-49cd-ac5c-3a871530eb29"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="5ab961d6-230e-4b70-826a-05c3e577916e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="0770302a-64c6-4f82-9951-fb83d7a957e0" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="16b75db1-54d5-4226-bbbc-fc66b82a9149" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="6b2962f6-c27b-4cb3-8835-8ad7986e350b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20141226_041447</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:afc1e0ce1aff4bfcaa2d242e48d7bf17</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0B1D301D2E9C018CE05305991F0AD605</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0B1D301DC68001B8E05305991F0A4D44</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZbd7I6EP0rLvqMAUQFVnUtlV5s7dX26+XlrBhGTQsBSfByfv1JUKlY2+M5T6wMk5k9Mzs7OeU4Ci2vwzmkgsassoxCxr3c2tKylHkx5pR7DEfAPUG8Yedm4FlVw8PbLVql77e0vxrYrddqhqs3mg1Ht4Oao48ssHQHG5YzssbEsJrSlfMM+owLzERLswzT1k1LtxpPpuHZDa9Wr7pO812r/IGUy9jSpWpoG1BL3tKmQiQeQovForqoVeN0gizDMNHrzWBIphBhrX26rihPlLY3/qQaAIEwJFUSR+gUlXxOA+4N6YRhkaWwyRX8lMtAhoukT8Dp5EQr9kLQZ+M4X/YwixklOKR/Y9WfGxDTOKh0wkmcUjGNfizCNFRgHZZEJ6bNTjRUhnZkoBLClGOdT7G5ifUIY0iBEag8P/Zb2slxU8u3PqWY8XGcRry8/G94gM0hjBMIdL4tawPt+IAHOtU+BeL1GQkzTudwq8iaYAJ8M00gx4eq3KcwpssB5ZKgS67QoV14e8t1N3w6AS7+z4B2hrMO8geHGbTrV92H5TA4nz44tkhfXGHwJzN9fRjbi1YOYNc5NxSjXS/3SFmQaL0je36rWz3z2nHtJrmL4KzrXFD36u0TB1nSveKJ1ViiT9YcOMMbJF4upjPLDs/eGq9vz9euI6LO6OJtdY2dKQv7o89VbTKwowdx9fIxtd9xA02ue7bJ+/F7gNKR/zyk9Qa9WBl13zUb6HIwiJv+eNqlt8NghVYQYmZ/3N9Gs0ur1u9c3cxI8DDAw8un7uske2sV5ezgL9u2Z36YjT6AiO1S0aDvV87llLD4XcyUhQb6OHf1EiU+XAATWlvtUtrhZVLuaODJGa7XRtf0a4bp9xpN3zC7zplRrxl11zXPjY7t2/ZWZNYo9iD2YjamKpeS3DVtfgdIIo8DCyDV53EmlY5rv0T0scCVPnuUhyBmHJ5iKc+z+iyc1Gozl+JZaIZLczWbLZLxh1a5jcUdu0s7YwFpWZJrJUl+BEITCkq3Fa255DUXshUzPM9EaFbnuMogk8qeKpH1LNupI06jJAQFFEVxkIVQTaZJ3hjE119Lx4TnVhLHaeCR9Yn7sbb9f9s2SJ+AKgeuCuqCHCUcuGCsbTXfqq4fvIi24TtZQNXhkj0VKSVrJOVfX1RRHCl4si1ri7tw3zeUQqP9qopswZySgvHFvS3lXApAezuYpDqrZvN5lk+iqXQuldGRKhMZFhoCyaRCrZ7iT2CoCIKOug4K3Hu5C3sZYSambCiwgEhSp5Ivj7j/h8DV/d+XlF8e+7gopZSdE7AUh2y9UL5dFOJfnzfEI8pPmu/lZyGH+DWwA7F28sg65fUvKJuolboKVr9xg0oRi9Pd4IcCHEpeNhZNLrAIyadRJuDnPxWlTi0NExJnTPR9LTfsKmaOU6wS8L6cvoXJRbl4pdF/f6bpNKcAAfm24zSPry5bT50ANtlR3U3SQ8JrnbmuYTq9XeH1G0a9aEoJXfub+btlp0/7HG//Aw==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0B1D301DC67D01B8E05305991F0A4D44</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0B1D301D2E99018CE05305991F0AD605</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0B1D301D2EA3018CE05305991F0AD605</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0B1D301DC67D01B8E05305991F0A4D44</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0B1D301D2E99018CE05305991F0AD605</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0B1D539563E925D0E05307991F0A8BE2</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0B1D539563E925D0E05307991F0A8BE2</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:afc1e0ce1aff4bfcaa2d242e48d7bf17</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">afc1e0ce1aff4bfcaa2d242e48d7bf17</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">afc1e0ce1aff4bfcaa2d242e48d7bf17</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0B1D301DC67F01B8E05305991F0A4D44</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/12/26 10:54:39</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0B1D539563E925D0E05307991F0A8BE2</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0B1D301DC67F01B8E05305991F0A4D44</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0B1D539563E925D0E05307991F0A8BE2</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0B1D539563E925D0E05307991F0A8BE2</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:0B1D539563E925D0E05307991F0A8BE2</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80179</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0B1D301D2EA3018CE05305991F0AD605</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65107 - StreamListView - COORDINATORCS - Account has single deleted stream and no active streams" searchProperties="true" id="f2eed1e3-44f5-4617-9217-09a4272d733b"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and no active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a18f001-b6fd-4402-9efe-d46c11befc57"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","deleted");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="a2ae7c3c-f828-400a-89ca-fc1a0c159d15"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="d68de866-f737-4401-a4ca-8631e3f53fd1" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="6e814d92-bc45-4605-8720-fcbaac6c931b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="8d2ae459-dad0-4cc7-af57-31774ed69a60"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="f114405b-d273-42e6-8696-9dd028f45f31"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="09d0d632-28d6-4494-beb4-300dbbaa1b1a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="1e84d185-87ec-455d-a95d-5e6351a70dab"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" disabled="true" id="aa247d9c-3033-48d7-9384-363437e7e78c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="49eb42fb-3218-4192-ade5-b8b75f230578" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def acct    = tC.getPropertyValue("accountoid");

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == 1;
assert b.streamGetStreamDataHistoryRowCount(acct) == 2;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="2b86fead-5840-4e02-8f56-53c1d4947a75" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719ED888F4DC5AE0401F0A05992FAD</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719ED888F4DC5AE0401F0A05992FAD</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719DC366D75448E0401F0A05992FB5</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC366D75448E0401F0A05992FB5</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC366D75448E0401F0A05992FB5</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:20:41</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719ED888F4DC5AE0401F0A05992FAD</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:20:44</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719ED888F4DC5AE0401F0A05992FAD</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719ED888F4DC5AE0401F0A05992FAD</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719ED888F4DC5AE0401F0A05992FAD</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80180</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65108 - StreamListView - COORDINATORCS - Account has single deleted stream and a single active stream" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="00551102-015c-4c85-a106-a8643871d83a"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d71d7bc4-c3ee-4d24-959e-84f8bd02dcfd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamFlagCreateDateOld","true");
tC.setPropertyValue("streamAccountActiveCount","1");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="35b03163-2282-424f-a55c-445301b10e0f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="56c0bad7-2fd9-482b-87d7-a49f9bdda185" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="fe704584-ba93-4087-95a3-69100885bbdb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="84848bd2-bf57-47e1-96ba-fd9bddc14d6d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="b1c052e0-522e-43df-9a90-b83ec172f6d6"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="9844a0c4-a32b-4e47-a5cc-d4aa629085f9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="428bcc3b-808c-47e1-9eeb-4d551cfb693d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="cec0adc6-cf2a-4233-89d3-0bed34119d3d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="14c6abda-92d7-4b68-b288-6c9c6eba9a8b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="6224b5b1-c1d9-49a5-962c-ce6aa217a5c9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B4D0EB414E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">42D0699D2EFF40AFA3E40EDAE2DE0BFE</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:42D0699D2EFF40AFA3E40EDAE2DE0BFE</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DF928D8519CE4B3084488B6708AABA4F</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:42D0699D2EFF40AFA3E40EDAE2DE0BFE</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DF928D8519CE4B3084488B6708AABA4F</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">42D0699D2EFF40AFA3E40EDAE2DE0BFE</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 16:47:43</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 16:47:55</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 16:48:13</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B4D0EB414E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80181</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65123 - StreamListView - COORDINATORCS - Verify stream order based on STREAM_DATA.CREATED_DATE" searchProperties="true" id="5940e3c5-bdc0-4d24-8fe3-cc4f6fdda7b6"><con:description> This test case will verify the returned stream list will be order by the stream's STREAM_DATA.CREATED_DATE column; descending order.

1.      All Streams in the list bust be sorted by Stream_Data.created_date in descending order, that is recent one will be first in the returned list. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ebb27d64-fd48-48f5-92ef-c8231c6407b8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","3");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish User Context" id="6a0ceacc-e891-4011-9f3d-3c80b12c334e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def uArray = tP.getPropertyValue("userPropertyNameArray").toString().split(",");

if (tC.getPropertyValue("userIndex") == null) {
	tC.setPropertyValue("userIndex","0")
}

int userIndex = tC.getPropertyValue("userIndex").toInteger();

String userPropName = uArray[userIndex];
String userName = tP.getPropertyValue(userPropName);

assert userName.length() > 0;

tC.setPropertyValue("username", userName);
tC.setPropertyValue("password","testing");
tC.setPropertyValue("userIndex",userIndex.toString());

log.info "userPropName[$userPropName] - userName[$userName]";




</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="0bc8c654-2958-446c-b3b7-0427aac877a2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Purge Account Stream Handles" id="b7f7496f-9ca2-4627-8ca5-229b991538f4" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {
	a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
	a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="0e6d4652-c43e-43ac-9395-fc9931c42976"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="6c7c57e9-faf4-4f93-81ff-3858b55de617"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Random delay milliseconds" id="5075e909-8bd8-4eb7-ab46-94fd64c08f96"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

Random rand = new Random();

def v = rand.nextInt((10000-5000)+1)+5000;

tC.setPropertyValue("delay",v.toString());


</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="deedd87b-8ac8-4ce2-b7d1-f2515e1d62c3"><con:settings/><con:config><delay>${#TestCase#delay}</delay></con:config></con:testStep><con:testStep type="groovy" name="Increment loop counter &amp; save Stream Handle" id="d10f5263-fcea-42b5-9e6f-b92b5496e190"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call RightsTokenCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="f004b28f-bc2b-47b9-b5d2-62a0364bd3aa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="756575e5-a37e-44f4-ad20-36e506788c69"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="2898a91b-a35e-4f9b-b26e-79901a6ebdae" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="e823333b-4728-426e-bb80-127b551a5533" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:76931440E77B4C9B9CAD7420872045AF</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B7482CB04114E05305991F0ADD3B</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">76931440E77B4C9B9CAD7420872045AF</con:value></con:property><con:property><con:name>delay</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">6240</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:69475C3BA31248779D0EA824333A17CB</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:62176B1ED60F427B8412427E5E502585</con:value></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:76931440E77B4C9B9CAD7420872045AF</con:value></con:property><con:property><con:name>rightstokenFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">3</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">69475C3BA31248779D0EA824333A17CB</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 16:53:15</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">62176B1ED60F427B8412427E5E502585</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 16:53:33</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</con:value></con:property><con:property><con:name>streamhandle_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">76931440E77B4C9B9CAD7420872045AF</con:value></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 16:53:55</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B7482CB04114E05305991F0ADD3B</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80195</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65124 - StreamListView - COORDINATORCS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of deleted is displayed_COORD-5184" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="80ea3fbb-5e73-449b-a8df-eb3161fd0f00"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of deleted will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a90925ea-a650-4c0e-84bf-9d9f46f49633"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="a5e4d989-e3cd-4179-ba7e-3d4b7cef67ea"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="735b36d8-1ce0-440f-9d59-c9c9410d3fcb" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="20125df9-f3fe-42c6-be83-a95ae1995310"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="8f879a66-1a39-4704-9f48-471e76c64844"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'deleted'" id="6743ab64-0f38-4bb1-a187-7a320bdae4b6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusDeleted(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="571403e4-5cdf-4ea3-aa23-75f817816925"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="4d032f21-26c2-47e8-b936-fc33927ce59e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="608087a6-86ab-4995-b817-4127c02e12d8" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="da4e7246-a3fb-4281-8258-a43ae1abdda9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="46ccbfd7-6189-4096-8d7e-f4aaf6acfbf9" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC310C6AF43E0401F0A05992FAF</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC310C6AF43E0401F0A05992FAF</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC3CF23ECC7E0401F0A05992FB7</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719DC3CF23ECC7E0401F0A05992FB7</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC3CF23ECC7E0401F0A05992FB7</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:22:47</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC310C6AF43E0401F0A05992FAF</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC310C6AF43E0401F0A05992FAF</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC310C6AF43E0401F0A05992FAF</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC310C6AF43E0401F0A05992FAF</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80196</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65125 - StreamListView - COORDINATORCS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of pending is displayed" searchProperties="true" id="b8455767-1a9a-4db2-8f34-e26122ba2495"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of pending will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="3cb6a188-e149-4f1b-be94-a27cc2803b89"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="b2f8474c-f96f-4894-856e-9ca7581ebd0e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="10ca1358-4f78-4f5a-b4c6-b3f2f9b17174" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="bfcecfcd-2763-4305-89b0-bf0279bf7656"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="6215d378-c290-49cc-8398-f8209dbb797d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'pending'" id="3572c298-dc36-42ac-9c98-d08b010539e0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusPending(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="d5c39310-58a3-4224-8ca3-7883a4f01418"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="d0640b7f-912a-4fdf-8ccf-2aa206ed85a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="aa48b642-36a6-45fd-bc3d-9a8cdd42a0ec" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="53fb1a6f-d6d3-4fd0-a969-287c0ee036de" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="984da5f6-4549-41bb-8709-5ad85ac0cd7b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC0A9C7166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC0A9C7166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E420062D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719E420062D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E420062D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:23:03</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC0A9C7166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC0A9C7166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC0A9C7166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC0A9C7166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80197</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65126 - StreamListView - COORDINATORCS - Active stream associated with RIGHTS_TOKEN.STATUS_ID of suspended is displayed" searchProperties="true" id="c8217466-c3de-4832-a068-bee6ab80988e" disabled="true"><con:description> This test case will verify that an active stream associated with a RightsToken that has a status of suspended will still be returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4e6b8145-a600-499a-ad4e-5a65456d7918"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="90f40fd5-ea82-44ef-bd57-b773e215dd78"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="5f7d8926-130a-460f-bce9-13375e967bb0" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="ebe4768a-713d-4ce0-9646-319127fd9c90"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="63dba194-778d-4754-ac0f-c163058f76ff"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set RIGHTS_TOKEN.STATUS to 'suspended'" id="1119f9b9-5339-4b5b-bdf2-8d1ad977ef4b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenSetStatusSuspended(rt) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="e599c86d-9d3c-47da-9fa9-d5739e897f71"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="6990e415-fd38-4840-ad6d-9dc6a21eb588"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="685248aa-7b69-43fa-bd3e-da680617402f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="b37e4d17-5ebf-4627-88ea-6aad757aca96" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="4e794947-ef5a-4685-85a0-32906e75815c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E420064D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E420064D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC0A9D3166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719DC0A9D3166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC0A9D3166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:23:21</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E420064D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E420064D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E420064D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E420064D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80198</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65128 - StreamListView - COORDINATORCS - Active stream associated with RightsToken with RENTAL_ABSOLUTE_EXPIRATION expired" searchProperties="true" id="e08f3500-16dd-4fb9-a1eb-da3e30038f95"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4a4205e7-2e92-4850-b478-2fcaa0de8191"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="cf63fd04-b4a1-44e2-aacf-c0514c9ec020"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="7e1bd7c2-1027-4ade-b434-ac824ad8fd78" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="c7dc7100-7c1d-4596-82f3-64182adf3f08"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3297d2a9-549b-44ef-9b52-12ecbd64c3f4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Expire the RightsToken" id="aa80d5f8-1ece-4bd4-9818-e8dccfde2aee"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def rt = tC.getPropertyValue("rightstokenid");

a = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

assert a.rightsTokenExpireHours(rt,1) == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="cf92f2cd-0f7d-4dbc-9b95-6f4789cd7d26"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="e2660e02-38a4-49af-9c67-f32ee4c68f51"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="6610b4c1-4800-4bdf-ba3e-2461cad92c69" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="b18a00ba-06ec-4d50-ab2c-4006ce1926bf" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="c231423e-8766-48a6-a28e-4ebfa5bddc19" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446D28A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446D28A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC0A9D6166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719DC0A9D6166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC0A9D6166DE0401F0A05992FA9</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:23:55</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446D28A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446D28A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446D28A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446D28A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80200</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65150 - StreamListView - COORDINATORCS - &lt;StreamClientNickname> verification when value is NULL" searchProperties="true" id="68f7da54-d21b-48e9-92f5-faa30f80eb73"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c3675be5-1bc9-4004-90bf-ac4a1a6ceda9"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="ed20a383-df90-4aed-8ed1-97c651dc2893"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="3838095d-260f-4562-93e2-6d1de9769b56" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="3e35507c-7f6b-4c79-960b-137e8b343d58"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="73d58319-42eb-4c1f-a333-417c85172cb4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="8996cc6f-3fe6-486e-bfa8-3712be097137"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="99d26eac-df22-499d-aa5a-9b4429905ede"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="3884e4a0-c619-43dc-9b63-205491a03fcc" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="238b2e0a-def1-4cf2-82b7-1dd6166c7ec1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="a1826a2c-e67c-41ce-84d5-2600c7af2b9c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC3335D880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC3335D880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC356396572E0401F0A05992FB3</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719DC356396572E0401F0A05992FB3</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC356396572E0401F0A05992FB3</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:25:05</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC3335D880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC3335D880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC3335D880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC3335D880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65151 - StreamListView - COORDINATORCS - &lt;StreamClientNickname> verification when value is single character" searchProperties="true" id="c75b73fb-a0fe-4be0-bcff-ef10f9dbd8e8"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2a1b1205-6236-40d1-847b-681de6a37dd1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("nickname","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="7a46e68f-5093-4794-83ed-d4932e30c0f7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="f107ad77-b010-4f56-bc16-3dd210d8344a" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="676319af-b887-4866-8113-809677ad15a2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="beb39301-a958-4ddf-9dd3-a0746cba8438"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nickname","a");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="bd08a3f6-bb54-47ee-ac22-e079ac38de17"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="00030d7a-46a4-49df-99c1-fba6dd4968a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="e207c882-a725-46e2-b872-b72fe823d999" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="eb93d1dc-ef81-48fa-82a2-cf67cf9dd001" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="357eb0e2-5d5e-4c5a-97e8-ad66f5c925e3" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value>14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>assertid</con:name><con:value/></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value>0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value>2015/04/29 16:56:13</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value/></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value>a</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:14E08C6FA4342F19E05305991F0A08FB</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14E08C6FA4342F19E05305991F0A08FB</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>nickname</con:name><con:value>a</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dececs</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value>14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value>14E08C6FA4342F19E05305991F0A08FB</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14E08C6FA4342F19E05305991F0A08FB</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14E08C6FA4342F19E05305991F0A08FB</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>14E08C6FA4342F19E05305991F0A08FB</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>17B6744A735B4CD5B21E5A1BB11BCDE1</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:17B6744A735B4CD5B21E5A1BB11BCDE1</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value>urn:dece:streamhandleid:org:dece:17B6744A735B4CD5B21E5A1BB11BCDE1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value>17B6744A735B4CD5B21E5A1BB11BCDE1</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value>1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>useroid</con:name><con:value>14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65152 - StreamListView - COORDINATORCS - &lt;StreamClientNickname> verification when value is max allowed" searchProperties="true" id="2bf42944-0ab2-48e1-b92c-527a166f1acc"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="74bef152-d6ad-40d6-b8a2-d9f8d45307ca"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("nickname",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="5da835bd-82ae-492e-b80f-f011800e9360"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="da4e56ea-2962-49dd-a9d5-a685bae6cd40" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="65c00fc8-8944-46c5-ac2e-0e2059a7fe52"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="36f4d553-e885-4a50-904d-72f1344f224d"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


tC.setPropertyValue("nickname","aaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIoooo");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="91f49e22-8b6c-4e04-83c8-69e05ac99ed0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="ebbbb9b1-4b5b-43e9-b0b0-1084200f6814"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="a2c1206f-3e69-4937-8e14-7429d5278c0d" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="5e71b0ff-ec04-4ec5-ac98-0edf41726bf6" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="ee15d6f0-4b9f-42be-a131-77235f585d31" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:7A4D1BAB1CBA433885C0FAFDFA38C304</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B7482DAE4114E05305991F0ADD3B</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482DAE4114E05305991F0ADD3B</con:value></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">aaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIoooo</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7A4D1BAB1CBA433885C0FAFDFA38C304</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:7A4D1BAB1CBA433885C0FAFDFA38C304</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">aaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIoooo</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7A4D1BAB1CBA433885C0FAFDFA38C304</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 16:59:51</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482DAE4114E05305991F0ADD3B</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482DAE4114E05305991F0ADD3B</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B7482DAE4114E05305991F0ADD3B</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B7482DAE4114E05305991F0ADD3B</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_65153 - StreamListView - COORDINATORCS - &lt;StreamClientNickname> verification when value contains XML-allowed special characters" searchProperties="true" id="fcd4eabd-4fb1-4c53-8065-20f35c25b63d"><con:description> This test case will verify that an active stream associated with a RightsToken that has expired is returned. </con:description><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Establish Test Case Properties" id="d4c67c42-c619-4a16-80ee-ba24f90bf72b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="89f672f2-d52d-49b3-b29d-594252772a58"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="ffd933f5-f453-4917-86ac-bfa8aceafa0b" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="c84ec388-eed2-4531-9256-86bb09d5ffa4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="da6cabab-76b8-423c-ab43-9955f2038afb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
tC.setPropertyValue("nickname","John &amp;amp; Paul &amp;amp; George &amp;amp; Ringo");
def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="e5ae2488-cca8-4613-95aa-7dc7a8a0c281"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="e3cffad3-ab7b-45a4-bd07-cdba66ed60fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="7076934d-dcea-4df9-8bf4-b4e24671dba2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="68f8320a-67a8-43d7-b829-cf73b3f6dde5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert b.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="35ad413b-87db-4bef-9a76-117e0de83823" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446E48A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446E48A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&amp;apos;</con:value></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DE76351E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719DE76351E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP_CS_2</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&amp;apos;</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DE76351E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:28:23</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E74E5F64A2E0401F0A0799215A</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446E48A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E74E5F64A2E0401F0A0799215A</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446E48A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446E48A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446E48A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66500 - StreamListView - COORDINATORCS - Account single deleted stream and a single active stream as Full user" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8f65a4de-7205-46cf-9c9e-551a856f65f2"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ade4c87d-14da-4018-8208-f6d855c49eb1"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="0d979a1d-3344-4072-bf1c-a1832bc2f5bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="83c36871-25d4-4d92-8770-2e784d0ff43f" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="f5f7159d-4541-4b8c-a712-63d68c6bdfc6"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="e3be69f0-7ee6-45a7-9858-7a6465f00db8"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="cf2e390b-c8fb-4848-a1b5-bc5895249662"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="9d50917d-4785-48c1-8712-9e36dc38097e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="302b3984-2ea4-488e-8b37-5a6e16c815ec"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="771d7b6b-60c0-43f1-a441-0b1ebf2fabb4" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="1c0dfc68-1119-4aa9-bd50-b909f6644940" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="aedced38-e358-412d-bf67-1249ebd4d1c0" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1DA93627A3544A20B55C1ABE868144DF</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B4D0EEDA4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EEDA4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1DA93627A3544A20B55C1ABE868144DF</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:1DA93627A3544A20B55C1ABE868144DF</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1DA93627A3544A20B55C1ABE868144DF</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 17:02:14</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EEDA4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 17:02:30</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EEDA4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B4D0EEDA4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EEDA4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80212</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66501 - StreamListView - COORDINATORCS - Account single deleted stream and a single active stream as Standard user" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0ee75118-a1bd-460c-9ff4-b0f05c718b45"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="57077a52-172b-4ce4-9701-7b81adad9166"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="34bd4371-d75c-4e58-b729-c1e02ecf1d4f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="8ed34e5c-9be9-44a3-bfbd-75e07f20b4d2" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="e539daa2-fad2-4445-9267-a03b5da7da6b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="324a0bc2-cc19-4de5-9449-9de371534aa4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="be03fc0e-a81e-4b10-ac63-d9a44517930f"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="73184b50-2bf9-4704-a68e-9b921a08c349"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="1ee50ac1-3426-4485-a7f6-33058290b019"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="3ffb019d-734f-42a3-9cfa-150251684d12" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="31098d88-eef1-46c0-a2f1-c668e9cdbb1a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10356</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>1914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>9115_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E435CAB7782E0401F0A05992FBB</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E435CAB7782E0401F0A05992FBB</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC3336F880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719DC3336F880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>transactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>null_null_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC3336F880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:28:47</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F701586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E435CAB7782E0401F0A05992FBB</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:28:50</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F701586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E435CAB7782E0401F0A05992FBB</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E435CAB7782E0401F0A05992FBB</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E435CAB7782E0401F0A05992FBB</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80213</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66520 - StreamListView - COORDINATORCS - Full User can view stream created by Full User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b4b283ef-cc60-4bc6-9b1a-59c75b5d78bf"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ac6e7cf1-a44c-447d-abfc-f81a04055e78"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1"));
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="291331c0-326e-499b-ac5f-16b063c09991"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="8829c71c-ded5-42ed-beb5-b010f49832f0" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="b2d8d1a0-b08e-4dad-be56-3777aa122759"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="07ed4101-d641-4c74-ac0c-a85f51d94d49"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="8e76aa7f-4131-4b5c-8d16-d38c710bf9a3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="75e13aff-1217-456d-87be-b03f4b923168"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="b56b364b-e91b-48f2-98be-8a8940c5008f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="586eb676-0e80-4777-9e2e-eb5858430e31" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="526fe49c-87ea-4442-9fd2-e568c7ca45ba" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446F08A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446F08A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC33371880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719DC33371880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC33371880EE0401F0A05992FA5</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:28:57</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446F08A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446F08A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446F08A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719E4446F08A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80215</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66521 - StreamListView - COORDINATORCS - Full User can view stream created by Standard User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="29cffb09-1f09-4743-a382-f574e617bc2b"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9a549af6-3e66-4cb6-9615-0ed0b69ede8b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="3766f74d-dc3f-44fd-80db-cd8ecd08bbeb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="edbf24b5-ddaa-453d-b48d-6869ab0df331" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="d9756cc5-0798-436c-9553-90e45e2dabec"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="fcd4bb8a-1950-419c-9c47-d695013f45a3"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="10b117d6-ec23-4f7e-9a2f-d48b357b0cc9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="d647ac46-f047-4500-979e-9fbaea01b274"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="118ca48b-0453-4a58-81c5-209e52e9a90f" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="e22ba9a0-6399-464c-a6e0-ac4137ae8d39" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10356</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DE76354E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DE76354E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446FC8A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719E4446FC8A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>rightstokenFULL_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446FC8A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:29:09</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F701586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DE76354E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F701586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DE76354E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DE76354E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DE76354E277E0401F0A05992FB1</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80216</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66530 - StreamListView - COORDINATORCS - Standard User can view stream created by Full User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e98dd061-ad9e-4f27-9cd5-9f3dec3cf6fb"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="34ba2ae6-94d1-40f2-b600-a900abdd644d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="f9f4859c-63a1-49e8-8f8b-0bea411a37b3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="e76b775f-b0da-4717-bd7c-60ba0a1b090d" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="d47333de-30d0-457a-957c-40df89a4e4c0"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="61b26626-8a97-4e9d-b3ad-1c6f03b11c1b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="a902c1ec-9de3-4170-ae74-237a536b7b86"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="d8aaa42b-e7b9-48a3-a19a-9344adce2b4b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="a6f9849b-f58a-4cb3-bd48-c9929f3db05a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="331a61bb-cce5-40f4-98ab-575d447207cd" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:4261B9C973904929A30280C3D2E4BF8C</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B4D0EF0F4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EF0F4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4261B9C973904929A30280C3D2E4BF8C</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:4261B9C973904929A30280C3D2E4BF8C</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">4261B9C973904929A30280C3D2E4BF8C</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 17:03:57</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EF0F4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EF0F4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0B4D0EF0F4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0B4D0EF0F4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80218</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66531 - StreamListView - COORDINATORCS - Standard User can view stream created by Standard User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="75da6a8e-b4fb-472c-8db6-a71dc71b63b5"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="79d81130-9c41-4ef2-bdd4-d7dc4303d7ab"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="252506fb-dfd4-43d3-a8f8-2608504d7e4d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="739038dc-adf9-4744-9cc8-68bed2764617" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="da50ab5c-512a-438f-a8d1-e487d3447879"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="3463e0b1-9c65-4325-aee4-cab659e7cc5b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="8ec844ab-c4cf-44e8-8e8c-e57891d936c7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="0b2b5c2d-d288-4a73-8047-029abbbc1365"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="d5fe8a0c-51e5-4a5c-a6f7-43bfb82181c8" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="cb9c96a5-476f-4198-bf39-1466fd6a733c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10356</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC3670E5448E0401F0A05992FB5</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC3670E5448E0401F0A05992FB5</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446FF8A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719E4446FF8A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E4446FF8A33E0401F0A05992FA1</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:29:36</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F701586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC3670E5448E0401F0A05992FB5</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F701586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC3670E5448E0401F0A05992FB5</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC3670E5448E0401F0A05992FB5</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC3670E5448E0401F0A05992FB5</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80219</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66700 - StreamListView - COORDINATORCS - API invocation after StreamRenew by Full User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ad68fbd5-d8a1-492e-bbf7-44ff3e206de3"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="7e798ebd-ff11-4660-98ca-89d236b2d523"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="78d8713f-1e7a-49c8-843b-18f7aa6a5d43"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="50484f2f-4af8-47a2-9ec7-a5344e976275" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="7bb304b1-84b0-4664-a209-84bd12ff8cdb"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="debfd381-2505-4ebd-897b-f42f7ca2f5bf"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ExpirationDateTime for Stream Renew Request sysdate + 2 hours" id="135ceccd-6438-4aec-90a6-ef43f8bfa430"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="1c34960e-c5b4-405d-8301-e98b8bc52aa3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="5b99e141-20de-4d17-b2c3-45863b615ec5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="de39aa9a-b490-46aa-9b81-34dea55269a4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="7e2f55f4-26c5-4f5d-b9f1-d4d6903b6354" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="5bb6c04f-68f0-491e-9be9-1223f644440b" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 17:08:05</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80224</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_66701 - StreamListView - COORDINATORCS - API invocation after StreamRenew by Standard User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b565f1c9-58ee-4433-a137-d22da2c50146"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a29a88d4-d1a4-478e-a924-9c315954b228"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="d6585d1c-18cb-4fed-a0df-ec021afd3e09"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c135dc6c-279d-4814-9742-55cf97070804" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="867bc4ab-7fd4-433e-af0a-8ca4eb1116d2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="e817be17-2bb9-4b07-9d2d-7c52c84ffcd0"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Set ExpirationDateTime for Stream Renew Request sysdate + 2 hours" id="afce7b1a-3637-4122-b7ee-68d33666f8be"><con:settings/><con:config><script>import org.apache.commons.lang.SystemUtils;
def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
Date d;
if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
d=new Date(new Date().getTime()+7200000);
	}
else
	{
d=new Date(new Date().getTime()+50400000);
	}
	
String s=new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'").format(d);
tP.setPropertyValue("ExpirationDateTime",s);</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to Standard User" id="3c5c24c4-ba73-42f0-810c-241d702b1ff4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("username",tP.getPropertyValue("UserName_SAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userStandard1Org1Password"));

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamRenew" id="b8c57d32-81fd-4e26-820c-6130e77582a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamRenew")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="629f943a-cb5d-41f4-af42-ccac74bafadc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="15888e7c-b62b-427b-8d3e-4979e1268e5c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="fc148c46-a244-477e-bc50-1ee4319895a5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="048bb509-475a-4c90-840d-2f5b94248a47" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10356</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC10554B801E0401F0A05992FAB</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC10554B801E0401F0A05992FAB</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E420085D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC719E420085D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719E420085D21EE0401F0A05992FA7</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:30:42</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F701586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC10554B801E0401F0A05992FAB</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBUpdatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>expectDBUpdatedTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F701586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC10554B801E0401F0A05992FAB</con:value></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC719DC10554B801E0401F0A05992FAB</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC719DC10554B801E0401F0A05992FAB</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>80225</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>LLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_55091 - StreamListView - COORDINATORCS - Stream view by dececs_ManageAccountConsentPresent_DifferentOrg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="700caad7-7062-4b2c-a818-bcc5cff838a8" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d389a210-a5e2-4655-9a6d-41ff63a8eec8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="91fd36df-f83a-4133-8e6c-e38655a4679b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="8699eb7a-7c37-4525-9bcf-4e92fe0b371e" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" disabled="true" id="88cccce4-507b-44c4-a529-0b99f7a60903"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="245cd6c4-1ed9-4a1c-bccf-b5184111ddad"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="0245b851-576f-487c-87d5-9e6db9952c5b"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="b92a8d8e-aa0e-4b9a-a06a-c168c6fc218a" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="7d2324c8-2b86-4316-8c71-b614c4f3a5d3" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="delay" name="Delay II" id="1e808616-710a-49c1-a8a1-40fb03a8611d" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="5883fb3c-fd81-438e-b9ef-6556b822c639" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="a6d4c950-fb88-48ab-86cc-53d039746bf1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="e6373bb1-22fb-42f8-9f79-99fdc68acd0a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent1" id="ac6eac82-b868-4ea0-aa8f-87cfe65910fa"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="95d7825d-5bab-4605-9fe5-58f187ff5eaf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="21eaf929-0d66-4c9a-be6a-f9f7ae54e1de" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="7697cb9e-52f8-482a-be91-50930f2ceb01" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209876A1F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209876A1F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209E54548E037E0401F0A05991F93</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC7209E54548E037E0401F0A05991F93</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:D2AE5CBD666F437FE0401F0A0799478F</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209E54548E037E0401F0A05991F93</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">D2AE5CBD666F437FE0401F0A0799478F</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:47:04</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209876A1F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/01/07 07:04:43</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/01/07 07:05:05</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:D2AE5CBD65DF437FE0401F0A0799478F</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209876A1F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79691</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>FC7209876A1F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:FC7209876A1F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlp</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>515727f8-a3ef-4d9b-b7c7-2f5f3eae9968</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d1533e-db88-4f69-94ac-c8dbacee678e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2612d590-4e41-4806-bcc3-86275ee34584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>e6373bb1-22fb-42f8-9f79-99fdc68acd0a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_55092 - StreamListView - COORDINATORCS - Stream view by dececs_ManageAccountConsentNotPresent_DifferentOrg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5d17d6be-c694-42cc-ac00-a62402551307" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="76768c50-1402-4a0f-b7ee-e43f54d400a2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dlp");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid12").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS_NO_STREAMS");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");
tC.setPropertyValue("streamFlagCreateDateOld","true");
tC.setPropertyValue("streamAccountActiveCount","1");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="e88f3c4a-bba2-4d7e-8817-04b9dc344f13"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="c73765af-df31-41cb-bb09-f98a58146824" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent" disabled="true" id="3efb8971-8f32-4ba7-b2d2-e789ddd9c883"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Remove Manage account consent" id="b593c355-9220-415b-95e0-6896ddefa463"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Remove Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="3936848c-fa7a-454f-8451-c4a50928fa56"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="2862f5d9-9a78-4805-be7f-178473c41121"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="delay" name="Delay I" id="4502d098-d302-4f25-92ae-f4287d798279" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Call StreamDelete" id="a4f46cd2-25fd-4bbc-a4f6-33ac6fa2eedf" disabled="true"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int i = tC.getPropertyValue("deletedCreateCount").toInteger();

/*
*  Delete only the first stream handle created.
*/
if (tC.getPropertyValue("counter").toInteger() &lt;= 1) {
	i++;
	tC.setPropertyValue("deletedCreateCount",i.toString());
	tC.setPropertyValue("expectDBStatus","deleted");
	tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="delay" name="Delay II" id="e4dbf123-5205-4460-9490-c3108d87ad08" disabled="true"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Invoke StreamCreate again if Required" id="3b11469b-0d4c-4f76-b2e1-2584d597037a" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();

def loopuntil = tC.getPropertyValue("loopuntil").toInteger();
def counter   = tC.getPropertyValue("counter").toInteger();

counter++;

if (counter &lt;= loopuntil) {
	tC.setPropertyValue("counter",counter.toString());
	testRunner.gotoStepByName("Call StreamCreate");
} 





</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="de850096-4f8a-4861-a329-3fc589500c1c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Manage account consent1" disabled="true" id="41911e16-3fb7-4c12-b4da-28170d1e86c1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Policy - Establish Manage account consent policy")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="017636c5-26bd-4600-b96b-9035397a49e6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="a3ec1ec4-6bd9-4959-bbcb-4c6fcd0c2d36" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="850780a7-04de-4237-aeb2-0fa408220c5c" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS_NO_STREAMS</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EE6C872EA7537659E0401F0A07996974</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720986FF5BF04AE0401F0A079945F4</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC720986FF5BF04AE0401F0A079945F4</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209E5454CE037E0401F0A05991F93</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC7209E5454CE037E0401F0A05991F93</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EE6B1BB7883AA6FCE0401F0A0799206F</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209E5454CE037E0401F0A05991F93</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EE6B1BB7883AA6FCE0401F0A0799206F</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10354</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 18:47:17</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC720986FF5BF04AE0401F0A079945F4</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/26 09:58:14</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/12/26 09:47:03</con:value></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EE6DBC5332BEAAC6E0401F0A07992538</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC720986FF5BF04AE0401F0A079945F4</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79691</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value>FC720986FF5BF04AE0401F0A079945F4</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:FC720986FF5BF04AE0401F0A079945F4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>515727f8-a3ef-4d9b-b7c7-2f5f3eae9968</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55d1533e-db88-4f69-94ac-c8dbacee678e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2612d590-4e41-4806-bcc3-86275ee34584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>db295cf1-ada5-4262-9aa7-1d3cb4e13390</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19050 - StreamListView - COORDINATORCS - AccountNotActive - ACCOUNT.STATUS of deleted status_not_displayed - 403 Forbidden_Design_INVALID" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="015caa99-9ae6-498f-bdbd-1f9129b19e1b" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="a0f13094-ff4d-4539-8682-c7a3d080e1cf"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="b74e44af-58ba-44eb-a35e-a9dd5f20b34b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="67e5ce14-59db-421b-8c07-e07690a53c49" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="5e4261c0-7586-470d-b01f-2139f02d4cf7"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="c7a5e3d5-0c26-4dfb-9d04-3750a8b82392"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to deleted" id="5cff5df0-f663-4ca1-abd0-203af959b09c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"deleted") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="afae5795-4b19-4684-a698-b14575616127"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="9aae3f67-44e2-4e2c-ba54-cc65017489a9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to active" id="ba064798-e496-4b02-8f9e-3409808e56a6"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="c6738073-1cf4-4ad5-bf47-00d1468ed17a" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="3e4379ea-b9cf-40e4-812f-b2a10ebc3527" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="58c1c0cd-6f0d-4570-accf-fb64117ecef4" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720985BB5CBCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC720985BB5CBCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720D177DA47F91E0401F0A05991F7D</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC720D177DA47F91E0401F0A05991F7D</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720D177DA47F91E0401F0A05991F7D</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 19:02:12</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC720985BB5CBCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC720985BB5CBCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720985BB5CBCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC720985BB5CBCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bbb5f836-cf6d-4cf2-9b88-9a03590ba8a7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19052 - StreamListView - COORDINATORCS - AccountNotActive - ACCOUNT.STATUS of pending status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="502edbd9-20dc-41bb-b9cd-4ae62c9ad6fb" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="f44d0e1e-c644-4ce0-904b-c6f677838712"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="ec573652-f6a7-4dbf-9ad7-de1a9d625378"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="a6bc3c99-38a9-4e95-9c33-4f5806caa353" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="7ed7e314-4e85-4753-99e3-6f19537a9d19"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="37d033cd-ac0c-486f-b765-b3c5a2349eb7"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to pending" id="6abc3f0b-b924-408e-a223-9290ed48447d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"pending") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="e0c1edf1-6e96-4090-b487-00c3bcb2af52"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="a0960682-0230-4305-81f1-52992cee8885"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to active" id="90f1df77-b86c-4731-b07b-bc9271af4c89"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="2b2c24f7-03e7-4e40-bce0-af174fa42562" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="cea4d31a-984a-4086-989c-26ef2a2606ed" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="049bfadc-f19e-4691-9e9f-3adbba20c4ef" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209E54F7EE037E0401F0A05991F93</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209E54F7EE037E0401F0A05991F93</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720ABBE8D2B833E0401F0A079945A5</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC720ABBE8D2B833E0401F0A079945A5</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720ABBE8D2B833E0401F0A079945A5</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 19:02:37</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209E54F7EE037E0401F0A05991F93</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209E54F7EE037E0401F0A05991F93</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209E54F7EE037E0401F0A05991F93</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209E54F7EE037E0401F0A05991F93</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>76ef6fa2-ff52-41f8-bd23-98152b93a546</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19056 - StreamListView - COORDINATORCS - AccountNotActive - ACCOUNT.STATUS of blocked:tou status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5baded53-f5ee-4276-a19c-aca2d4de15c6" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d2df9994-6a21-4ba3-b999-e2bb311c86d3"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="b61aaefc-38b4-4253-977f-e8b209bd75af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="8d7a4b6c-bd62-43f4-a4eb-686665075f3c" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="c0847769-e881-4723-afbf-e94721aa3ef4"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="324ad7d9-350e-4d2e-a90e-ddf774d2179f"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to blocked:tou" id="8f9ca7bb-c63e-417a-850c-ab472427b2c0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"blocked:tou") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="74812d5f-d9ee-4e91-8b6f-8b49ba1e3c71"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="9e581ed9-2c24-41c5-b493-73bc946550b0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to active" id="1b3990f5-5c75-4ad6-b02b-2e60733402cf"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="518f5a05-ef7b-4b3d-b105-c04644d9630b" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="ce77c5f2-e8c8-4ecf-85a9-e6c9d09888b3" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="7fdb7ddb-3790-46d5-8237-9fd7d09cf4e5" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC72091C087BD8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC72091C087BD8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720987777C68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC720987777C68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720987777C68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 19:03:28</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC72091C087BD8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC72091C087BD8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC72091C087BD8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC72091C087BD8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>aed16a19-a19a-4363-88f3-605102c29dd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19057 - StreamListView - COORDINATORCS - AccountNotActive - ACCOUNT.STATUS of blocked status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ff7b72d0-cd5d-4a3e-8328-41923a1ff48f" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ad08c3c6-ea18-4c41-995b-ed5c72a89ab2"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","ACCOUNT_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="b0031a66-7dce-45d2-9c52-bd314ed3baa5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="a49902ea-f441-4cf7-8489-ec487e07410a" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="613c57c8-7d0c-4be3-b42e-0c2d0dd117b2"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="4a69c170-88e5-405e-b18b-5ac038498165"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to blocked" id="15c56312-45c5-4fb6-8f48-c8382947f44c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"blocked") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="caa8d3e8-0593-4d06-92df-9f0eaf9c1707"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="17e0e05d-2deb-4218-80cb-3ffeb687ec7e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update ACCOUNT.STATUS to active" id="8e5332c0-f214-430f-af2e-c61b26b5c798"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

assert a.accountSetStatus(tC.getPropertyValue("accountoid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="f63cda46-9bfc-4b05-85fe-b1fe80be29d8" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="877ec51f-3089-4b35-b2b4-eff9aff400d1" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="e9ca7ff7-1dc7-450c-882d-10747adc3a2e" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ACCOUNT_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209870BF1F04AE0401F0A079945F4</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209870BF1F04AE0401F0A079945F4</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720985BB72BCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC720985BB72BCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720985BB72BCD7E0401F0A079945C7</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 19:03:39</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209870BF1F04AE0401F0A079945F4</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209870BF1F04AE0401F0A079945F4</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC7209870BF1F04AE0401F0A079945F4</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC7209870BF1F04AE0401F0A079945F4</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fdabefde-9d1b-4ffc-b273-7da0265d65b0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC_DECE_19081 - StreamListView - COORDINATORCS - UserNotActive - User with a deleted status_not_displayed - 403 Forbidden" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5d83bfb8-d5e2-4146-99be-9b34c0b2f14f" disabled="true"><con:description> This test case will verify proper response to a StreamListView API invocation with an account that has a single deleted  (historical)  stream and a single active streams. </con:description><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="05edec33-21f7-4f9a-a788-01cf33bfb80f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU2").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull2Org1Password"));
tC.setPropertyValue("streamhandleFULL"," ");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertid",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("tokentype",tP.getPropertyValue("urntokenType_userpassword"));
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","2");
tC.setPropertyValue("deletedCreateCount","0");
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("expectErrTypeSTSGet","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamDelete","SUCCESS");
tC.setPropertyValue("expectErrTypeStreamListView","USER_NOT_ACTIVE");
/* Stream Row Validations */
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy","");

					tC.setPropertyValue("streamAccountActiveCount","0");
					
tC.setPropertyValue("userIndex","0");
tC.setPropertyValue("streamAccountActiveCount","0");
tC.setPropertyValue("deletedCreateCount","0");</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="50a3b0b7-3ae4-47a3-8668-8074c71e4c00"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove account's stream handles" id="9d598c91-e974-4a59-a9cb-86e9f1778448" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def dbUtils;

try {
	dbUtils = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbStreams - $e";
	assert 1 == 2;
}
finally {
	dbUtils.streamDeleteAccountOid(tC.getPropertyValue("accountoid"));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Call RightsTokenCreate" id="dd2180d6-96ad-4286-850c-8b07d5fb9daf"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("counter") == "1") {

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("RightsTokenCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamCreate" id="00b9d446-708b-44c9-aebf-ed801fbd8951"><con:settings/><con:config><script>
import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="Update USER.STATUS to deleted" id="dd1f02cb-ff8f-4c04-afbe-901ba10f7e42"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"deleted") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context to COORDINATORCS" id="32c3bf3f-0613-4c8b-b024-eb4dc5df2094"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","dececs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Call StreamListView" id="e00a7f1b-3652-4ae8-beba-9566edadf783"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="Update USER.STATUS to active" id="2cc67dae-a4d1-4273-9b6b-804c607a9caa"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));

assert a.userSetStatus(tC.getPropertyValue("useroid"),"active") == 1;</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA row" id="77aaed1b-1106-442a-8052-999fc0f5cc3a" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Verification of STREAM_DATA row")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;




</script></con:config></con:testStep><con:testStep type="groovy" name="Verify STREAM_DATA and STREAM_DATA_HISTORY row counts" id="5ba63008-95d1-489c-89c7-16f25ee22430" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def acct    = tC.getPropertyValue("accountoid");

int count  = tC.getPropertyValue("counter").toInteger();
int dcount = tC.getPropertyValue("deletedCreateCount").toInteger();

log.info "count[$count] - dcount[$dcount]";

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));

assert a.streamGetStreamDataRowCount(acct) == count;
assert a.streamGetStreamDataHistoryRowCount(acct) == count + dcount;</script></con:config></con:testStep><con:testStep type="groovy" name="Post Test Execution cleanup" id="c13b858e-e361-497d-96e8-15ec77d3dfba" disabled="true"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbStreams(log,tP.getPropertyValue("targetSystem"));
b = new dbUtils.dbRightsToken(log,tP.getPropertyValue("targetSystem"));

a.streamDeleteHandle(tC.getPropertyValue("streamhandle"));
b.rightsTokenDeleteByHandle(tC.getPropertyValue("rightstokenid"));

</script></con:config></con:testStep><con:properties><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20140905_10358</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> </con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tokentype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2</con:value></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">USER_NOT_ACTIVE</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC72091C0886D8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC72091C0886D8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720987777F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:FC720987777F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC720987777F68C3E0401F0A0799462C</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2014/06/22 19:04:06</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC72091C0886D8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>expectDBStatus1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6FE8F981586E0401F0A05995343</con:value></con:property><con:property><con:name>expectRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC72091C0886D8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">FC72091C0886D8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:FC72091C0886D8D4E0401F0A05991F6A</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79727</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>47ab893a-eeb9-4959-95fa-61bbc276a90d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>237fa981-9000-4737-80ff-b24ffa21d064</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>828395d1-053d-4c26-a544-baf8d8c2808a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Test Cases Containing APIs" disabled="true" id="089a2c4e-4981-45fd-9023-a0f8877395d0"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="RightsTokenCreate" searchProperties="true" id="58b5054c-8ba6-49d2-a9bc-20acd15edf3c" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="bc6d611f-efb5-4f8e-b923-b8f21d17d8d5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());
tC.setPropertyValue("rtrnodeid",tP.getPropertyValue("nodeoid10").toString());
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeSTS","SUCCESS");
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("counter",null);
tC.setPropertyValue("cid",null);
tC.setPropertyValue("alid",null);



</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="2d1e453a-835e-4c17-966b-1410bbda6ed4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("cid",callTC.getPropertyValue("cid"));
tC.setPropertyValue("alid",callTC.getPropertyValue("alid"));
/*
*  Mapping this call only to a retailer node.
*/
if (tC.getPropertyValue("nodeid") != "1912") {
	tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid10").toString());
}
if (tC.getPropertyValue("counter") == null) {
	tC.setPropertyValue("counter","1");
}
if (tC.getPropertyValue("alid") == null) {
	tC.setPropertyValue("alid",tP.getPropertyValue("alid"));
}
if (tC.getPropertyValue("cid") == null) {
	tC.setPropertyValue("cid",tP.getPropertyValue("cid"));
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context" id="213b4b9c-734b-4672-8fdb-9c29ae460fdf"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="d99dbfec-26f9-4256-88fa-002c2c77f0cb"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - RightsTokenCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - RightsTokenCreate" id="3bf4762a-0335-4e37-a14a-430434bd79f3"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/RightsToken" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - RightsTokenCreate" mediaType="application/xml" postQueryString="false" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<ns4:RightsTokenData xmlns:ns1="http://www.w3.org/2001/04/xmlenc#"  xmlns:ns2="http://www.movielabs.com/md"  xmlns:ns3="http://www.w3.org/2000/09/xmldsig#"  xmlns:ns4="${#Project#coordinatorSchema}"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://www.decellc.org/schema file:/C:/5Work/Workspaces/workspace-sts-2.3.3/dece_api/src/main/webapp/schemas/dece.xsd"   ALID="${#Project#alid}" ContentID="${#Project#cid}">
                <ns4:SoldAs>
                                <ns4:DisplayName Language="en">Avatar BestBuy Special Packaging</ns4:DisplayName>
                                <ns4:ContentID>${#Project#cid}</ns4:ContentID>
                </ns4:SoldAs>
                <ns4:RightsProfiles>
                                <ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:hd">
                                                <ns4:CanDownload>true</ns4:CanDownload>
                                                <ns4:CanStream>true</ns4:CanStream>
                                </ns4:PurchaseProfile>
                                <ns4:PurchaseProfile MediaProfile="urn:dece:type:mediaprofile:sd">
                                                <ns4:CanDownload>true</ns4:CanDownload>
                                                <ns4:CanStream>true</ns4:CanStream>
                                </ns4:PurchaseProfile>
                                
                </ns4:RightsProfiles>
                <ns4:LicenseAcqBaseLoc>ns3.google.com</ns4:LicenseAcqBaseLoc>
                <ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">
                                <ns4:Location>https://dl.bestbuy.com/p/aaa</ns4:Location>
                                <ns4:Preference>1</ns4:Preference>
                </ns4:FulfillmentWebLoc>
                <ns4:FulfillmentWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">
                                <ns4:Location>https://dl.bestbuy.com/p/bbb</ns4:Location>
                                <ns4:Preference>1</ns4:Preference>
                </ns4:FulfillmentWebLoc>
                <ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">
                                <ns4:Location>https://dl.bestbuy.com/p/ccc</ns4:Location>
                                <ns4:Preference>3</ns4:Preference>
                </ns4:FulfillmentManifestLoc>
                <ns4:FulfillmentManifestLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">
                                <ns4:Location>https://dl.bestbuy.com/p/ddd</ns4:Location>
                                <ns4:Preference>1</ns4:Preference>
                </ns4:FulfillmentManifestLoc>
				<ns4:StreamWebLoc MediaProfile="urn:dece:type:mediaprofile:hd" xsi:type="ns4:ResourceLocation-type">   
                                <ns4:Location>https://dl.bestbuy.com/p/streaminglink</ns4:Location>                                
                                <ns4:Preference>3</ns4:Preference> 
</ns4:StreamWebLoc> 
<ns4:StreamWebLoc MediaProfile="urn:dece:type:mediaprofile:sd" xsi:type="ns4:ResourceLocation-type">    
                                <ns4:Location>https://dl.bestbuy.com/p/streaminglink</ns4:Location>                                
                                <ns4:Preference>3</ns4:Preference> 
</ns4:StreamWebLoc>

                <ns4:PurchaseInfo>
                                <ns4:NodeID>urn:dece:org:org:dece:${#TestCase#nodeid}</ns4:NodeID>
                                <ns4:RetailerTransaction>RetailerTransaction_1_node0799_RetailerNode</ns4:RetailerTransaction>
                                <ns4:PurchaseAccount>urn:dece:accountid:org:dece:${#TestCase#assertionAccountId}</ns4:PurchaseAccount>
                                <ns4:PurchaseUser>urn:dece:userid:org:dece:${#TestCase#assertionUserId}</ns4:PurchaseUser>
                                <ns4:PurchaseTime>2011-06-24T15:12:03.000</ns4:PurchaseTime>
                </ns4:PurchaseInfo>
</ns4:RightsTokenData>
]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract RightsToken Handle from API Result" id="6444f827-d051-40ff-8c1c-8e0dd04c7316"><con:settings/><con:config><script>import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def tStep  = testCase.getTestStepByName('POST - RightsTokenCreate');
def targetHost = testProject.getPropertyValue("targetHost");
def nodeaccountId = testCase.getPropertyValue("assertionAccountIdFULL");
def urnRightsToken = testProject.getPropertyValue("urnRightsToken");
def urnAcct = testProject.getPropertyValue("urnaccount");

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = testProject.getPropertyValue("VersionMajor");
String minor = testProject.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
//def a = contentLocation.toURL();
def b = contentLocation;
def urlStr = b;

//Assert the hostname in the URL is correct
//assert b.getHost().matches(targetHost.toString());
//Assert the protocol is correct
//assert b.getProtocol().matches("https");
//Assert the URI is correct
//assert b.getPath().matches("/rest/$major/$minor/Account/$nodeaccountId/RightsToken/$urnRightsToken[0-9, A-F]*")
//contentLocation == urlStr;

//this.log.info "b is " + b.getPath();


//this.log.info "urlStr is " +urlStr;

if(testProject.getPropertyValue("V2") == testProject.getPropertyValue("versionUrlEncode"))
{
int lastColon = urlStr.lastIndexOf('%');
int lastSlash = urlStr.lastIndexOf('/');
rightsid = urlStr.substring(lastColon + 3);
rightsidFULL = urlStr.substring(lastSlash + 1);
testCase.setPropertyValue("rightstokenid",rightsid);
testCase.setPropertyValue("rightstokenidFULL",rightsidFULL);
}
else
{
int lastColon = urlStr.lastIndexOf(':');
int lastSlash = urlStr.lastIndexOf('/');
rightsid = urlStr.substring(lastColon + 1);
rightsidFULL = urlStr.substring(lastSlash + 1);
testCase.setPropertyValue("rightstokenid",rightsid);
testCase.setPropertyValue("rightstokenidFULL",rightsidFULL);
}



</script></con:config></con:testStep><con:testStep type="groovy" name="Return RightsToken to calling Test Case" id="2a3b6c3b-426b-4b73-93d6-5b9f80ac08d4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def count = tC.getPropertyValue("counter");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("rightstokenid",tC.getPropertyValue("rightstokenid"));
callTC.setPropertyValue("rightstokenid_" + count,tC.getPropertyValue("rightstokenid"));
callTC.setPropertyValue("rightstokenidFULL",tC.getPropertyValue("rightstokenidFULL"));
callTC.setPropertyValue("rightstokenidFULL_" + count,tC.getPropertyValue("rightstokenidFULL"));</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value>14E094CA5C71068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>accountrowid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_561393521.txt</con:value></con:property><con:property><con:name>assert</con:name><con:value>pVZbc+I6DP4rTPaxE3IhXJIpzFAubVp6DaXdvnSMI8Bt4kDsQMqvP3aAFCjtYXefMlZk6ZP0WdIpQ2FgOk3GIOYkooU0DChzMmldSWLqRIgR5lAUAnM4drzmdc8xi7qDNleUgtuuK6/DCjZHholUH5dN1SrbQ9XWa1UV+cPh0LYt0GuGUGUsAZcyjiivK6ZulFXdUk27b1Scku2UykWzZL0ohQHETNgWKkVdWYNKWV2ZcD51NG2xWBQXpWIUjzVT1w3t+brn4QmESGmcriLKHMWNtT4u+oAhCHARR6F2qu3onPrM8ciYIp7EsPblf+dL13RbEzo+I+NfSn4XfJeOouzYQjSiBKOALJHMzzXwSeQXmsE4igmfhN8GYejSsAopVrFh0V+KtgvtSEM7CGOGVDZBxtrWA4wgBoqh8Pjg1pVfx1Utu9qPEWWjKA7Z7vHP8ACdQxBNwVfZJqw1tOMNHshU4xSw41IcJIzM4UaSdYowsHU1AR9vqnAXw4ikPcIEQVMm0Wnb8PaOq2y0yRgY/5sCbRVnZWSAggQa4dwzUAfD/VnoJqn9fNMbNJc8urKf9XoGYFs5E+SlXR33SJmTaHVjeek9D1h00nEXs3IL37lhVb+sWo/8zWuO/PEZSfXzMuWV5Oopvazw69tbmC7OvKvbuPR0o3VZLe5fpCe/tYvJ5bA/KPe96/c3Y0kWF53xEibarFIeN82Pk5OQosHL1Hox3ujNwl6S7vKp+fZ4f/+Snt/Unr3byvKxV/X1i/NSxfPvZ+lJ+vabXswH1oX18nI5Xpx13Xoezhb+XdnmzXvJ8A0w3xwlDdx2oSuqhPjPzUxKiK+OMlVnKpsP40C50pC3ZO9wEtHuiO+IGq7OhtXRK62S3e1225bdqXX0ckkv27bR1ZuVVquyaTIrFHsQWxEdEelLttwVbX4GiEOHAfUhVudRIjodU36w2EYcFVz6IB5BRBn0I9GejXkYvFenPhmZpBpPqslcp+MPvxQohZuI39LbuDniEO/2ZHunJz8AJlMCsnFLXjNBbMZFLmZonvDAKM5RkUIiWnssu6xjWrWyxkg4DUAi1cLITwIoTifTLDMaW31NFWGWSR86/ey1fRvX/r9NCoSOT6QCk7GcgSgjHBgu5iaQLwFXDg6hjflm4hP5sEQ+eUzwCsnur0+aSH7kHGn3mt7dBnSu+wd3X1veq/GXBnr/4Lz3r85FLb/e1H7Ip7ZfytyRPydbbjdbh5hfouM1NkScIaM4KybzeZJxz7JKWizMa5IEmm5qHuBE9OSPfvQOVMutaEcNwBz4nvNcvgsx4RPqccQhFG+lkB2P2Hg8YHLjccUjT49dp3ZcitRxSPkhWSsQ25pE/ONChx0s9YT4TnwWUex/VuyArS0/Ik6x8HBCx/Ikh9/HN7zAkTBLRNuO4m3jhwwccr4rzJOcY+GCUMOEw/d/CrIf1xWEcZRQ7raVTLA9IzKc/GMKzqfSFzPZGMr3UvL/i6lKMgpgENssI5l9uV448gnQ8dacWTvdHzW21WqWW1Vdr9S62aiprkZN56xl5UnZQdf4Iv4q2crTPscb/wE=</con:value></con:property><con:property><con:name>assertId</con:name><con:value/></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_344946277.txt</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79609</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14E094CA5C78068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rtrnodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>sName</con:name><con:value>Coordinator Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_66700 - StreamListView - COORDINATORCS - API invocation after StreamRenew by Full User_FLAKY</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>useroid</con:name><con:value>14E06C39FFFE49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>userrowid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamView" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="49650827-5596-4409-827a-913a14a634d4" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ee9bf7dd-1b9d-48b4-b709-e169c4e29862"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeStreamView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectGenericRightsToken",null);
tC.setPropertyValue("recvCreationDate",null);
tC.setPropertyValue("recvExpirationDateTime",null);
tC.setPropertyValue("streamViewIgnoreDateDiff",null);
tC.setPropertyValue("streamViewIgnoreCreateDateDiff",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="c1b34355-8111-400c-b191-30db565effe1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("expectErrTypeStreamView",callTC.getPropertyValue("expectErrTypeStreamView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("streamViewIgnoreDateDiff",callTC.getPropertyValue("streamViewIgnoreDateDiff"));
tC.setPropertyValue("streamViewIgnoreCreateDateDiff",callTC.getPropertyValue("streamViewIgnoreCreateDateDiff"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypeStreamView") == null || tC.getPropertyValue("expectErrTypeStreamView") == "") {
	tC.setPropertyValue("expectErrTypeStreamView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("streamViewIgnoreDateDiff") == null || tC.getPropertyValue("streamViewIgnoreDateDiff") == "null") {
	tC.setPropertyValue("streamViewIgnoreDateDiff","false")
}
if (tC.getPropertyValue("streamViewIgnoreCreateDateDiff") == null || tC.getPropertyValue("streamViewIgnoreCreateDateDiff") == "null") {
	tC.setPropertyValue("streamViewIgnoreCreateDateDiff","false")
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract STREAM_DATA_HISTORY row if Required" id="db195ef3-6ba5-48f5-b185-327dc4c867b2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("expectErrTypeStreamView") == "SUCCESS") {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

	String sh = tC.getPropertyValue("streamhandle");
	String results = null;
	String sql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh')""";

	  log.info "sql is $sql";

	results = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem").toString());
	log.info results;

	/*
	*  If zero length, no need to continue;
	*/
	assert results.length() > 0;

	try {
		def myXML = new XmlSlurper().parseText(results);
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		assert myXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", results);
	}
}

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="2224618c-796f-43b4-b5cc-304ffb113c59"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamView" id="e2e32f22-914d-45d2-a976-ac24661c705a"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamView" mediaType="application/xml" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="af873c7f-45d4-419d-9c90-ac836a999341"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - StreamView');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="71859508-99d5-4b61-8d25-0efa398cc456"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	case	"USER_PRIVILEGE_ACCESS_RESTRICTED":
	     errId = "UserPrivilegeAccessRestricted";
		break;

}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="b304aadf-67a3-48d4-8e28-661eccee71b5"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "-" + cdateMatcher.group(2) + "-" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}


def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnError");
def acct = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def account         = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType   = tC.getPropertyValue("expectErrTypeStreamView");
def XMLbody         = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectStatus    = tC.getPropertyValue("expectDBStatus");
def expectRT        = tC.getPropertyValue("rightstokenidFULL");
def expectSH        = tC.getPropertyValue("streamhandleFULL");
def expectNickname  = tC.getPropertyValue("expectNickname");
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String expectDescription = "";
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag = true;
boolean processXMLFlag = true;
boolean XMLbodynull = false;


switch (expectStatus) {
	case "active":
		expectDescription = "active";
	break;
	default:
		expectDescription = "deleted";
	break;
}

/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

String errorID = "";
String errorReason = "";
String errorLink  = "";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
////assert tC.getPropertyValue("httpContentLength").toInteger() > 0;

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";
if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS") {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		/*
		* Do expected element sizes first.
		*/
		def ResourceStatusSize = myXML.ResourceStatus.size();
		def CurrentSize = myXML.ResourceStatus.Current.size();
		def ValueSize = myXML.ResourceStatus.Current.Value.size();
		def DescriptionSize = myXML.ResourceStatus.Current.Description.size();
		def RightsTokenIDSize = myXML.RightsTokenID.size();
		def ExpirationDateTimeSize = myXML.ExpirationDateTime.size();
		def recvCreationDate = myXML.ResourceStatus.Current.@CreationDate.text();
		def recvExpirationDateTime = myXML.ExpirationDateTime.toString();
		def recvDeletionDateTime = myXML.ResourceStatus.Current.@DeletionDate.text();
		
		this.log.info "ResourceStatusSize [$ResourceStatusSize] Expect 1";
		this.log.info "CurrentSize [$CurrentSize] Expect 1";
		this.log.info "ValueSize [$ValueSize] Expect 1";
		this.log.info "DescriptionSize [$DescriptionSize] Expect 1";
		this.log.info "RightsTokenIDSize [$RightsTokenIDSize] Expect 1";
		this.log.info "ExpirationDateTimeSize [$ExpirationDateTimeSize] Expect 1";
		assert ResourceStatusSize == 1;
		assert CurrentSize == 1;
		assert ValueSize == 1;
		assert DescriptionSize == 1;
		assert RightsTokenIDSize == 1;
		assert ExpirationDateTimeSize == 1;

		/*
		*  Save the returned values as TC properities for validations
		*  outside this script.
		*/
		tC.setPropertyValue("recvCreationDate",recvCreationDate);
		tC.setPropertyValue("recvDeletionDateTime",recvDeletionDateTime);
		tC.setPropertyValue("recvExpirationDateTime",recvExpirationDateTime);
		
		/*
		*   Lengths
		*/
		assert myXML.ExpirationDateTime.text().length() > 0;
		assert myXML.ResourceStatus.Current.@CreationDate.toString().length() > 0;

		/*  StreamHandle */
		def StreamHandleID = myXML.@StreamHandleID.toString();
		this.log.info "StreamHandleID[$StreamHandleID] - expectSH[$expectSH]";
		assert expectSH == StreamHandleID;

		/*  DeletedBy  */
		def DeletedByValue = myXML.ResourceStatus.Current.@DeletedBy.toString();
		if (expectStatus != "active") {
			this.log.info "DeletedByValue[$DeletedByValue] - expectDeletedBy[$expectDeletedBy]";
			assert expectDeletedBy == DeletedByValue;
		} else {
			this.log.info "Assert no DeletedBy Exists";
			assert DeletedByValue == "";
		}

		/*  CreatedBy  */
		def CreatedByValue = myXML.ResourceStatus.Current.@CreatedBy.toString();
		this.log.info "CreatedByValue[$CreatedByValue] - expectCreatedBy[$expectCreatedBy]";
		assert expectCreatedBy == CreatedByValue;

		/*  status value */
		def Value = myXML.ResourceStatus.Current.Value.text().toString();
		this.log.info "Value[$Value] - expectStatus[$expectStatus]";
		assert expectStatus == Value;

		/*  Description */
		def Description = myXML.ResourceStatus.Current.Description.text().toString();
		this.log.info "Description[$Description] - expectDescription[$expectDescription]";
		assert Description == expectDescription;

		/*  RightsToken */
		def RightsTokenID = myXML.RightsTokenID.text().toString();
		this.log.info "RightsTokenID[$RightsTokenID] - expectRT[$expectRT]";
		assert expectRT == RightsTokenID;

		/*  Stream Nickname  */
		def StreamClientNicknameSize = myXML.StreamClientNickname.size();
		def expectNickSize = 0;
		if (expectNickname != null && expectNickname.length() > 0) {
			expectNickSize = 1;
			StreamClientNickname = myXML.StreamClientNickname.text();
		} else {
			StreamClientNickname = null;
		}
		this.log.info "StreamClientNicknameSize[$StreamClientNicknameSize] - expectNickSize[$expectNickSize]";
		this.log.info "StreamClientNickname[$StreamClientNickname] - expectNickname[$expectNickname]";
		assert StreamClientNicknameSize == expectNickSize;
		assert StreamClientNickname == expectNickname;

		/*
		*
		*  History validation
		*/
		def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

		int rCnt = myHistoryXML.ResultSet.Row.size();

		log.info "-------------HISTORY-----------------";
		log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
		if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
			rCnt -= 1;
		} 
		assert myXML.ResourceStatus.History.Prior.size() == rCnt;
		
		for (int i = 0; i < rCnt; i++) {
			String hrecvModifiedBy = myXML.ResourceStatus.History.Prior[i].@ModifiedBy.text();
			String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
			log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
			assert hrecvModifiedBy == hexpectModifiedBy;

			String hrecvStatus = myXML.ResourceStatus.History.Prior[i].Value;
			String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
			log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
			assert hrecvStatus == hexpectStatus;

			String hrecvDescription = myXML.ResourceStatus.History.Prior[i].Description;
			switch (hexpectStatus) {
				case "active": hexpectDescription = "active"; break;
				case "deleted": hexpectDescription = "deleted"; break;
				default: hexpectDescription = "deleted"; break;
			}
			log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
			assert hrecvDescription == hexpectDescription;

			String hrecvModificationDate = formatDate(myXML.ResourceStatus.History.Prior[i].@ModificationDate.text());
			int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
			String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
			log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
			assert hrecvModificationDate == hexpectModificationDate;
		}
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Verify difference between CreationDate and sysDate() less than 5 minutes" id="a44f48ac-ae05-418e-b093-c0c7bf8f08df" disabled="true"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

log.info "expectErrTypeStreamView is " + tC.getPropertyValue("expectErrTypeStreamView");

if (tC.getPropertyValue("expectErrTypeStreamView") == "SUCCESS" &amp;&amp;
	tC.getPropertyValue("streamViewIgnoreCreateDateDiff") != "true") {
	String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
	String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
	String sqlResultXML = "";
	String cDate = "";
	String tod = "";

	try {
		a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
		sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
		log.info "sqlResultXML[$sqlResultXML]";

		if (sqlResultXML.length() > 0) {
			def myXML = new XmlSlurper().parseText(sqlResultXML);
			tod = myXML.ResultSet.Row.TOD;
			log.info "tod[$tod]";
		}
	}
	catch (Throwable e) {
		log.info "sql[$sql]";
		log.info "dbUtils request failed! - " + e;
		assert 1 == 2;
	}

	try {
	
		log.info "recvCdate[$recvCdate]";
		log.info "tod[$tod]";
	
		cDate = formatDate(recvCdate);
	
		def a = new generalUtils.generalUtils(log);
		def j = a.dateDiff(cDate,tod,"seconds");
	
		log.info "cDate[$cDate]";
		log.info "tod[$tod]";
		log.info "j[$j]";
	}
	catch (Throwable e) {
		log.info "Matcher Failure: " + e;
	}
	finally {
		/*
		*  Assert the difference between Creation Time and sysdate
		*  is less than 5 minutes.
		*/
		assert j &lt;= 300;
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify difference between DeletedDate and sysDate() less than 5 minutes" id="2e314026-35a8-49e4-bee2-7cbf222a4ac4" disabled="true"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

log.info "expectErrTypeStreamView is " + tC.getPropertyValue("expectErrTypeStreamView");


if ( tC.getPropertyValue("expectDBStatus") == "deleted" &amp;&amp;
	tC.getPropertyValue("expectErrTypeStreamView") == "SUCCESS" &amp;&amp;
	tC.getPropertyValue("streamViewIgnoreDeletionDateDiff") != "true") {
	String recvDdate = tC.getPropertyValue("recvDeletionDateTime").toString();
	String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
	String sqlResultXML = "";
	String cDate = "";
	String tod = "";

	try {
		a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
		sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
		log.info "sqlResultXML[$sqlResultXML]";

		if (sqlResultXML.length() > 0) {
			def myXML = new XmlSlurper().parseText(sqlResultXML);
			tod = myXML.ResultSet.Row.TOD;
			log.info "tod[$tod]";
		}
	}
	catch (Throwable e) {
		log.info "sql[$sql]";
		log.info "dbUtils request failed! - " + e;
		assert 1 == 2;
	}

	try {
	
		log.info "recvDdate[$recvDdate]";
		log.info "tod[$tod]";
	
		cDate = formatDate(recvDdate);
	
		def a = new generalUtils.generalUtils(log);
		def j = a.dateDiff(cDate,tod,"seconds");
	
		log.info "cDate[$cDate]";
		log.info "tod[$tod]";
		log.info "j[$j]";
	}
	catch (Throwable e) {
		log.info "Matcher Failure: " + e;
	}
	finally {
		/*
		*  Assert the difference between Deletion Time and sysdate
		*  is less than 5 minutes.
		*/
		assert j &lt;= 300;
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify difference between returned Create/Expire time less than 24 hours" id="2b8cd256-6d2c-47fe-942c-503aae16efa1"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String recvEdate = tC.getPropertyValue("recvExpirationDateTime");
String cDate = "";
String eDate = "";
int streamMaxCreateExpireTimeDiffhours = tP.getPropertyValue("streamMaxCreateExpireTimeDiffhours").toInteger();


def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
log.info "expectErrTypeStreamView is " + tC.getPropertyValue("expectErrTypeStreamView");

if (tC.getPropertyValue("expectErrTypeStreamView") == "SUCCESS" &amp;&amp;
    tC.getPropertyValue("streamViewIgnoreDateDiff") == "false") {
	try {
	
		log.info "recvCdate[$recvCdate]";
		log.info "recvEdate[$recvEdate]";
		
		cDate = formatDate(recvCdate);
		eDate = formatDate(recvEdate);

		def a = new generalUtils.generalUtils(log);
		def j = a.dateDiff(cDate,eDate);
	
		log.info "cDate[$cDate]";
		log.info "eDate[$eDate]";
		log.info "j[$j]";
	}
	catch (Throwable e) {
		log.info "Matcher Failure: " + e;
	}
	finally {
		/*
		*  Assert the difference between Creation Time and Expire Time
		*  is less than 24 hours.
		*/
		assert j &lt;= streamMaxCreateExpireTimeDiffhours;
	}
}</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZbU+JKEH73V6Syj1bIhXBLCVUQiAcXxCVqWefFGiYdGE1mYmbCxV+/k2AQED3unqfUdHq6v77M133BURxZTpdzSAVhVBn22+pjaNqtBg4szWwirNkzq6bNrEZdMxohblqm1bDDmaoMOc9gSLlAVLRVyzCrmmnKK7dG3alZTrVWsavWv6pyDymXpqVKxVCVdRxR7hRu22qWUochTrhDUQzcEdjxu+ORIzUdVGJSOxdblIXDtLMQInF0HVcCwBBFuIJZrF/oBzoXAXd8MqdIZCm8+Qx4W327u1qtKqtqhaVz3TIMQzdautQJOJn/UDtn5WUIhjRk27OLKKMEo4i8ohzUGMSCBUo3mrOUiEX8iWlTN43ctAZrrGHTpj9U/d1Bge6blg5AphxpfIHM0tgUQkiBYlDupsO2+uN7FdzevU0R5SFLY350/jNIQJcQsQQCjZeRlei+b/FEujoXgJ0hxVHGyRKu8zZJEAau3KQQkvWIcNl8AVeK8itrXnYY4D8pyYW+j1PC1k9kpk/mwMXf1Gu/Vlsr9yjKoPMqhtnPp82QUev5PIH1wmuuksivrqvNdgFhX3kLalfqt/Nxo+766u2Se14dYdxy74Jm6LnRiD+N758fmgYLw94D66JRQBeGHgwM/tyE1erKY9dN1+ubm8sRjG+sZQJZdK4Lu3sVJWfTScqiyeZuPV7ePdiu/Ro06P3lZDLYeJetu+sW9ll9EftT+6r3OnvN0vuITPq/CFzaWXe2JA/JVSbu2Pihcb6anP2ibG0++at/fi43MOmh2GTt95j2YzgUlnTgZ7MnwKI85q0x7CuerBcSX1NLLiGBFhaqTpLzExdAhdrJb+W04mSSfEjgyGJuz4NefeBabrdVr/X75sAbGLZhekbXaLRahuf1Sv7ZojiC6DIaktxXzrDb/vkaII4dDjSAVFuyDC+Aq19Y7COBlCGdyofBKIdbJhm8atpeszGwalWr73r1vls3WlZtUK33qq2eZUsevmZiQidpNxSQHrJ364C9p4BJQiCn+LzPuWx0LmRKXtAyE5FZWaIKhUwOgTTnYceymzWdkziJIAesxyzIIqgki6RIkM63X0tDmBfS6eC2eH+fhnf8r8yE1AlIrsDzWHogqwknxpBVBvIhYPvkuCrNd7OA5M9MplWkBG+RHP5675a8TXat0h91/ZsS9E73D+4+uv6j+ZcGRv/XgKzHx5v6FznRj8uxcxQsyZ7bcpzLCSU5rFM20wuqvFSy5TIr2qeR83MqzeumbjR0H3AmSXZzy56B6jsT+rfm2w71keed/BBfJhbUF0hALJtdKY7fWG584PlyM5SPdf3dzenApcybgLU4JXMjuQPliL9ck7CDcz0pvpGfFUuD93KdsLXnR8YpNxpB6Dw/5dNs80lTYCbNEkm/LN03fsrAKeeHwl2Sd1iE7KZZJuDzP0rOq20VYcwyKoZ9tRDsc32BU2wScN6VPpgp5snbgrDmny4ID+ORL1k3RupOl/y3skaKdsEgb3FSYGmra7nrSud0vjdb3gCeHi+299V4OYyk80H8UbKX0+P30PkN</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:EB6EC2CA964FD1EFE0401F0A07990FFB</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:EB6EC2CA965DD1EFE0401F0A07990FFB</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeStreamView</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1079</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>password</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">testing</con:value></con:property><con:property><con:name>recvCreationDate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013-11-18T08:48:49.357Z</con:value></con:property><con:property><con:name>recvExpirationDateTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013-11-18T14:48:49.357Z</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:EB703AD5D82C4750E0401F0A07996EED</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DECE Customer Support Test Cases</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">EB703AD5D8404750E0401F0A07996EED</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:EB703AD5D8404750E0401F0A07996EED</con:value></con:property><con:property><con:name>streamViewIgnoreDateDiff</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">TC_DECE_66700 - StreamListView - DECECS - API invocation after StreamRenew by Full User</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ashwin_user_create_20131118_122211</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Stream StreamHandleID="urn:dece:streamhandleid:org:dece:EB703AD5D8404750E0401F0A07996EED" xmlns="http://www.decellc.org/schema/2013/06/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RequestingUserID>urn:dece:userid:org:dece:EB6EC2CA965DD1EFE0401F0A07990FFB</RequestingUserID>
   <RightsTokenID>urn:dece:rightstokenid:org:dece:EB703AD5D82C4750E0401F0A07996EED</RightsTokenID>
   <TransactionID>1.0.1.3.S</TransactionID>
   <ExpirationDateTime>2013-11-18T14:48:49.357Z</ExpirationDateTime>
   <SubDividedGeolocation ViaProxy="urn:dece:type:unknown" CalculationMethod="urn:dece:type:geoloc:other">US 20148</SubDividedGeolocation>
   <ResourceStatus>
      <Current CreatedBy="urn:dece:org:org:dece:DLASP" CreationDate="2013-11-18T08:48:49.357Z">
         <Value>urn:dece:type:status:active</Value>
         <Description>active</Description>
      </Current>
   </ResourceStatus>
</Stream>]]></con:value></con:property><con:property><con:name>streamViewIgnoreCreateDateDiff</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STREAM_HISTORY_OID>EB703AD5D8414750E0401F0A07996EED</STREAM_HISTORY_OID>
      <STREAM_HANDLE_OID>EB703AD5D8404750E0401F0A07996EED</STREAM_HANDLE_OID>
      <RIGHTS_TOKEN_OID>EB703AD5D82C4750E0401F0A07996EED</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>EB6EC2CA9650D1EFE0401F0A07990FFB</ACCOUNT_OID>
      <CREATED_BY_USER_OID>EB6EC2CA965ED1EFE0401F0A07990FFB</CREATED_BY_USER_OID>
      <TRANSACTION_ID>1.0.1.3.S</TRANSACTION_ID>
      <STATUS>active</STATUS>
      <STREAM_CLIENT_NICKNAME>null</STREAM_CLIENT_NICKNAME>
      <EXPIRATION_DATE>2013-11-18 14:48:49.357</EXPIRATION_DATE>
      <CLOSED_DATE>null</CLOSED_DATE>
      <CLOSED_BY_ORG_ID>null</CLOSED_BY_ORG_ID>
      <CREATED_DATE>2013-11-18 08:48:49.357</CREATED_DATE>
      <CREATED_BY_NODE_OID>C0CEF8E08CDCC7D6E0401F0A0599120B</CREATED_BY_NODE_OID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>recvDeletionDateTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79612</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>EB6EC2CA964FD1EFE0401F0A07990FFB</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>EB6EC2CA965DD1EFE0401F0A07990FFB</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\certificates\/DLASP_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamRenew" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="5be18e57-993a-430b-ae63-bb435c7212c6" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="98e68832-12b9-405e-baae-4dc32386ead3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeStreamRenew",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBUpdatedBy",null);
tC.setPropertyValue("streamHistoryRows",null);
if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
{
	testRunner.testCase.getTestStepByName( "PUT - StreamRenew" ).disabled = true;
	testRunner.testCase.getTestStepByName( "Extract Response Body for PUT" ).disabled = true;
}
else
{
	testRunner.testCase.getTestStepByName( "GET - StreamRenew" ).disabled = true;
	testRunner.testCase.getTestStepByName( "Extract Response Body for GET" ).disabled = true;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="769f8f8b-ada8-472f-be45-768f1cff4103"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("expectErrTypeStreamRenew",callTC.getPropertyValue("expectErrTypeStreamRenew"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBUpdatedBy",callTC.getPropertyValue("expectDBUpdatedBy"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
def streamhandleFULLEncoded = URLEncoder.encode(tC.getPropertyValue("streamhandleFULL"),"UTF-8");
tC.setPropertyValue("streamhandleFULLEncoded",streamhandleFULLEncoded)

def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "null") {
	tC.setPropertyValue("expectDBStatus","active");
} 
if (tC.getPropertyValue("expectDBUpdatedBy") == null || tC.getPropertyValue("expectDBUpdatedBy") != "1") {
	tC.setPropertyValue("expectDBUpdatedBy",tC.getPropertyValue("nodeid"));
} 

if (tC.getPropertyValue("expectErrTypeStreamRenew") == null || tC.getPropertyValue("expectErrTypeStreamRenew") == "null") {
	tC.setPropertyValue("expectErrTypeStreamRenew","SUCCESS");
} </script></con:config></con:testStep><con:testStep type="groovy" name="Extract STREAM_DATA_HISTORY row if Required" id="87478b16-699c-4c0c-b884-6b1ed1ff68a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("expectErrTypeStreamRenew") == "SUCCESS") {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

	String sh = tC.getPropertyValue("streamhandle");
	String results = null;
	String sql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$sh')""";

	results = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem").toString());
	log.info results;

	/*
	*  If zero length, no need to continue;
	*/
	assert results.length() > 0;

	try {
		def myXML = new XmlSlurper().parseText(results);
		log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
		assert myXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", results);
	}
}

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="ab938c57-8081-44ea-ac18-f8cc71cf013b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - StreamRenew" id="6d0fb112-6bb9-4d49-a76d-b4af3975d1dd"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" methodName="PUT" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - StreamRenew" mediaType="application/xml" postQueryString="false" sslKeystore="0910_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Stream xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md"       xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#" StreamHandleID="${#TestCase#streamhandleFULL}">       
<RequestingUserID>${#TestCase#assertionUserIdFULL}</RequestingUserID>       
<RightsTokenID>${#TestCase#rightstokenidFULL}</RightsTokenID>        
<ExpirationDateTime>${#Project#ExpirationDateTime}</ExpirationDateTime>        
<SubDividedGeolocation ViaProxy="urn:dece:type:true" Confidence="1" CalculationMethod="urn:dece:type:geoloc:networkaddress">US 20148</SubDividedGeolocation> </Stream>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Capture Current DB sysdate()" id="b2d6c12a-2668-49f3-a4ad-9fae441798b8" disabled="true"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("currentDBTOD",null);

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
String sqlResultXML = "";
String cDate = "";
String tod = "";

try {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
	sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
	log.info "sqlResultXML[$sqlResultXML]";

	if (sqlResultXML.length() > 0) {
		def myXML = new XmlSlurper().parseText(sqlResultXML);
		tod = myXML.ResultSet.Row.TOD;
		log.info "tod[$tod]";
	}

}
catch (Throwable e) {
	log.info "sql[$sql]";
	log.info "dbUtils request failed! - " + e;
	assert 1 == 2;
}
finally {
	if (tod.length() > 0) {
		tC.setPropertyValue("currentDBTOD", tod);
	}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body for PUT" id="d322150d-181a-40eb-8450-82d9412a9aa7"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('PUT - StreamRenew');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamRenew" id="103ec75a-00ff-4ef6-b0bc-159e99672acf"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{STREAM}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamRenew" mediaType="application/xml" id="39376562-9f83-4137-9a1c-3b494c530976"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body for GET" id="5c908c2d-45be-4c40-a878-e5f5eff9dc11"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - StreamRenew');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="db3197ef-099d-4e33-8bb3-4e0be242047d"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamRenew") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamRenew")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "RENEW_EXCEED_MAX_TIME":
		errId = "StreamRenewExceedsMaximumTime";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	case "USER_PRIVILEGE_ACCESS_RESTRICTED":
		errId = "UserPrivilegeAccessRestricted";
	break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="cad5b386-dc06-4479-bcb5-04c442bf7c96" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("recvCreationDate",null);
tC.setPropertyValue("recvExpirationDateTime",null);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct = tC.getPropertyValue("nodeaccountid");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnError");
def sh = tC.getPropertyValue("streamhandleFULL");
def nodeid  = tC.getPropertyValue("nodeid");
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamRenew");
def XMLbody = tC.getPropertyValue("XMLbody");
def nodetype = tC.getPropertyValue("nodetype");

boolean errorIDFlag = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag = false;
boolean XMLbodynull = false;
boolean httpLocationHeader = false;
boolean processXMLFlag = true;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectDescription = "";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectStreamStatus = tC.getPropertyValue("expectDBStatus");
String received;


switch (expectStreamStatus) {
	case "active":
		expectDescription = "active"; break;
	case "deleted":
		expectDescription = "deleted"; break;
	default:
		expectDescription = "active"; break;
}		


this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 200 OK";
		XMLbodynull = false;
		httpLocationHeader = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "Assertion_Not_Found":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Invalid Assertion";
		errorReason = "Assertion_Not_Found";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	//assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = a.toURL();
	def urlStr = b.getPath();

	assert b.getPath().matches("/rest/$major/$minor/Account/${account}/Stream/$urnstream[0-9, A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}

//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if (XMLbody != null &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
				
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} else {
		String recvStreamHandle = myXML.@StreamHandleID.text();
		String RequestingUserID = myXML.RequestingUserID;
		String RightsTokenID = myXML.RightsTokenID;
		String recvExpirationDateTime = myXML.ExpirationDateTime;
		String Value = myXML.ResourceStatus.Current.Value;
		String recvDescription = myXML.ResourceStatus.Current.Description;
		String recvCreatedBy = myXML.ResourceStatus.Current.@CreatedBy.text();
		String recvModifiedBy = myXML.ResourceStatus.Current.@ModifiedBy.text();
		String recvCreationDate = myXML.ResourceStatus.Current.@CreationDate.text();

		tC.setPropertyValue("recvCreationDate",recvCreationDate);
		tC.setPropertyValue("recvExpirationDateTime",recvExpirationDateTime);
		
		// StreamHandle ID
		log.info "recvStreamHandle[$recvStreamHandle] - Expect[" + tC.getPropertyValue("streamhandleFULL") + "]";
		assert recvStreamHandle == tC.getPropertyValue("streamhandleFULL");
		//RequestingUserID
		if (tC.getPropertyValue("expectDBCreatedByNodeType") == "llpcs" || tC.getPropertyValue("expectDBCreatedByNodeType") == "dlpcs") {
			log.info "RequestingUserID - expectDBCreatedByNodeType[" + tC.getPropertyValue("expectDBCreatedByNodeType") + "] asserting element not present";
			assert myXML.RequestingUserID.size() == 0;
			assert RequestingUserID == "";
		} else {
			log.info "RequestingUserID[$RequestingUserID] - Expect[" + tC.getPropertyValue("assertionUserIdFULL") + "]";
			assert RequestingUserID == tC.getPropertyValue("assertionUserIdFULL");
		}
		//RightsTokenID
		log.info "RightsTokenID[$RightsTokenID] - Expect[" + tC.getPropertyValue("rightstokenidFULL") + "]";
		assert RightsTokenID == tC.getPropertyValue("rightstokenidFULL");
		//ExpirationDate
		log.info "recvExpirationDateTime[$recvExpirationDateTime] - Size is " + recvExpirationDateTime.size();
		assert recvExpirationDateTime.size() > 0;

		//Value (Status)
		log.info "Value[$Value] - Expect[" + tC.getPropertyValue("expectDBStatus") + "]";
		if (tC.getPropertyValue("expectDBStatus") == "active") {
			assert Value == "urn:dece:type:status:active";
		} else {
			assert Value == "urn:dece:type:status:deleted";
		}
		
		log.info "recvDescription[$recvDescription] - Expect[$expectDescription]";
		assert recvDescription == expectDescription;
		log.info "recvCreatedBy[$recvCreatedBy] - Expect[" + urnnode + tC.getPropertyValue("expectDBCreatedBy") + "]";
		assert recvCreatedBy == urnnode + tC.getPropertyValue("expectDBCreatedBy");
		log.info "recvModifiedBy[$recvModifiedBy] - Expect[" + urnnode + tC.getPropertyValue("expectDBUpdatedBy") + "]";
		assert recvModifiedBy == urnnode + tC.getPropertyValue("expectDBUpdatedBy");

		/*
		*  History validation
		*/
		def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

		int rCnt = myHistoryXML.ResultSet.Row.size();

		log.info "-------------HISTORY-----------------";
		log.info "Row Count is $rCnt";
		log.info "&lt;History> Row Count is " + myXML.ResourceStatus.History.size();

		assert myXML.ResourceStatus.History.Prior.size() == rCnt;

		for (int i = 0; i &lt; rCnt; i++) {
			String hrecvModifiedBy = myXML.ResourceStatus.History.Prior[i].@ModifiedBy.text();
			String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
			log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
			assert hrecvModifiedBy == hexpectModifiedBy;

			String hrecvStatus = myXML.ResourceStatus.History.Prior[i].Value;
			String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
			log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
			if (hexpectStatus == "active") {
				assert hrecvStatus == "urn:dece:type:status:active";
			} else {
				assert hrecvStatus == "urn:dece:type:status:deleted";
			}

			String hrecvDescription = myXML.ResourceStatus.History.Prior[i].Description;
			switch (hexpectStatus) {
				case "active": hexpectDescription = "active"; break;
				case "deleted": hexpectDescription = "deleted"; break;
				default: hexpectDescription = "deleted"; break;
			}
			log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
			assert hrecvDescription == hexpectDescription;
		}
	}
} 

</script></con:config></con:testStep><con:testStep type="groovy" name="Assert different between returned Create/Expire time less than 24 hours" disabled="true" id="a1d91a87-7933-411c-adb6-8e8f72d61840"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String recvEdate = tC.getPropertyValue("recvExpirationDateTime");
String cDate = "";
String eDate = "";
int streamMaxCreateExpireTimeDiffhours = tP.getPropertyValue("streamMaxCreateExpireTimeDiffhours").toInteger();

//if(tC.getPropertyValue("expectErrTypeStreamRenew") != "USER_PRIVILEGE_ACCESS_RESTRICTED"){
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

try {
	
	log.info "recvCdate[$recvCdate]";
	log.info "recvEdate[$recvEdate]";
	
	cDate = formatDate(recvCdate);
	eDate = formatDate(recvEdate);

	def a = new generalUtils.generalUtils(log);
	def j = a.dateDiff(cDate,eDate);
	
	log.info "cDate[$cDate]";
	log.info "eDate[$eDate]";
	log.info "j[$j]";
}
catch (Throwable e) {
	log.info "Matcher Failure: " + e;
}
finally {
	/*
	*  Assert the difference between Creation Time and Expire Time
	*  is less than 24 hours.
	*/
	assert j &lt;= streamMaxCreateExpireTimeDiffhours;
}

//}
/*
try {
	log.info "recvCdate[$recvCdate]";
	log.info "recvEdate[$recvEdate]";
	Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
	Matcher cdateMatcher = datePattern.matcher(recvCdate);
	if (cdateMatcher.find()) {
		cDate = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
			cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
			cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
		log.info "cDate[$cDate]";
	} 
	Matcher edateMatcher = datePattern.matcher(recvEdate);
	if (edateMatcher.find()) {
		cDate = edateMatcher.group(1) + "/" + edateMatcher.group(2) + "/" +
			edateMatcher.group(3) + " " + edateMatcher.group(4) + ":" +
			edateMatcher.group(5) + ":" + edateMatcher.group(6);
		log.info "eDate[$eDate]";
	} 
}
catch (Throwable e) {
	log.info "Matcher Failure: " + e;
}
log.info "cDate[$cDate]";

public class DateMatcher
{
  public DateMatcher()
  {
    String aDate = "date: 12-15-2003";
    Pattern datePattern = Pattern.compile("date: (\\d{2})-(\\d{2})-(\\d{4})");
    Matcher dateMatcher = datePattern.matcher(aDate);
    if (dateMatcher.find())
    {
      System.out.println("Month is: " + dateMatcher.group(1));
      System.out.println("Day is:   " + dateMatcher.group(2));
      System.out.println("Year is:  " + dateMatcher.group(3));
    }
  }

  public static void main(String[] args)
  {
    new DateMatcher();
  }
}
*/</script></con:config></con:testStep><con:testStep type="groovy" name="Return attributes to calling Test Case" id="8eeed0e7-b82d-4b37-a3a1-0e4efb0d1007"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String count = tC.getPropertyValue("counter").toString();


tC.setPropertyValue("expectDBUpdatedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBUpdatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBRenewedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
callTC.setPropertyValue("expectDBUpdatedBy_" + count,tC.getPropertyValue("expectDBUpdatedBy_" + count));
callTC.setPropertyValue("expectDBUpdatedBy",tC.getPropertyValue("expectDBUpdatedBy"));
callTC.setPropertyValue("expectDBUpdatedTime_" + count,tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectDBUpdatedTime",tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectDBRenewedBy",tC.getPropertyValue("expectDBRenewedBy"));
callTC.setPropertyValue("expectDBRenewedBy_" + count,tC.getPropertyValue("expectDBRenewedBy_" + count));
callTC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("expectDBModifiedBy_" + count));
callTC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("expectDBModifiedBy"));
</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="9d57525e-1078-4d69-b2a6-fbe6dde7d711"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="groovy" name="Enable test steps" id="707a2b6d-c56d-4a1d-b26f-92047fd6a217"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

	testRunner.testCase.getTestStepByName( "PUT - StreamRenew" ).disabled = false;
	testRunner.testCase.getTestStepByName( "Extract Response Body for PUT" ).disabled = false;


	testRunner.testCase.getTestStepByName( "GET - StreamRenew" ).disabled = false;
	testRunner.testCase.getTestStepByName( "Extract Response Body for GET" ).disabled = false;
</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Stream StreamHandleID="urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
   <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</RightsTokenID>
   <ExpirationDateTime>2015-04-30T00:41:13.133Z</ExpirationDateTime>
   <SubDividedGeolocation Confidence="1" CalculationMethod="urn:dece:type:geoloc:networkaddress" ViaProxy="urn:dece:type:true">US 20148</SubDividedGeolocation>
   <ResourceStatus>
      <Current CreationDate="2015-04-29T17:07:58.485Z" CreatedBy="urn:dece:org:org:dece:DLASP" ModificationDate="2015-04-29T17:08:27.840Z" ModifiedBy="urn:dece:org:org:dece:DLASP">
         <Value>urn:dece:type:status:active</Value>
         <Description>active</Description>
      </Current>
   </ResourceStatus>
</Stream>]]></con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>tokentype</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">TC_DECE_66700 - StreamListView - COORDINATORCS - API invocation after StreamRenew by Full User_FLAKY</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STREAM_HISTORY_OID>14E0B4D0EF3D4E7CE05307991F0A3D7C</STREAM_HISTORY_OID>
      <STREAM_HANDLE_OID>87BFFF0A641F457D90A2A0DA60FF44FC</STREAM_HANDLE_OID>
      <RIGHTS_TOKEN_OID>14E0F93AC1CC5B76E05305991F0AEF81</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>14E094CA5C71068FE05307991F0AEBC4</ACCOUNT_OID>
      <CREATED_BY_USER_OID>14E06C39FFFE49E8E05305991F0A6CC6</CREATED_BY_USER_OID>
      <TRANSACTION_ID>1.0.1.3.S</TRANSACTION_ID>
      <STATUS>active</STATUS>
      <STREAM_CLIENT_NICKNAME>null</STREAM_CLIENT_NICKNAME>
      <EXPIRATION_DATE>2015-04-29 23:07:58.571</EXPIRATION_DATE>
      <CLOSED_DATE>null</CLOSED_DATE>
      <CLOSED_BY_ORG_ID>null</CLOSED_BY_ORG_ID>
      <CREATED_DATE>2015-04-29 17:07:58.571</CREATED_DATE>
      <CREATED_BY_NODE_OID>C0CEF8E08CDCC7D6E0401F0A0599120B</CREATED_BY_NODE_OID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Coordinator Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>recvExpirationDateTime</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013-11-18T17:31:21.678Z</con:value></con:property><con:property><con:name>recvCreationDate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013-11-18T10:00:34.714Z</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>expectErrTypeStreamRenew</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>expectDBUpdatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBRenewedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>currentDBTOD</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/11/15 09:59:13</con:value></con:property><con:property><con:name>counter</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZbc+I6DP4rTPaxE3IhXJIpzFAubVp6DaXdvnSMI8Bt4kDsQMqvP3aAFCjtYXefMlZk6ZP0WdIpQ2FgOk3GIOYkooU0DChzMmldSWLqRIgR5lAUAnM4drzmdc8xi7qDNleUgtuuK6/DCjZHholUH5dN1SrbQ9XWa1UV+cPh0LYt0GuGUGUsAZcyjiivK6ZulFXdUk27b1Scku2UykWzZL0ohQHETNgWKkVdWYNKWV2ZcD51NG2xWBQXpWIUjzVT1w3t+brn4QmESGmcriLKHMWNtT4u+oAhCHARR6F2qu3onPrM8ciYIp7EsPblf+dL13RbEzo+I+NfSn4XfJeOouzYQjSiBKOALJHMzzXwSeQXmsE4igmfhN8GYejSsAopVrFh0V+KtgvtSEM7CGOGVDZBxtrWA4wgBoqh8Pjg1pVfx1Utu9qPEWWjKA7Z7vHP8ACdQxBNwVfZJqw1tOMNHshU4xSw41IcJIzM4UaSdYowsHU1AR9vqnAXw4ikPcIEQVMm0Wnb8PaOq2y0yRgY/5sCbRVnZWSAggQa4dwzUAfD/VnoJqn9fNMbNJc8urKf9XoGYFs5E+SlXR33SJmTaHVjeek9D1h00nEXs3IL37lhVb+sWo/8zWuO/PEZSfXzMuWV5Oopvazw69tbmC7OvKvbuPR0o3VZLe5fpCe/tYvJ5bA/KPe96/c3Y0kWF53xEibarFIeN82Pk5OQosHL1Hox3ujNwl6S7vKp+fZ4f/+Snt/Unr3byvKxV/X1i/NSxfPvZ+lJ+vabXswH1oX18nI5Xpx13Xoezhb+XdnmzXvJ8A0w3xwlDdx2oSuqhPjPzUxKiK+OMlVnKpsP40C50pC3ZO9wEtHuiO+IGq7OhtXRK62S3e1225bdqXX0ckkv27bR1ZuVVquyaTIrFHsQWxEdEelLttwVbX4GiEOHAfUhVudRIjodU36w2EYcFVz6IB5BRBn0I9GejXkYvFenPhmZpBpPqslcp+MPvxQohZuI39LbuDniEO/2ZHunJz8AJlMCsnFLXjNBbMZFLmZonvDAKM5RkUIiWnssu6xjWrWyxkg4DUAi1cLITwIoTifTLDMaW31NFWGWSR86/ey1fRvX/r9NCoSOT6QCk7GcgSgjHBgu5iaQLwFXDg6hjflm4hP5sEQ+eUzwCsnur0+aSH7kHGn3mt7dBnSu+wd3X1veq/GXBnr/4Lz3r85FLb/e1H7Ip7ZfytyRPydbbjdbh5hfouM1NkScIaM4KybzeZJxz7JKWizMa5IEmm5qHuBE9OSPfvQOVMutaEcNwBz4nvNcvgsx4RPqccQhFG+lkB2P2Hg8YHLjccUjT49dp3ZcitRxSPkhWSsQ25pE/ONChx0s9YT4TnwWUex/VuyArS0/Ik6x8HBCx/Ikh9/HN7zAkTBLRNuO4m3jhwwccr4rzJOcY+GCUMOEw/d/CrIf1xWEcZRQ7raVTLA9IzKc/GMKzqfSFzPZGMr3UvL/i6lKMgpgENssI5l9uV448gnQ8dacWTvdHzW21WqWW1Vdr9S62aiprkZN56xl5UnZQdf4Iv4q2crTPscb/wE=</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79614</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3A87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>103ec75a-00ff-4ef6-b0bc-159e99672acf</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5c908c2d-45be-4c40-a878-e5f5eff9dc11</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="e54bb187-d10a-4732-b36e-a3effd842511" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9875426b-1248-4194-be01-553abecc95cf"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="09242be7-830c-49af-9161-ad4ab02b96ad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Policy &lt;dece:Resource> XML" id="ada66c0f-ba61-43e5-9f23-9d523a95626f"><con:settings/><con:config><script><![CDATA[
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

	
mmpaRatingsUS = ["us:mpaa:g","us:mpaa:pg","us:mpaa:pg-13","us:mpaa:r","us:mpaa:nc-17"];
tvpgRatingsUS = ["us:tvpg:tv-y","us:tvpg:tv-y7","us:tvpg:tv-g","us:tvpg:tv-pg","us:tvpg:tv-14","us:tvpg:tv-ma"];
tvpgRatingsreasoncodesUS = ["us:tvpg:v","us:tvpg:s","us:tvpg:l","us:tvpg:d","us:tvpg:fv"];
fabUS = ["us:fab:c","us:fab:f","us:fab:pd","us:fab:pd-m","us:fab:em","us:fab:ao"];
fabreasoncodesUS = ["us:fab:violence","us:fab:frightening","us:fab:sexual","us:fab:mildlang","us:fab:stronglang","us:fab:substance","us:fab:intense","us:fab:bnudity","us:fab:fnudity","us:fab:explicit","us:fab:erotica"];
esrbgamesUS = ["us:esrb:ec","us:esrb:e","us:esrb:e10+","us:esrb:t","us:esrb:m","us:esrb:ao","us:esrb:rp"];
mpaattrailersUS = ["us:mpaat:gb","us:mpaat:rb"];
tvmovieRatingsGB = ["gb:bbfc:u","gb:bbfc:pg","gb:bbfc:12","gb:bbfc:15","gb:bbfc:18","gb:bbfc:r18"];
chvrsRatingsCA = ["ca:chvrs:g","ca:chvrs:pg","ca:chvrs:14a","ca:chvrs:18a","ca:chvrs:r"];
cbscRatingsCA = ["ca:cbsc:c","ca:cbsc:c8","ca:cbsc:g","ca:cbsc:pg","ca:cbsc:14+","ca:cbsc:18+"];
filmtvifcoIE = ["ie:ifco:g","ie:ifco:pg","ie:ifco:12","ie:ifco:15","ie:ifco:18"];
filmtvncsAU = ["au:ncs:g","au:ncs:pg","au:ncs:m","au:ncs:ma15","au:ncs:r18"];
filmtvoflcNZ = ["nz:oflc:g","nz:oflc:pg","nz:oflc:m","nz:oflc:rp13","nz:oflc:r13","nz:oflc:r15","nz:oflc:rp16","nz:oflc:r16","nz:oflc:r18","nz:oflc:r"];
MocRatingFR = ["FR:MOC:U","FR:MOC:10","FR:MOC:12","FR:MOC:16","FR:MOC:18"];
FSKRatingDE = ["DE:FSK:0","DE:FSK:6","DE:FSK:12","DE:FSK:16","DE:FSK:18"];
FSKRatingAT = ["AT:FSK:0","AT:FSK:6","AT:FSK:12","AT:FSK:16","AT:FSK:18"];
FSKRatingCH = ["CH:FSK:0","CH:FSK:6","CH:FSK:12","CH:FSK:16","CH:FSK:18"];

String resourceXml = "";
String urnRating   = testProject.getPropertyValue("urnRating");

def resource = testCase.getPropertyValue("policyResource");

switch (resource) {
	case "${urnRating}us:mpaa:g":
	case "${urnRating}us:mpaa:pg":
	case "${urnRating}us:mpaa:pg-13":
	case "${urnRating}us:mpaa:r":
	case "${urnRating}us:mpaa:nc-17":
		for (rating in mmpaRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
	case "${urnRating}us:tvpg:tv-y":
	case "${urnRating}us:tvpg:tv-y7":
	//case "${urnRating}us:tvpg:tv-y7-fv":
	case "${urnRating}us:tvpg:tv-g":
	case "${urnRating}us:tvpg:tv-pg":
	case "${urnRating}us:tvpg:tv-14":
	case "${urnRating}us:tvpg:tv-ma":
		for (rating in tvpgRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        case "${urnRating}us:tvpg:v":
	case "${urnRating}us:tvpg:s":
	case "${urnRating}us:tvpg:l":
	case "${urnRating}us:tvpg:d":
	case "${urnRating}us:tvpg:fv":
		for (rating in tvpgRatingsreasoncodesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
        case "${urnRating}us:fab:c":
	case "${urnRating}us:fab:f":
	case "${urnRating}us:fab:pd":
	case "${urnRating}us:fab:pd-m":
	case "${urnRating}us:fab:em":
	case "${urnRating}us:fab:ao":
        	for (rating in fabUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
        case "${urnRating}us:fab:violence":
	case "${urnRating}us:fab:frightening":
	case "${urnRating}us:fab:sexual":
	case "${urnRating}us:fab:mildlang":
	case "${urnRating}us:fab:stronglang":
        case "${urnRating}us:fab:substance":
	case "${urnRating}us:fab:intense":
	case "${urnRating}us:fab:bnudity":
	case "${urnRating}us:fab:fnudity":
	case "${urnRating}us:fab:explicit":
	case "${urnRating}us:fab:erotica":
		for (rating in fabreasoncodesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;

        case "${urnRating}us:esrb:ec":
	case "${urnRating}us:esrb:e":
	case "${urnRating}us:esrb:e10+":
	case "${urnRating}us:esrb:t":
	case "${urnRating}us:esrb:m":
	case "${urnRating}us:esrb:ao":
        case "${urnRating}us:esrb:rp":
        	for (rating in esrbgamesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;

        case "${urnRating}us:mpaat:gb":
        case "${urnRating}us:mpaat:rb":
        	for (rating in mpaattrailersUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
   
     //case "${urnRating}gb:bbfc:e":  
	case "${urnRating}gb:bbfc:u":
	case "${urnRating}gb:bbfc:pg":
	case "${urnRating}gb:bbfc:12":
	case "${urnRating}gb:bbfc:15":
	case "${urnRating}gb:bbfc:18":
	case "${urnRating}gb:bbfc:r18":
		for (rating in tvmovieRatingsGB) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>" + rating.replaceAll("&","&amp;") + "</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

        //case "${urnRating}ca:chvrs:e":   
        case "${urnRating}ca:chvrs:g":
	case "${urnRating}ca:chvrs:pg":
	case "${urnRating}ca:chvrs:14a":
	case "${urnRating}ca:chvrs:18a":
	case "${urnRating}ca:chvrs:r": 
	
		for (rating in chvrsRatingsCA) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

        //case "${urnRating}ca:cbsc:e": 
        case "${urnRating}ca:cbsc:c":
	case "${urnRating}ca:cbsc:c8":
	case "${urnRating}ca:cbsc:g":
	case "${urnRating}ca:cbsc:pg":
	case "${urnRating}ca:cbsc:14+":
        case "${urnRating}ca:cbsc:18+":
      		for (rating in cbscRatingsCA) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        //case "${urnRating}ie:ifco:e": 
        case "${urnRating}ie:ifco:g":
	case "${urnRating}ie:ifco:pg":
	case "${urnRating}ie:ifco:12":
	case "${urnRating}ie:ifco:15":
	case "${urnRating}ie:ifco:18":
      		for (rating in filmtvifcoIE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        //case "${urnRating}au:ncs:e": 
        case "${urnRating}au:ncs:g":
	case "${urnRating}au:ncs:pg":
	case "${urnRating}au:ncs:m":
	case "${urnRating}au:ncs:ma15":
	case "${urnRating}au:ncs:r18":
      		for (rating in filmtvncsAU) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        
        //case "${urnRating}nz:oflc:e": 
        case "${urnRating}nz:oflc:g":
	case "${urnRating}nz:oflc:pg":
	case "${urnRating}nz:oflc:m":
	case "${urnRating}nz:oflc:rp13":
	case "${urnRating}nz:oflc:r13":
	case "${urnRating}nz:oflc:r15":
	case "${urnRating}nz:oflc:rp16":
        case "${urnRating}nz:oflc:r16": 
        case "${urnRating}nz:oflc:r18":
	case "${urnRating}nz:oflc:r":
	      		for (rating in filmtvoflcNZ) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        
       case "${urnRating}FR:MOC:U":
	case "${urnRating}FR:MOC:10":
	case "${urnRating}FR:MOC:12":
	case "${urnRating}FR:MOC:16":
	case "${urnRating}FR:MOC:18":
      		for (rating in MocRatingFR) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

	case "${urnRating}DE:FSK:0":
	case "${urnRating}DE:FSK:6":
	case "${urnRating}DE:FSK:12":
	case "${urnRating}DE:FSK:16":
	case "${urnRating}DE:FSK:18":
      		for (rating in FSKRatingDE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

      case "${urnRating}AT:FSK:0":
	case "${urnRating}AT:FSK:6":
	case "${urnRating}AT:FSK:12":
	case "${urnRating}AT:FSK:16":
	case "${urnRating}AT:FSK:18":
      		for (rating in FSKRatingAT) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}CH:FSK:0":
	case "${urnRating}CH:FSK:6":
	case "${urnRating}CH:FSK:12":
	case "${urnRating}CH:FSK:16":
	case "${urnRating}CH:FSK:18":
      		for (rating in FSKRatingCH) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
   
	default:
		resourceXml = "<dece:Resource>$resource</dece:Resource>";
		break;
}

this.log.info "resource [$resource]";
this.log.info "resourceXml [$resourceXml]";

testCase.setPropertyValue("policyResourceXML", resourceXml);
]]></script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="1eec3827-8124-4609-a4a5-2c540369905d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate User");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate User" id="c5f6daec-0a10-4a77-a554-178f6fe37482"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate User" mediaType="application/xml" postQueryString="false" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>
      ${#TestCase#policyResourceXML}
      <!--<dece:Resource>${#TestCase#policyResource}</dece:Resource>-->
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="0d4c5505-0945-499e-915e-7efd3c54e4f8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('POST - PolicyCreate User');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="de7f1214-f4ae-4bb8-828f-b52a989d0f00"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Policy - Establish High-Level Policies for User/Account/Node</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:status:active</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZbc9o6EH7vr/C4jx0j20AAT2DG5ZLSkIZATkrz0hHSAkps2bEkIPn1RzIxAUJy0p4ZZhitV7vfXvTtngocR34QCgGZZAm3+p2m/XtGK8T3ZzPHpV7NqdR84jRq9Ybj+/60TqcUYx/bVl8IBX0uJOayafuuV3Hcuv5du27gnQReo9Soure2dQOZ0Ka1Ssm1rXUccRHkbpu2yniQYMFEwHEMIpAkGIcXg0BrBrjAZLdONyhzh1lrIWUaIERKFAhEESmRJEanaE/nlIpgzOYcS5XBs08qmvbz3dVqVVqVS0k2R77rushtIK1DBZt/tlufistA+3yWbM5tzBPOCI7YEzagLkAuEmqF0TzJmFzEb5j2kOca0w6siUO8Cv9soxcHOboPWtoDmQnsiAX2CmMjmEEGnID1z6jftD9/rIKbu9cZ5mKWZLE4OP8ZJOBLiJIUqCOKyAp0H7d4JF2tUyBBn5NICbaEH6ZNUkxAWMMMZmw9YEI3HxVWXn5rLfSPFV0G5E/Kcop2sWro6Eh2OmwOQv5NzXbrtbFygyMFLRL21Pers+mVXF/dD2R5UU/98NsCokG3mUPYVd6A2pb7+XzYrNveer408d1z1Ous4Fvlunf5VB66SfzjkZ+pFR3edhn6FYtq79syWvcaoynKfor+2ajTheFkctnuh5PyDV0+XIRPX/yrqPtpcX8zOPv+k1Hx+MuL6qOTtH6yoOH55cV89dRm7Un5pHdbRt4dAhDRWt2Obmvhaj6dpGeXi6oH87jiqfBLfZicx58m4yv/TlWmA+6du2e12qReb77EtBvDvrCghLGa3gGRxdG0R79j9XS9sHyfXoyEUWeWqwap4SghgUu7ZW4ZagmUJiBGA13MzVn3TblXb3T8atuthjW/61bL5U6j4XXd0O14fsFBGxQHENsJnzHjy7Dspn/eB0jiQACnkDnLRJEFCPsdix0ssdXnI/04Ei7gOtEsfledpqBU5d57WHtuXcR3jbvohLpL2/qRyEt+mYUzCdk+dZf3qHsEhKUMDL+bBhe6w4XUuXjASyUjr7TEJQ5KT4DMkHDgV+pVJFicRmCQojihKoJSukjzzCCx+fcdTEQuHXWv84f3ZlyH34oUaB3KjIIwsXwFXUY4MoPcIpBXAVePzqrCfKgoM+9L51NmjGyQ7H96aRPTH9se6QzC8bAAvdX9g7u/2+Pf3l8aGPxfA7oer2+id3KCDsuxdUSXbMdtMcv1eNLk1Sqa6QGXHkpquVR5+9Rct4wybR5pfvbQGIjS7Pp4ndwDR1sT6EPDbYv6wPNWvo9PyQUfSywh1s1u5ccPbDZjEGaz6etXuv7o2rTnUudNwloek7UjvQAZxO/uSCQgRk+Lh/pvlWT0pVxHbO340XHqdUYyPjcnM8Ye32gKkmizTPNuku0aP2bgmPN94TbJWyxSd9NUSXj7i2UItWljQhLFZb9j54Jdks9xyscUghelV2byQfK8GazFm5vB5GIw1nQbY3ury/5b2WF5uxCwzQKSY2naa73oaud8vjNUngEenytfK+/Nlf1IWq/EryU7OT18D61/AQ==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:0013F89D25B45A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">UserDataUsageConsent</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:org:org:dece:DLASP</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>policyResourceXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;dece:Resource>urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12&lt;/dece:Resource></con:value></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://lp3.qa-web-vip2-s02.uvvu.com:7003/rest/1/11/Account/urn:dece:accountid:org:dece:0013F89D25B45A72E0533D991E0A0D12/User/urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12/Policy/urn:dece:type:policy:UserDataUsageConsent</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79615</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072E24F73ADE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE072E24F73AFE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>0013F89D25B45A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet for User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0c15a666-29c6-4163-a822-0c7b4681128b" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2f8d5184-e608-4b80-b335-7cef60358c78"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="537143df-1ab0-4e74-b21e-4e0d26ff0785"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="7393635d-f284-4bcf-90ee-6cb38091fa39"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet User");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet User" id="9ab22016-726f-4781-94d8-8323337aaab4"><con:settings/><con:config service="Policy Get" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet User" mediaType="application/xml" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ACCT" value="${#TestCase#assertionAccountIdFULL}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}"/>
  <con:entry key="USER" value="${#TestCase#assertionUserIdFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="321ccd17-34c2-4723-9f86-592dfc0b8450"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet User');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="347d4915-0cba-41b6-b64f-0431f291674f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
}

log.info "xmlPolicyClass [$xmlPolicyClass] - tcPolicyClass[$tcPolicyClass]";
		
if (httpStatus == "HTTP/1.1 200 OK") {
	def myXML1 = new XmlSlurper().parseText(XMLbody);
	def PolicyIDFull = myXML1.Policy.@PolicyID.text().toString();
	int lastColon = PolicyIDFull.lastIndexOf(':');
	PolicyID     = PolicyIDFull.substring(lastColon + 1);
	log.info"=========="+PolicyID
	policyWasFound = "true";
	tC.setPropertyValue("PolicyID",PolicyID);
}



tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="8494f027-494b-4523-9bbf-012185059566"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));

if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
}
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>558</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>UserLinkConsent</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>Policy - Establish High-Level Policies for User/Account/Node</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[Unauthorized request with Authorization value too short
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
<Error ErrorID="urn:dece:errorid:org:dece:securitycontext:unauthorized">
       <Reason Language="en">The request is not authorized.</Reason>
        <OriginalRequest></OriginalRequest>
       <ErrorLink></ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79616</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>0014007EB29E633EE0533D991E0A916B</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072E24F73ADE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE072E24F73AFE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for User" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="662db75c-dac1-4808-8dd8-bdaa92b08399" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0eb2eb6a-6bef-4b52-a3c0-d3d27b45d014"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="9e9c4b55-e0ff-421c-9874-139438b5748b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("PolicyID",callTC.getPropertyValue("PolicyID"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="a14fc38d-7cc5-4a6a-8519-8b6821fcc5e8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("DELETE - PolicyDelete for User");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - PolicyDelete for User" id="cbf8dca2-b39c-485a-bc77-f948d3783e98"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - PolicyDelete for User" mediaType="application/xml" sslKeystore="dececs_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#PolicyID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="bd56efce-3bf6-43b6-814e-569e846f0e2b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('DELETE - PolicyDelete for User');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="c284a255-6463-4262-a225-4d4acfe74fad"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="49b26494-79ce-4b9e-9e9a-82c7925ec6f2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">40</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVdpc6rMEv7ur7B8P1qGRRSxklQNAoqKK65fbuEwLMomw6a//g4mepKcnHPz3ipLnaan++mFnmeeseF7bBdgjOLEDYOqKr3U/tOCjNVi+VajQ1tMg+MssyGYdLtBc60m7FgML9DNWlXFOEVqgBMjSF5qLM00GzTfoBmdYbqtTpduPzGd1r5WXaMYE9NE5YmuVQvfC3D35vallsZBNzSwi7uB4SPcTWB3CbRxl2h2jTum2uvzG8qbw/jVSZKoS1HwyUQQeR58gqFPPVOfdJ5N3F26dmAkaYzefZr4pfa+N8/zp7z5FMY2xdI0TdECRXRM7Nr/1F4r983IVAMrfFv3jCAMXGh47tUoQWkocUKzCjw7jN3E8f9gmqEYujTdQAVsQIYL/qlRvxzc0P3Q0ieQMTYa2DGYu7EFslCMAoiqq4X6UvvnZxV826vHRoCtMPbxl/W/g4SCDHlhhMwGvkd2R/dzi9+k6/UZwa4aQC/FboYmZZtEBkS4OouR5RZjF5PmM3H1Vv5qge8dhuC/Kckz9REngU19kxnJtRFO/p96fazVm5W14aXodT5GZy698h0csUohMvLUVm1p4kwL9eUG4aPyG6hHqd/XXxv10Vfvm/y+dhi1pgm90yxEZwp29PWw7dZd/7Lh/X6+SHZLNRPRZBse6fGxXxQL5zDN1UFw5VpsIuoTQ2Bbg1Nn5UiVReCdde2ATzs7nmXwuLsiJIzqgTNOO2ndGGx2xxYzuwBuYkhNuLHChYrchFnVXbazXZpZno3r/omq63JnVVGu0zzfTXSxdRiLrcIhqX35FdPHGMq4RuhyC7L8v23RgmQkxmPRKyeFRV7PBL1qqtqrS70eQD0b5KoIbFUcX8FEtE9n5+T2hZwWwXylAAlctAXIJXsnrefzkZyb67W3X6uKImoLLh+AnVQhDyS5WEv77ZA2Nvtoxyr0fimK5nYRHprDyByc8oEDJ5qu5RNdvWhHuZjoMr25yeyCrK/aUWOm+qpZ2RxFQVvIuZTfPEpy7kz2m0W0Wwk5vMpzDXB9wKzknqMNdH/NwObCgUd5rIHTTS46Wm+91gpZB7OKaE/WJDa9p+wj6JvRwfecD8YHxLhu9teXQ99L91f5qPXkfm957i/VQ1Oay0Ow2K0Om/XJ2ChZBQ4m4HD36LZcYxvm9r6TS/PdcBTuVSeDEzCXRXEOSLpooKn9IQj7ItA44BbX3lFshz1Tyakhiyt1weu3txf3vMVGn/YMptNhduNNe3ZuS3JQ34/Sw9HRnK0yrY9IT6yERLjucFbP2obLwCKy5lt5kIwKazBfVg4zqdjCQd20h5R3FZRY44cgvl4cT7MXyaY9xZeDa1kbcTvlPN7ytOYisjwruuC6Hs5PMd0WUZOldpdslFSArYkA9I+rozjXxE6ZVFPN5ztNNIAiJym4HtlkxK7Pw0HmwV0ThMVoMz2e3gtjSrksUvlcJm0lVzoSMMsiDJYrWTmClWjbsWjLijiHEpjv1FG+I/laDYjy1zwqtzzasgjk5h60hUGluaKFZJosOQ5cAnEVKIKjnYuN2fZp/ozk8XIScbmGJ1aw34QnzXfjVZwuV6PRZFwc9LR/OpJZZdHLUdbcV+TsFAF3MtKdkxRKxiza7ZKoHsAYJmrka2pxne7xseMefHpYbzHijJYgz678Q77qG/J+FNtLZjRYBLMmL1Rwal0Gfv3YyTd1fdmOeLMXWNLlQu3jNR2CUBEWrbNZsOzJWeXjdm4NwelgsJPCE8SLII/2OswX89Fm6ddblVY2Hvv0Vae4STTNl/2ck+fzetMU9YGOo9jdpR27iKeBye6MpJ3t6XXbjbyTwKYnnYuaa9snxZplZsRrs8qc28K9b/MRHFILKgMyb43V/uVwNa6RP4VvA/TrdHgI3+YH9XGyfBo9d9KxJN2KYHJflgeQKlUVcioYyd8JTClxzYZ1U+1GJQvCCQqS2mu5qyQv3ZRQHNfskiPjbS3TPCvRvEI+ggB6nExzNKPQgOYFoSnyrTvLeUPxBWIvDCy39FXyuLdT6u8Aod/FKDBR3MjCFDoI1/5iscxXVQ0W5PgNA4z0kPBEuakIbV7gmqADWpwo8522xDI8x/V4pcN32Fp1EibTYBoDK0HxZ47IfeKICwTdyEUlkSxPU0yOU5yQlJyNLE085ikzngKUEqoZl2yvy3KdFoVdP/JQCZjyQzP10FPkRLcEUfjtl20YEN+kZXYhvh30f4zw67N7MoiO6ZYKuAxHRKSg6De+y3db91h+i5n7lhffzYPUdMvznGQ2iV34huTzo18NU3bKo1tuXxDfYT+0vwo+Waa+BvVwZmYufLT940ZACCWhHK/3qpyNp/NTmmXprQ58SadiYp5iKLpNLRFMCSe66OEJBdTDBPUjOvpA/cXzQ/4ZX5o4wTIhr7RPuqZ6W/7gLrJEuLyLqKTri59edD65JHlLUJF8J+t55MpSIv7rrQZ2YalHxDPyk4ex+atc39j64IfEWc4wN7DLVUk+L39oDBgSsy6ZY2H80fh3Br5z/ln4SPIDS0K66ZAm6M9PquWAeqkZEIZpkKhS7Sb4ODRvOJNLhLq/lH4zc6N/73y+wH/k81ttvCTjyzdqD133fys33Fu7QER2YfeG5aVWkKspcR7YH4b0O8Dv57Sk/G1Of47k9Tfx75IPOf36Prz+Fw==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:E072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:E072D07F07F99AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:policy:ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79617</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>urn:dece:policyid:org:dece:E075DAD98C281310E0401F0A0799477E</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE072D07F07F99AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>PolicyIDEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AE075DAD98C281310E0401F0A0799477E</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for Account" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="638b9d79-7f3d-4f0d-9c9b-48c750f0b668" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2e3e2aaa-92cc-40a0-81f6-8448671be93f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="f49dd496-0ab3-415a-ac22-3416396fdf3a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Policy &lt;dece:Resource> XML" id="8b0e4224-04ba-4c54-a49e-5d9abb3aa4a9"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
/*
*  Complete rating set which doesn't appear to work
mmpaRatingsUS = ["US:MPAA:G", "US:MPAA:PG", "US:MPAA:PG-13","US:MPAA:R", "US:MPAA:NC-17", "US:MPAA:NR",
	"US:MPAA:M", "US:MPAA:GP", "US:MPAA:SMA","US:MPAA:X"];
*/
	
mmpaRatingsUS = ["US:MPAA:G", "US:MPAA:PG", "US:MPAA:PG-13","US:MPAA:R", "US:MPAA:NC-17", "US:MPAA:X"];

String resourceXml = "";
String urnRating   = testProject.getPropertyValue("urnRating");

def resource = testCase.getPropertyValue("policyResource");

switch (resource) {
	case "${urnRating}US:MPAA:M":
	case "${urnRating}US:MPAA:NC-17":
	case "${urnRating}US:MPAA:R":
	case "${urnRating}US:MPAA:PG-13":
	case "${urnRating}US:MPAA:PG":
		for (rating in mmpaRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "&lt;dece:Resource>$rating&lt;/dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
	break;
	default:
		resourceXml = "&lt;dece:Resource>$resource&lt;/dece:Resource>";
	break;
}

this.log.info "resource [$resource]";
this.log.info "resourceXml [$resourceXml]";

testCase.setPropertyValue("policyResourceXML", resourceXml);


</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="9e8edf7b-19c2-4017-a782-1d475e29534b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate Account");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate Account" id="8a72545c-64f7-44de-8125-7a001d334334"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate Account" mediaType="application/xml" postQueryString="false" sslKeystore="dececs_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>
      ${#TestCase#policyResourceXML}
      <!--<dece:Resource>${#TestCase#policyResource}</dece:Resource>-->
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="c0a74e36-bcb6-4ad5-9388-ebd2898033ef"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('POST - PolicyCreate Account');

String expXML = null;
String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;
/*

def expXML = tStep.httpRequest.response.getResponseContent();
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="778264ab-d089-4eac-adf9-6ec1219346ec"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String orgRequest = url + "/dece/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Policy - Establish Manage account consent policy</con:value></con:property><con:property><con:name>sName</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dece:cs</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:status:active</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrb+I6EP0rKP24gjyAAlFBAgoUCqUFtrvdL1fGmYBLYkPsBOivXztASij0cq+EhDwZnznz8LHvOPI9y65zDoEgjGY2vke5HVurWhhQmyFOuE2RD9wW2B7XB33byhk2OmzRMt37qvaPVXIK5cLUyTpWqZwtWFPITsGxsqiQB2zeVooArnTlPIQu5QJRUdUswyxmjbz8TYyKbZVsy8xVyvk/WuYVAi6xpUvO0PakNryqzYVY2rq+Xq9z63yOBTPdMgxT/z3oj/EcfKTV7nYZxYGC2t4f5xzA4Hk4h5mv3+kpnzuH22Myo0iEAexjOZdiGbpR0aWPw8nsRkv2gtOlLouXTUQZJRh55AOp+gxAzJmTqXszFhAx9y8mYRoKOAsbnMVmgd5oepralUAphgFHWT5H5h5rBC4EQDFkfo66Ve3muq7FWycBotxlgc/Ty//GB2gEHluCk+WHtPbUrgc8U6naHWC7S7EXchLBkxrWJcLA990EfD1U5jkAl2z6hMsB3XDFTj+md7LcVeOezICL/9Ogo+bsQF6RF0INr17ch0c2Qr0POmaDTs9t/hku5vO+W6/GBI6dY0PS2t3yZCiTIdrteNrMHjdb/PBqBdNKr8ec/JAX6h/vbtAoR/Wf/ZLTGfP8okFxr7X4NTL7w9Vk6ueHjultfQu8x7e2SzrW8+KtyUayYHpp5K6ioVeZ/qqsy+9hD/8weT98Hq3CzqBHab/bLWx/B43Bi4DlR2vWsXrkwS39iFpTWDa2Hd6a6KbJ2wtXfxk1Xt4Wj8gqLiMfmYVqks4R/7TtcObH4fQdsDgs1Rh07zNt2SUkvhczZSFO1o1d7aUSHy6ACq2mdintsEMpd8SxZQ93a9MotlvFZtss3lZKVqnSMop5o1SpmG2jfttstg4is2NxQrHJqEtULCW5u7H5niD2bQ7UgSAbsVAqHde+QbxHAmW6dCQPAaMcJkzK89p3o+mtN4ss6pr41jTKLB8h8zavZZ6YGNJhUHcFBClNNq2UJo8AkyUBJdxqrrkcbC5kLVYoCoVn5iKUoxBKaQ+UytpWoVzUOfGXHiimus+c0IPccr6MK6Pz3b/UGsxja1xWvDtxF3M7/XYog/RxiHLgKp8GyFbCmQvGPCRzIenCyUV0gK+HDlGHS9ZUBATvmKQ/fY6KmpFkTvZZHWgn3qeGFLJ+mlQSzIkITgY+ubalmsvzXzu0ZYVyq1wYRWHciJLSuUDC6ypN3bD0MeBQKtR2whZA9QRFv+o6SIifBE/saYqhmNOxQAJ8OTmZeHnF/T8Gru7/rhz5zbWPi1RIWToBG3HO1vTk20Ux/vZ5g22s/KT5Wf6tWeB8duwM1lEcmae8/gWhM7VSV8H2wmxgJmGJFDEWHIOfAzgXPG1MipxwEXKgpqGAy18ySp2qGsKYhVR077XYcKyYMU+xXYL96fQFJhbl5JVG/v2ZliXxCGCQbztOYnx12drqCNDZkerug54R3qaZrxel8JrHwpu3ikZSlBS72hfzV8tRnU5nvPYX</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:105FE5CF15697279E05307991F0A6CCE</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ManageAccountConsent</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:org:org:dece:dece:cs</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:105FE5CF15697279E05307991F0A6CCE</con:value></con:property><con:property><con:name>policyResourceXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;dece:Resource>urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250&lt;/dece:Resource></con:value></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">SUCCESS</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250/Policy/urn:dece:type:policy:ManageAccountConsent</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79618</con:value></con:property><con:property><con:name>V2</con:name><con:value>06</con:value></con:property><con:property><con:name>V1</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>105FE5CC13A57271E05307991F0A3250</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>105FE5CF15697279E05307991F0A6CCE</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/dececs_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>d497d5ec-b6fb-4d74-86a8-2ddaf55fa864</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e8edf7b-19c2-4017-a782-1d475e29534b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8a72545c-64f7-44de-8125-7a001d334334</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyGet for Account" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8a6d1903-74d1-4b69-ad2a-688544fe1e1c" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="df9005b6-3744-4531-95e2-f097e5524eea"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="8a41df3c-05b5-4c01-bd3a-0c4fd5eba2ab"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="d01448d3-7196-4baf-964a-db019d97398c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet Account");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet Account" id="74af2312-275b-452b-8110-eab8152074f1"><con:settings/><con:config service="Policy Get" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet Account" mediaType="application/xml" sslKeystore="RET_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="POLICYCLASS" value="${#Project#urnPolicy}${#TestCase#policyClass}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="8f288833-0fd9-47eb-af2b-c6966a2f177c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet Account');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;


/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Policy_ID and store" id="a8fb66d0-112f-4478-af05-b97c6c319890"><con:settings/><con:config><script>import CacheTestManager.CacheTestManager;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName("GET - PolicyGet Account");
def responseXML = tStep.httpRequest.response.getResponseContent();


String versionMajor = tP.getPropertyValue("versionMajor");
String versionMinor = tP.getPropertyValue("versionMinor");
String restVersion = "rest/"+ versionMajor + "/" + versionMinor;

def nodeAccountId = tC.getPropertyValue("nodeAccountId");
def nodeUserId = tC.getPropertyValue("nodeUserId");

def nodeid = context.expand( '${#TestCase#nodeid}' )
def myXML = null;
if(responseXML != null)
{
                try
                {
                                myXML = new XmlSlurper().parseText(responseXML);
                }
                catch(Throwable e)
                {
                                log.info e;                                                                            
                }
}

for(i = 0; i &lt; myXML.Policy.size(); i++)
{              
                if(myXML.Policy[i].PolicyClass.toString() == "urn:dece:type:policy:ManageAccountConsent")
                {
//                                tC.setPropertyValue("policyIdBUC", myXML.Policy[i].@PolicyID.toString());
                       if(myXML.Policy[i].RequestingEntity.toString()=="urn:dece:org:org:dece:$nodeid")
                       {
                       	tC.setPropertyValue("Policy_id",myXML.Policy[i].@PolicyID.toString());

                       	log.info myXML.Policy[i].@PolicyID
                       	}
                                
                }
                
}

tStep = "GET - PolicyGetListUserId";




</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="73a44495-c259-467e-aebb-2e4338a70e11"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

/*
*  The body should not be null...something should be
*  there.
*/
assert XMLbody.size() > 0;

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="16db2d55-d238-408f-962e-c4754d0389e8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));

//if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));

	callTC.setPropertyValue("Policy_id",tC.getPropertyValue("Policy_id"));
//}
</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:106F835F59F849A9E05305991F0A7901">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:11.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106F82402FDA49A1E05305991F0A39D4">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:LLASP_CS_1</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:16.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106F823E1E54499FE05305991F0A2ABC">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:DLASP</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:20.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106F834EA9C849A5E05305991F0A55C6">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:DLASP_CS_1</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:24.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106F823BFD5E499DE05305991F0A492A">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</Resource>
      <RequestingEntity>urn:dece:org:org:dece:LLASP</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-04T04:02:28.000Z" CreatedBy="urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150304_093413</con:value></con:property><con:property><con:name>tName</con:name><con:value>Copy of TC_DECE0113- StreamListView - DECECS - Account has single active stream and one deleted streams</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>responseXML</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:106002922BCE357EE05307991F0A8C00">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:10600322549E5306E05305991F0A7900</Resource>
      <RequestingEntity>urn:dece:org:org:dece:RET</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-03T09:34:25.000Z" CreatedBy="urn:dece:userid:org:dece:106003A81512359EE05307991F0ACB36">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:1060032C5A6E376CE05307991F0A25E2">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:10600322549E5306E05305991F0A7900</Resource>
      <RequestingEntity>urn:dece:org:org:dece:LLASP_CS_1</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-03T09:34:29.000Z" CreatedBy="urn:dece:userid:org:dece:106003A81512359EE05307991F0ACB36">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106002922BD8357EE05307991F0A8C00">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:10600322549E5306E05305991F0A7900</Resource>
      <RequestingEntity>urn:dece:org:org:dece:DLASP</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-03T09:34:33.000Z" CreatedBy="urn:dece:userid:org:dece:106003A81512359EE05307991F0ACB36">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:1060032D1B0D5300E05305991F0A80EE">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:10600322549E5306E05305991F0A7900</Resource>
      <RequestingEntity>urn:dece:org:org:dece:DLASP_CS_1</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-03T09:34:38.000Z" CreatedBy="urn:dece:userid:org:dece:106003A81512359EE05307991F0ACB36">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
   <Policy PolicyID="urn:dece:policyid:org:dece:106003A8152F359EE05307991F0ACB36">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:10600322549E5306E05305991F0A7900</Resource>
      <RequestingEntity>urn:dece:org:org:dece:LLASP</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-03T09:34:42.000Z" CreatedBy="urn:dece:userid:org:dece:106003A81512359EE05307991F0ACB36">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79619</con:value></con:property><con:property><con:name>Policy_id</con:name><con:value>urn:dece:policyid:org:dece:106F835F59F849A9E05305991F0A7901</con:value></con:property><con:property><con:name>policyIdBUC</con:name><con:value>urn:dece:policyid:org:dece:106002922BCE357EE05307991F0A8C00</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AManageAccountConsent</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:106F823A9841499BE05305991F0AECF2</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>106F823A9841499BE05305991F0AECF2</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072D07F07DF9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:106F82253E364537E05305991F0ADCE6</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>106F82253E364537E05305991F0ADCE6</con:value></con:property><con:property><con:name>assert</con:name><con:value>pVZbU+JKEP4rVPbRCrlzSQlVkYuy4IqAq/hizU46YdxkgpkJoL/+zASIgOhhd59S0+np/voyX/c5Q3Fkuh5jkHKS0NIqjihzc2lDyVLqJogR5lIUA3M5dsfe9cA1y7qLtleUUq/dUJ7AQRjZpq1ip1JTbSdAKrKcQDVsbAR2AIHv2EKVsQx6lHFEeUMxdcNRdUvV7Yluu7rpmvVyzbIfldJPSJmwLVTKurIBtWINZcb53NW05XJZXlrlJA01U9cN7eF6MMYziJHSPF9HlDtKmxt9XPYBQxThMk5i7Vzb0zn3mTsmIUU8S2Hjy//Ml67pdU3o+IyE35TiLvg9GiT5sYVoQglGEXlDMj/XwGeJX/KiMEkJn8WfBmHo0rAKK6xiw6bfFG0f2omG9hCmDKlshoyNrREEkALFULob9RrKt9Oqll+dpIiyIEljtn/8MzxAFxAlc/BVtg1rA+10g0cy1TwH7PYojjJGFvBDNuscYWCbagI+3VRpmEJAVgPCRIOumESn7cI7OK6z0SYhMP43BdopztrITxRl0Hyz8PTy0ep+f3sMrkJAk7vwMmL9obaaNnIAu8q5oCjt+njQlEUTrW+kI7hus46ResZwWL+5r/WWtndlIc+bhvb0rYIuzy4nj98f7n53qvrd3auWPo8efxsp6OOH/mJWebaqr9OAr8LW2a3fH/iWFwr1Qbc/hEV/cWXG4aM2OIvZ85t25UwebuJ7WkPLrHsWX4bL/gPN8G114c8expN4/Hb1vLibBrN2/xWmF6i1ckD4un+5oPf27dV1owhnB/++bPvmx9mvZ8B8e5Rt0GuXuqJKiH9NZlJCfDXIVd25JB/GgXKlKW9J7nAzQXfEd0UN12dDr3RrpuXVa7Zh1+sXHd2xdKdeN7q612l1zS3JrFEcQGwlNCDSl6Tcddt8DRDHLgPqQ6oukkwwHVO+sNhGHJV6dCQeQUIZTBJBzwZbsiRcJvXYiupGMMtQtcLs5zmuKqUfCb+hN6kXcEj3Sbm6R8ojwGROQDK3bGwmOptxkYwXtMh4ZJQXqEwhE9yeSpp1TbvmaIzE8wgkVC1O/CyC8nw2z1OjsfXXVBFmuXTUmeTP7dPADv9tcyB0fCIVmIzlAkQd4ch0MbaBfAi4cnQKbc17mU/kyxIJ5SnBayT7v977RDZI0STtgTcebkEXun9w96k1fjL+0sDgH5wP/tW5qOXHm9oX+dQOS1k48hdkx+127RADTFBec9uIL6j8Us4Wiyxvvaqk9lSY1wTDG9oYcCYY+XWS/AaqFSa0k8ZfgfrAcyHfx5fxGR1zxCEWD6WUH0/Yd8bA5L7TE098deoytedS5I3Dih+TtSKxq0nEX65z2MVST4iH4rNMUv+9XEds7fgRcYp1hxMaypMcfa+fNAVOhFkiSDtJd40fM3DM+b6wSHKBhYtu+pVx+PxPSbJxQ0EYJxnlvbaSC3YnRI6Tv87BfVf6YCYfQsVWSv5/LVVJ3gIYxC7LSG5fLheu7H8a7kyZjdOPg8Z0rI5VsR2rujto2q1OpUjKHrrmB/FHyU6eDnu8+R8=</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>a8fb66d0-112f-4478-af05-b97c6c319890</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for Account" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="86b16e03-40c4-4ba3-b759-b2b11b211bd1" discardOkResults="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ee060553-a5fd-46ee-a832-8b4fdd98f980"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="02bdb2ca-8d3a-4f16-89a6-ed5fd3edd5a9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("Policy_id"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)

//def assertionUserIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionUserIdFULL"),"UTF-8");
//tC.setPropertyValue("assertionUserIdFULLEncoded",assertionUserIdFULLEncoded)

def policyClassEncoded = URLEncoder.encode(tC.getPropertyValue("policyClass"),"UTF-8");
tC.setPropertyValue("policyClassEncoded",policyClassEncoded)
if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="d63a11b0-8daf-49e3-bbdb-07013a0b8a86"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("PolicyDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyDelete" id="098c72da-d8d1-4b16-843d-196c2268e3bc"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyDelete" mediaType="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="if-match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="f5479f50-5c24-4513-b348-c45664b6cd86"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('PolicyDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status     = null;
String connection = null;
String contentType   = null;
String contentLength = null;
String contentLocation = null;

/*
def status     = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType   = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="5cf1ff23-5798-45b7-adac-8557bea97acd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="42481049-1971-416c-9464-87899899288e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>pVZbb+I6EP4rKPt4FJIQrlFBokB70oW2C73s9mVlnElwSewQOwH6648dIAuU9rC7EhLyZDzzzcXfzAVHUVhxupxDIgijpVUUUu7k0raWJtRhiBPuUBQBdwR2Jt3R0KmUTQftrmglt9/Wfk6hYdWRVdWnTXuqV1vI0luAqzqaNsy6jxqeX59KVc5TcCkXiIq2VjGtmm7a8vdg2U6t5djNsm03XrTSEyRc2pYqZVPbglrxtjYTInYMY7lclpd2mSWBUTFNy/g+Gk7wDCKkdS42EeWOks5WH5c9wBCGuIxZZFwYBzoXHncmJKBIpAlsfXkf+TINs2VIHY+T4ItW3AXPpT7Ljz1EGSUYheQNqfyMQMyYV+qGAUuImEUfBmGZyrAOK6xjq0q/aMYhtDMNHSBMONL5DFlbW2PwIQGKofQ4dtval/Oqll99SBDlPksifnj8PTxAMwhZDJ7Od2FtoZ1v8ESmOheAHZfiMOUkg1vVrDHCwLfVBHy+qdJ9Aj5ZDQmXDbriCp2xD+/ouMlGnwTAxZ8UaK84GyNPKEyhE193afOJ3XwXd5DNvSvXgODuOXoc1AbtHMC+ci4oSrs5HjVl0USbG4P17Qt2k3gtbkfLb5XbH9Xb8Ys/7zbxIry+sxczvH7uGk+XLZvQ9N/rEfoaLAavovHC3GcxqrJl5Z+wPlnjtPvtWzbwzMtwVLsxXt7YesJDEfyAaRoMk36y6t2M57EvFuO+cT8SxK8FNzOeLqwrv3X5eD8fXL5c+fPX+tuy0ZvS6rUf8ZoPzEV3/uwqiO7n3G0X4ezhP5Tt3vwknb4CFrujagO3X7qSVULiczJTEuLpfq7qxIp8uAAqtI66pbjDSSXdEc+RNdycLbNuNyu9S9tu2la/OxiYNdustVrWldltWi1rRzIbFEcQe4z6RPlSlLtpm88B4sjhQD1I9Iylkum49onFPhKo5NKxfASMcnhgkp498cr8tdUgVphYMRazzExFlmVa6ZaJO3qXdH0BySEl1w8oeQyYxAQUb6u25rKvuZCpWKAsFaFVzlCZQiqZPVEk61SqzZrBSRSHoIAaEfPSEMrxLM4TY/DNf0VHmOfS8eAhf2wfhnX8bZcBqeMRpcBVLJcgqwgnZktlF8i7gOsnZ9DOfDf1iHpXMp0iIXiD5PDTry5R7VG0SH/YndzvQBe6v3H3Z2/y0/pDA8O/cD78W+eylu9vGp/k0zguZeHIy8ie293SIceXJLzOrhEXqLwop1mW5q3XUMSeSPOG5HfLmABOJR+vH9gcqFGYMM4afgXqI8+F/BBfKmZ0IpCASD6UUn48Y9uZAFfbjisf+OrcVerApcybgJU4JeuFclNTiD9d5rCDlZ4U38u/JUu8X+U6YWvPj4xTLjuC0ECd1OBbf9AUmEmzRFI2S/aNnzJwyvmhsEhygUXIbpqmAj7+UlJc3NYQxiylwu1ruWB/PuQ4xToG55fSOzP5CCp2UvL/S6lO8hbAIDdZTnL7arVwVP/TYG/GbJ2eHjONxmdj5hBd5534vWQvT8c93vkP</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:106382CB33771DAEE05305991F0A8191</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:106382CB33831DAEE05305991F0A8191</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>RET</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>urn:dece:policyid:org:dece:106382CB33AF1DAEE05305991F0A8191</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79620</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Copy of TC_DECE0113- StreamListView - DECECS - Account has single active stream and one deleted streams</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A106382CB33771DAEE05305991F0A8191</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3A106382CB33AF1DAEE05305991F0A8191</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property><con:property><con:name>urnPolicy</con:name><con:value>urn:dece:policyid:org:dece:</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>098c72da-d8d1-4b16-843d-196c2268e3bc</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListView1" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="830a72ee-a601-478c-a051-d3c117f46372" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c450e010-26e6-4d08-a347-ca3beb317083"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeStreamListView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectStreamActiveCnt",null);
tC.setPropertyValue("httpContentEncoding",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("streamHistoryRows",null);
tC.setPropertyValue("streamFlagCreateDateOld",null);
tC.setPropertyValue("streamFlagIgnoreCreatedDate",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="124d3b28-2f8e-4961-a21b-09aa87016cd3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;
String expectRequestingUser;
String expectDBDeletedTime;
String expectDBCreatedTime;
String streamFlagCreateDateOld;
String streamFlagIgnoreCreatedDate;
String streamFlagIgnoreDeletedDate;
String expectDBCreatedByNodeType;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));
tC.setPropertyValue("expectRequestingUser",callTC.getPropertyValue("expectRequestingUser"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("streamFlagCreateDateOld",callTC.getPropertyValue("streamFlagCreateDateOld"));
tC.setPropertyValue("streamFlagIgnoreCreatedDate",callTC.getPropertyValue("streamFlagIgnoreCreatedDate"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)

if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt",tP.getPropertyValue("streamlimit"))
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","0")
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0")
}
if (tC.getPropertyValue("streamFlagIgnoreCreatedDate") == null || tC.getPropertyValue("streamFlagIgnoreCreatedDate") == "") {
	tC.setPropertyValue("streamFlagIgnoreCreatedDate","false")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenidFULL_"   + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectRequestingUser = "expectRequestingUser_" + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	expectDBDeletedTime = "expectDBDeletedTime_" + (i + 1);
	expectDBCreatedTime = "expectDBCreatedTime_" + (i + 1);
	streamFlagCreateDateOld = "streamFlagCreateDateOld_" + (i + 1);
	streamFlagIgnoreCreatedDate = "streamFlagIgnoreCreatedDate_" + (i + 1);
	streamFlagIgnoreDeletedDate = "streamFlagIgnoreDeletedDate_" + (i + 1);
	expectDBCreatedByNodeType = "expectDBCreatedByNodeType_" + (i + 1);
		
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
	tC.setPropertyValue(expectRequestingUser,callTC.getPropertyValue(expectRequestingUser));
	tC.setPropertyValue(expectDBDeletedTime,callTC.getPropertyValue(expectDBDeletedTime));
	tC.setPropertyValue(expectDBCreatedTime,callTC.getPropertyValue(expectDBCreatedTime));
	tC.setPropertyValue(streamFlagCreateDateOld,callTC.getPropertyValue(streamFlagCreateDateOld));
	tC.setPropertyValue(streamFlagIgnoreCreatedDate,callTC.getPropertyValue(streamFlagIgnoreCreatedDate));
	tC.setPropertyValue(streamFlagIgnoreDeletedDate,callTC.getPropertyValue(streamFlagIgnoreDeletedDate));
	tC.setPropertyValue(expectDBCreatedByNodeType,callTC.getPropertyValue(expectDBCreatedByNodeType));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="fcf2a5b2-a9fe-4ec3-940a-d20575eaaf98"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView" id="e57c5c43-4633-4c64-8a22-f155beda83be"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="HEAD" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" mediaType="application/xml" sslKeystore="5490_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="36f184d1-ef4f-4dc9-bd70-083f6acf9580"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="6c4ed5d6-f583-41a5-b6e6-57f687655006"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamListView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamListView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	default:
		errId = tC.getPropertyValue("expectErrTypeStreamListView").toString();
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="838b6c0d-a325-4e91-ab17-4db3f39f5cfe"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

	int lastColon = sh.lastIndexOf(':');
	String hsh = sh.substring(lastColon +1,sh.length());
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
//	case "Node_status_inactive":
//		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
//		processXMLFlag  = true;
//		errorID = "Bad_Request";
//		errorReason = "Node_status_inactive";
//		errorLink = "";
//	break;
	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
				expectRequestingUser = "";
			} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				if (	expectValue == "active") {
					doValidations = true;
				} else {
					doValidations = false;
				}
			} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;

				/*  StreamHandleID */
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
				assert recvsh == expectsh;

				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				assert recvru == expectRequestingUser;
		
				// RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

				int rCnt = myHistoryXML.ResultSet.Row.size();

				log.info "-------------HISTORY-----------------";
				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
					rCnt -= 1;
				} 
				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
				for (int i = 0; i < rCnt; i++) {
					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
					assert hrecvModifiedBy == hexpectModifiedBy;

					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
					if (hexpectStatus == "active") {
						assert hrecvStatus == "urn:dece:type:status:active";
					} else {
						assert hrecvStatus == "urn:dece:type:status:deleted";
					}
					
					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
					switch (hexpectStatus) {
						case "active": hexpectDescription = "active"; break;
						case "deleted": hexpectDescription = "deleted"; break;
						default: hexpectDescription = "deleted"; break;
					}
					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
					assert hrecvDescription == hexpectDescription;
	
					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
					
				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}

		log.info "--------------------FINAL XML size() Validations -------------------";
		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
		assert myXML.Stream.size() == displayStreamCount;
		
		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_59089 - StreamListView - DECE - Stream list view using HEAD method</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>5490</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dece</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DBD14DB9B2A29C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DBD14DB9B28D9C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:DBD14DB9B28D9C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_bbaac656-7767-48a9-a553-d3cc543a5aed</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVdZk6LKEn73VxjOo2GziVtMd0SxiooK4vpyA4sSUARkEfTXnwJb2+7pmTPnPnTYleTyZeZHkvUzNo8e3QNxjKLEDfyqIrzW/rfdmiZssa1Gu91qN5ods9swWZZpWAyEbJMxWRNZtaoSxylS/Dgx/eS1RpMU3SDbDaprUFSPJnt086XZbW5q1QWKYuwaq7yQtWp+9Py4V4Z9raWR3wvM2I17vnlEcS+BvRlQRz2s2TPvmGpvP28oy4DRm5MkYY8g4IuFIPI8+AKDI/GT+KTz04p7M9f2zSSN0HtMK36tvdtmWfaSMS9BZBM0SZIE2SWwjhW79o/aW+VujCzF3wW3M2/6ge9C03OvZgFKRYkTWFXg2UHkJs7xN64pgiIL1w2Uwwakmv6PGvERoET3l54+gYxisxE7JnV3pqMdipAPUXWuK6+1H3/XwZutEZl+vAuiY/zl/N8gIf+MvCBEViO+Z3ZH9/cevynX208Ee4oPvTR2z2hc0CQ0IYqr0wjt3Hzkxph8Vlwt21/N4zvDEPwvLflJPOPEsIlvKiO4NoqT/6dfz726eVmYXorejmEQEPud5C244WAC2f0+XJ4CZaYftNcSwrPyDdSj1e/nr0R98OrdaOIIgbUktsZ0HQY0gtNFvs82QtjMwd7dSMNJZ99ehcw6ic7MtK4u+z4j9y+U4fRRvNwsTsOJq2yOC2Cd1FYFDQaiJ1B65hNsu77wbUqkcp9w/WNIwO5cVg/JuDMeELlKB/GaIQbAOmzs/ljZwGAYXML0vHHlFmSHrpdX9pzsjlvqqM6Zy+R4cC6w8/qR03MORV5DdCmTLP5fsWRXMBPzceCLSbHDr2eC3lRFEdIrz4PLzAaZwgEb/+3BmLMPJ+fgyt2M5ICmSUDgOW8vjlRwkAE1FzlH5RcLNeevYMDZ4wU2NCrA23CqLmZCthYWmtYXM8ew5MVlK3vp5iqOVRCXxryjirq4EHRDVFUQ3GS5KmzlfK/O1EzR1kIFOxDEPLxacjdBcu5CWmHVGUuvZ2y6WS2wXLqMjuPz1hA9lVdlfnaSZ8qWETRxAPT1EtJSim2vI0ybynrOPRkNQrQHSMpIHBNcVeOQqcacHgu6WcqMzzJVkQeqFme8VmYlV8RssJhfP2rBcypvHcVcNMD0Vgto8NKY3KwGsblkfVUHmWCXxkMxsyZ3IKpGZhX+VquRmOmiPh9Lqq5kIihlgph58ZYeO1vZOUNGywcG2D83htfEpeTj575+hhf2VDFlCWyPCwoyugNd1jVXQWZvOpmgrQfDYKNgN2OgiRynAQyIBEVquP4cGHELdhK6XdpFo50UHJETVVQqGB7O15zsuMzEno6XrLA7tKeyO2VMyyEUD9J75gAUBVlDytFMS18TuuC719ZkOF8hN1pfkzGrUS23w1b0ZTpfCYHXtvqr9XxYz9dQMybT2Xw5veb5+LTvXL2kP+H60WygCvZkjNA0hnWCNCXO6Agsv+7vMZ92OonYCrBVDgB5b9uiiwnM9fc3EvZ1VcTkBSqfyfySl2dAluuiwgmatpMcagrlRTqnxqoiWh4u02W90r3KhucE3CnSXG7CNS2RGwNYpTOtKUq2NmfrgxXaaGPPWCQgCxc7n6JIOdT6OzWzoVowwFKyGYffIq6SKmBuTsIBmQ8XLZI6aZY3mHXBnMln9CGfOPbmcrA3B9yU9dOrszaAtzCeOKZgii0rmiHqKujc3rdcVeaM7sFjHm6PMBcM3LPSODA4UZc0cp4LAhjeZLEB6DxeX8W9youlfQXkqolpcd6unHjtj92JIaaYtOkTXfZbmvxXjhUUq3zm2IkHGvjKMfHGMRHsTnWlI1Ax2+LDeJnZnCyetPZiNOiGpLYaHSpcXSLsxPWaE7+TGcP6krpkbWevLZddRXD4ur9bO8w24UjzCjU0OLRlVz8IfqvpXdSRqrFzl/Au5B6dsnhUGSuULzLJVSK6UVrnjhv3eL0yTXp+nM7SszI3hzF1cbanZTfbT/stgojkC3ttb86atArg+vYd+TokH8LbGCWeB+ynCXzfvWbpdo9gcj8W32FFqEr442gmf97jColrNXalai8slsE4QX5Seyusih2ul+JNz7V6+Mt5O4NOl6EkUmgxvNRpCYxINkl8BmS7223RfPO+7N1QfIHIB/7OLWIV6+ztY/1ngPDY2yIzQlHtD56KOlUVX8fbR+DHyAheayxLk5IotltAktotsUN1OZ5km3ybpFpNtsPUquMgmfiTCOwSFH1syDT5dUPWEXRDFxVr9PsuESe4ECfznCYe/XI2X3yU4j07KlbdXpskaSJ2j6GHCrjEMbBSD72ETliWhYhvv3TDhHEpZZtdstxxfpvd12f3QmAdyy0U4iIXDuEmom9WfeqeyC8JM99eCe7uQWq5xSqDq5pELrwh+fzogyQFOx4MKVK6Y36o/rUp9asp8QdExNdiPCJZZ/cp7v3CgndwvKWV95QY9/Jkvpxe0vM5/ehehN0TFIH/myGY4jXyYgQH5BMPF8RfbfAP1F8iP+Sf8aWJ488S/PofMdWq5fHfr2+frHEJEpQn38l4D1/YiuB/vNPBHiz0sHiKf7Ig+sjhO19PcTDkYnS5vl2citX78psGwwC7dfH4CqJn5985+C74Z+GjXg8sCSbGNk3Q759Ui7n0WjMhDFI/UYRaKXielSXO5BKi3ofSL27K5ff9NpPHv73NrNTRDDroaNYeuu6/KzfcsvMQYavYLbG81nJ8McfBfftpNr8D/Dye2xLd7kpdPKKblEA9j2cSdFuPAn7K5O0X8a+Sp5p+pfbbPw==</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:A87F279F9F0D41D1E0401F0A07990A96</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:A8931F0D63CF86D3E0401F0A079962C4</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate</con:name><con:value>false</con:value></con:property><con:property><con:name>username</con:name><con:value>pjgorg1full2</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value>12</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9C687F959B4B13ABE0401F0A059957EB</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:DBD14DB9B2A29C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:DBD14DB9B28D9C3EE0401F0A079958C7</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9C687F959B4B13ABE0401F0A059957EB</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2013/05/03 13:35:45</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C5AAB62B5BD82DEBE0401F0A05993203</con:value></con:property><con:property><con:name>rightstokenidFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/07/25 16:11:25</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C5AAB62B5BDB2DEBE0401F0A05993203</con:value></con:property><con:property><con:name>rightstokenidFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectDBDeletedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/07/25 16:11:50</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F26EC3521DDD5E0401F0A059963C9</con:value></con:property><con:property><con:name>rightstokenidFULL_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:10</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:01</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F26EC3528DDD5E0401F0A059963C9</con:value></con:property><con:property><con:name>rightstokenidFULL_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:44</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:35</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F2F9D6DC99C1EE0401F0A0799522D</con:value></con:property><con:property><con:name>rightstokenidFULL_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:59:06</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F2F9D6DCC9C1EE0401F0A0799522D</con:value></con:property><con:property><con:name>rightstokenidFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectDBDeletedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:59:27</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2557D2BCBF3A8C1E0401F0A0799044C</con:value></con:property><con:property><con:name>rightstokenidFULL_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:15:58</con:value></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:15:49</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2557D2BCBF8A8C1E0401F0A0799044C</con:value></con:property><con:property><con:name>rightstokenidFULL_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:31</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:22</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6CCA1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:53</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6D1A1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:26</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6D6A1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:09</con:value></con:property><con:property><con:name>expectDBCreatedTime_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:59</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6DBA1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:32</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF324194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:14</con:value></con:property><con:property><con:name>expectDBCreatedTime_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:05</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF329194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:46</con:value></con:property><con:property><con:name>expectDBCreatedTime_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:36</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF32E194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:19</con:value></con:property><con:property><con:name>expectDBCreatedTime_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:09</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF333194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:50</con:value></con:property><con:property><con:name>expectDBCreatedTime_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:41</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF338194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:24</con:value></con:property><con:property><con:name>expectDBCreatedTime_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:15</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C81D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:56</con:value></con:property><con:property><con:name>expectDBCreatedTime_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:47</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C87D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:29</con:value></con:property><con:property><con:name>expectDBCreatedTime_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:20</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C8CD1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:53</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C91D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:27</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA77AC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:09</con:value></con:property><con:property><con:name>expectDBCreatedTime_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:59</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA77FC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:31</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA784C30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:17</con:value></con:property><con:property><con:name>expectDBCreatedTime_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:05</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA789C30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:42</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA78EC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:25</con:value></con:property><con:property><con:name>expectDBCreatedTime_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:15</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FF5D015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:50</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FF8D015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectDBDeletedTime_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:27:12</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FFBD015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9C687F959B4B13ABE0401F0A059957EB</con:value></con:property><con:property><con:name>expectDBDeletedTime_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:27:32</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248EB2BA3145732E0401F0A07993200</con:value></con:property><con:property><con:name>rightstokenidFULL_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:15:46</con:value></con:property><con:property><con:name>expectDBCreatedTime_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:15:37</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248EB2BA3195732E0401F0A07993200</con:value></con:property><con:property><con:name>rightstokenidFULL_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:12</con:value></con:property><con:property><con:name>expectDBCreatedTime_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:02</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CADBAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:26</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CB2BAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:51</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CB7BAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:27</con:value></con:property><con:property><con:name>expectDBCreatedTime_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:17</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CBCBAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:53</con:value></con:property><con:property><con:name>expectDBCreatedTime_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:42</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79611</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AA87F279F9F0D41D1E0401F0A07990A96</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListViewQHost" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="b061c7de-4593-4b1f-ba73-a72a9a52b12e" disabled="true"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="25c30008-4bd9-4c5f-8bc5-0885f5690e25"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("expectErrTypeStreamListView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectStreamActiveCnt",null);
tC.setPropertyValue("httpContentEncoding",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("streamHistoryRows",null);
tC.setPropertyValue("streamFlagCreateDateOld",null);
tC.setPropertyValue("streamFlagIgnoreCreatedDate",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="8b630537-37b7-4f42-9e9b-958d64dc955f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;
String expectRequestingUser;
String expectDBDeletedTime;
String expectDBCreatedTime;
String streamFlagCreateDateOld;
String streamFlagIgnoreCreatedDate;
String streamFlagIgnoreDeletedDate;
String expectDBCreatedByNodeType;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));
tC.setPropertyValue("expectRequestingUser",callTC.getPropertyValue("expectRequestingUser"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("streamFlagCreateDateOld",callTC.getPropertyValue("streamFlagCreateDateOld"));
tC.setPropertyValue("streamFlagIgnoreCreatedDate",callTC.getPropertyValue("streamFlagIgnoreCreatedDate"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
def assertionAccountIdFULLEncoded = URLEncoder.encode(tC.getPropertyValue("assertionAccountIdFULL"),"UTF-8");
tC.setPropertyValue("assertionAccountIdFULLEncoded",assertionAccountIdFULLEncoded)

if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt",tP.getPropertyValue("streamlimit"))
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","0")
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0")
}
if (tC.getPropertyValue("streamFlagIgnoreCreatedDate") == null || tC.getPropertyValue("streamFlagIgnoreCreatedDate") == "") {
	tC.setPropertyValue("streamFlagIgnoreCreatedDate","false")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenidFULL_"   + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectRequestingUser = "expectRequestingUser_" + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	expectDBDeletedTime = "expectDBDeletedTime_" + (i + 1);
	expectDBCreatedTime = "expectDBCreatedTime_" + (i + 1);
	streamFlagCreateDateOld = "streamFlagCreateDateOld_" + (i + 1);
	streamFlagIgnoreCreatedDate = "streamFlagIgnoreCreatedDate_" + (i + 1);
	streamFlagIgnoreDeletedDate = "streamFlagIgnoreDeletedDate_" + (i + 1);
	expectDBCreatedByNodeType = "expectDBCreatedByNodeType_" + (i + 1);
		
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
	tC.setPropertyValue(expectRequestingUser,callTC.getPropertyValue(expectRequestingUser));
	tC.setPropertyValue(expectDBDeletedTime,callTC.getPropertyValue(expectDBDeletedTime));
	tC.setPropertyValue(expectDBCreatedTime,callTC.getPropertyValue(expectDBCreatedTime));
	tC.setPropertyValue(streamFlagCreateDateOld,callTC.getPropertyValue(streamFlagCreateDateOld));
	tC.setPropertyValue(streamFlagIgnoreCreatedDate,callTC.getPropertyValue(streamFlagIgnoreCreatedDate));
	tC.setPropertyValue(streamFlagIgnoreDeletedDate,callTC.getPropertyValue(streamFlagIgnoreDeletedDate));
	tC.setPropertyValue(expectDBCreatedByNodeType,callTC.getPropertyValue(expectDBCreatedByNodeType));
}


</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="915030c1-59d4-4338-9886-0a8e2f8c224d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView" id="44fa03bf-e816-445a-ab6f-19f40a60d1f1"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" mediaType="application/xml" sslKeystore="9115_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="Tester" value="${#Project#tester}"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="5e8fed1d-f9a6-436b-ba15-5306d51e6e7c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="aecfd747-ebe1-4ea7-853d-c2272be43b21"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamListView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamListView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	default:
		errId = tC.getPropertyValue("expectErrTypeStreamListView").toString();
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="620760c7-d91d-4886-b67d-b7dc21aeb298"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

	int lastColon = sh.lastIndexOf(':');
	String hsh = sh.substring(lastColon +1,sh.length());
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
//	case "Node_status_inactive":
//		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
//		processXMLFlag  = true;
//		errorID = "Bad_Request";
//		errorReason = "Node_status_inactive";
//		errorLink = "";
//	break;
	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
				expectRequestingUser = "";
			} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				if (	expectValue == "active") {
					doValidations = true;
				} else {
					doValidations = false;
				}
			} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;

				/*  StreamHandleID */
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
				assert recvsh == expectsh;

				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				assert recvru == expectRequestingUser;
		
				// RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

				int rCnt = myHistoryXML.ResultSet.Row.size();

				log.info "-------------HISTORY-----------------";
				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
					rCnt -= 1;
				} 
				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
				for (int i = 0; i < rCnt; i++) {
					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
					assert hrecvModifiedBy == hexpectModifiedBy;

					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
					if (hexpectStatus == "active") {
						assert hrecvStatus == "urn:dece:type:status:active";
					} else {
						assert hrecvStatus == "urn:dece:type:status:deleted";
					}
					
					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
					switch (hexpectStatus) {
						case "active": hexpectDescription = "active"; break;
						case "deleted": hexpectDescription = "deleted"; break;
						default: hexpectDescription = "deleted"; break;
					}
					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
					assert hrecvDescription == hexpectDescription;
	
					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
					
				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}

		log.info "--------------------FINAL XML size() Validations -------------------";
		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
		assert myXML.Stream.size() == displayStreamCount;
		
		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_49091 - StreamListView - LLPCS - Stream list view using q host</con:value></con:property><con:property><con:name>sName</con:name><con:value>LASP Linked Customer Support Test Cases</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>9115</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>llpcs</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C7376158FA3F207DE0401F0A07991E70</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C7375BD3ACC97D84E0401F0A07991E72</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C7375BD3ACC97D84E0401F0A07991E72</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value>_d5fa0fab-02b7-4c2e-8f3e-be751e888a9f</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVdbc6JME773V1jupWU4KCrWJlXDUVRUEDzdfIUwAoqgDAj6698BozHZ7L77fhcpM00fnu5+aHp+IusQ0D2AEIwTPwqrivBa+5/DbC1ya20aJL3pNFo2DRvdbRM2NrDDULDb7VrstlZVEEqhEqLECpPXGk1SdIPsNCjWoOge1epRzZc23VrXqnMYI+waq7yQtWp+CELUK8O+1tI47EUW8lEvtA4Q9RK7NwPqqIc1e9YdU+3t5w1lGTB+85Lk2CMI+8WBNgwC+8WODsRP4pPOTwf1Zr4bWkkaw/eYDnqtvdtmWfaSNV+i2CVokiQJkiWwjoN890ftrXI3ho4SbqPbmbfCKPRtK/CvVgFKhYkXOVUQuFHsJ97hN64pgiIL1w2Y2w2baoU/asRHgBLdX3r6BDJGVgN5FnV3psMtjGFow6qpK6+1H3/XwZutEVsh2kbxAX05/zdIMDzDIDpCp4Humd3R/b3Hb8r19hPaPSW0gxT5ZzguaHK0bIiq0xhu/XzkI0w+B1XL9ldzdGcYtP9LS34SzzgxbOKbygi+C1Hy//TruVc3L3MrSOFbuF5R6GqeEm5vMaG+NbsK21a2mrZUX0sIz8o3UI9Wv5+/EvXBq3cjZ7Ji11MjvaTLK8dv8oHD0/HcVRa+SQYksTupZqaK5rFpG85gJMCTx4sSCc36qZnW16ejv6eZo9eKhmK9Wenzs+mI41XUidkO32aHfpTU9XPcMSmWW6tgUx9F7Wm8l7u7cxsqQjcESjQ/X9GFDFnLN9lrul0H68Fs6pOVkST2TeM63J9bS2sz76+g+/qR03MORV5DeCmTLP5fMiQrWIn1OPDFpNji1zOBb6qiCOmV58Fl5oJM4YCL/3ZgzLn7k7f3ZTYjOaBpEhB4LtiJIxXsZUCZIuep/Hyu5vwVDDh3PMeGRgUEa07VxUzIVsJc0/pi5hmOPL9s5CBdX8WxClBpzHuqqItzQTdEVQXRTZarwkbOd+pMzRRtJVSwA0HMj1dHZhMo575NK4w6Y+jVjEnXyzmWS5fRYXzeGGKg8qrMz07yTNk0BU0cAH21sGkpxbbX0eEYVVYm92Q0OMIdgFJG4pjgqhr7TDVMeizoVikzPstURR6oGsp4rcxKrojZYG5eP2rBcyrvHMRcNMD0Vgvb4KUxuV4OkLVgQlUHmeCWxkMxcyZ3IKpGZhX+VquRmOmibo4lVVcyEZQyQcwCtKHH3kb2znZTywcG2D03htfEhRTi56F+ti/MqWLJEtgc5pTd1D3bZ3xrGWXuupsJ2mowjNYKdjMGmshxGsCASFCkhuvPgRE3ZyZHn6V9ONpK0QF6cUWlIsy2a052/ebEnY4XjLDdd6ayP21ajkcogU3vmnugKNAZUp5mOfqK0IXQv7YnQ3MJ/Xh1TcaMRrX9LlPRF6m5FKKg4/SXK3NYz1e2ZkymM3Mxveb5+LTrXoOkP+H68WygCu5kDOEU2XWCtCTO6AoMv+rvMJ+2OgmZCnBVDgB557qijwnM9Xc3EvZ1VcTkBSqfyfyCl2dAluuiwgmatpU8amrL89SkxqoiOgEu02W11IPKmucE3CnSWqyPK1oi1wZwSmdaS5RczWTqgyVca+PAmCcgO863IUWR8lHrb9XMtdWCAY6SzTj8FnGVVAGmNTkOyHw4b5PUSXOCwYwFZjOf0ft84rnry95d73FTVk+vzsoAwdx44piCKbaoaIaoq6B7e99yVTGbemAf8uPmYOeCgXtWGkcGJ+qSRpq5IIDhTYYMQOdodRV3Ki+W9hWQqxamxXmz9NAqHPsTQ0wxadMnuuw2NPmvHCsoVvnMsRMPNPCVY+KNYyLYnupKV6AQ0+aPaJG5nCyetM58NGCPpLYc7StcXSLcxA9ak7CbGcP6grpkHW+nLRasInh8PdyuvOYm4UjramtwsO/Ivr4XwnYruKgjVWNMnwgu5A6eMjSqjBUqFJvJVSLYOK1zh7V/uF6bLdo8TGfpWTGtIaIu3ua0YLPdtN8miFi+MNfO+qxJy8he3b4jX4fkQ3gbo8TzgP00ge+71yzd7KCd3I/Fd1gRqhL+OFrJn/e4QuI7jW2p2jsWyyBKYJjU3gqrYofrpXjT850e/nLezqwgkDzHMKJA0h2OF0WyRVISCcgOyza5Lntf9m4ovkDko3DrF7GKdfb2sf4zQPvQ20ArhnHtD56KOlWVUMfbRxQiaESvNYETeEHkJJrmuhJeqSiKltoC2eG4Did1O61adRwlk3ASg20C448NmSa/bsg6tP2jD4s1+n2XQAkuxMk6p0lAv5ytlxCmeM+Oi1W31yFJmkD+4RjAAi5xiJw0gC9H71iWhUC3X7ph2aiUkixFljvOb7P7+uxeCKzj+IUCKnLhIG4i/GbVJ++J/JJw89srwd09SB2/WGVwVZPYt29IPj/6IEnBjgdDipTumB+qf2fKUhTzqynxB0TE12I8Ijln/ynu/cKCd3C8pZX3FIR7ebJeTi/p+Zx+dC/G7gmKwP/NoJ3iNfJiRHsYEg8XxF9t8A/UXyI/5J/xpYkXzhL8+h8w1arl8d+vb5+scQkSmCffyfgAX9iK4H+809k9u9DD4in+yaLY+aj8N76e4mDIxejyQ7c4Fav35TcNtiPs1sfjK4qfnX/n4Lvgn4WPej2wJJgYmzSBv39SLebSa82y7SgNE0WolYLnWVniTC5H2PtQ+sVNufy+32Zy9NvbzFIdzWwPHqzaQ9f/d+WGX3behtgK+SWW11qOL+Y4eOg+zeZ3gJ/GM9dmAIsHMytwIk/zj/HMsGwHdB7j+XMmb7+If5U81fQrtd/+AQ==</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9B65A97BC9DBEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STREAM_HISTORY_OID>C7376158FA40207DE0401F0A07991E70</STREAM_HISTORY_OID>
      <STREAM_HANDLE_OID>C7376158FA3F207DE0401F0A07991E70</STREAM_HANDLE_OID>
      <RIGHTS_TOKEN_OID>C7375BD3ACC97D84E0401F0A07991E72</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>0900</ACCOUNT_OID>
      <CREATED_BY_USER_OID>null</CREATED_BY_USER_OID>
      <TRANSACTION_ID>null</TRANSACTION_ID>
      <STATUS>active</STATUS>
      <STREAM_CLIENT_NICKNAME>null</STREAM_CLIENT_NICKNAME>
      <EXPIRATION_DATE>2012-08-14 15:24:42.221</EXPIRATION_DATE>
      <CLOSED_DATE>null</CLOSED_DATE>
      <CLOSED_BY_ORG_ID>null</CLOSED_BY_ORG_ID>
      <CREATED_DATE>2012-08-14 09:24:42.221</CREATED_DATE>
      <CREATED_BY_NODE_OID>9115</CREATED_BY_NODE_OID>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate</con:name><con:value>false</con:value></con:property><con:property><con:name>username</con:name><con:value>pjgorg1full2</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value>3</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C7376158FA3F207DE0401F0A07991E70</con:value></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:C7375BD3ACC97D84E0401F0A07991E72</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/08/14 09:24:52</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<StreamList AvailableStreams="2" ActiveStreamCount="1" xmlns="http://www.decellc.org/schema/2012/12/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v1.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:C7376158FA3F207DE0401F0A07991E70">
      <RightsTokenID>urn:dece:rightstokenid:org:dece:C7375BD3ACC97D84E0401F0A07991E72</RightsTokenID>
      <ExpirationDateTime>2012-08-14T15:24:42.221Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreatedBy="urn:dece:org:org:dece:9115" CreationDate="2012-08-14T09:24:42.221Z">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
</StreamList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">904</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C5AAB62B5BD82DEBE0401F0A05993203</con:value></con:property><con:property><con:name>rightstokenidFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/07/25 16:11:25</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C5AAB62B5BDB2DEBE0401F0A05993203</con:value></con:property><con:property><con:name>rightstokenidFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectDBDeletedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/07/25 16:11:50</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F26EC3521DDD5E0401F0A059963C9</con:value></con:property><con:property><con:name>rightstokenidFULL_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:10</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:01</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F26EC3528DDD5E0401F0A059963C9</con:value></con:property><con:property><con:name>rightstokenidFULL_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:44</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:58:35</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F2F9D6DC99C1EE0401F0A0799522D</con:value></con:property><con:property><con:name>rightstokenidFULL_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectDBDeletedTime_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:59:06</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C27F2F9D6DCC9C1EE0401F0A0799522D</con:value></con:property><con:property><con:name>rightstokenidFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9115</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectDBDeletedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/15 07:59:27</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2557D2BCBF3A8C1E0401F0A0799044C</con:value></con:property><con:property><con:name>rightstokenidFULL_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:15:58</con:value></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:15:49</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2557D2BCBF8A8C1E0401F0A0799044C</con:value></con:property><con:property><con:name>rightstokenidFULL_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:31</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:22</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6CCA1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:16:53</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6D1A1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:26</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6D6A1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:09</con:value></con:property><con:property><con:name>expectDBCreatedTime_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:17:59</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255865FE6DBA1E5E0401F0A07991463</con:value></con:property><con:property><con:name>rightstokenidFULL_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:18:32</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF324194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:14</con:value></con:property><con:property><con:name>expectDBCreatedTime_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:05</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF329194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:46</con:value></con:property><con:property><con:name>expectDBCreatedTime_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:19:36</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF32E194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:19</con:value></con:property><con:property><con:name>expectDBCreatedTime_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:09</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF333194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:50</con:value></con:property><con:property><con:name>expectDBCreatedTime_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:20:41</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C2558EFFF338194CE0401F0A07992648</con:value></con:property><con:property><con:name>rightstokenidFULL_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:24</con:value></con:property><con:property><con:name>expectDBCreatedTime_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:15</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C81D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:56</con:value></con:property><con:property><con:name>expectDBCreatedTime_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:21:47</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C87D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:29</con:value></con:property><con:property><con:name>expectDBCreatedTime_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:20</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C8CD1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:22:53</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C25597DB9C91D1A8E0401F0A05990160</con:value></con:property><con:property><con:name>rightstokenidFULL_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:27</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA77AC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:09</con:value></con:property><con:property><con:name>expectDBCreatedTime_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:23:59</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA77FC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:24:31</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA784C30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:17</con:value></con:property><con:property><con:name>expectDBCreatedTime_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:05</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA789C30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:25:42</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A09FA78EC30AE0401F0A05991283</con:value></con:property><con:property><con:name>rightstokenidFULL_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:25</con:value></con:property><con:property><con:name>expectDBCreatedTime_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:15</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FF5D015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:26:50</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FF8D015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectDBDeletedTime_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:27:12</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C255A9C55FFBD015E0401F0A059924E5</con:value></con:property><con:property><con:name>rightstokenidFULL_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">active</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9C687F959B4B13ABE0401F0A059957EB</con:value></con:property><con:property><con:name>expectDBDeletedTime_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/13 06:27:32</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248EB2BA3145732E0401F0A07993200</con:value></con:property><con:property><con:name>rightstokenidFULL_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:15:46</con:value></con:property><con:property><con:name>expectDBCreatedTime_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:15:37</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248EB2BA3195732E0401F0A07993200</con:value></con:property><con:property><con:name>rightstokenidFULL_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:12</con:value></con:property><con:property><con:name>expectDBCreatedTime_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:02</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CADBAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:36</con:value></con:property><con:property><con:name>expectDBCreatedTime_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:26</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CB2BAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:16:51</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CB7BAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:27</con:value></con:property><con:property><con:name>expectDBCreatedTime_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:17</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:C248F2913CBCBAF3E0401F0A079941EE</con:value></con:property><con:property><con:name>rightstokenidFULL_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">0914</con:value></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>expectDBDeletedTime_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:53</con:value></con:property><con:property><con:name>expectDBCreatedTime_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2012/06/12 15:17:42</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79611</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for ParentalControlRating" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="dd421dbd-946d-40e2-843d-a3753db32322"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="01f2bcd4-ee19-4efd-9e68-fdffea4fd64e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="5c263a55-2b80-4b79-b59c-6acbc8667f06"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Policy &lt;dece:Resource> XML" id="a084b855-564f-489b-8669-2176402ab39e"><con:settings/><con:config><script><![CDATA[def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

	
mmpaRatingsUS = ["us:mpaa:g","us:mpaa:pg","us:mpaa:pg-13","us:mpaa:r","us:mpaa:nc-17"];
tvpgRatingsUS = ["us:tvpg:tv-y","us:tvpg:tv-y7",/*"us:tvpg:tv-y7-fv",*/"us:tvpg:tv-g","us:tvpg:tv-pg","us:tvpg:tv-14","us:tvpg:tv-ma"];
tvpgRatingsreasoncodesUS = ["us:tvpg:v","us:tvpg:s","us:tvpg:l","us:tvpg:d","us:tvpg:fv"];
fabUS = ["us:fab:c","us:fab:f","us:fab:pd","us:fab:pd-m","us:fab:em","us:fab:ao"];
fabreasoncodesUS = ["us:fab:violence","us:fab:frightening","us:fab:sexual","us:fab:mildlang","us:fab:stronglang","us:fab:substance","us:fab:intense","us:fab:bnudity","us:fab:fnudity","us:fab:explicit","us:fab:erotica"];
esrbgamesUS = ["us:esrb:ec","us:esrb:e","us:esrb:e10+","us:esrb:t","us:esrb:m","us:esrb:ao","us:esrb:rp"];
mpaattrailersUS = ["us:mpaat:gb","us:mpaat:rb"];
tvmovieRatingsGB = ["gb:bbfc:u","gb:bbfc:pg","gb:bbfc:12","gb:bbfc:15","gb:bbfc:18","gb:bbfc:r18"];
chvrsRatingsCA = ["ca:chvrs:g","ca:chvrs:pg","ca:chvrs:14a","ca:chvrs:18a","ca:chvrs:r"];
cbscRatingsCA = ["ca:cbsc:c","ca:cbsc:c8","ca:cbsc:g","ca:cbsc:pg","ca:cbsc:14+","ca:cbsc:18+"];
filmtvifcoIE = ["ie:ifco:g","ie:ifco:pg","ie:ifco:12","ie:ifco:15","ie:ifco:18"];
filmtvncsAU = ["au:ncs:g","au:ncs:pg","au:ncs:m","au:ncs:ma15","au:ncs:r18"];
filmtvoflcNZ = ["nz:oflc:g","nz:oflc:pg","nz:oflc:m","nz:oflc:rp13","nz:oflc:r13","nz:oflc:r15","nz:oflc:rp16","nz:oflc:r16","nz:oflc:r18","nz:oflc:r"];
MocRatingFR = ["FR:MOC:U","FR:MOC:10","FR:MOC:12","FR:MOC:16","FR:MOC:18"];
FSKRatingDE = ["DE:FSK:0","DE:FSK:6","DE:FSK:12","DE:FSK:16","DE:FSK:18"];
FSKRatingAT= ["AT:FSK:0","AT:FSK:6","AT:FSK:12","AT:FSK:16","AT:FSK:18"];
FSKRatingCH= ["CH:FSK:0","CH:FSK:6","CH:FSK:12","CH:FSK:16","CH:FSK:18"];
KijkwijzerRatingBE= ["BE:KIJKWIJZER:AL","BE:KIJKWIJZER:6","BE:KIJKWIJZER:9","BE:KIJKWIJZER:12","BE:KIJKWIJZER:16"];
MocRatingLU = ["LU:MOC:U","LU:MOC:10","LU:MOC:12","LU:MOC:16","LU:MOC:18"];
FSKRatingLU= ["LU:FSK:0","LU:FSK:6","LU:FSK:12","LU:FSK:16","LU:FSK:18"];
KijkwijzerRatingNL= ["NL:KIJKWIJZER:AL","NL:KIJKWIJZER:6","NL:KIJKWIJZER:9","NL:KIJKWIJZER:12","NL:KIJKWIJZER:16"];

String resourceXml = "";
String urnRating   = testProject.getPropertyValue("urnRating");

def resource = testCase.getPropertyValue("policyResource");

switch (resource) {
	case "${urnRating}us:mpaa:g":
	case "${urnRating}us:mpaa:pg":
	case "${urnRating}us:mpaa:pg-13":
	case "${urnRating}us:mpaa:r":
	case "${urnRating}us:mpaa:nc-17":
		for (rating in mmpaRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
	case "${urnRating}us:tvpg:tv-y":
	case "${urnRating}us:tvpg:tv-y7":
	//case "${urnRating}us:tvpg:tv-y7-fv":
	case "${urnRating}us:tvpg:tv-g":
	case "${urnRating}us:tvpg:tv-pg":
	case "${urnRating}us:tvpg:tv-14":
	case "${urnRating}us:tvpg:tv-ma":
		for (rating in tvpgRatingsUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        case "${urnRating}us:tvpg:v":
	case "${urnRating}us:tvpg:s":
	case "${urnRating}us:tvpg:l":
	case "${urnRating}us:tvpg:d":
	case "${urnRating}us:tvpg:fv":
		for (rating in tvpgRatingsreasoncodesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
        case "${urnRating}us:fab:c":
	case "${urnRating}us:fab:f":
	case "${urnRating}us:fab:pd":
	case "${urnRating}us:fab:pd-m":
	case "${urnRating}us:fab:em":
	case "${urnRating}us:fab:ao":
        	for (rating in fabUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
        case "${urnRating}us:fab:violence":
	case "${urnRating}us:fab:frightening":
	case "${urnRating}us:fab:sexual":
	case "${urnRating}us:fab:mildlang":
	case "${urnRating}us:fab:stronglang":
        case "${urnRating}us:fab:substance":
	case "${urnRating}us:fab:intense":
	case "${urnRating}us:fab:bnudity":
	case "${urnRating}us:fab:fnudity":
	case "${urnRating}us:fab:explicit":
	case "${urnRating}us:fab:erotica":
		for (rating in fabreasoncodesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;

        case "${urnRating}us:esrb:ec":
	case "${urnRating}us:esrb:e":
	case "${urnRating}us:esrb:e10+":
	case "${urnRating}us:esrb:t":
	case "${urnRating}us:esrb:m":
	case "${urnRating}us:esrb:ao":
        case "${urnRating}us:esrb:rp":
        	for (rating in esrbgamesUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;

        case "${urnRating}us:mpaat:gb":
        case "${urnRating}us:mpaat:rb":
        	for (rating in mpaattrailersUS) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				break;
			}
		}
		break;
   
     //case "${urnRating}gb:bbfc:e":  
	case "${urnRating}gb:bbfc:u":
	case "${urnRating}gb:bbfc:pg":
	case "${urnRating}gb:bbfc:12":
	case "${urnRating}gb:bbfc:15":
	case "${urnRating}gb:bbfc:18":
	case "${urnRating}gb:bbfc:r18":
		for (rating in tvmovieRatingsGB) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>" + rating.replaceAll("&","&amp;") + "</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

           //case "${urnRating}ca:chvrs:e":
        case "${urnRating}ca:chvrs:g":
	case "${urnRating}ca:chvrs:pg":
	case "${urnRating}ca:chvrs:14a":
	case "${urnRating}ca:chvrs:18a":
	case "${urnRating}ca:chvrs:r": 
	case "${urnRating}ca:chvrs:e":
		for (rating in chvrsRatingsCA) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

        //case "${urnRating}ca:cbsc:e": 
        case "${urnRating}ca:cbsc:c":
	case "${urnRating}ca:cbsc:c8":
	case "${urnRating}ca:cbsc:g":
	case "${urnRating}ca:cbsc:pg":
	case "${urnRating}ca:cbsc:14+":
        case "${urnRating}ca:cbsc:18+":
      	case "${urnRating}ca:cbsc:e":
      		for (rating in cbscRatingsCA) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        //case "${urnRating}ie:ifco:e": 
        case "${urnRating}ie:ifco:g":
	case "${urnRating}ie:ifco:pg":
	case "${urnRating}ie:ifco:12":
	case "${urnRating}ie:ifco:15":
	case "${urnRating}ie:ifco:18":
      		for (rating in filmtvifcoIE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        //case "${urnRating}au:ncs:e": 
        case "${urnRating}au:ncs:g":
	case "${urnRating}au:ncs:pg":
	case "${urnRating}au:ncs:m":
	case "${urnRating}au:ncs:ma15":
	case "${urnRating}au:ncs:r18":
      		for (rating in filmtvncsAU) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        
        //case "${urnRating}nz:oflc:e": 
        case "${urnRating}nz:oflc:g":
	case "${urnRating}nz:oflc:pg":
	case "${urnRating}nz:oflc:m":
	case "${urnRating}nz:oflc:rp13":
	case "${urnRating}nz:oflc:r13":
	case "${urnRating}nz:oflc:r15":
	case "${urnRating}nz:oflc:rp16":
        case "${urnRating}nz:oflc:r16": 
        case "${urnRating}nz:oflc:r18":
	case "${urnRating}nz:oflc:r":
	      		for (rating in filmtvoflcNZ) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
        
         case "${urnRating}FR:MOC:U":
	case "${urnRating}FR:MOC:10":
	case "${urnRating}FR:MOC:12":
	case "${urnRating}FR:MOC:16":
	case "${urnRating}FR:MOC:18":
      		for (rating in MocRatingFR) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

	case "${urnRating}DE:FSK:0":
	case "${urnRating}DE:FSK:6":
	case "${urnRating}DE:FSK:12":
	case "${urnRating}DE:FSK:16":
	case "${urnRating}DE:FSK:18":
      		for (rating in FSKRatingDE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}AT:FSK:0":
	case "${urnRating}AT:FSK:6":
	case "${urnRating}AT:FSK:12":
	case "${urnRating}AT:FSK:16":
	case "${urnRating}AT:FSK:18":
      		for (rating in FSKRatingAT) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}CH:FSK:0":
	case "${urnRating}CH:FSK:6":
	case "${urnRating}CH:FSK:12":
	case "${urnRating}CH:FSK:16":
	case "${urnRating}CH:FSK:18":
      		for (rating in FSKRatingCH) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
      case "${urnRating}BE:KIJKWIJZER:AL":
	case "${urnRating}BE:KIJKWIJZER:6":
	case "${urnRating}BE:KIJKWIJZER:9":
	case "${urnRating}BE:KIJKWIJZER:12":
	case "${urnRating}BE:KIJKWIJZER:16":
      		for (rating in KijkwijzerRatingBE) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}LU:FSK:0":
	case "${urnRating}LU:FSK:6":
	case "${urnRating}LU:FSK:12":
	case "${urnRating}LU:FSK:16":
	case "${urnRating}LU:FSK:18":
      		for (rating in FSKRatingLU) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}LU:MOC:U":
	case "${urnRating}LU:MOC:10":
	case "${urnRating}LU:MOC:12":
	case "${urnRating}LU:MOC:16":
	case "${urnRating}LU:MOC:18":
      		for (rating in MocRatingLU) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;

		case "${urnRating}NL:KIJKWIJZER:AL":
	case "${urnRating}NL:KIJKWIJZER:6":
	case "${urnRating}NL:KIJKWIJZER:9":
	case "${urnRating}NL:KIJKWIJZER:12":
	case "${urnRating}NL:KIJKWIJZER:16":
      		for (rating in KijkwijzerRatingNL) { 
			rating = urnRating + rating;
			this.log.info "rating[$rating] - resource[$resource]";
			resourceXml += "<dece:Resource>$rating</dece:Resource>\n";
			if (rating == resource) {
				log.info "Terminating Loop";
				break;
			}
		}
		break;
	default:
		resourceXml = "<dece:Resource>$resource</dece:Resource>";
		break;
}

this.log.info "resource [$resource]";
this.log.info "resourceXml [$resourceXml]";

testCase.setPropertyValue("policyResourceXML", resourceXml);
]]></script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate" id="d2208da9-4741-4f08-9344-ca8efb57eb45"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate" mediaType="application/xml" postQueryString="false" id="3b8441db-ba0c-4f77-ab67-67889879e318" sslKeystore="DLASP_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>
      ${#TestCase#policyResourceXML}  
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlRating}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="49ffcf22-1105-472e-80b8-3bf4c2189da8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="4fd8aa0d-b8ad-4ae7-bd38-71be50f53366"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - PolicyCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="d9f350e8-f608-4d34-9c37-a7324195e707"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVbtcto6EH0Vxv3ZAdnGQOwJzJiPpiSkpJjkJvzpKPLaqNgysWRD+vRXMuACIbm0d4YZRuvV7tkPnd1LjuPIdFzOIRU0YZV1HDHuFNK2lqXMSTCn3GE4Bu4I4nju7cgxa7qDd1e0yrDf1n6YF8GzTaBZNX2rUbUC3azipmVXSdC8aOlmvWU0DanKeQZDxgVmoq2ZumFVdbtq6FPddkz502uWZc+0ygOkXNqWKjVd24Ja87Y2F2LpILRarWqrei1JQ2TquoEeb0cemUOMtc7lJqLCUdrZ6pOaDwSiiNRIEqNLdKBz6XPHoyHDIkth68t/z5eOdBtJHZ/T8JNW3gV/yIKkOPYwSxglOKK/sMrPLYh54lfcKExSKubxu0EYujJchTWpEsNinzR0CO1MQwcIU46rfI6Nra0JBJACI1C5nwzb2qfzqlZcnaaY8SBJY354/DM8wHKIkiX4Vb4LawvtfIMnMtW5BOIMGYkyTnP4ppp1iQnwbTWBnG+qcpdCQNcjymWDrrlCh/bhHR032ejTELj4mwLtFWdj5AFHGXQ89yle6/csQMbT1crqvzZ63/8JxUqvf28XAPaVC0FZ2s3xqCnLJtrcwOufPb3XvXbZ5+ln89pe/Fqv0Nfu+MZH9uP029S6fxzePfcXo37jcT5+mnk3/eYTdW/MaJVPwkV4e/s8cXmvSZtfoTXDoj8bo/x6dDXAjfsr7ylyF3e4vhAtL9BRbnLeq38NmtFV3kWDcB6OR9f5+CFsunezmD5Mjfrj7GURf4+a417EuoZxMR3MLl6uGj+bs9GwXYazh/9QtnvzXvb8E4jYHVUbDPuVL7JKWHxMZkpC/WpQqDpLRT5cABNaR91S3OFkku6o78gabs662a03Bnbry8AwG27TGOiNut6wbeOL7hp1q74jmQ2KI4i9hAVU+VKUu2mbjwGS2OHAfEireZJJpuPaBxb7WODKkE3kI0gYh2ki6TlJAiskmC1MHLWgHsNrFBs6aJVviRizceoGAtIDRjbMA0aeAKFLCoq2VVdz2dZcyEy84DwTkVHLcY1BJok9VRzrmNZFA3EaLyNQOFGc+FkEteV8WeQF8c2/pBvCC+lkMC3e2rtRHX/bJUDq+FQpcBVLF2QR4cRoMXaBvAm4cXIE7cy7mU/Vs5LZFCklGySHn343ieqOskP6I9e724Eudf/g7o+e98P4SwOj/2tA1uPtTfRBTtBxOUpHfk733O72BjmBJGd1ds30gmsvtSzPs6J9WoqbU2keqQIh3UQekEyy6us0WQBDpRV01ggrgR85L+WHEDMxZ57AAmLZ75XieMbO4gFXO8tQPtP1uQvRgUuZOgFrcUrWi+S+pRB/uJIRhyg9Kb6Tf6sk9X9X7IStPT8yTrmyCMpCdVLj6/WdviCJNEsl8SbpvvFTBk45PxSWSS6xCNlQz5mA979UFKO2NUxIkjEx7GuFYJ/lC5zidQnOb6U3ZopBUm6W9L9XyyotWoBIzpT6hX21IDjqCbBwb1Jsnb4ZFj3bHgxc13L79WJYtDbDondhdcukHKDrvBG/lezl6bjHO/8C</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B35C99EEAA4AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:02B35C99EEAA4AD3E05307991F0AC84B/User/urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343/Policy/urn:dece:type:policy:ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value>urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value>urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value>urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343</con:value></con:property><con:property><con:name>policyResource</con:name><con:value>urn:dece:type:rating:FR:MOC:18</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Establish Parental Control Rating</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResourceXML</con:name><con:value><![CDATA[<dece:Resource>urn:dece:type:rating:FR:MOC:U</dece:Resource>
<dece:Resource>urn:dece:type:rating:FR:MOC:10</dece:Resource>
<dece:Resource>urn:dece:type:rating:FR:MOC:12</dece:Resource>
<dece:Resource>urn:dece:type:rating:FR:MOC:16</dece:Resource>
<dece:Resource>urn:dece:type:rating:FR:MOC:18</dece:Resource>
]]></con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77323</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35C99EEAA4AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">02B35E97FE125A61E05305991F0A1343</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>d2208da9-4741-4f08-9344-ca8efb57eb45</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy GET for ParentalConrolRating" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="8245d746-f8e0-49e0-8e5f-05e0082a5c84"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2540e859-243b-47e3-9a6e-6166719d6bd7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("returnXMLResult",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="505e3d4a-fb0c-4b9c-96fe-e65858ec295b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

tC.setPropertyValue("returnXMLResult",callTC.getPropertyValue("returnXMLResult"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}
if (tC.getPropertyValue("returnXMLResult") == null || tC.getPropertyValue("returnXMLResult") == "") {
		tC.setPropertyValue("returnXMLResult","false");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="96e6b20b-45cc-4fa5-a916-e61d1a8eded1"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet" id="6ae2f08c-10a7-4e24-8195-8d1921d0534c"><con:settings/><con:config service="Policy Get" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet" mediaType="application/xml" id="150768de-6b9f-4aef-ac26-2c603ab192d8" sslKeystore="DLASP_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="ACCT" value="${#TestCase#assertionAccountIdFULL}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlRating}"/>
  <con:entry key="USER" value="${#TestCase#assertionUserIdFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="1438dc39-50ab-4eba-93e8-c43ee5e14d1d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="3b788104-2772-4cd9-b904-17b52e572481"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myXML;
def XMLbody = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema")

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	try {
		myXML = new XmlSlurper().parseText(XMLbody);
	}
	catch(Throwable e) {
		log.info "ERROR - XmlSlurper - $e";
		assert 1 == 2;
	}
	finally {
		xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
		log.info "xmlPolicyClass[$xmlPolicyClass]";
		log.info "tcPolicyClass[tcPolicyClass]";
	}
}

if (httpStatus == "HTTP/1.1 200 OK" ) {
	def myXML1 = new XmlSlurper().parseText(XMLbody);
	def PolicyIDFull = myXML1.Policy.@PolicyID.text().toString();
	int lastColon = PolicyIDFull.lastIndexOf(':');
	PolicyID     = PolicyIDFull.substring(lastColon + 1);
	log.info"=========="+PolicyID
	policyWasFound = "true";
	tC.setPropertyValue("PolicyID",PolicyID);
	
	
} else if ( httpStatus == "HTTP/1.1 404 Not Found") {
	policyWasFound = "false";
	
} else {
	log.info "ERROR!";
	assert 1 == 2;
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="fc3a4c2f-c9f6-4d94-b12e-1cbf97c34373"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));


if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZpb+I8EP4rKP1YhZwciQoS5zZdoC2h55fKdRwwJA61HaD99a8dIAVK+7K7EhLyZDzzzOFn5oKBODLdBmOIcpyQwiqOCHMzaU1JKXETwDBzCYgRczl0/Ua/55pF3QXbK0rBa9eUF8t8tQIbQVVHAKl2YJuqYzlQdaqVaqi/OkHFMoQqYynyCOOA8Jpi6kZJ1S3xGxmGWzJc2yqKS89K4R5RJmwLlaKubECtWE2ZcD53NW25XBaXVjGhY83UdUN77Pd8OEExUOoX64gyR7S+0YfFAEEURbAIk1i70PZ0LgLm+nhMAE8p2vgKvvOla7qjCZ2A4fGZkt9FgUfCJDu2AEkIhiDCH0Dmp4/4JAkKjWicUMwn8bdBGLo0rKIVVKFhkzNF24d2oqE9hJQBlU2AsbE1RCGiiEBUuBt6NeXstKplV0cUEBYmNGb7xz/Dg8gCRckcBSrbhrWBdrrBI5mqXyDoegRGKcMLNJDNOgcQsU01ETzdVOGGohCvepiJBl0xiU7bhXdwXGejjceI8b8p0E5x1kbuQZSievvh49Lyyk8jsrwcNBu37XAxJXfLgRl5tQzArnImyEu7Ph40Zd5E6xtX1dFyFU4a1F82P5pW9O7Pbht9Ypb03t15VJmGveo9WcQP+HkaPN7HLfPm1bseDp3B1cPV2+juujK7YtMuXbJpase3g+mUdanTvOrEaDq7fe4351NzdXlfWXq/gR+PZ+ed7qBfrdqzgT+6gQNAxuPV+dMkmZXijvWr+9R6vny7+T389fQYnlfNymJ2G5t4NdLCq9tOLQ9nB/++bPvm/fR1iiDfHmUbeO1CV1QJ8J/JTEpwoIaZqjuX5MM4Ilypy1uSO9xU0B0OXFHD9dnQy0bXbFrtlu0YZcfu6CVLLzmO0dUbHafT3JLMGsUBxFZCQix9Scpdt83PAGHsMkQCRNVFkgqmY8oPFtuAg4JHhuIRJIShUSLo2ajQCaORMbbscGaEK5Kk1pQG3KBKYZDwa3JNGyFHdJ+U7T1SHiKI5xhJ5paNzURnMy6S8QYWKY+M4gIUCUoFt1NJs65pV0saw/E8QhKqFidBGqHifDLPUqOx9b+pAsgy6bAzyp7bt4EdftvmQOgEWCowGUsTiTqiI9PF2gbyJeDy0Sm0Nd9IAyxflkgopxiukex/+uwT2SB5k7R7Df9mCzrX/YO7Ly3/xfhLA71/cN77V+eill9vaj/kUzssZe4oWOAdt9u1QwwwQXn1bSO+geJbMV0s0qz1KpLaqTCvCYY3NB/BVDDy+yiZIaLlJrSTxl+O+sBzLt/Hl/IJ8TngKBYPpZAdT9h3fMTkvuOJJ746dZnacynyxtGKH5O1IrGrScQ/rnPQhVJPiG/E3zKhwWe5jtja8SPiFOsOx2QsT3L0vX/TFDARZrEg7YTuGj9m4JjzfWGe5BwLF930mnL0/ZeCZOOaAiBMUsK9tpIJdidEhpO/z5H7qfTFTDaE8q0U//9aquKsBSASuyzDmX25XLiy/8l4Z8psnH4dNIZTbrbLdqdsZoOmsh40Truj50nZQ1f/Iv4q2cnTYY/X/wM=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:1061F2196BD64E62E05307991F0A9DE0</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1061F2B3DC491694E05305991F0AE9EB</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>http://stdecqavap1.va.neustar.com:8009/rest/1/11/Account/urn:dece:accountid:org:dece:1061F2196BD64E62E05307991F0A9DE0/User/urn:dece:userid:org:dece:1061F2B3DC491694E05305991F0AE9EB/Policy/urn:dece:type:policy:ParentalControl:RatingPolicy</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/11/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>830</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77321</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>02B3AC003FDC05EEE05305991F0A20CA</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1061F2196BD64E62E05307991F0A9DE0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1061F2B3DC491694E05305991F0AE9EB</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>6ae2f08c-10a7-4e24-8195-8d1921d0534c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for ParentalControlRating" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="bcf754bd-4239-494d-a087-38c2650f6778"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="dac901ae-fcd6-4a29-a146-cb0597458d5e"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="f20229bc-5752-4f02-b062-6dd8f3d185c6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("PolicyID",callTC.getPropertyValue("PolicyID"));

tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="2289ff37-10ef-4767-84c7-ef7df3a41634"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("DELETE - PolicyDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - PolicyDelete" id="99ccf41f-30db-481c-a351-cc8e69739140"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - PolicyDelete" mediaType="application/xml" sslKeystore="dececs_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicyID}${#TestCase#PolicyID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="d0075c2b-e489-459f-9df5-e7c4b449055f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - PolicyDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="d736d82e-d233-4bd9-8944-61141cee1b79"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="e5ed969a-305d-4eb7-8a12-417a5f2161b2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>nVbZcuI4FP0Vyv2YMt4AY1egyoFk2ulsjcnS/TKlyNegxJbBkoDw9SMZcGOyDDNPLl1fnXvuoiOdMpSlth8wBgUnOW2sspQyv7T2NFFQP0eMMJ+iDJjPsR8F11e+3TR9tNuiNcJhT/vbtsAz3bije57b0VvdFtafY9fSPRslNrbB7TqxdGVMQEgZR5T3NNu0Wrrp6ZY5Nj3f9vxWt+na3m+t8QAFk9jSpWlqW1Ir1tOmnM98w1gul82l08yLiWGbpmU8XV9FeAoZ0vqnm4zKQEV/64+bMWBIU9zEeWacGjWf05j5EZlQxEUB21jxZ7FMw/QM6RMzMvmmVXshDmmSl8sBojklGKVkjVR9roFP87gRpJO8IHyafZqEZSpgHVZYx1aLftOMOrUjgWoMC4Z0NkXWFmsECRRAMTTuR2FP+3Zc18qt4wJRluRFxurL/8YH6ALSfAaxznZpbakdD/hBpfqngP2Q4lQwsoAbNawzhIFtuwn4eKjGXQEJWV0RJgd0xRQ7Y5/ewXJTjSGZAOP/p0F7zdmAPKBUQH+wmD+xYLhYnaxGqM2T9VvE3Lv45CQKeyWBfefSULV2szwYymqINjvuW+P2zcO1Q6Mz14s7w++jp8df166zvJ2Il3tvxT3nBp5+R9wA/mv2+vMvY/rdXqzjm+XzcsR+WK/2nRXeP7wGP14uhfuwLubXUza6vMiuHtuB9csZvji3cRA/Z/lLeCIW0cl3+yLxorU7ZbSDyfzubfDYdh+iJCos+jinb0tx8zpEYRLh5Gf2s315uX4cj1fnf7XMXpXOHv+6bXfmI/H8ApjvlmoMwmHjQnYJ8a/FTFlIrCelqz9T4sM4UK711S6lHb6QckdiX/ZwszbtM6d97rkX5+ZFO+hY52bbMdueZ12YgeW0nJ3IbFgcUBzkNCEqlpLczdh8TRBnPgMaQ6EvciGVjmlfIA4RR42QjuQhyCmDcS7l2bLXhTntmKlJRcFY1xQd3pp1RUdr3OT8lt4WQcKhqGmyZdc0eQSYzAgo4VZzzeRgMy5rMUcLwVOruUBNCkJKe6FU1rdb3bbBSDZLQTE1sjwWKTRn01lZGYNtvraOMCutZVnx5sR9mtvhv10ZpE9MlANT+ZyBbCV8cME4u2Q+Sdo6uIh28IGIiTpcsqa8IHjDpP7rz6ioGanmZJvVjnblfWioIRuHSVXB4gXB1cBX17ZUc3n++7u2zFFz3hSLhSgb4SqdKyS8FB+rbZi2EQEWUqHexvkrUKNCMY66DiriB8Ere52i4FMaccQhk5PTKJdH3P8RMHX/h3LkV8c+LmohZek4rPhHtkEq3y6K8ZfPG+xj5SfNd/KzzIs/iX+EtRdH5imvf07oRK3UVfD2yWzgXMISKWJ5sQ/+EcBHwevGqsgVFy4H6llw+PxPQ6lTT0MY54LycKiVhn3FLHnytxn4f5zewZSiXL3SyL8/03RSjgAG+bZjpMRXl62vjgCd7KnuNug74R143vl54LaCoVMKr7sR3kG3dVYVpcau/8783rJXp8MZ7/8D</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B35C99EEA74AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B35E97FE0F5A61E05305991F0A1343</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77325</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>02B3AC003FDC05EEE05305991F0A20CA</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>PolicyIDEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AE68F7AD0B700B174E0401F0A0799424D</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/dececs_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B35C99EEA74AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B35E97FE0F5A61E05305991F0A1343</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for ParentalControlBlockUnratedContent" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="85095aa1-3394-4c10-8b75-4c3c9619c2f3"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="957470b4-468e-4aba-84ce-f7ae51147f18"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="ee9bcdd4-e57c-421b-ae80-a068ae11c0fb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="c3b41d10-291c-4fce-bd34-f791bab3e56b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate" id="74d73113-873f-4bb0-8005-75f49a387b87"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate" mediaType="application/xml" postQueryString="false" id="3b8441db-ba0c-4f77-ab67-67889879e318" sslKeystore="DLASP_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>  
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlBlockUnratedContent}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="66068bab-8604-41dc-8d77-a5b00a4dc22b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - PolicyCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="45ce4048-92b0-4eb7-a6d2-a28bb9035261"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZpb+JMDP7eXxGlH6uQowkhESCxHNosvZaj2/ZLNUwMTBsmITPh6K/fSSApV/u2+0pIaByP/dh+xnaVoVlguA3GIOYkpJLXqsnPjm9i5PiGUtYsSzENx1EcNNKVkY0uHcB4ZNiWLHmMJeBRxhHlNdnQdFPRyophDHTb1Q3Xskpl6/JJlu4hZsK0UClpsrSaBZS5mduanMTUDREjzKVoBszl2O03rq9coemiHJNcr25QZg7j+pTzyFVVXPIBQxDgEg5nalXd06n6zO2TCUU8iWHr02c1eXt3uVyWlpelMJ6ohqZpquaoQsdnZHIu18/yy+B7dBxuzk1EQ0owCsgbSkFdA5+GvtQIJmFM+HT2gWld1bXUtAIrrGDdpOey+u4gQ/dFS3sgY4YUNkV6bqwHY4iBYpCGPa8mn3+tgpu7gxhRNg7jGTs4fw8S0AUEYQS+wvLIcnRft3giXfUqYNejOEgYWcBNSpMIYWDSXQxjsroiTJDPZ1JWfmnFxI/kLAP8nbJU1V2sArp6IjstMgHG/6Vmu/XaWLlHQQJ1spx749+DaPQ4nJDpYPqgv3kj9pP/mQ9rGYRd5Q2ootzb8yFZC25tL01RZ/UnaDdQdBFW2DjpNoZ9AnQVr+8fVPQWo8fyKyze+O3a1xcRwQb1zH7nvgJAxp7Z9WAycG6RBWWny88GFy2E77RfTfjxOh+acycBVmmHCSmvospNO9Fv1fLPjv0ECKNhc8SfHudddZ68AB7dxA/tIV4Sr9lq26+065/97vS6zFs/zV9m3vDtAv1qe7X3mHZj2BfmLaGfjIRhnh9TengtqSPqhfjn7SWVEF8ZZ6pulPYoxoFyuZ7eSluLm4gGRHxXFHNz7jRtrVlu282WpTmWWWlrpqZ3tIZmOY51aTl5D9qgOIDYDOmYpL7SLrvhz+cA8cxlQH2IlUWY4Ckw+ROLLcSR5NGeeBwhZTAIRRcPYBS8jE1/rfn8xfSZMXWs9TKYy9JNyG/pbdwYc4j3Oreh7XXuHmASCaLwDb+ZIDjjIhVztEh4oJcWqEQhEQMgTnuwa5gVS2VkFgWQAlVnoZ8EUIqmUZYYlW3+DQVhlkl77UH27j4M6/BbngGh45NUgaWx/ABRRTgxgsw8kKOArZOjKjffSHySPi+RTh4TvEGy/+mdJSk9Coq0rhr9uxx0ofuNu8/N/rP+jwau/q8BUY/jm+onOVEPy1E48hdkx20+ysV0Er2rnpNpjkrzUrJYJBl97LQvx8K8KtqzrvYBJ6K5rgfhK1C1MKF+abYVqA88F/J9fAmf0j5HHGaC7FJ2/MJi0weWLjaeeKSrr25Ney5F3jis+ClZMxD7T4r40xUJuzjVE+I78bcMY/+9XCds7fgRcYpthhM6SU/pFFt/QAocCrNEtN0w3jV+ysAp5/vCIskFFi7YNEo4fPxFSvtpTUYYhwnlXkvOBLs9PsPJ1xG470pHZrI5sl0MVuzDxeDh+qovuu0MyYUu+W9lhWR0wSCn+0eGpSavxJ4rnNPJzkzZAjwaK7ZuN63Wj9al3SjGiu04hm61iwTuRVI/Eh9LdnJ6+B7qfwE=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:FC70C717C5DBD37AE0401F0A0799215E</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:FC70C717C5DBD37AE0401F0A0799215E/User/urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359/Policy/urn:dece:type:policy:ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value>urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value>urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value>urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>policyResource</con:name><con:value>urn:dece:type:rating:US:MPAA:G</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - General Policy Establishment</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResourceXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77323</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>FC70C717C5DBD37AE0401F0A0799215E</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>FC70C6E7CD509548E0401F0A05995359</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>74d73113-873f-4bb0-8005-75f49a387b87</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy GET for ParentalControlBlockUnratedContent" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="39f79246-34f9-4611-8273-a2e2259fa241"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="cde8f8e2-faf3-4b12-aaa9-6305a5a4539f"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("returnXMLResult",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="486c2487-8c4a-40c3-86d0-9d429214e0ce"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

tC.setPropertyValue("returnXMLResult",callTC.getPropertyValue("returnXMLResult"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}
if (tC.getPropertyValue("returnXMLResult") == null || tC.getPropertyValue("returnXMLResult") == "") {
		tC.setPropertyValue("returnXMLResult","false");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="2657ed88-44e0-4dae-bcfe-6b961cbefe4a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet" id="b81652d0-c310-4b35-bb67-aa759e30e65e"><con:settings/><con:config service="Coordinator APIs" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet" mediaType="application/xml" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlBlockUnratedContent}"/>
  <con:entry key="USER" value="${#TestCase#assertionUserIdFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="7d0f7a34-1475-4b8a-9e3b-b4af31282851"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="389fdedb-23eb-456b-a77f-a43ca89f3f00"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myXML;
def XMLbody = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema")

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	try {
		myXML = new XmlSlurper().parseText(XMLbody);
	}
	catch(Throwable e) {
		log.info "ERROR - XmlSlurper - $e";
		assert 1 == 2;
	}
	finally {
		xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
		log.info "xmlPolicyClass[$xmlPolicyClass]";
		log.info "tcPolicyClass[tcPolicyClass]";
	}
}

if (httpStatus == "HTTP/1.1 200 OK") {
	def myXML1 = new XmlSlurper().parseText(XMLbody);
	def PolicyIDFull = myXML1.Policy.@PolicyID.text().toString();
	int lastColon = PolicyIDFull.lastIndexOf(':');
	PolicyID     = PolicyIDFull.substring(lastColon + 1);
	log.info"=========="+PolicyID
	policyWasFound = "true";
	tC.setPropertyValue("PolicyID",PolicyID);
	
} else if ( httpStatus == "HTTP/1.1 404 Not Found") {
	policyWasFound = "false";
	//tC.setPropertyValue("policyExists", policyWasFound);
} else {
	log.info "ERROR!";
	assert 1 == 2;
}




tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="4e716782-2868-4c2d-bf42-9afde30e1596"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));


if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZpb+I8EP4rKP1YhZwciQoS5zZdoC2h55fKdRwwJA61HaD99a8dIAVK+7K7EhLyZDzzzOFn5oKBODLdBmOIcpyQwiqOCHMzaU1JKXETwDBzCYgRczl0/Ua/55pF3QXbK0rBa9eUF8t8tQIbQVVHAKl2YJuqYzlQdaqVaqi/OkHFMoQqYynyCOOA8Jpi6kZJ1S3xGxmGWzJc2yqKS89K4R5RJmwLlaKubECtWE2ZcD53NW25XBaXVjGhY83UdUN77Pd8OEExUOoX64gyR7S+0YfFAEEURbAIk1i70PZ0LgLm+nhMAE8p2vgKvvOla7qjCZ2A4fGZkt9FgUfCJDu2AEkIhiDCH0Dmp4/4JAkKjWicUMwn8bdBGLo0rKIVVKFhkzNF24d2oqE9hJQBlU2AsbE1RCGiiEBUuBt6NeXstKplV0cUEBYmNGb7xz/Dg8gCRckcBSrbhrWBdrrBI5mqXyDoegRGKcMLNJDNOgcQsU01ETzdVOGGohCvepiJBl0xiU7bhXdwXGejjceI8b8p0E5x1kbuQZSievvh49Lyyk8jsrwcNBu37XAxJXfLgRl5tQzArnImyEu7Ph40Zd5E6xtX1dFyFU4a1F82P5pW9O7Pbht9Ypb03t15VJmGveo9WcQP+HkaPN7HLfPm1bseDp3B1cPV2+juujK7YtMuXbJpase3g+mUdanTvOrEaDq7fe4351NzdXlfWXq/gR+PZ+ed7qBfrdqzgT+6gQNAxuPV+dMkmZXijvWr+9R6vny7+T389fQYnlfNymJ2G5t4NdLCq9tOLQ9nB/++bPvm/fR1iiDfHmUbeO1CV1QJ8J/JTEpwoIaZqjuX5MM4Ilypy1uSO9xU0B0OXFHD9dnQy0bXbFrtlu0YZcfu6CVLLzmO0dUbHafT3JLMGsUBxFZCQix9Scpdt83PAGHsMkQCRNVFkgqmY8oPFtuAg4JHhuIRJIShUSLo2ajQCaORMbbscGaEK5Kk1pQG3KBKYZDwa3JNGyFHdJ+U7T1SHiKI5xhJ5paNzURnMy6S8QYWKY+M4gIUCUoFt1NJs65pV0saw/E8QhKqFidBGqHifDLPUqOx9b+pAsgy6bAzyp7bt4EdftvmQOgEWCowGUsTiTqiI9PF2gbyJeDy0Sm0Nd9IAyxflkgopxiukex/+uwT2SB5k7R7Df9mCzrX/YO7Ly3/xfhLA71/cN77V+eill9vaj/kUzssZe4oWOAdt9u1QwwwQXn1bSO+geJbMV0s0qz1KpLaqTCvCYY3NB/BVDDy+yiZIaLlJrSTxl+O+sBzLt/Hl/IJ8TngKBYPpZAdT9h3fMTkvuOJJ746dZnacynyxtGKH5O1IrGrScQ/rnPQhVJPiG/E3zKhwWe5jtja8SPiFOsOx2QsT3L0vX/TFDARZrEg7YTuGj9m4JjzfWGe5BwLF930mnL0/ZeCZOOaAiBMUsK9tpIJdidEhpO/z5H7qfTFTDaE8q0U//9aquKsBSASuyzDmX25XLiy/8l4Z8psnH4dNIZTbrbLdqdsZoOmsh40Truj50nZQ1f/Iv4q2cnTYY/X/wM=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:1061F2196BD64E62E05307991F0A9DE0</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:1061F2B3DC491694E05305991F0AE9EB</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>http://stdecqavap1.va.neustar.com:8009/rest/1/11/Account/urn:dece:accountid:org:dece:1061F2196BD64E62E05307991F0A9DE0/User/urn:dece:userid:org:dece:1061F2B3DC491694E05305991F0AE9EB/Policy/urn:dece:type:policy:ParentalControl:BlockUnratedContent</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/11/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 404 Not Found</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>837</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77321</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>FC7209E5FCE16132E0401F0A0799461A</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1061F2196BD64E62E05307991F0A9DE0</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>1061F2B3DC491694E05305991F0AE9EB</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for ParentalControlBlockUnratedContent" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="5505bc05-ac4d-4181-a360-86ddd752c9d4"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="20c4001f-062f-4916-a74c-a72363f3c76b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="71e14202-1d95-4f52-9dcc-02dea51c0077"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("PolicyID",callTC.getPropertyValue("PolicyID"));

tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="f4af139c-6da1-4cda-b465-cc17da2657e4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("DELETE - PolicyDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - PolicyDelete" id="f9cb28f3-4277-42de-a4d4-b67c9d990a6b"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - PolicyDelete" mediaType="application/xml" sslKeystore="coordcs_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicyID}${#TestCase#PolicyID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="6a9789f9-107d-4387-9f68-d3e2e3b34b76"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - PolicyDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="113c17e0-a951-4ac8-86e9-8d530b401e81"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="eddf3ee8-c128-413d-94af-8fef1f042a60"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Remove all Parental Control Policies</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>nVZtb+I4EP6+vyLKfqxCXoBAooLEEujl+rJd6O71+uXkOhMwJE6IbaD99WeHJgVKe92TkJAn45lnZh4/9jlDaeL4A8ag4CSjWhj09H+6dtx97GDXcLFjGS3sOIbn2WA4EWp13MhxLaupayFjAkLKOKK8pzuW3TIs13CcO7vj265vtxtuy3vQtV9QMBlaujQsXdumCWV+mbani4L6GWKE+RSlwHyO/eng+sqXnj6qMOn98x3KMmHRn3Oe+6aJGxFgSBLcwFlqnpsHPucR86dkRhEXBbzkjFhPf9m72Wwam2YjK2amY1mWaXmm9IkYmX3V+1+qzRCFNM526yGiGSUYJeQZKVDXwOdZpA2SWVYQPk/fCW2btqVCG7DFBrZb9KtuviYo0X0y0gHIgiGDzZFdBZtADAVQDNrPSdjTv35ugru9dwWiLM6KlB2tfw8S0DUkWQ6RwarKKnSfj3iiXf1zwH5IcSIYWcONokmOMDDttoCYbK8Ik+SLmFaOX9sy+SMVywD/zljOzX2sErp5ojsBmQHj/2dm+/PaRfmFEgF9RBOn2w5XYf44dpPZ85XXHYmuaKHRsldC2HfegarH/bI+JmvNrZdNC9uxb76lhHVvRxdr/OMsYA/jWezY48uHe3qxmEY3j79w+ndQAO/+MbkXy8iOn2Z5YV/bl8OWGaxXi6fmys3+2sy+IHRZxHniLW338tY5uyV/51jQxcOPB+9schmcief4W3Hx52PLEu6Wr9bLMGxjHozjMbhshUTKFhPe/Mnvl2jxZXxmXZDJFDZme4PzZ0sesd5rTfs1HBorSZiKxwVgXi0VPcJAG8t5If6xvCgLiYy4dPVzpVGMA+V6X+1S0uILKUAk8uUwd+vxsGMN3VFnGLRGXrvVHVktyx5bA6vtee1m26s0aIfiCOIwozFRuZTK7vjzMUCc+gxoBIWxzgSeA9M/iBggjrSQTuThyCiDu0yqeNKkm6c4ySFPU0TxEnUQlfo117WbjH+n34tBzKE4UG7HOlDuCWCSE1DyrvjNJMEZl61YobXgid1YowYFIS+AQmmw77S6bZORNE9AATXTLBIJNPJ5XjbGZLt/x0CYlVacZUXkY1YevndrO/5WtUH6REQ5MFXQN5CjhBP3kFVV86bq9sn7qgo/EBFRZ0z2lBcE75AcfnqliuJIzZOqrAp37X5sOAhtHldVZ4vWBNeMr69qqfRSB/rVYFaosWqI9VqUo+gojStkeFNKnW1OAQspVE932RKoWYcwP3VP1KiPMtf2Q3yCz+mUIw6pJI5WLj/xSJgCU4+EUBJ++9kXyEFK2TcOW37KNkzkW0Ih/vC5gX2s/KT5Vv5t5Ahfx3Ui1l4eWad8GXBCZ2qlboSnj5hBpIRlxX7wUwFOJT801k2usXDJpkfB4f0vmtKmno4wzgTlYaCXhn29LHHypxz8V6c3YUpNfrlkt+zdS/b++moqlStFeu1L/tvZICVdMOjqLi+x9PStfDPK5HS2p88vAN9IdMfuDNuBFzQ7g1qiO57n2O1R3cCDSvpvzG8tez09Pg/9fwE=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:FC70C717C5D9D37AE0401F0A0799215E</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:FC70C6E7CD4E9548E0401F0A05995359</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77325</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>FC7209E5FCE16132E0401F0A0799461A</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>PolicyIDEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AE68F7AD0B700B174E0401F0A0799424D</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/coordcs_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>FC70C717C5D9D37AE0401F0A0799215E</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>FC70C6E7CD4E9548E0401F0A05995359</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyCreate for ParentalControlAllowAdult" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="d2dcaa13-278a-4a16-9888-a2093c84e073"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="1ec235c4-5738-4850-a9c3-50dfaecf02bd"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("policyAuthority","urn:dece:role:coordinator");
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyAuthority",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus",null);
tC.setPropertyValue("policyResourceXML",null);
tC.setPropertyValue("expectErrTypePolicyCreate",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="4ccc8d27-9a89-416f-9cf1-b1c42fa4fdcb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyAuthority",callTC.getPropertyValue("policyAuthority"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyStatus",callTC.getPropertyValue("policyStatus"));
tC.setPropertyValue("expectErrTypePolicyCreate",callTC.getPropertyValue("expectErrTypePolicyCreate"));
tC.setPropertyValue("policyAuthority", "urn:dece:role:type:coordinator");

if (tC.getPropertyValue("expectErrTypePolicyCreate") == null || tC.getPropertyValue("expectErrTypePolicyCreate") == "") {
		tC.setPropertyValue("expectErrTypePolicyCreate","SUCCESS");
}
if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
		tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
}

switch (tC.getPropertyValue("policyClass")) {
	case "urn:dece:type:policy:EndUserLicenseAgreement":
		tC.setPropertyValue("policyResource","urn:dece:agreement:enduserlicenseagreement:10");
	break;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="57f93cbf-4f5f-4cf7-97e6-4a0516bfca6f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - PolicyCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - PolicyCreate" id="ba712f4d-47f6-4f2a-9670-ba63919164f5"><con:settings/><con:config service="Policy Create" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - PolicyCreate" mediaType="application/xml" postQueryString="false" id="3b8441db-ba0c-4f77-ab67-67889879e318" sslKeystore="DLASP_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="${#Project#coordinatorSchema} dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:${#TestCase#policyClass}</dece:PolicyClass>  
      <dece:RequestingEntity>${#TestCase#policyRequestEntity}</dece:RequestingEntity>
      <dece:PolicyAuthority>${#TestCase#policyAuthority}</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#TestCase#assertionUserId}">
            <dece:Value>${#TestCase#policyStatus}</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlAllowAdult}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="65951272-a2b6-4178-98c9-340f22c979a2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - PolicyCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="c37670a6-7d51-42a7-9cb6-9656663d23f4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");

def sh            = tC.getPropertyValue("streamhandleFULL");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypePolicyCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
	break;
}
	
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;
</script></con:config></con:testStep><con:properties><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZbc9o6EH7vr/C4jx0j20AAT2DG5ZLSkIZATkrz0hHSAkps2bEkIPn1RzIxAUJy0p4ZZhitV7vfXvTtngocR34QCgGZZAm3+p2m/XtGK8T3ZzPHpV7NqdR84jRq9Ybj+/60TqcUYx/bVl8IBX0uJOayafuuV3Hcuv5du27gnQReo9Soure2dQOZ0Ka1Ssm1rXUccRHkbpu2yniQYMFEwHEMIpAkGIcXg0BrBrjAZLdONyhzh1lrIWUaIERKFAhEESmRJEanaE/nlIpgzOYcS5XBs08qmvbz3dVqVVqVS0k2R77rushtIK1DBZt/tlufistA+3yWbM5tzBPOCI7YEzagLkAuEmqF0TzJmFzEb5j2kOca0w6siUO8Cv9soxcHOboPWtoDmQnsiAX2CmMjmEEGnID1z6jftD9/rIKbu9cZ5mKWZLE4OP8ZJOBLiJIUqCOKyAp0H7d4JF2tUyBBn5NICbaEH6ZNUkxAWMMMZmw9YEI3HxVWXn5rLfSPFV0G5E/Kcop2sWro6Eh2OmwOQv5NzXbrtbFygyMFLRL21Pers+mVXF/dD2R5UU/98NsCokG3mUPYVd6A2pb7+XzYrNveer408d1z1Ous4Fvlunf5VB66SfzjkZ+pFR3edhn6FYtq79syWvcaoynKfor+2ajTheFkctnuh5PyDV0+XIRPX/yrqPtpcX8zOPv+k1Hx+MuL6qOTtH6yoOH55cV89dRm7Un5pHdbRt4dAhDRWt2Obmvhaj6dpGeXi6oH87jiqfBLfZicx58m4yv/TlWmA+6du2e12qReb77EtBvDvrCghLGa3gGRxdG0R79j9XS9sHyfXoyEUWeWqwap4SghgUu7ZW4ZagmUJiBGA13MzVn3TblXb3T8atuthjW/61bL5U6j4XXd0O14fsFBGxQHENsJnzHjy7Dspn/eB0jiQACnkDnLRJEFCPsdix0ssdXnI/04Ei7gOtEsfledpqBU5d57WHtuXcR3jbvohLpL2/qRyEt+mYUzCdk+dZf3qHsEhKUMDL+bBhe6w4XUuXjASyUjr7TEJQ5KT4DMkHDgV+pVJFicRmCQojihKoJSukjzzCCx+fcdTEQuHXWv84f3ZlyH34oUaB3KjIIwsXwFXUY4MoPcIpBXAVePzqrCfKgoM+9L51NmjGyQ7H96aRPTH9se6QzC8bAAvdX9g7u/2+Pf3l8aGPxfA7oer2+id3KCDsuxdUSXbMdtMcv1eNLk1Sqa6QGXHkpquVR5+9Rct4wybR5pfvbQGIjS7Pp4ndwDR1sT6EPDbYv6wPNWvo9PyQUfSywh1s1u5ccPbDZjEGaz6etXuv7o2rTnUudNwloek7UjvQAZxO/uSCQgRk+Lh/pvlWT0pVxHbO340XHqdUYyPjcnM8Ye32gKkmizTPNuku0aP2bgmPN94TbJWyxSd9NUSXj7i2UItWljQhLFZb9j54Jdks9xyscUghelV2byQfK8GazFm5vB5GIw1nQbY3ury/5b2WF5uxCwzQKSY2naa73oaud8vjNUngEenytfK+/Nlf1IWq/EryU7OT18D61/AQ==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:0013F89D25B45A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypePolicyCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>849</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>policyAuthority</con:name><con:value>urn:dece:role:type:coordinator</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value>urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value>urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>policyResource</con:name><con:value>urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Allow Adult Policy Establishment</con:value></con:property><con:property><con:name>username</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:DuplicatePolicyCannotBeAdded">
      <Reason Language="en">The requested policy already exists.</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Account/urn:dece:accountid:org:dece:0013F89D25B45A72E0533D991E0A0D12/User/urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12/Policy/urn:dece:type:policy:ParentalControl:AllowAdult</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#Policy:DuplicatePolicyCannotBeAdded</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>policyResourceXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77323</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>0013F89D25B45A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>0013F89D25C05A72E0533D991E0A0D12</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ba712f4d-47f6-4f2a-9670-ba63919164f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy GET for ParentalControlAllowAdult" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="5c636b0d-4388-4b3e-a7a0-a7d04bff553e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="c9d8b4b7-e40d-4f0f-ba35-e6dcfe491287"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("returnXMLResult",null);
tC.setPropertyValue("XMLbody",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="14364e68-3de5-4859-87bd-e97acb6241e5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

tC.setPropertyValue("returnXMLResult",callTC.getPropertyValue("returnXMLResult"));
tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}
if (tC.getPropertyValue("returnXMLResult") == null || tC.getPropertyValue("returnXMLResult") == "") {
		tC.setPropertyValue("returnXMLResult","false");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="e0133ee6-c409-430f-9e0d-f1ac2674d0a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - PolicyGet");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - PolicyGet" id="1cf814bf-4153-49dc-88e4-6bb724f11419"><con:settings/><con:config service="Coordinator APIs" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - PolicyGet" mediaType="application/xml" sslKeystore="coordcs_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="POLICYCLASS" value="${#Project#urnParentalControlAllowAdult}"/>
  <con:entry key="USER" value="${#TestCase#assertionUserIdFULL}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="ad61c35a-51a4-45bb-aa4f-126dfc4b56b6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('GET - PolicyGet');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="8b681b88-ef3f-4cc8-a4c3-645860f7a09f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def myXML;
def XMLbody = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema")

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	try {
		myXML = new XmlSlurper().parseText(XMLbody);
	}
	catch(Throwable e) {
		log.info "ERROR - XmlSlurper - $e";
		assert 1 == 2;
	}
	finally {
		xmlPolicyClass = myXML.Policy[0].PolicyClass.text();
		log.info "xmlPolicyClass[$xmlPolicyClass]";
		log.info "tcPolicyClass[tcPolicyClass]";
	}
}

if (httpStatus == "HTTP/1.1 200 OK") {
	def myXML1 = new XmlSlurper().parseText(XMLbody);
	def PolicyIDFull = myXML1.Policy.@PolicyID.text().toString();
	int lastColon = PolicyIDFull.lastIndexOf(':');
	PolicyID     = PolicyIDFull.substring(lastColon + 1);
	log.info"=========="+PolicyID
	policyWasFound = "true";
	tC.setPropertyValue("PolicyID",PolicyID);
	
} else if ( httpStatus == "HTTP/1.1 404 Not Found") {
	policyWasFound = "false";
	//tC.setPropertyValue("policyExists", policyWasFound);
} else {
	log.info "ERROR!";
	assert 1 == 2;
}




tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="fea5ab95-274a-43a8-b710-9fb651549f04"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
callTC.setPropertyValue("PolicyID",tC.getPropertyValue("PolicyID"));


if (tC.getPropertyValue("returnXMLResult") == "true") {
	callTC.setPropertyValue("policyGetXML",tC.getPropertyValue("XMLbody"));
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>Policy - Allow Adult Policy Establishment</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyClass</con:name><con:value>urn:dece:type:policy:ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[Unauthorized request with Authorization value too short
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
<Error ErrorID="urn:dece:errorid:org:dece:securitycontext:unauthorized">
       <Reason Language="en">The request is not authorized.</Reason>
        <OriginalRequest></OriginalRequest>
       <ErrorLink></ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>558</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77321</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>0013F89D25CC5A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/coordcs_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PolicyDelete for ParentalControlAllowAdult" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="7b7f37ed-a1d8-46be-a5f4-39f44e7e7e28"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5454e99f-4932-4439-9b0f-6d62a561c568"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("expectErrTypePolicyGet",null);


</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="128a4ef1-681a-4c7f-9bd5-13d7fea261d6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("PolicyID",callTC.getPropertyValue("PolicyID"));

tC.setPropertyValue("expectErrTypePolicyGet",callTC.getPropertyValue("expectErrTypePolicyGet"));

if (tC.getPropertyValue("expectErrTypePolicyGet") == null || tC.getPropertyValue("expectErrTypePolicyGet") == "") {
		tC.setPropertyValue("expectErrTypePolicyGet","SUCCESS");
}</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="e91148a4-83c9-47df-9bd0-fa57eeeed2dc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("DELETE - PolicyDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - PolicyDelete" id="5dd168d5-4561-4cf9-9d15-9afef8259de3"><con:settings/><con:config service="Policy Delete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/User/{USER}/Policy/{POLICYCLASS}" methodName="DELETE" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - PolicyDelete" mediaType="application/xml" sslKeystore="DLASP_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="MINOR" value="${#Project#VersionMinor}"/>
  <con:entry key="MAJOR" value="${#Project#VersionMajor}"/>
  <con:entry key="POLICYCLASS" value="${#Project#urnPolicyID}${#TestCase#PolicyID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="47f1c87e-d627-47e1-b55f-01932bcd4cc2"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('DELETE - PolicyDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Process response body and headers" id="e0327b93-03b6-4149-b307-8cd26e1c2b08"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody    = tC.getPropertyValue("XMLbody");
def httpStatus = tC.getPropertyValue("httpStatus");

String policyWasFound = "false";
String xmlPolicyClass = "";
String tcPolicyClass  = tC.getPropertyValue("policyClass");

/*
*  We can assume that if we get returned an HTTP status 
*  of 'HTTP/1.1 200 OK' the policy was found.  However,
*  it is never a bad idea to doublecheck.
*/

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	xmlPolicyClass = myXML.Policy.PolicyClass.text();
}

		
if (httpStatus == "HTTP/1.1 200 OK" &amp;&amp; xmlPolicyClass == tcPolicyClass) {
	policyWasFound = "true";
}


tC.setPropertyValue("policyExists", policyWasFound);</script></con:config></con:testStep><con:testStep type="groovy" name="Return policyExists to calling test case" id="395aea42-fbef-4afa-b204-d19bcfb527c6"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

callTC.setPropertyValue("policyExists",tC.getPropertyValue("policyExists"));
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>Policy - Remove Allow Adult Policy</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Configuration/Setup</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>pVZbc9o6EH7vr/C4jx0j20AAT2DG5ZLSkIZATkrz0hHSAkps2bEkIPn1RzIxAUJy0p4ZZhitV7vfXvTtngocR34QCgGZZAm3+p2m/XtGK8T3ZzPHpV7NqdR84jRq9Ybj+/60TqcUYx/bVl8IBX0uJOayafuuV3Hcuv5du27gnQReo9Soure2dQOZ0Ka1Ssm1rXUccRHkbpu2yniQYMFEwHEMIpAkGIcXg0BrBrjAZLdONyhzh1lrIWUaIERKFAhEESmRJEanaE/nlIpgzOYcS5XBs08qmvbz3dVqVVqVS0k2R77rushtIK1DBZt/tlufistA+3yWbM5tzBPOCI7YEzagLkAuEmqF0TzJmFzEb5j2kOca0w6siUO8Cv9soxcHOboPWtoDmQnsiAX2CmMjmEEGnID1z6jftD9/rIKbu9cZ5mKWZLE4OP8ZJOBLiJIUqCOKyAp0H7d4JF2tUyBBn5NICbaEH6ZNUkxAWMMMZmw9YEI3HxVWXn5rLfSPFV0G5E/Kcop2sWro6Eh2OmwOQv5NzXbrtbFygyMFLRL21Pers+mVXF/dD2R5UU/98NsCokG3mUPYVd6A2pb7+XzYrNveer408d1z1Ous4Fvlunf5VB66SfzjkZ+pFR3edhn6FYtq79syWvcaoynKfor+2ajTheFkctnuh5PyDV0+XIRPX/yrqPtpcX8zOPv+k1Hx+MuL6qOTtH6yoOH55cV89dRm7Un5pHdbRt4dAhDRWt2Obmvhaj6dpGeXi6oH87jiqfBLfZicx58m4yv/TlWmA+6du2e12qReb77EtBvDvrCghLGa3gGRxdG0R79j9XS9sHyfXoyEUWeWqwap4SghgUu7ZW4ZagmUJiBGA13MzVn3TblXb3T8atuthjW/61bL5U6j4XXd0O14fsFBGxQHENsJnzHjy7Dspn/eB0jiQACnkDnLRJEFCPsdix0ssdXnI/04Ei7gOtEsfledpqBU5d57WHtuXcR3jbvohLpL2/qRyEt+mYUzCdk+dZf3qHsEhKUMDL+bBhe6w4XUuXjASyUjr7TEJQ5KT4DMkHDgV+pVJFicRmCQojihKoJSukjzzCCx+fcdTEQuHXWv84f3ZlyH34oUaB3KjIIwsXwFXUY4MoPcIpBXAVePzqrCfKgoM+9L51NmjGyQ7H96aRPTH9se6QzC8bAAvdX9g7u/2+Pf3l8aGPxfA7oer2+id3KCDsuxdUSXbMdtMcv1eNLk1Sqa6QGXHkpquVR5+9Rct4wybR5pfvbQGIjS7Pp4ndwDR1sT6EPDbYv6wPNWvo9PyQUfSywh1s1u5ccPbDZjEGaz6etXuv7o2rTnUudNwloek7UjvQAZxO/uSCQgRk+Lh/pvlWT0pVxHbO340XHqdUYyPjcnM8Ye32gKkmizTPNuku0aP2bgmPN94TbJWyxSd9NUSXj7i2UItWljQhLFZb9j54Jdks9xyscUghelV2byQfK8GazFm5vB5GIw1nQbY3ury/5b2WF5uxCwzQKSY2naa73oaud8vjNUngEenytfK+/Nlf1IWq/EryU7OT18D61/AQ==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:0013F89D25B45A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>expectErrTypePolicyGet</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:UserNotActive">
      <Reason Language="en">The member is not active.</Reason>
      <OriginalRequest>http://chdecqavap3.nc.neustar.com:8009/rest/1/11/Account/urn:dece:accountid:org:dece:0013F89D25B45A72E0533D991E0A0D12/User/urn:dece:userid:org:dece:0013F89D25C05A72E0533D991E0A0D12/Policy/urn:dece:policyid:org:dece:0013F89D25CC5A72E0533D991E0A0D12</OriginalRequest>
      <ErrorLink>http://error.decellc.org/en/ErrorList.html#UserNotActive</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>806</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>77325</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>0013F89D25CC5A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>assertionUserIdFULLEncoded</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>policyClassEncoded</con:name><con:value>urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy</con:value></con:property><con:property><con:name>PolicyIDEncoded</con:name><con:value>urn%3Adece%3Apolicyid%3Aorg%3Adece%3AE68F7AD0B700B174E0401F0A0799424D</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/DLASP_concat.pem</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>0013F89D25B45A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>0013F89D25C05A72E0533D991E0A0D12</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListView" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="f9b56e86-c090-4710-98a0-299414ff2b5b"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2109c500-e86a-4657-b677-5ff779d8234b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("expectErrTypeStreamListView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectStreamActiveCnt",null);
tC.setPropertyValue("httpContentEncoding",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("streamHistoryRows",null);
tC.setPropertyValue("streamFlagCreateDateOld",null);
tC.setPropertyValue("streamFlagIgnoreCreatedDate",null);
tC.setPropertyValue("expectDBModifiedBy",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);

tP.setPropertyValue("ActualStreamHandleIDList","");
tP.setPropertyValue("DeleteCount",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="3c2e33b0-fa45-41db-8ff4-4b05431dad25"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;
String expectRequestingUser;
String expectDBDeletedTime;
String expectDBCreatedTime;
String streamFlagCreateDateOld;
String streamFlagIgnoreCreatedDate;
String streamFlagIgnoreDeletedDate;
String expectDBCreatedByNodeType;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBModifiedBy",callTC.getPropertyValue("expectDBModifiedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));
tC.setPropertyValue("expectRequestingUser",callTC.getPropertyValue("expectRequestingUser"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("streamFlagCreateDateOld",callTC.getPropertyValue("streamFlagCreateDateOld"));
tC.setPropertyValue("streamFlagIgnoreCreatedDate",callTC.getPropertyValue("streamFlagIgnoreCreatedDate"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));



if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt",tP.getPropertyValue("streamlimit"))
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","0")
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0")
}
if (tC.getPropertyValue("streamFlagIgnoreCreatedDate") == null || tC.getPropertyValue("streamFlagIgnoreCreatedDate") == "") {
	tC.setPropertyValue("streamFlagIgnoreCreatedDate","false")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenidFULL_"   + (i + 1);
	shid           = "streamhandle_"  + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);	
	shModifiedBy  = "expectDBModifiedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectRequestingUser = "expectRequestingUser_" + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	expectDBDeletedTime = "expectDBDeletedTime_" + (i + 1);
	expectDBCreatedTime = "expectDBCreatedTime_" + (i + 1);
	streamFlagCreateDateOld = "streamFlagCreateDateOld_" + (i + 1);
	streamFlagIgnoreCreatedDate = "streamFlagIgnoreCreatedDate_" + (i + 1);
	streamFlagIgnoreDeletedDate = "streamFlagIgnoreDeletedDate_" + (i + 1);
	expectDBCreatedByNodeType = "expectDBCreatedByNodeType_" + (i + 1);

     tC.setPropertyValue(shid,callTC.getPropertyValue(shid));     		
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(shModifiedBy,callTC.getPropertyValue(shModifiedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
	tC.setPropertyValue(expectRequestingUser,callTC.getPropertyValue(expectRequestingUser));
	tC.setPropertyValue(expectDBDeletedTime,callTC.getPropertyValue(expectDBDeletedTime));
	tC.setPropertyValue(expectDBCreatedTime,callTC.getPropertyValue(expectDBCreatedTime));
	tC.setPropertyValue(streamFlagCreateDateOld,callTC.getPropertyValue(streamFlagCreateDateOld));
	tC.setPropertyValue(streamFlagIgnoreCreatedDate,callTC.getPropertyValue(streamFlagIgnoreCreatedDate));
	tC.setPropertyValue(streamFlagIgnoreDeletedDate,callTC.getPropertyValue(streamFlagIgnoreDeletedDate));
	tC.setPropertyValue(expectDBCreatedByNodeType,callTC.getPropertyValue(expectDBCreatedByNodeType));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="e75c0829-ac22-444f-9192-2f1bfffba074"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamListView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView" id="9bcc807f-13c3-4bad-9f75-5843e5dfb43b"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" mediaType="application/xml" sslKeystore="coordcs_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="42735ac7-57e6-45be-8e53-5000de113d0c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);

def testStep = testRunner.testCase.getTestStepByName( "Validation of List of Streams get as per Details stored at StreamCreate for all" )
 log.info status
if(status=="HTTP/1.1 200 OK")
{  log.info status
   testStep.disabled = false;
}
else
{
	 testStep.disabled = true;
	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="0aca4cbd-df6a-48db-ac1d-7e2d679b8976"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamListView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamListView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	default:
		errId = tC.getPropertyValue("expectErrTypeStreamListView").toString();
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="e6589f2a-15c1-41ec-83cc-ed1963925e6a" disabled="true"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
     String hsh;
     if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
     {
	int lastColon = sh.lastIndexOf('%');
     hsh = sh.substring(lastColon +3,sh.length());
     }
     else
     {
     int lastColon = sh.lastIndexOf(':');
     hsh = sh.substring(lastColon +1,sh.length());
     }
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectModifiedBy = urnnode + tC.getPropertyValue("expectDBModifiedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	

	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	//assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
//if(tC.getPropertyValue("nodetype")== "llp" )
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
//			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
//			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
//		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
//		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
//		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt.toInteger() <= tP.getPropertyValue("streamlimit").toInteger();

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
//		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
//		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();

		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectmb = urnnode + tC.getPropertyValue("expectDBModifiedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

//			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			//if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
			//	expectRequestingUser = "";
			//} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			//}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				//if (	expectValue == "active") {
				//	doValidations = true;
				//} else {
				//	doValidations = false;
				//}
			//} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;
				log.info "****************************************"+displayStreamCount+"************************************"

				/*  StreamHandleID */
				
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
//				assert recvsh == expectsh;
				
				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				//log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				//assert recvru == expectRequestingUser;
		
				//RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
//				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
//				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
//				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
//				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
//					def j = a.dateDiff(recvDate,expectCDate,"seconds");
//					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
//					assert recvcd.length() > 0;
//					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					//assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
//					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
//				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
//				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));
//
//				int rCnt = myHistoryXML.ResultSet.Row.size();
//
//				log.info "-------------HISTORY-----------------";
//				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
//				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
//					rCnt -= 1;
//				} 
//				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
//				for (int i = 0; i < rCnt; i++) {
//					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
//					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
//					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
//					assert hrecvModifiedBy == expectmb;
//
//					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
//					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
//					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
//					if (hexpectStatus == "active") {
//						assert hrecvStatus == "urn:dece:type:status:active";
//					} else {
//						assert hrecvStatus == "urn:dece:type:status:deleted";
//					}
//					
//					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
//					switch (hexpectStatus) {
//						case "active": hexpectDescription = "active"; break;
//						case "deleted": hexpectDescription = "deleted"; break;
//						default: hexpectDescription = "deleted"; break;
//					}
//					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
//					assert hrecvDescription == hexpectDescription;
//	
//					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
//					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
//					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
//					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
//					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
//					
//				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}
//
//		log.info "--------------------FINAL XML size() Validations -------------------";
//		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
//		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
//		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
//		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
//		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
//		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();
//
//		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
//		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
//		
//		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
//		assert myXML.Stream.size() == displayStreamCount;
//		
//		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
//		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
//		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Validation of List of Streams get as per Details stored at StreamCreate for all" id="95d87ebe-1473-47a2-a64a-a9e00231a1a8"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def commonTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamCreate');
def delete_streamTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamDelete');

tC.setPropertyValue("StreamDeleted",delete_streamTC.getPropertyValue("StreamDeleted"));

tC.setPropertyValue("StreamList",commonTC.getPropertyValue("StreamList"));

def TpstreamDeleteList = context.expand( '${#Project#StreamDeleteList}' )
int TpStreamDeleteCount=Integer.parseInt(tP.getPropertyValue("StreamDeleteCount"));

def streamCreateCount = context.expand( '${#Project#StreamCreateCount}' )
tC.setPropertyValue("accountList",commonTC.getPropertyValue("accountList"));

tC.setPropertyValue("streamCreateCount",streamCreateCount);

def xMLbody = context.expand( '${#TestCase#XMLbody}' )

def nodeid = context.expand( '${#TestCase#nodeid}' )
def node_flag=true;
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' ).toString();
def StreamList=context.expand( '${#TestCase#StreamList}' ).toString();
def accountList=context.expand( '${#TestCase#accountList}' ).toString();
log.info "accountList :$accountList"
log.info "assertionAccountIdFULL :$assertionAccountIdFULL"
def rawRequest = context.expand( '${GET - StreamListView#RawRequest}' )

String[] List=StreamList.split("#",2);

String ExpectedAcct=List[0];

String[] ExpStreamLL=List[1].split(";");

HashMap Expstrm = new HashMap();

ArrayList<StreamObj> StmObj=new ArrayList<StreamObj>();
int j=0;


if(nodeid=="LLASP_CS_1" || nodeid=="DLASP" || nodeid=="DLASP_CS_1" || nodeid=="LLASP_CS_2"|| nodeid=="DLASP_CS_2" || nodeid=="LLASP")
{
  node_flag=true;
}
else
{ node_flag=false  }

while(j<ExpStreamLL.length)
{   
	String[] str= ExpStreamLL[j].split("!");
	    
	  Expstrm.put(str[0], str[1]);
	  String[] val=str[1].split(",");
//	  log.info "handle id"+str[0] +";" +"property"+ str[1]
	  j++;
//	  log.info val.length;
//	  log.info "Rights :"+val[0]+", User:"+val[1]//+",user:"+val[2]
	  StmObj.add(new StreamObj(str[0],val[0],val[1]));
	
}
//log.info "object :"+StmObj.get(1).getStreamHandleID();
def response = context.expand( '${GET - StreamListView#Response}' )
def myXML;
HashMap Actstrm = new HashMap();

int streamDeleteCount = Integer.parseInt(context.expand( '${#Project#StreamDeleteCount}' ))

def streamDeleted = context.expand( '${#Project#StreamDeleteList}' )
String[] DeletedStream=streamDeleted.split(";");



def ActualStreamHandleIDList="";

log.info "##############  $ActualStreamHandleIDList  #########################"


if(response!="")
{
myXML = new XmlSlurper().parseText(response).declareNamespace('dece':tP.getPropertyValue("coordinatorSchema"));;
  
  int ActualStreamCount=myXML.Stream.size();
  log.info "Expected StreamCount $streamCreateCount plus, Deleted Stream Count $TpStreamDeleteCount ,Actual StreamCount $ActualStreamCount"
  if(node_flag==true)
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount)+TpStreamDeleteCount;} 
  else
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount);
    	}
  log.info "ActualStreamCount :"+ ActualStreamCount

  log.info "############## ActualStreamHandleIDList:  $ActualStreamHandleIDList"
   int count=0;
  for(int i=0;i<ActualStreamCount;i++)
  {  
  	def ActualStreamHandleID=myXML.Stream[i].@StreamHandleID.text();
  	def ActualRghtsTokenID=myXML.Stream[i].RightsTokenID.text();
  	def ActualRequestingUserID=myXML.Stream[i].RequestingUserID.text();
  	def ActExpirationDateTime=myXML.Stream[i].ExpirationDateTime.text();
  	def ResourceStatus=myXML.Stream[i].ResourceStatus.Current.Value.text(); 
  	def Description=myXML.Stream[i].ResourceStatus.Current.Description.text(); 
  	def CreationDate=myXML.Stream[i].ResourceStatus.Current.@CreationDate.text();
  	
  if(Description=="active")
    { ActualStreamHandleIDList=ActualStreamHandleIDList+ActualStreamHandleID+";"
    }
  	              	         
  	
  	
  	if(i+1<ActualStreamCount)
  	{
  	def Next_CreationDate=myXML.Stream[i+1].ResourceStatus.Current.@CreationDate.text();
  	
  	log.info "################# CreationDate :$CreationDate  , CreationDate of Next stream in listView: $Next_CreationDate ########################### "
  	log.info "check Streams Order , should be as per  Streams’ created datetime value, in descending order"
  	 assert CreationDate > Next_CreationDate ;
  	}


  	
//  	log.info "ResourceStatus"+Description
  	//urn:dece:type:status:active
     
//     <Value>urn:dece:type:status:deleted</Value>
//                <Description>deleted</Description>
       
     
  	 
  	     for(int s=0; s<StmObj.size();s++)
  	     {
  	         if (ActualStreamHandleID==StmObj.get(s).getStreamHandleID())
  	         {
  	         	
  	           count++;

  	           log.info " Count :$count and  ActualStreamHandleID $ActualStreamHandleID"
   	          def ExpectUser= StmObj.get(s).getUserid()
  	          def ExpectRght= StmObj.get(s).getRightstokenidFULL() ;

                log.info "For StreamID :'$ActualStreamHandleID' Expected rightId :'$ExpectRght' ,ActualRights:'$ActualRghtsTokenID'"
  	           assert ExpectRght==ActualRghtsTokenID;
  	   	     log.info "For StreamID :'$ActualStreamHandleID' Expected USERID :'$ExpectUser' ,Actual userID:'$ActualRequestingUserID '"  	           
  	   	     assert ExpectUser==ActualRequestingUserID;
  	   	   
  	           }  	

  	           int flag=0;
  	              for(int x=0;x<DeletedStream.length;x++)
  	              {
  	              	  if (ActualStreamHandleID==DeletedStream[x])
  	              	     {  
  	              	     	log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:deleted' ,Actual resource status:'$ResourceStatus'"
  	              	        assert ResourceStatus=="urn:dece:type:status:deleted"
  	              	         log.info "For StreamID :'$ActualStreamHandleID' expected Description :'deleted' ,Actual Description :'$Description'"
  	              	         assert Description=="deleted"
  	              	          
  	              	         flag=1;
  	              	         break;
  	              	     	}
  	               	}

  	               if(flag==0)
  	               {
  	               	 log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:active' ,Actual resource status:'$ResourceStatus'"
  	               	assert ResourceStatus=="urn:dece:type:status:active"
  	              	      log.info "For StreamID :'$ActualStreamHandleID' expected Description :'active' ,Actual Description :'$Description'"  
  	              	         assert Description=="active"
  	              	         
  	               	}
  	   }
  	   tC.setPropertyValue("ActualStreamHandleIDList",ActualStreamHandleIDList);
     }  
  	   if(node_flag==true && count==ActualStreamCount)
  	   {   log.info "nodeid :'$nodeid' will get list of all active and deleted streams"
  	   	 log.info "All streams validated active and deleted streams";
  	   	 assert count==ActualStreamCount;
  	   	}
  	   else if(node_flag==false && streamCreateCount==count.toString())
  	   {
           log.info "nodeid :'$nodeid' not able to get deleted streams"
  	   	log.info "All streams validated  expect deleted streams , Total count of streams details in response $ActualStreamCount";
  	   	log.info " Actual Stream count to be validate '$streamCreateCount' ,expected Stream count :$ActualStreamCount "
  	   	log.error " total Streams validated $count";
  	   	 assert streamCreateCount==ActualStreamCount.toString();
  	   	 assert streamCreateCount==count.toString()

  	   }
  	   else{
  	   	  log.info "nodeid :'$nodeid'"
  	   	 log.error "List view don't have all streams in Account $accountList ";
  	   	 assert count==ActualStreamCount;
  	   	}
  
  
}



class StreamObj
{ 
	private String StreamHandleID;
	private String rightstokenidFULL;
	private String Userid;
	private static int keyLs;

	StreamObj(String StreamHandleID,String rightstokenidFULL,String Userid){
		if(keyLs>0)
		   keyLs++;
		   else
		   keyLs=1;

		   this.StreamHandleID = StreamHandleID;
		   this.rightstokenidFULL = rightstokenidFULL;
		   this.Userid = Userid;
		}

		public String getStreamHandleID() {
		return StreamHandleID;
	}
	public void setStreamHandleID(String StreamHandleID) {
		this.StreamHandleID = StreamHandleID;
	}
	public String getRightstokenidFULL() {
		return rightstokenidFULL;
	}
	public void setRightstokenidFULL(String rightstokenidFULL) {
		this.rightstokenidFULL = rightstokenidFULL;
	}
	public String getUserid() {
		return Userid;
	}
	public void setUserid(String Userid) {
		this.Userid = Userid;
	}
	
	
		

}

]]></script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<StreamList ActiveStreamCount="8" AvailableStreams="4" xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC">
      <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</RightsTokenID>
      <ExpirationDateTime>2015-04-30T00:41:13.133Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreationDate="2015-04-29T17:07:58.485Z" CreatedBy="urn:dece:org:org:dece:DLASP" ModificationDate="2015-04-29T17:08:27.840Z" ModifiedBy="urn:dece:org:org:dece:DLASP">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:4261B9C973904929A30280C3D2E4BF8C">
      <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0B4D0EF0F4E7CE05307991F0A3D7C</RightsTokenID>
      <ExpirationDateTime>2015-04-29T23:03:44.081Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreationDate="2015-04-29T17:03:44.081Z" CreatedBy="urn:dece:org:org:dece:LLASP_CS_1">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:7A4D1BAB1CBA433885C0FAFDFA38C304">
      <StreamClientNickname>aaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIaaaaaaaaaIoooo</StreamClientNickname>
      <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0B7482DAE4114E05305991F0ADD3B</RightsTokenID>
      <ExpirationDateTime>2015-04-29T22:59:35.213Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreationDate="2015-04-29T16:59:35.213Z" CreatedBy="urn:dece:org:org:dece:DLASP">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:17B6744A735B4CD5B21E5A1BB11BCDE1">
      <StreamClientNickname>a</StreamClientNickname>
      <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:14E08C6FA4342F19E05305991F0A08FB</RightsTokenID>
      <ExpirationDateTime>2015-04-29T22:56:07.318Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreationDate="2015-04-29T16:56:07.318Z" CreatedBy="urn:dece:org:org:dece:DLASP">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:76931440E77B4C9B9CAD7420872045AF">
      <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</RightsTokenID>
      <ExpirationDateTime>2015-04-29T22:53:49.349Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreationDate="2015-04-29T16:53:49.349Z" CreatedBy="urn:dece:org:org:dece:DLASP">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:62176B1ED60F427B8412427E5E502585">
      <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</RightsTokenID>
      <ExpirationDateTime>2015-04-29T22:53:28.113Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreationDate="2015-04-29T16:53:28.113Z" CreatedBy="urn:dece:org:org:dece:DLASP">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:69475C3BA31248779D0EA824333A17CB">
      <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B</RightsTokenID>
      <ExpirationDateTime>2015-04-29T22:53:09.708Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreationDate="2015-04-29T16:53:09.708Z" CreatedBy="urn:dece:org:org:dece:DLASP">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
   <Stream StreamHandleID="urn:dece:streamhandleid:org:dece:42D0699D2EFF40AFA3E40EDAE2DE0BFE">
      <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
      <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C</RightsTokenID>
      <ExpirationDateTime>2015-04-29T22:48:03.935Z</ExpirationDateTime>
      <ResourceStatus>
         <Current CreationDate="2015-04-29T16:48:03.935Z" CreatedBy="urn:dece:org:org:dece:DLASP">
            <Value>urn:dece:type:status:active</Value>
            <Description>active</Description>
         </Current>
      </ResourceStatus>
   </Stream>
</StreamList>]]></con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_66700 - StreamListView - COORDINATORCS - API invocation after StreamRenew by Full User_FLAKY</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>StreamList</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4#urn:dece:streamhandleid:org:dece:DF928D8519CE4B3084488B6708AABA4F!urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:42D0699D2EFF40AFA3E40EDAE2DE0BFE!urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:69475C3BA31248779D0EA824333A17CB!urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:62176B1ED60F427B8412427E5E502585!urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:76931440E77B4C9B9CAD7420872045AF!urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:17B6744A735B4CD5B21E5A1BB11BCDE1!urn:dece:rightstokenid:org:dece:14E08C6FA4342F19E05305991F0A08FB,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:7A4D1BAB1CBA433885C0FAFDFA38C304!urn:dece:rightstokenid:org:dece:14E0B7482DAE4114E05305991F0ADD3B,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:1DA93627A3544A20B55C1ABE868144DF!urn:dece:rightstokenid:org:dece:14E0B4D0EEDA4E7CE05307991F0A3D7C,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:4261B9C973904929A30280C3D2E4BF8C!urn:dece:rightstokenid:org:dece:14E0B4D0EF0F4E7CE05307991F0A3D7C,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC!urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;</con:value></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_8</con:name><con:value>7F3ACE1411D94A74973BE916C5594B80</con:value></con:property><con:property><con:name>streamhandle_7</con:name><con:value>3C161D027D1C4D73A337AC00B1A17A78</con:value></con:property><con:property><con:name>streamhandle_6</con:name><con:value>F24333E267B642D9A3816056474F81EC</con:value></con:property><con:property><con:name>streamhandle_5</con:name><con:value>BF6FB3180DD548379B7D6449E9DE0BC0</con:value></con:property><con:property><con:name>streamhandle_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_3</con:name><con:value>76931440E77B4C9B9CAD7420872045AF</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_17</con:name><con:value>CEFD90E77819B152E0401F0A07995384</con:value></con:property><con:property><con:name>streamhandle_16</con:name><con:value>96092098DB49464C94292CD1B8483B83</con:value></con:property><con:property><con:name>streamhandle_15</con:name><con:value>CAF3F40CE81F466D80EBDF23FB9ECBDC</con:value></con:property><con:property><con:name>streamhandle_14</con:name><con:value>2DDBC1BC4B1F42AB85A442976410A1AA</con:value></con:property><con:property><con:name>streamhandle_13</con:name><con:value>D1AE4B1CB1594CB49743B1583C5C1BD0</con:value></con:property><con:property><con:name>streamhandle_12</con:name><con:value>FA2FAFAD35F740ACB661E48622495566</con:value></con:property><con:property><con:name>streamhandle_11</con:name><con:value>DAEEDC404B25478D8A427697EEED4296</con:value></con:property><con:property><con:name>streamhandle_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_1</con:name><con:value>87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value>urn:dece:streamhandleid:org:dece:7F3ACE1411D94A74973BE916C5594B80</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value>urn:dece:streamhandleid:org:dece:3C161D027D1C4D73A337AC00B1A17A78</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value>urn:dece:streamhandleid:org:dece:F24333E267B642D9A3816056474F81EC</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value>urn:dece:streamhandleid:org:dece:BF6FB3180DD548379B7D6449E9DE0BC0</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8C20BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8BD0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B80BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B30BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8AE0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value>urn:dece:streamhandleid:org:dece:CD877D48FF2B0318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CF9B9FB89952E0401F0A079947F1</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CE58313FD124E0401F0A05990DAA</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2345A7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234557FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value>urn:dece:streamhandleid:org:dece:76931440E77B4C9B9CAD7420872045AF</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234507FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2344B7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234467FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FFE438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF9438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF4438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FEF438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E3ED317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E39D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E34D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E2FD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value>urn:dece:streamhandleid:org:dece:CEFD90E77819B152E0401F0A07995384</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value>urn:dece:streamhandleid:org:dece:96092098DB49464C94292CD1B8483B83</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value>urn:dece:streamhandleid:org:dece:CAF3F40CE81F466D80EBDF23FB9ECBDC</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value>urn:dece:streamhandleid:org:dece:2DDBC1BC4B1F42AB85A442976410A1AA</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value>urn:dece:streamhandleid:org:dece:D1AE4B1CB1594CB49743B1583C5C1BD0</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:FA2FAFAD35F740ACB661E48622495566</con:value></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:DAEEDC404B25478D8A427697EEED4296</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value>urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate</con:name><con:value>false</con:value></con:property><con:property><con:name>streamFlagCreateDateOld_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StreamDeleted</con:name><con:value>urn:dece:streamhandleid:org:dece:DF928D8519CE4B3084488B6708AABA4F;urn:dece:streamhandleid:org:dece:1DA93627A3544A20B55C1ABE868144DF;</con:value></con:property><con:property><con:name>streamCreateCount</con:name><con:value>8</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>sName</con:name><con:value>Coordinator Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>rightstokenidFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value>urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79611</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value>dececs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/coordcs_concat.pem</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentEncoding</con:name><con:value>chunked</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value>12</con:value></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value>0</con:value></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value>urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value>urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value>urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRequestingUser</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBModifiedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_8</con:name><con:value>2015/04/27 18:01:15</con:value></con:property><con:property><con:name>expectDBDeletedTime_7</con:name><con:value>2015/04/27 18:00:46</con:value></con:property><con:property><con:name>expectDBDeletedTime_6</con:name><con:value>2015/04/27 18:00:16</con:value></con:property><con:property><con:name>expectDBDeletedTime_5</con:name><con:value>2015/04/27 17:59:50</con:value></con:property><con:property><con:name>expectDBDeletedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_40</con:name><con:value>2012/11/02 17:34:56</con:value></con:property><con:property><con:name>expectDBDeletedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_39</con:name><con:value>2012/11/02 17:34:29</con:value></con:property><con:property><con:name>expectDBDeletedTime_38</con:name><con:value>2012/11/02 17:34:00</con:value></con:property><con:property><con:name>expectDBDeletedTime_37</con:name><con:value>2012/11/02 17:33:31</con:value></con:property><con:property><con:name>expectDBDeletedTime_36</con:name><con:value>2012/11/02 17:33:02</con:value></con:property><con:property><con:name>expectDBDeletedTime_35</con:name><con:value>2012/11/02 17:32:34</con:value></con:property><con:property><con:name>expectDBDeletedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_30</con:name><con:value>2012/11/02 17:52:15</con:value></con:property><con:property><con:name>expectDBDeletedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_29</con:name><con:value>2012/11/02 17:51:41</con:value></con:property><con:property><con:name>expectDBDeletedTime_28</con:name><con:value>2012/11/02 17:51:05</con:value></con:property><con:property><con:name>expectDBDeletedTime_27</con:name><con:value>2012/11/02 17:50:32</con:value></con:property><con:property><con:name>expectDBDeletedTime_26</con:name><con:value>2012/11/02 17:49:58</con:value></con:property><con:property><con:name>expectDBDeletedTime_25</con:name><con:value>2012/11/02 17:49:20</con:value></con:property><con:property><con:name>expectDBDeletedTime_24</con:name><con:value>2012/11/02 17:48:48</con:value></con:property><con:property><con:name>expectDBDeletedTime_23</con:name><con:value>2012/11/02 17:48:14</con:value></con:property><con:property><con:name>expectDBDeletedTime_22</con:name><con:value>2012/11/02 17:47:39</con:value></con:property><con:property><con:name>expectDBDeletedTime_21</con:name><con:value>2012/11/02 17:47:05</con:value></con:property><con:property><con:name>expectDBDeletedTime_20</con:name><con:value>2012/11/02 17:46:33</con:value></con:property><con:property><con:name>expectDBDeletedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_19</con:name><con:value>2012/11/02 17:46:00</con:value></con:property><con:property><con:name>expectDBDeletedTime_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_15</con:name><con:value>2015/04/27 17:43:22</con:value></con:property><con:property><con:name>expectDBDeletedTime_14</con:name><con:value>2015/04/27 17:42:52</con:value></con:property><con:property><con:name>expectDBDeletedTime_13</con:name><con:value>2015/04/27 17:42:20</con:value></con:property><con:property><con:name>expectDBDeletedTime_12</con:name><con:value>2015/04/27 17:41:48</con:value></con:property><con:property><con:name>expectDBDeletedTime_11</con:name><con:value>2015/04/27 17:41:18</con:value></con:property><con:property><con:name>expectDBDeletedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value>2015/04/27 18:01:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value>2015/04/27 18:00:32</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value>2015/04/27 18:00:04</con:value></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value>2015/04/27 17:59:37</con:value></con:property><con:property><con:name>expectDBCreatedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_40</con:name><con:value>2012/11/02 17:34:45</con:value></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_39</con:name><con:value>2012/11/02 17:34:16</con:value></con:property><con:property><con:name>expectDBCreatedTime_38</con:name><con:value>2012/11/02 17:33:49</con:value></con:property><con:property><con:name>expectDBCreatedTime_37</con:name><con:value>2012/11/02 17:33:18</con:value></con:property><con:property><con:name>expectDBCreatedTime_36</con:name><con:value>2012/11/02 17:32:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_35</con:name><con:value>2012/11/02 17:32:23</con:value></con:property><con:property><con:name>expectDBCreatedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_33</con:name><con:value>2012/11/02 17:53:23</con:value></con:property><con:property><con:name>expectDBCreatedTime_32</con:name><con:value>2012/11/02 17:53:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_31</con:name><con:value>2012/11/02 17:52:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_30</con:name><con:value>2012/11/02 17:52:05</con:value></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value>2015/04/29 16:53:55</con:value></con:property><con:property><con:name>expectDBCreatedTime_29</con:name><con:value>2012/11/02 17:51:31</con:value></con:property><con:property><con:name>expectDBCreatedTime_28</con:name><con:value>2012/11/02 17:50:55</con:value></con:property><con:property><con:name>expectDBCreatedTime_27</con:name><con:value>2012/11/02 17:50:21</con:value></con:property><con:property><con:name>expectDBCreatedTime_26</con:name><con:value>2012/11/02 17:49:45</con:value></con:property><con:property><con:name>expectDBCreatedTime_25</con:name><con:value>2012/11/02 17:49:10</con:value></con:property><con:property><con:name>expectDBCreatedTime_24</con:name><con:value>2012/11/02 17:48:38</con:value></con:property><con:property><con:name>expectDBCreatedTime_23</con:name><con:value>2012/11/02 17:48:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_22</con:name><con:value>2012/11/02 17:47:29</con:value></con:property><con:property><con:name>expectDBCreatedTime_21</con:name><con:value>2012/11/02 17:46:56</con:value></con:property><con:property><con:name>expectDBCreatedTime_20</con:name><con:value>2012/11/02 17:46:22</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_19</con:name><con:value>2012/11/02 17:45:50</con:value></con:property><con:property><con:name>expectDBCreatedTime_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_17</con:name><con:value>2012/11/21 07:50:08</con:value></con:property><con:property><con:name>expectDBCreatedTime_16</con:name><con:value>2015/04/27 17:43:37</con:value></con:property><con:property><con:name>expectDBCreatedTime_15</con:name><con:value>2015/04/27 17:43:08</con:value></con:property><con:property><con:name>expectDBCreatedTime_14</con:name><con:value>2015/04/27 17:42:35</con:value></con:property><con:property><con:name>expectDBCreatedTime_13</con:name><con:value>2015/04/27 17:42:06</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value>2015/04/27 17:41:33</con:value></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value>2015/04/27 17:41:04</con:value></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value>2015/04/29 17:08:05</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14E06C39FFFB49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%253Adece%253Aaccountid%253Aorg%253Adece%253AEAF5550F8FC462E6E0401F0A059939D6</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14E094CA5C6E068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVbbcuI4EP0VyvM4ZXzBXOwKVHFLwoRcBpjMzL5sKXIDIrYEkgwmX7+SAQ8mJMvuk0vtVvfp7qMjXQkUR27QFgK4JIyW0jiiIsisTSPhNGBIEBFQFIMIJA7G7fth4JbtAB22GKVBr2n83ag0kB06oYlCxzU9FFZNhG3b9N2K42DAdR9h5SpEAgMqJKKyabi2UzVtz3T9iVMLvErg1su+V/vLKD0DFyq2cinbxh5UKprGXMplYFmbzaa8qZQZn1mubTvWr/vhGM8hRkbraldRloi39v64HAKGKMJlzGLryir4XIUiGJMZRTLhsM8VfpTLtmzfUj6hILMvRr4XwgGdsmzZRZRRglFE3pDuzz3IOQtL7WjGOJHz+MMiHFsHNiHFJnY8+sWwitAuDFRAyAUyxRw5+1gjmAIHiqH0YzRoGl8um1q2dcIRFVPGY1Fc/jc8QNcQsSWEpjiUtYd2ecAznWpdAQ4GFEeJIGt40GRdIgxiP03Al4cqPXGYknRIhCJoKjQ66xjeyXLXjR6ZgZD/Z0BHw9kFeUZRAq0aqt7wu/qPLlk8Txae/7KI/c0i4U76o5kBOHbODPlod8sTUuYk2u3o1V+efk/tzvD2LUoXHVLZ3kic/pzeWPPn1ykXac0draLOfBzXk+4zE6NOfHN3L5arxXhZHQrUnaXutHH7tTHDi+3E/e7Vv5LRr7eNuJ3dznr0jkYPc9/59eIMO9+2Xnu0ab/4tcfJpBZD/+m1gb4N1l7798T2nx/TDeP3r4O38cOwP/rJHhq/K4xVVvedVe27vO3jZl7OEf6i7XDmx8nLArA8LDUNBr3StZoSkp+LmbaQ0JxmrsFSi4+QQKXR0ru0dgSJkjsSBmqGu7Xj9e1at+JfX193PL/f6NvVil31fefabte63dpBZHYoTiB2GZ0SnUtL7o42nwPEcSCAhsDNNUuU0gnjk4g9JFFpQEfqEDAqYMKUPIcuipdIYk7rwo3gbbpN7cTFiVF6YPKRPvL2VAIvSrJfkOQRYLIkoHVb01ooXgupWrFC60RGTnmNyhQSpexci2zgeo2qJUi8jEADtWIWJhGUl/Nl1hhL7L6u0huRWTFjPAzw7sR9WNvpv0MblE9ItIPQBXVAjRLOXDDOoZp3VdfOXkSH8O0kJPpwqZ5KTvAOSfHXH6pojuQ8OZR1wJ27nxoKoa3TqvJs4ZrgnPH5va3kXAlA6zCYFXLKq3KyXifZLDyvYnEV3tL9sGzXGgNOlERtJ+wVqJVHsS66D3LgJ8lzexFiIud0LJGEWHGnlC0veACMQegHwEBxPr30dVFIqVonIZXnbN1IPV404k/fNzjA2k+Zn9RHqVT4Z2JnYh3lUXWq+18SOtMrfRdsPyMHUSrG+HHwcwHOJS8a8ybnWKQi1Esi4eM/JS1PTQNhzBIqBz0jMxxLZoZTbpcQ/HF6FyZT5fyZRv79nWaSjAIY1ONOkCy+vm0DfQTo7Eh290lPldf3uu1qt6YkuHGdKW99p7z9TtfLm1JA13pnfm856tMpx1v/AA==</con:value></con:property><con:property><con:name>ActualStreamHandleIDList</con:name><con:value>urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC;urn:dece:streamhandleid:org:dece:4261B9C973904929A30280C3D2E4BF8C;urn:dece:streamhandleid:org:dece:7A4D1BAB1CBA433885C0FAFDFA38C304;urn:dece:streamhandleid:org:dece:17B6744A735B4CD5B21E5A1BB11BCDE1;urn:dece:streamhandleid:org:dece:76931440E77B4C9B9CAD7420872045AF;urn:dece:streamhandleid:org:dece:62176B1ED60F427B8412427E5E502585;urn:dece:streamhandleid:org:dece:69475C3BA31248779D0EA824333A17CB;urn:dece:streamhandleid:org:dece:42D0699D2EFF40AFA3E40EDAE2DE0BFE;</con:value></con:property><con:property><con:name>ActiveStreamCountList</con:name><con:value/></con:property><con:property><con:name>accountList</con:name><con:value>urn:dece:accountid:org:dece:14DDA87388B821E8E05307991F0A7663</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>49968546-ffaf-4aaa-977f-7220ad4d95f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93a38a1a-be31-47c6-bf95-a083445abe1e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamCreate" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="91a9776f-f3fa-46b0-ac6c-f42d96eacedb"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d3284b7d-0e84-4599-89ee-db9277954f80"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("userIndex",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("nickname",null);
//tC.setPropertyValue("transactionid",null);
tC.setPropertyValue("requestBody",null);
tC.setPropertyValue("sCbodyRequestingUserSetting",null);
tC.setPropertyValue("sCbodyStreamClientNickname",null);
tC.setPropertyValue("expectErrTypeStreamCreate",null);
tC.setPropertyValue("expectDBCreatedByNodeType",null);
tC.setPropertyValue("rightstokenid",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="e8ff26e1-c511-4ffb-959d-1a835303725a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("userIndex",callTC.getPropertyValue("userIndex"));
tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nickname",callTC.getPropertyValue("nickname"));
//tC.setPropertyValue("transactionid",callTC.getPropertyValue("transactionid"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("expectErrTypeStreamCreate",callTC.getPropertyValue("expectErrTypeStreamCreate"));
tC.setPropertyValue("sCbodyRequestingUserSetting",callTC.getPropertyValue("sCbodyRequestingUserSetting"));
tC.setPropertyValue("sCbodyStreamClientNickname",callTC.getPropertyValue("sCbodyStreamClientNickname"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
if (tC.getPropertyValue("expectErrTypeStreamCreate") == null || tC.getPropertyValue("expectErrTypeStreamCreate") == "") {
	tC.setPropertyValue("expectErrTypeStreamCreate","SUCCESS");
}
if (tC.getPropertyValue("nodetype") == null || tC.getPropertyValue("nodetype") == "") {
	tC.setPropertyValue("nodetype","dlp");
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0");
}
if (tC.getPropertyValue("userIndex") == null || tC.getPropertyValue("userIndex") == "") {
	tC.setPropertyValue("userIndex","0");
}
String count = tC.getPropertyValue("counter").toString();

tC.setPropertyValue("streamhandleFULL_" + count,null);
tC.setPropertyValue("streamhandle_" + count,null);
tC.setPropertyValue("streamhandleFULL_" + count,null);
tC.setPropertyValue("streamhandle_" + count,null);
tC.setPropertyValue("expectNickname_" + count,null);
tC.setPropertyValue("expectDBStatus_" + count,null);
tC.setPropertyValue("expectDBCreatedBy_" + count,null);
tC.setPropertyValue("expectRequestingUser_" + count,null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Construct the StreamCreate request Body" id="9536616d-432c-483b-9d06-e0b80e8d30f4"><con:settings/><con:config><script><![CDATA[def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String b = "";
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema").toString();
String assertionUserIdFULL = tC.getPropertyValue("assertionUserIdFULL").toString();
String assertionUserId = tC.getPropertyValue("assertionUserId").toString();
String rightstokenidFULL = tC.getPropertyValue("rightstokenidFULL").toString();
String rightstokenid= tC.getPropertyValue("rightstokenid").toString();
String transactionid = tC.getPropertyValue("transactionid").toString();
String nickname = tC.getPropertyValue("nickname").toString();
String sCbodyRequestingUserSetting = tC.getPropertyValue("sCbodyRequestingUserSetting");
String sCbodyTransactionidSetting = tC.getPropertyValue("sCbodyTransactionidSetting");
String sCbodyStreamClientNickname = tC.getPropertyValue("sCbodyStreamClientNickname");
String sCbodyRightsTokenID = tC.getPropertyValue("sCbodyRightsTokenID");
String subDivided = tC.getPropertyValue("subDivided").toString();
String calculationmethod = tC.getPropertyValue("calculationmethod").toString();


if (transactionid == "null") {
	transactionid = "";
}
if (nickname == "null") {
	nickname = "";
}
if (rightstokenidFULL == "null") {
	rightstokenidFULL = "";
}
if (assertionUserIdFULL == "null") {
	assertionUserIdFULL = "";
}

/*
String xmlBody = """<Stream xmlns="http://www.decellc.org/schema/2010/10/dece" xmlns:ns2="http://www.movielabs.com/md" 
     xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
      <StreamClientNickname>$nickname</StreamClientNickname> 
      %%REQUESTINGUSER%%
      <RightsTokenID>$rightstokenidFULL</RightsTokenID>
      %%TRANSACTIONID%%
</Stream>""";
*/

String xmlBody = """<Stream xmlns="$coordinatorSchema" xmlns:ns2="http://www.movielabs.com/md" 
     xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">\n\n""";

log.info "sCbodyRequestingUserSetting[$sCbodyRequestingUserSetting]";
log.info "sCbodyTransactionidSetting[$sCbodyTransactionidSetting]";
log.info "sCbodyStreamClientNickname[$sCbodyStreamClientNickname]";
log.info "sCbodyRightsTokenID[$sCbodyRightsTokenID]";
log.info "subDivided[$subDivided]";

switch (sCbodyStreamClientNickname) {
	case "exclude":
		b = "";
		break;
	case "nullContent":
		b = "    <StreamClientNickname></StreamClientNickname>";
		break;
	default:
		b = "    <StreamClientNickname>$nickname</StreamClientNickname>";
		break;
}

xmlBody = xmlBody + b + "\n";

switch (sCbodyRequestingUserSetting) {
	case "exclude":
		b = "";
		break;
	case "nullContent":
		b = "    <RequestingUserID></RequestingUserID>";
		break;
	default:
		b = "    <RequestingUserID>urn:dece:userid:org:dece:$assertionUserId</RequestingUserID>";
		break;
}

xmlBody = xmlBody + b + "\n";

switch (sCbodyRightsTokenID) {
	case "exclude":
		b = "";
		break;
	case "nullContent":
		b = "    <RightsTokenID>$rightstokenidFULL</RightsTokenID>";
		break;
	default:
		b = "    <RightsTokenID>urn:dece:rightstokenid:org:dece:$rightstokenid</RightsTokenID>";
		break;
}

xmlBody = xmlBody + b + "\n";

switch (sCbodyTransactionidSetting) {
	case "exclude":
		b = "";
		break;
	case "nullContent":
		b = "    <TransactionID></TransactionID>";
		break;
	default:
		b = "    <TransactionID>" + transactionid + "</TransactionID>";
		break;
}

xmlBody = xmlBody + b + "\n";

switch (subDivided) {
	

	case "exclude":
		b = "";
		break;
	case "nullContent":
	     //String calculationmethod = "urn:dece:type:geoloc:other";
		b = """<SubDividedGeolocation CalculationMethod="$calculationmethod">$subDivided</SubDividedGeolocation>""";
		break;
		
	default:
	    // String calculationmethod = "urn:dece:type:geoloc:other";
		b = """<SubDividedGeolocation CalculationMethod="$calculationmethod">$subDivided</SubDividedGeolocation>""";
		break;
}

xmlBody = xmlBody + b + "\n";


xmlBody = xmlBody + "\n" + "\n\n</Stream>";

log.info xmlBody;

tC.setPropertyValue("requestBody", xmlBody);

]]></script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="0afcfb42-20f0-4111-b816-fd661ae36347"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("POST - StreamCreate");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - StreamCreate" id="01b3efaa-faff-4d35-b7d4-883b62367b1e"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - StreamCreate" mediaType="application/xml" postQueryString="false" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request>${#TestCase#requestBody}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Capture Current DB sysdate()" id="69c3ed37-6319-4bb1-acdc-fd035a5cfc08"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("currentDBTOD",null);

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
String sqlResultXML = "";
String cDate = "";
String tod = "";

try {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
	sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
	log.info "sqlResultXML[$sqlResultXML]";

	if (sqlResultXML.length() > 0) {
		def myXML = new XmlSlurper().parseText(sqlResultXML);
		tod = myXML.ResultSet.Row.TOD;
		log.info "tod[$tod]";
	}

}
catch (Throwable e) {
	log.info "sql[$sql]";
	log.info "dbUtils request failed! - " + e;
	assert 1 == 2;
}
finally {
	if (tod.length() > 0) {
		tC.setPropertyValue("currentDBTOD", tod);
	}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="4d3597b0-7390-4191-837e-3e8ab9b4235f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('POST - StreamCreate');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);

  if(status=="HTTP/1.1 201 Created")
  {  int StreamCreateCount=Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));
   log.info "StreamCreateCount : "+StreamCreateCount;
   StreamCreateCount++;
    log.info "StreamCreateCount : "+StreamCreateCount;
     tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  }
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Stream Details for List&amp; view" id="c4d590a1-1933-4033-aaec-7091d56cea45"><con:settings/><con:config><script><![CDATA[import java.util.*;
def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

// countOf_Fullfilment =  Gives count of no of AuthorizedFulfillmentMethod
//List_FullfilmentMethod = List of sorted List_AuthorizedFulfillmentMethod

//StreamClientNickname
//RequestingUserID
//RightsTokenID
//ExpirationDateTime
//SubDividedGeolocation
//streamhandleid

def rawRequest = context.expand( '${POST - StreamCreate#RawRequest}' )
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' )
String coordinatorSchema = tP.getPropertyValue("coordinatorSchema").toString();
String assertionUserIdFULL = tC.getPropertyValue("assertionUserIdFULL").toString();

String rightstokenidFULL = tC.getPropertyValue("rightstokenidFULL").toString();
String transactionid = tC.getPropertyValue("transactionid").toString();
String nickname = tC.getPropertyValue("nickname").toString();



def httpStatus = context.expand( '${#TestCase#httpStatus}' )
String httpLocation = context.expand( '${#TestCase#httpLocation}' ).toString();
def accountList = context.expand( '${#Project#accountList}' ).toString();
int StreamCreateCount = Integer.parseInt(context.expand( '${#Project#StreamCreateCount}' ))

String[] Httplist=httpLocation.split("/");

String StreamHandleID=Httplist[Httplist.length -1];
log.info "StreamHandleID : $StreamHandleID"

//StreamList  testcase property will store list of STREAMS

log.info rawRequest
def StreamList = context.expand( '${#TestCase#StreamList}' ).toString()

if (rawRequest != "" ) 
    {
                
                def myXML = new XmlSlurper().parseText(rawRequest).declareNamespace('dece':tP.getPropertyValue("coordinatorSchema"));
                 log.info "myXML:" + myXML;


                 if(accountList==assertionAccountIdFULL && httpStatus=="HTTP/1.1 201 Created" && StreamCreateCount<=12)
                 {
                    StreamList= StreamList+StreamHandleID+"!"+rightstokenidFULL+","+assertionUserIdFULL+";";
                  
                    tC.setPropertyValue("StreamList",StreamList);
                 	
                 	}
                 else if(httpStatus=="HTTP/1.1 201 Created" && StreamCreateCount<=12)
                 {   
                 	tP.setPropertyValue("accountList",assertionAccountIdFULL);
                 	
                 	StreamList= assertionAccountIdFULL+"#"+StreamHandleID+"!"+rightstokenidFULL+","+assertionUserIdFULL+";";
                  
                 	 tC.setPropertyValue("StreamList",StreamList);
                     	
                 	}
                 else
                 	{ log.info "else block Script issue"
                 		}

    }]]></script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="a5f588a9-f640-4d11-bb8c-8af8475f59d0"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamCreate[" + tC.getPropertyValue("expectErrTypeStreamCreate") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamCreate")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	case "USER_PRIVILEGE_ACCESS_RESTRICTED":
		errId = "UserPrivilegeAccessRestricted";
	break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="2ab7c819-c6cf-4425-b46b-297ba80140ff"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct      = tC.getPropertyValue("nodeaccountid");
def urnnode   = tP.getPropertyValue("urnNode");

def sh            = tC.getPropertyValue("streamhandleFULL");
def nodeid        = tC.getPropertyValue("nodeid");
def account       = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamCreate");
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodetype      = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = false;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
String urnErr = tP.getPropertyValue("urnError");





this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	//assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = a;
	//def urlStr = b.getPath();
	def urlStr = b;

	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 3);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
	else
	{
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}
//Content-Type
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} else {
		this.log.info "ResourceStatus size is " + myXML.ResourceStatus.size();
		this.log.info "ResourceStatus.Current size is " + myXML.ResourceStatus.Current.size();
		this.log.info "ResourceStatus.Current.Value size is " + myXML.ResourceStatus.Current.Value.size();
		this.log.info "ResourceStatus.Current.Description size is " + myXML.ResourceStatus.Current.Description.size();
		this.log.info "myXML.RequestingUserID size is " + myXML.RequestingUserID.size();
		this.log.info "myXML.RightsTokenID size is " + myXML.RightsTokenID.size();
		this.log.info "ExpirationDateTime size is " + myXML.ExpirationDateTime.size();
		assert myXML.ResourceStatus.size() == 1;
		assert myXML.ResourceStatus.Current.size() == 1;
		assert myXML.ResourceStatus.Current.Value.size() == 1;
		assert myXML.ResourceStatus.Current.Description.size() == 1;
		if (nodetype != "llp" && nodetype != "llpcs") {
			assert myXML.RequestingUserID.size() == 1;
		} else {
			assert myXML.RequestingUserID.size() == 0;
		}
		assert myXML.RightsTokenID.size() == 1;
		assert myXML.ExpirationDateTime.size() == 1;

		// ModifiedBy
		expected = urnnode + nodeid;
		received = myXML.ResourceStatus.Current.@ModifiedBy.text();
		this.log.info "ModifiedBy - Expect[$expected] Received[$received]";
		assert expected == received;
		
		// StreamHandleID
		expected = sh;
		received = myXML.@StreamHandleID.text();
		this.log.info "StreamHandleID - Expect[$expected] Received[$received]";
		assert expected == received;

		// CreatedBy
		expected = urnnode + tC.getPropertyValue("expectDBCreatedBy");
		received = myXML.ResourceStatus.Current.@CreatedBy.text();
		this.log.info "CreatedBy - Expect[$expected] Received[$received]";
		assert expected == received;

		// Value
		expected = tC.getPropertyValue("expectDBStatus");
		received = myXML.ResourceStatus.Current.Value.text();
		this.log.info "Value - Expect[$expected] Received[$received]";
		assert expected == received;

		// Description
		expected = description;
		received = myXML.ResourceStatus.Current.Description.text();
		this.log.info "Description - Expect[$expected] Received[$received]";
		assert expected == received;

		// RequestingUserID
		received = myXML.RequestingUserID.text();
		if (nodetype != "llp" && nodetype != "llpcs") {
			expected = tC.getPropertyValue("assertionUserIdFULL");
		} else {
			expected = "";  /* LLP has not user associated with it */
		}
		this.log.info "RequestingUserID - Expect[$expected] Received[$received]";
		assert expected == received;
		
		// RightsTokenID
		expected = tC.getPropertyValue("rightstokenidFULL");
		received = myXML.RightsTokenID.text();
		this.log.info "RightsTokenID - Expect[$expected] Received[$received]";
		assert expected == received;

		// RightsTokenID
		assert myXML.ExpirationDateTime.text().length() > 0;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Return the streamhandle attributes" id="43213d0d-104e-46e6-aa6a-323c04ec8dda"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

//if(tC.getPropertyValue("username") == "pjgOrg1Basic1" || tC.getPropertyValue("username") == "pjgOrg1Basic2")
//{
//int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();
//int userIndex = tC.getPropertyValue("userIndex").toInteger();
//tC.setPropertyValue("streamAccountActiveCount",0);
//}
//else
//{
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger()+1;
int userIndex = tC.getPropertyValue("userIndex").toInteger()+1;
//}
String count = tC.getPropertyValue("counter").toString();

tC.setPropertyValue("streamhandleFULL_" + count,null);
tC.setPropertyValue("streamhandle_" + count,null);
tC.setPropertyValue("streamhandleFULL_" + count,tC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("streamhandle_" + count,tC.getPropertyValue("streamhandle"));
tC.setPropertyValue("expectNickname_" + count,tC.getPropertyValue("nickname"));
tC.setPropertyValue("expectDBStatus_" + count,"active");
tC.setPropertyValue("expectDBStatus","active");
tC.setPropertyValue("expectDBCreatedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectRequestingUser_" + count,tC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("streamAccountActiveCount",streamAccountActiveCount.toString());
tC.setPropertyValue("userIndex",userIndex.toString());
tC.setPropertyValue("expectDBCreatedByNodeType",tC.getPropertyValue("nodetype"));
tC.setPropertyValue("expectDBCreatedByNodeType_" + count,tC.getPropertyValue("nodetype"));

callTC.setPropertyValue("userIndex",tC.getPropertyValue("userIndex"));
callTC.setPropertyValue("streamhandle",tC.getPropertyValue("streamhandle"));
callTC.setPropertyValue("streamhandleFULL",tC.getPropertyValue("streamhandleFULL"));
callTC.setPropertyValue("streamhandleFULL_" + count,tC.getPropertyValue("streamhandleFULL_" + count));
callTC.setPropertyValue("streamhandle_" + count,tC.getPropertyValue("streamhandle_" + count));
callTC.setPropertyValue("expectNickname_" + count,tC.getPropertyValue("expectNickname_" + count));
callTC.setPropertyValue("expectDBStatus",tC.getPropertyValue("expectDBStatus_" + count));
callTC.setPropertyValue("expectDBStatus_" + count,tC.getPropertyValue("expectDBStatus_" + count));
callTC.setPropertyValue("expectDBCreatedBy",tC.getPropertyValue("expectDBCreatedBy_" + count));
callTC.setPropertyValue("expectDBCreatedBy_" + count,tC.getPropertyValue("expectDBCreatedBy_" + count));
callTC.setPropertyValue("expectDBCreatedTime_" + count,tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectRequestingUser",tC.getPropertyValue("expectRequestingUser_" + count));
callTC.setPropertyValue("expectRequestingUser_" + count,tC.getPropertyValue("expectRequestingUser_" + count));
callTC.setPropertyValue("expectRightsToken",tC.getPropertyValue("rightstokenidFULL"));
callTC.setPropertyValue("expectRightsToken_" + count,tC.getPropertyValue("rightstokenidFULL"));
callTC.setPropertyValue("streamAccountActiveCount",tC.getPropertyValue("streamAccountActiveCount"));
callTC.setPropertyValue("expectDBCreatedByNodeType",tC.getPropertyValue("expectDBCreatedByNodeType"));
callTC.setPropertyValue("expectDBCreatedByNodeType_" + count,tC.getPropertyValue("expectDBCreatedByNodeType_" + count));</script></con:config></con:testStep><con:testStep type="delay" name="Delay" id="0d0d894a-23c1-4d6c-bfcb-e30f8b60c459"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:properties><con:property><con:name>accountList</con:name><con:value>urn:dece:accountid:org:dece:14DDA87388B821E8E05307991F0A7663</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assert</con:name><con:value>pVZbc+I6DP4rTPaxE3IhXJIpzFAubVp6DaXdvnSMI8Bt4kDsQMqvP3aAFCjtYXefMlZk6ZP0WdIpQ2FgOk3GIOYkooU0DChzMmldSWLqRIgR5lAUAnM4drzmdc8xi7qDNleUgtuuK6/DCjZHholUH5dN1SrbQ9XWa1UV+cPh0LYt0GuGUGUsAZcyjiivK6ZulFXdUk27b1Scku2UykWzZL0ohQHETNgWKkVdWYNKWV2ZcD51NG2xWBQXpWIUjzVT1w3t+brn4QmESGmcriLKHMWNtT4u+oAhCHARR6F2qu3onPrM8ciYIp7EsPblf+dL13RbEzo+I+NfSn4XfJeOouzYQjSiBKOALJHMzzXwSeQXmsE4igmfhN8GYejSsAopVrFh0V+KtgvtSEM7CGOGVDZBxtrWA4wgBoqh8Pjg1pVfx1Utu9qPEWWjKA7Z7vHP8ACdQxBNwVfZJqw1tOMNHshU4xSw41IcJIzM4UaSdYowsHU1AR9vqnAXw4ikPcIEQVMm0Wnb8PaOq2y0yRgY/5sCbRVnZWSAggQa4dwzUAfD/VnoJqn9fNMbNJc8urKf9XoGYFs5E+SlXR33SJmTaHVjeek9D1h00nEXs3IL37lhVb+sWo/8zWuO/PEZSfXzMuWV5Oopvazw69tbmC7OvKvbuPR0o3VZLe5fpCe/tYvJ5bA/KPe96/c3Y0kWF53xEibarFIeN82Pk5OQosHL1Hox3ujNwl6S7vKp+fZ4f/+Snt/Unr3byvKxV/X1i/NSxfPvZ+lJ+vabXswH1oX18nI5Xpx13Xoezhb+XdnmzXvJ8A0w3xwlDdx2oSuqhPjPzUxKiK+OMlVnKpsP40C50pC3ZO9wEtHuiO+IGq7OhtXRK62S3e1225bdqXX0ckkv27bR1ZuVVquyaTIrFHsQWxEdEelLttwVbX4GiEOHAfUhVudRIjodU36w2EYcFVz6IB5BRBn0I9GejXkYvFenPhmZpBpPqslcp+MPvxQohZuI39LbuDniEO/2ZHunJz8AJlMCsnFLXjNBbMZFLmZonvDAKM5RkUIiWnssu6xjWrWyxkg4DUAi1cLITwIoTifTLDMaW31NFWGWSR86/ey1fRvX/r9NCoSOT6QCk7GcgSgjHBgu5iaQLwFXDg6hjflm4hP5sEQ+eUzwCsnur0+aSH7kHGn3mt7dBnSu+wd3X1veq/GXBnr/4Lz3r85FLb/e1H7Ip7ZfytyRPydbbjdbh5hfouM1NkScIaM4KybzeZJxz7JKWizMa5IEmm5qHuBE9OSPfvQOVMutaEcNwBz4nvNcvgsx4RPqccQhFG+lkB2P2Hg8YHLjccUjT49dp3ZcitRxSPkhWSsQ25pE/ONChx0s9YT4TnwWUex/VuyArS0/Ik6x8HBCx/Ikh9/HN7zAkTBLRNuO4m3jhwwccr4rzJOcY+GCUMOEw/d/CrIf1xWEcZRQ7raVTLA9IzKc/GMKzqfSFzPZGMr3UvL/i6lKMgpgENssI5l9uV448gnQ8dacWTvdHzW21WqWW1Vdr9S62aiprkZN56xl5UnZQdf4Iv4q2crTPscb/wE=</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3AE072E24F73ADE4DBE0401F0A05994C9A</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>calculationmethod</con:name><con:value>urn:dece:type:geoloc:other</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>currentDBTOD</con:name><con:value>2015/04/29 17:08:05</con:value></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_null</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_null</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_null</con:name><con:value>active</con:value></con:property><con:property><con:name>expectErrTypeStreamCreate</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_null</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value>urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value>urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value>urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_null</con:name><con:value>urn:dece:userid:org:dece:9B66525BAF67015BE0401F0A059942CA</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value>https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4/Stream/urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>nickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlp</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79610</con:value></con:property><con:property><con:name>requestBody</con:name><con:value><![CDATA[<Stream xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/md" 
     xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">

    <StreamClientNickname></StreamClientNickname>
    <RequestingUserID>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</RequestingUserID>
    <RightsTokenID>urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</RightsTokenID>
    <TransactionID>1.0.1.3.S</TransactionID>
<SubDividedGeolocation CalculationMethod="urn:dece:type:geoloc:other">US 20148</SubDividedGeolocation>



</Stream>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81</con:value></con:property><con:property><con:name>sCbodyRequestingUserSetting</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sCbodyStreamClientNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>Coordinator Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value>urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value>urn:dece:streamhandleid:org:dece:2E46DFE7891142A0825F0FC042D62A30</con:value></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:DAEEDC404B25478D8A427697EEED4296</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:FA2FAFAD35F740ACB661E48622495566</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value>urn:dece:streamhandleid:org:dece:D1AE4B1CB1594CB49743B1583C5C1BD0</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value>urn:dece:streamhandleid:org:dece:2DDBC1BC4B1F42AB85A442976410A1AA</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value>urn:dece:streamhandleid:org:dece:CAF3F40CE81F466D80EBDF23FB9ECBDC</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value>urn:dece:streamhandleid:org:dece:96092098DB49464C94292CD1B8483B83</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value>urn:dece:streamhandleid:org:dece:D95E71BE9A12ACD3E0401F0A07990784</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E2AD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E2FD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value>urn:dece:streamhandleid:org:dece:62176B1ED60F427B8412427E5E502585</con:value></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E34D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E39D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E3ED317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FEF438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF4438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF9438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FFE438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234467FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2344B7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234507FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value>urn:dece:streamhandleid:org:dece:76931440E77B4C9B9CAD7420872045AF</con:value></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234557FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2345A7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CE58313FD124E0401F0A05990DAA</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CF9B9FB89952E0401F0A079947F1</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value>urn:dece:streamhandleid:org:dece:CD877D48FF260318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value>urn:dece:streamhandleid:org:dece:CD877D48FF2B0318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8AE0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B30BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B80BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8BD0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value>urn:dece:streamhandleid:org:dece:7E27C966BAA34A498FC61300EA4D4F8A</con:value></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8C20BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value>urn:dece:streamhandleid:org:dece:BF6FB3180DD548379B7D6449E9DE0BC0</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value>urn:dece:streamhandleid:org:dece:F24333E267B642D9A3816056474F81EC</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value>urn:dece:streamhandleid:org:dece:3C161D027D1C4D73A337AC00B1A17A78</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value>urn:dece:streamhandleid:org:dece:7F3ACE1411D94A74973BE916C5594B80</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value>urn:dece:streamhandleid:org:dece:7F607A1577DB43BBA644D21BD49C7598</con:value></con:property><con:property><con:name>streamhandleFULL_null</con:name><con:value>urn:dece:streamhandleid:org:dece:DB9579AE03D8DFD8E0401F0A059960A6</con:value></con:property><con:property><con:name>streamhandle_1</con:name><con:value>87BFFF0A641F457D90A2A0DA60FF44FC</con:value></con:property><con:property><con:name>streamhandle_10</con:name><con:value>2E46DFE7891142A0825F0FC042D62A30</con:value></con:property><con:property><con:name>streamhandle_11</con:name><con:value>DAEEDC404B25478D8A427697EEED4296</con:value></con:property><con:property><con:name>streamhandle_12</con:name><con:value>FA2FAFAD35F740ACB661E48622495566</con:value></con:property><con:property><con:name>streamhandle_13</con:name><con:value>D1AE4B1CB1594CB49743B1583C5C1BD0</con:value></con:property><con:property><con:name>streamhandle_14</con:name><con:value>2DDBC1BC4B1F42AB85A442976410A1AA</con:value></con:property><con:property><con:name>streamhandle_15</con:name><con:value>CAF3F40CE81F466D80EBDF23FB9ECBDC</con:value></con:property><con:property><con:name>streamhandle_16</con:name><con:value>96092098DB49464C94292CD1B8483B83</con:value></con:property><con:property><con:name>streamhandle_17</con:name><con:value>D95E71BE9A12ACD3E0401F0A07990784</con:value></con:property><con:property><con:name>streamhandle_18</con:name><con:value>CD87AA799E2AD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_19</con:name><con:value>CD87AA799E2FD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value>62176B1ED60F427B8412427E5E502585</con:value></con:property><con:property><con:name>streamhandle_20</con:name><con:value>CD87AA799E34D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_21</con:name><con:value>CD87AA799E39D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_22</con:name><con:value>CD87AA799E3ED317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandle_23</con:name><con:value>CD87BC6F0FEF438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandle_24</con:name><con:value>CD87BC6F0FF4438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandle_25</con:name><con:value>CD87BC6F0FF9438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandle_26</con:name><con:value>CD87BC6F0FFE438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandle_27</con:name><con:value>CD87C4C234467FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_28</con:name><con:value>CD87C4C2344B7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_29</con:name><con:value>CD87C4C234507FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_3</con:name><con:value>76931440E77B4C9B9CAD7420872045AF</con:value></con:property><con:property><con:name>streamhandle_30</con:name><con:value>CD87C4C234557FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_31</con:name><con:value>CD87C4C2345A7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandle_32</con:name><con:value>CD87CE58313FD124E0401F0A05990DAA</con:value></con:property><con:property><con:name>streamhandle_33</con:name><con:value>CD87CF9B9FB89952E0401F0A079947F1</con:value></con:property><con:property><con:name>streamhandle_34</con:name><con:value>CD877D48FF260318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandle_35</con:name><con:value>CD877D48FF2B0318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandle_36</con:name><con:value>CD87862FA8AE0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_37</con:name><con:value>CD87862FA8B30BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_38</con:name><con:value>CD87862FA8B80BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_39</con:name><con:value>CD87862FA8BD0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_4</con:name><con:value>7E27C966BAA34A498FC61300EA4D4F8A</con:value></con:property><con:property><con:name>streamhandle_40</con:name><con:value>CD87862FA8C20BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandle_5</con:name><con:value>BF6FB3180DD548379B7D6449E9DE0BC0</con:value></con:property><con:property><con:name>streamhandle_6</con:name><con:value>F24333E267B642D9A3816056474F81EC</con:value></con:property><con:property><con:name>streamhandle_7</con:name><con:value>3C161D027D1C4D73A337AC00B1A17A78</con:value></con:property><con:property><con:name>streamhandle_8</con:name><con:value>7F3ACE1411D94A74973BE916C5594B80</con:value></con:property><con:property><con:name>streamhandle_9</con:name><con:value>7F607A1577DB43BBA644D21BD49C7598</con:value></con:property><con:property><con:name>streamhandle_null</con:name><con:value>DB9579AE03D8DFD8E0401F0A059960A6</con:value></con:property><con:property><con:name>StreamList</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4#urn:dece:streamhandleid:org:dece:DF928D8519CE4B3084488B6708AABA4F!urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:42D0699D2EFF40AFA3E40EDAE2DE0BFE!urn:dece:rightstokenid:org:dece:14E0B4D0EB414E7CE05307991F0A3D7C,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:69475C3BA31248779D0EA824333A17CB!urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:62176B1ED60F427B8412427E5E502585!urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:76931440E77B4C9B9CAD7420872045AF!urn:dece:rightstokenid:org:dece:14E0B7482CB04114E05305991F0ADD3B,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:17B6744A735B4CD5B21E5A1BB11BCDE1!urn:dece:rightstokenid:org:dece:14E08C6FA4342F19E05305991F0A08FB,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:7A4D1BAB1CBA433885C0FAFDFA38C304!urn:dece:rightstokenid:org:dece:14E0B7482DAE4114E05305991F0ADD3B,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:1DA93627A3544A20B55C1ABE868144DF!urn:dece:rightstokenid:org:dece:14E0B4D0EEDA4E7CE05307991F0A3D7C,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:4261B9C973904929A30280C3D2E4BF8C!urn:dece:rightstokenid:org:dece:14E0B4D0EF0F4E7CE05307991F0A3D7C,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;urn:dece:streamhandleid:org:dece:87BFFF0A641F457D90A2A0DA60FF44FC!urn:dece:rightstokenid:org:dece:14E0F93AC1CC5B76E05305991F0AEF81,urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6;</con:value></con:property><con:property><con:name>subDivided</con:name><con:value>US 20148</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_66700 - StreamListView - COORDINATORCS - API invocation after StreamRenew by Full User_FLAKY</con:value></con:property><con:property><con:name>transactionid</con:name><con:value>1.0.1.3.S</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>46d4884e-6b68-4c9a-b49a-94e196ae53b8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamDelete" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="0130ccff-b3fc-43c6-a86b-f3d60d35f5b1"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="ba19cf0d-f1dd-4700-9066-b2216ecd6404"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("deletedCreateCount",null);
tC.setPropertyValue("userIndex",null);
tC.setPropertyValue("currentDBTOD",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("expectErrTypeStreamDelete",null);
tC.setPropertyValue("deletedCreateCount",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="8dfb92cf-6c8a-4508-b84d-1eb8962313f4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("deletedCreateCount",callTC.getPropertyValue("deletedCreateCount"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("userIndex",callTC.getPropertyValue("userIndex"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamDelete",callTC.getPropertyValue("expectErrTypeStreamDelete"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypeStreamDelete") == null || tC.getPropertyValue("expectErrTypeStreamDelete") == "null") {
	tC.setPropertyValue("expectErrTypeStreamDelete", "SUCCESS");
}
if (tC.getPropertyValue("deletedCreateCount") == null || tC.getPropertyValue("deletedCreateCount") == "null") {
	tC.setPropertyValue("deletedCreateCount", "0");
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "null") {
	tC.setPropertyValue("streamAccountActiveCount", "0");
}
if (tC.getPropertyValue("userIndex") == null || tC.getPropertyValue("userIndex") == "null") {
	tC.setPropertyValue("userIndex", "0");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="81b1f131-7302-4bb2-a3e0-3c3a13568954"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Delete - StreamDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Capture Current DB sysdate()" id="79dca1e6-4e03-44fd-8187-7733bca4b35d"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("currentDBTOD",null);

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
String sqlResultXML = "";
String cDate = "";
String tod = "";

try {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
	sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
	log.info "sqlResultXML[$sqlResultXML]";

	if (sqlResultXML.length() > 0) {
		def myXML = new XmlSlurper().parseText(sqlResultXML);
		tod = myXML.ResultSet.Row.TOD;
		log.info "tod[$tod]";
	}

}
catch (Throwable e) {
	log.info "sql[$sql]";
	log.info "dbUtils request failed! - " + e;
	assert 1 == 2;
}
finally {
	if (tod.length() > 0) {
		tC.setPropertyValue("currentDBTOD", tod);
	}
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete - StreamDelete" id="dd620f6c-4fad-4d65-95d0-30a7fd247718"><con:settings/><con:config service="StreamDelete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{SH}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - StreamDelete" mediaType="application/xml" sslKeystore="DLASP_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="d266df24-b23a-4c8e-acfc-1f9a1bd7d0a9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Delete - StreamDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Stream Deleted for Listview" id="80bd7f5c-ba9e-48c7-ad1b-a66b5a7971fb"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def TpstreamDeleteList = context.expand( '${#Project#StreamDeleteList}' )
int StreamDeleteCount=Integer.parseInt(tP.getPropertyValue("StreamDeleteCount"));
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
def streamDeleted = context.expand( '${#TestCase#StreamDeleted}' )
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' )
int StreamCreateCount=Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));

log.info httpStatus
def StreamDeleted = context.expand( '${#TestCase#StreamDeleted}' )

if (httpStatus=="HTTP/1.1 200 OK" ) 
{     def streamhandleFULL = context.expand( '${#TestCase#streamhandleFULL}' )
                
            def accountListDLT = context.expand( '${#Project#accountListDLT}' )
               


                 if(accountListDLT==assertionAccountIdFULL && httpStatus=="HTTP/1.1 200 OK" && StreamCreateCount>0)
                 {
                    StreamDeleted= StreamDeleted+streamhandleFULL +";"
                    
                     TpstreamDeleteList=TpstreamDeleteList+streamhandleFULL +";"
                    tC.setPropertyValue("StreamDeleted",StreamDeleted);
                    tP.setPropertyValue("StreamDeleteList",TpstreamDeleteList);
                    
                    StreamCreateCount--;
  				log.info "StreamCreateCount if ; "+StreamCreateCount;
  				 tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  				 
  				 StreamDeleteCount++;
  				 log.info "StreamDeleteCount if  : "+StreamDeleteCount;
  				 tP.setPropertyValue("StreamDeleteCount", StreamDeleteCount.toString()); 

                      log.info "StreamDeleteList for if  : "+tP.getPropertyValue("StreamDeleteList");
  				

                 	}
                 	
                 else if(httpStatus=="HTTP/1.1 200 OK" && StreamCreateCount>0)
                 {   
                 	tP.setPropertyValue("accountListDLT",assertionAccountIdFULL);
                 	StreamDeleted=streamhandleFULL +";"
                  
                    tC.setPropertyValue("StreamDeleted",StreamDeleted);
                    
                       TpstreamDeleteList=streamhandleFULL +";"
                    tP.setPropertyValue("StreamDeleteList",TpstreamDeleteList);
                    
                    StreamCreateCount--;
  				log.info "StreamCreateCount for else if  : "+StreamCreateCount;
  				log.info "StreamDeleteList for else if  : "+tP.getPropertyValue("StreamDeleteList");
  				 tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  				  
  				 tP.setPropertyValue("StreamDeleteCount","1");
  				 
  			}
                 else
                 	{ log.info "else block Script issue"
                 		}

    }
//
//log.info "StreamDeleteList for Normal StreamDelete : "  tP.getPropertyValue("StreamDeleteList")]]></script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="aba8475e-c744-4012-84c8-e3a59218e79c"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamDelete[" + tC.getPropertyValue("expectErrTypeStreamDelete") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamDelete")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="3074aa4d-e5c9-4685-ac95-7aae8ccf7709"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct = tC.getPropertyValue("nodeaccountid");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnError");
def sh = tC.getPropertyValue("streamhandleFULL");
def nodeid = tC.getPropertyValue("nodeid");
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamDelete");
def XMLbody = tC.getPropertyValue("XMLbody");
def nodetype = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = false;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;


this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;

	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "METHOD_NOT_ALLOWED":
		expectHTTPstatus   = "HTTP/1.1 405 Method Not Allowed";
		XMLbodynull        = false;
		httpLocationHeader = false;

	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	//assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = a;
	//def urlStr = b.getPath();
	def urlStr = b;

	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 3);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
	else
	{
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}

//Content-Type
if(errorRespType == "METHOD_NOT_ALLOWED")
{
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
}
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if(errorRespType != "METHOD_NOT_ALLOWED"){

if (XMLbody != null &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;

		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} 
} 
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Return attributes to calling Test Case" id="4996592a-9f5b-4b9f-8e08-36d1f2c9900f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int deletedCreateCount = tC.getPropertyValue("deletedCreateCount").toInteger()++;
int userIndex = tC.getPropertyValue("userIndex").toInteger();
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();
String count = tC.getPropertyValue("counter").toString();

if (userIndex > 0) {
	userIndex--;
}
if (streamAccountActiveCount > 0) {
	streamAccountActiveCount--;
}

tC.setPropertyValue("expectDBDeletedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBStatus_" + count,"deleted");
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("deletedCreateCount",deletedCreateCount.toString());
tC.setPropertyValue("expectDBStatus","deleted");

callTC.setPropertyValue("deletedCreateCount",tC.getPropertyValue("deletedCreateCount"));
callTC.setPropertyValue("streamAccountActiveCount",streamAccountActiveCount.toString());
callTC.setPropertyValue("userIndex",userIndex.toString());
callTC.setPropertyValue("expectDBStatus_" + count,tC.getPropertyValue("expectDBStatus_" + count));
callTC.setPropertyValue("expectDBStatus" + count,tC.getPropertyValue("expectDBStatus"));
callTC.setPropertyValue("expectDBDeletedBy_" + count,tC.getPropertyValue("expectDBDeletedBy_" + count));
callTC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("expectDBDeletedBy"));
callTC.setPropertyValue("expectDBDeletedTime_" + count,tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("expectDBModifiedBy_" + count));
callTC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("expectDBModifiedBy"));</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_66500 - StreamListView - COORDINATORCS - Account single deleted stream and a single active stream as Full user_FLAKY</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3ADBD14C92C6289A31E0401F0A07995885</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:1DA93627A3544A20B55C1ABE868144DF</con:value></con:property><con:property><con:name>StreamDeleted</con:name><con:value>urn:dece:streamhandleid:org:dece:DF928D8519CE4B3084488B6708AABA4F;urn:dece:streamhandleid:org:dece:1DA93627A3544A20B55C1ABE868144DF;</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value>1</con:value></con:property><con:property><con:name>sName</con:name><con:value>Coordinator Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14E0B4D0EEDA4E7CE05307991F0A3D7C</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79613</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/DLASP_concat.pem</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBModifiedBy_9</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_4</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_3</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_2</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_10</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value>1</con:value></con:property><con:property><con:name>DeleteCount</con:name><con:value/></con:property><con:property><con:name>currentDBTOD</con:name><con:value>2015/04/29 17:02:30</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14E06C39FFFD49E8E05305991F0A6CC6</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A9B66525BAF65015BE0401F0A059942CA</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>assert</con:name><con:value>pVZbc+I6DP4rTPaxE3IhXJIpzFAubVp6DaXdvnSMI8Bt4kDsQMqvP3aAFCjtYXefMlZk6ZP0WdIpQ2FgOk3GIOYkooU0DChzMmldSWLqRIgR5lAUAnM4drzmdc8xi7qDNleUgtuuK6/DCjZHholUH5dN1SrbQ9XWa1UV+cPh0LYt0GuGUGUsAZcyjiivK6ZulFXdUk27b1Scku2UykWzZL0ohQHETNgWKkVdWYNKWV2ZcD51NG2xWBQXpWIUjzVT1w3t+brn4QmESGmcriLKHMWNtT4u+oAhCHARR6F2qu3onPrM8ciYIp7EsPblf+dL13RbEzo+I+NfSn4XfJeOouzYQjSiBKOALJHMzzXwSeQXmsE4igmfhN8GYejSsAopVrFh0V+KtgvtSEM7CGOGVDZBxtrWA4wgBoqh8Pjg1pVfx1Utu9qPEWWjKA7Z7vHP8ACdQxBNwVfZJqw1tOMNHshU4xSw41IcJIzM4UaSdYowsHU1AR9vqnAXw4ikPcIEQVMm0Wnb8PaOq2y0yRgY/5sCbRVnZWSAggQa4dwzUAfD/VnoJqn9fNMbNJc8urKf9XoGYFs5E+SlXR33SJmTaHVjeek9D1h00nEXs3IL37lhVb+sWo/8zWuO/PEZSfXzMuWV5Oopvazw69tbmC7OvKvbuPR0o3VZLe5fpCe/tYvJ5bA/KPe96/c3Y0kWF53xEibarFIeN82Pk5OQosHL1Hox3ujNwl6S7vKp+fZ4f/+Snt/Unr3byvKxV/X1i/NSxfPvZ+lJ+vabXswH1oX18nI5Xpx13Xoezhb+XdnmzXvJ8A0w3xwlDdx2oSuqhPjPzUxKiK+OMlVnKpsP40C50pC3ZO9wEtHuiO+IGq7OhtXRK62S3e1225bdqXX0ckkv27bR1ZuVVquyaTIrFHsQWxEdEelLttwVbX4GiEOHAfUhVudRIjodU36w2EYcFVz6IB5BRBn0I9GejXkYvFenPhmZpBpPqslcp+MPvxQohZuI39LbuDniEO/2ZHunJz8AJlMCsnFLXjNBbMZFLmZonvDAKM5RkUIiWnssu6xjWrWyxkg4DUAi1cLITwIoTifTLDMaW31NFWGWSR86/ey1fRvX/r9NCoSOT6QCk7GcgSgjHBgu5iaQLwFXDg6hjflm4hP5sEQ+eUzwCsnur0+aSH7kHGn3mt7dBnSu+wd3X1veq/GXBnr/4Lz3r85FLb/e1H7Ip7ZfytyRPydbbjdbh5hfouM1NkScIaM4KybzeZJxz7JKWizMa5IEmm5qHuBE9OSPfvQOVMutaEcNwBz4nvNcvgsx4RPqccQhFG+lkB2P2Hg8YHLjccUjT49dp3ZcitRxSPkhWSsQ25pE/ONChx0s9YT4TnwWUex/VuyArS0/Ik6x8HBCx/Ikh9/HN7zAkTBLRNuO4m3jhwwccr4rzJOcY+GCUMOEw/d/CrIf1xWEcZRQ7raVTLA9IzKc/GMKzqfSFzPZGMr3UvL/i6lKMgpgENssI5l9uV448gnQ8dacWTvdHzW21WqWW1Vdr9S62aiprkZN56xl5UnZQdf4Iv4q2crTPscb/wE=</con:value></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountListDLT</con:name><con:value>urn:dece:accountid:org:dece:14D8AFC79EF43EB0E05307991F0A63B0</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>23c70c45-9074-46f6-be91-e188b2607f26</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamDelete for TearDown" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="9e90699e-12e1-45ce-a15e-2026c45f1582"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="8e152711-e5fc-472a-adf3-25641859dbe7"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


log.info " third test case "

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("deletedCreateCount",null);
tC.setPropertyValue("userIndex",null);
tC.setPropertyValue("currentDBTOD",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("expectErrTypeStreamDelete",null);
tC.setPropertyValue("deletedCreateCount",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);

def TCStreamListView = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamListView');
tC.setPropertyValue("ActualStreamHandleIDList",TCStreamListView.getPropertyValue("ActualStreamHandleIDList"));
tC.setPropertyValue("DeleteCount",tP.getPropertyValue("StreamCreateCount"));

log.info "StreamDelete for TearDown staging 1"+context.expand( '${#Project#StreamDeleteList}' )




int DeleteCount=Integer.parseInt(tC.getPropertyValue("DeleteCount"));
def ActualStreamHandleIDList=tC.getPropertyValue("ActualStreamHandleIDList");
String[] StreamHandleIDList =ActualStreamHandleIDList.split(";");

if(DeleteCount>=0)
{
tC.setPropertyValue("streamhandleFULL",StreamHandleIDList[0]);
log.info "Tear down streamDelete 0 : "+StreamHandleIDList[0];
DeleteCount--;
tC.setPropertyValue("DeleteCount",DeleteCount.toString());
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context LLASP" id="9d56aba4-df2e-43e6-9a4c-9b2a45ea8dd0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("errorRespType","HTTP/1.1 200 OK");

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" id="1a465c86-c0d5-4c82-85a6-42f13a3e10d5" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def callTSname = tC.getPropertyValue("sName");
//def callTCname = tC.getPropertyValue("tName");
//
//def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
//
//tC.setPropertyValue("username",callTC.getPropertyValue("username"));
//tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
//tC.setPropertyValue("password",callTC.getPropertyValue("password"));
//tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
//tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
//tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
//tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
//tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
//tC.setPropertyValue("deletedCreateCount",callTC.getPropertyValue("deletedCreateCount"));
//tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
//tC.setPropertyValue("userIndex",callTC.getPropertyValue("userIndex"));
//tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
//tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));

tC.setPropertyValue("expectErrTypeStreamDelete",callTC.getPropertyValue("expectErrTypeStreamDelete"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));

if (tC.getPropertyValue("expectErrTypeStreamDelete") == null || tC.getPropertyValue("expectErrTypeStreamDelete") == "null") {
	tC.setPropertyValue("expectErrTypeStreamDelete", "SUCCESS");
}
if (tC.getPropertyValue("deletedCreateCount") == null || tC.getPropertyValue("deletedCreateCount") == "null") {
	tC.setPropertyValue("deletedCreateCount", "0");
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "null") {
	tC.setPropertyValue("streamAccountActiveCount", "0");
}
if (tC.getPropertyValue("userIndex") == null || tC.getPropertyValue("userIndex") == "null") {
	tC.setPropertyValue("userIndex", "0");
}


int DeleteCount=Integer.parseInt(tC.getPropertyValue("DeleteCount"));
def ActualStreamHandleIDList=tC.getPropertyValue("ActualStreamHandleIDList");
String[] StreamHandleIDList =ActualStreamHandleIDList.split(";");
DeleteCount--;
log.info DeleteCount
if(DeleteCount>=0)
{
tC.setPropertyValue("streamhandleFULL",StreamHandleIDList[0]);
log.info "Tear down streamDelete 0 : "+StreamHandleIDList[0];
	tC.setPropertyValue("DeleteCount",DeleteCount.toString());
}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="d8a84a75-5304-4e26-865b-f93f254d5556"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Delete - StreamDelete");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Capture Current DB sysdate()" id="55f38733-c537-4874-8bb6-96cd0bb3208e"><con:settings/><con:config><script>import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("currentDBTOD",null);

def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}

String recvCdate = tC.getPropertyValue("recvCreationDate").toString();
String sql = "SELECT TO_CHAR(sysdate, 'YYYY/MM/DD HH24:mi:ss') as TOD from dual";
String sqlResultXML = "";
String cDate = "";
String tod = "";

try {
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
	sqlResultXML = a.SelectFromDB(sql,tP.getPropertyValue("targetSystem"));
	log.info "sqlResultXML[$sqlResultXML]";

	if (sqlResultXML.length() > 0) {
		def myXML = new XmlSlurper().parseText(sqlResultXML);
		tod = myXML.ResultSet.Row.TOD;
		log.info "tod[$tod]";
	}

}
catch (Throwable e) {
	log.info "sql[$sql]";
	log.info "dbUtils request failed! - " + e;
	assert 1 == 2;
}
finally {
	if (tod.length() > 0) {
		tC.setPropertyValue("currentDBTOD", tod);
	}
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="Delete - StreamDelete" id="63cd4869-f410-49d6-8a95-1be0247a082f"><con:settings/><con:config service="StreamDelete" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/{SH}" methodName="Delete" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Delete - StreamDelete" mediaType="application/xml" sslKeystore="LLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}"/>
  &lt;con:entry key="If-Match" value="*"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="473d39e4-5e2c-40b0-8698-f3a7b3ea5bdd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Delete - StreamDelete');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);

log.info "StreamDelete for TearDown staging 2"+context.expand( '${#Project#StreamDeleteList}' )

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Stream Deleted for Listview" id="8ea50ab1-3b81-4761-a3f4-95ed3d147040"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def TpstreamDeleteList = context.expand( '${#Project#StreamDeleteList}' )
int StreamDeleteCount=Integer.parseInt(tP.getPropertyValue("StreamDeleteCount"));
def httpStatus = context.expand( '${#TestCase#httpStatus}' )
def streamDeleted = context.expand( '${#TestCase#StreamDeleted}' )
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' )
int StreamCreateCount=Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));

log.info httpStatus
def StreamDeleted = context.expand( '${#TestCase#StreamDeleted}' )

if (httpStatus=="HTTP/1.1 200 OK" ) 
{     def streamhandleFULL = context.expand( '${#TestCase#streamhandleFULL}' )
                
            def accountListDLT = context.expand( '${#Project#accountListDLT}' )
               


                 if(accountListDLT==assertionAccountIdFULL && httpStatus=="HTTP/1.1 200 OK" && StreamCreateCount>0)
                 {
                    StreamDeleted= StreamDeleted+streamhandleFULL +";"
                    
                     TpstreamDeleteList=TpstreamDeleteList+streamhandleFULL +";"
                    tC.setPropertyValue("StreamDeleted",StreamDeleted);
                    tP.setPropertyValue("StreamDeleteList",TpstreamDeleteList);
                    
                    StreamCreateCount--;
  				log.info "StreamCreateCount if ; "+StreamCreateCount;
  				 tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  				 
  				 StreamDeleteCount++;
  				 log.info "StreamDeleteCount if  : "+StreamDeleteCount;
  				 tP.setPropertyValue("StreamDeleteCount", StreamDeleteCount.toString()); 

                      log.info "StreamDeleteList for if  : "+tP.getPropertyValue("StreamDeleteList");
  				

                 	}
                 	
                 else if(httpStatus=="HTTP/1.1 200 OK" && StreamCreateCount>0)
                 {   
                 	tP.setPropertyValue("accountListDLT",assertionAccountIdFULL);
                 	StreamDeleted=streamhandleFULL +";"
                  
                    tC.setPropertyValue("StreamDeleted",StreamDeleted);
                    
                       TpstreamDeleteList=streamhandleFULL +";"
                    tP.setPropertyValue("StreamDeleteList",TpstreamDeleteList);
                    
                    StreamCreateCount--;
  				log.info "StreamCreateCount for else if  : "+StreamCreateCount;
  				log.info "StreamDeleteList for else if  : "+tP.getPropertyValue("StreamDeleteList");
  				 tP.setPropertyValue("StreamCreateCount", StreamCreateCount.toString());
  				  
  				 tP.setPropertyValue("StreamDeleteCount","1");
  				 
  			}
                 else
                 	{ log.info "else block Script issue"
                 		}

    }
//
//log.info "StreamDeleteList for Normal StreamDelete : "  tP.getPropertyValue("StreamDeleteList")]]></script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="21c2b3f2-ff66-4037-b333-6c072953139b"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamDelete[" + tC.getPropertyValue("expectErrTypeStreamDelete") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamDelete")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" id="db670895-bf66-4b5c-93b7-3a1f448e6b5d" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def acct = tC.getPropertyValue("nodeaccountid");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnError");
def sh = tC.getPropertyValue("streamhandleFULL");
def nodeid = tC.getPropertyValue("nodeid");
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamDelete");
def XMLbody = tC.getPropertyValue("XMLbody");
def nodetype = tC.getPropertyValue("nodetype");

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = false;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String major = tP.getPropertyValue("VersionMajor");
String minor = tP.getPropertyValue("VersionMinor");
String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;


this.log.info "errorRespType[$errorRespType]";
switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = true;
		httpLocationHeader = false;

	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "Node_status_inactive":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = true;
		errorID = "Bad_Request";
		errorReason = "Node_status_inactive";
		errorLink = "";
	break;

	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

	case "METHOD_NOT_ALLOWED":
		expectHTTPstatus   = "HTTP/1.1 405 Method Not Allowed";
		XMLbodynull        = false;
		httpLocationHeader = false;

	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorID[$errorID]";
log.info "errorReason[$errorReason]";
log.info "errorLink[$errorLink]";

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + tC.getPropertyValue("httpContentLength").toInteger();
if (XMLbodynull) {
	//assert tC.getPropertyValue("httpContentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("httpContentLength").toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert tC.getPropertyValue("httpLocation") != null;

	def a = tC.getPropertyValue("httpLocation");
	def b = a;
	//def urlStr = b.getPath();
	def urlStr = b;

	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 3);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
	else
	{
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	streamid     = urlStr.substring(lastColon + 1);
	streamidFULL = urlStr.substring(lastSlash + 1);

	this.log.info "streamid[$streamid] - streamidFULL[$streamidFULL]";

	tC.setPropertyValue("streamhandle",streamid);
	tC.setPropertyValue("streamhandleFULL",streamidFULL);
	}
} else {
	assert tC.getPropertyValue("httpLocation") == null;
}

//Content-Type
if(errorRespType == "METHOD_NOT_ALLOWED")
{
	expectHTTPcontenttype = "text/plain; charset=UTF-8"
}
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

if(errorRespType != "METHOD_NOT_ALLOWED"){

if (XMLbody != null &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;

		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		if (errorReasonFlag) {
			this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
			assert myXML.Error.Reason.toString() == errorReason;
		} else {
			log.info "ErrorReason IS NOT NULL";
			assert myXML.Error.Reason.toString().length() > 0;
		}

		// ErrorLink
		if (!errorLinkFlag) {
			assert myXML.Error.ErrorLink.size() == 1;
			log.info "ErrorLink:[" + myXML.Error.ErrorLink.toString() + "] Expected[$errorLink]";
			assert myXML.Error.ErrorLink.toString() == errorLink;
		}
	} 
} 
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Return attributes to calling Test Case" disabled="true" id="50a4c9a9-0673-4678-be47-318d6c1d9704"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int deletedCreateCount = tC.getPropertyValue("deletedCreateCount").toInteger()++;
int userIndex = tC.getPropertyValue("userIndex").toInteger();
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();
String count = tC.getPropertyValue("counter").toString();

if (userIndex > 0) {
	userIndex--;
}
if (streamAccountActiveCount > 0) {
	streamAccountActiveCount--;
}

tC.setPropertyValue("expectDBDeletedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBStatus_" + count,"deleted");
tC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("nodeid"));
tC.setPropertyValue("deletedCreateCount",deletedCreateCount.toString());
tC.setPropertyValue("expectDBStatus","deleted");

callTC.setPropertyValue("deletedCreateCount",tC.getPropertyValue("deletedCreateCount"));
callTC.setPropertyValue("streamAccountActiveCount",streamAccountActiveCount.toString());
callTC.setPropertyValue("userIndex",userIndex.toString());
callTC.setPropertyValue("expectDBStatus_" + count,tC.getPropertyValue("expectDBStatus_" + count));
callTC.setPropertyValue("expectDBStatus" + count,tC.getPropertyValue("expectDBStatus"));
callTC.setPropertyValue("expectDBDeletedBy_" + count,tC.getPropertyValue("expectDBDeletedBy_" + count));
callTC.setPropertyValue("expectDBDeletedBy",tC.getPropertyValue("expectDBDeletedBy"));
callTC.setPropertyValue("expectDBDeletedTime_" + count,tC.getPropertyValue("currentDBTOD"));
callTC.setPropertyValue("expectDBModifiedBy_" + count,tC.getPropertyValue("expectDBModifiedBy_" + count));
callTC.setPropertyValue("expectDBModifiedBy",tC.getPropertyValue("expectDBModifiedBy"));</script></con:config></con:testStep><con:testStep type="groovy" name="DeleteStreams LOOP" id="c4b43b6a-1346-4f8c-8a28-7eba8fec5f53"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int DeleteCount=Integer.parseInt(tC.getPropertyValue("DeleteCount"));
def streamhandleFULL
def TCStreamListView = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamListView');
tC.setPropertyValue("StreamList",TCStreamListView.getPropertyValue("StreamList"));

def ActualStreamHandleIDList=tC.getPropertyValue("ActualStreamHandleIDList");
String[] StreamHandleIDList =ActualStreamHandleIDList.split(";");
if(DeleteCount>0)
{
	
   log.info "Tear down streamDelete $DeleteCount : "+StreamHandleIDList[DeleteCount];
	tC.setPropertyValue("streamhandleFULL",StreamHandleIDList[DeleteCount]);
	tC.setPropertyValue("DeleteCount",--DeleteCount.toString());
	testRunner.gotoStepByName("Capture Current DB sysdate()");
	}</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value>14DBEBAA934676F5E05307991F0AB213</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_072435</con:value></con:property><con:property><con:name>userIndex</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_15102 - StreamListView - DLP and LLASP - Account has 3 deleted streams and 6 active streams - 200 Ok - 6A,3D_FLAKY</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>StreamList</con:name><con:value>urn:dece:accountid:org:dece:14DC2033935338A5E05307991F0AD9A9#urn:dece:streamhandleid:org:dece:7B7E8C07E23B431D848AFDA9AEF34603!urn:dece:rightstokenid:org:dece:14DC20C876253D29E05307991F0A459E,urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213;urn:dece:streamhandleid:org:dece:32061AC4FA08480CBB09AF71FB993E4E!urn:dece:rightstokenid:org:dece:14DC1C37EEE038A3E05307991F0A7A99,urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213;urn:dece:streamhandleid:org:dece:EDC81B1654554B1DA08A861C1EB21B30!urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879,urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213;urn:dece:streamhandleid:org:dece:BBF314A843C24135AB1DF23DF4520C49!urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879,urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213;urn:dece:streamhandleid:org:dece:65ECC9099784427BA33E054A5D0A0428!urn:dece:rightstokenid:org:dece:14DBFD6B2C676A8EE05307991F0A2879,urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213;urn:dece:streamhandleid:org:dece:01A1B92F4E07491BBF87E9BF293CE918!urn:dece:rightstokenid:org:dece:14DC1B2E45B23147E05307991F0A6CD1,urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213;urn:dece:streamhandleid:org:dece:D2A566175F76441DB4C67EB2845C731A!urn:dece:rightstokenid:org:dece:14DC1C37EFA038A3E05307991F0A7A99,urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213;urn:dece:streamhandleid:org:dece:447BDCE150A245DEA26952EE879B0BCC!urn:dece:rightstokenid:org:dece:14DC1B2E461B3147E05307991F0A6CD1,urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213;</con:value></con:property><con:property><con:name>streamhandleFULLEncoded</con:name><con:value>urn%3Adece%3Astreamhandleid%3Aorg%3Adece%3ADBD14C92C6289A31E0401F0A07995885</con:value></con:property><con:property><con:name>streamhandleFULL</con:name><con:value>urn:dece:streamhandleid:org:dece:447BDCE150A245DEA26952EE879B0BCC</con:value></con:property><con:property><con:name>StreamDeleted</con:name><con:value>urn:dece:streamhandleid:org:dece:7B7E8C07E23B431D848AFDA9AEF34603;urn:dece:streamhandleid:org:dece:65ECC9099784427BA33E054A5D0A0428;urn:dece:streamhandleid:org:dece:EDC81B1654554B1DA08A861C1EB21B30;urn:dece:streamhandleid:org:dece:BBF314A843C24135AB1DF23DF4520C49;urn:dece:streamhandleid:org:dece:01A1B92F4E07491BBF87E9BF293CE918;urn:dece:streamhandleid:org:dece:D2A566175F76441DB4C67EB2845C731A;urn:dece:streamhandleid:org:dece:447BDCE150A245DEA26952EE879B0BCC;</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>LASP Dynamic Test Cases</con:value></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value>urn:dece:rightstokenid:org:dece:14B8FED933654650E05305991F0AE715</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslockerFULL</con:name><con:value>14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>14DC2033935B38A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>79613</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodetype</con:name><con:value>llpcs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/GitRepo/uv-coordinator-api-regression/Certs/QALP1/LLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>expectErrTypeStreamDelete</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBModifiedBy_9</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_8</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_7</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_6</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_5</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_4</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_3</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_2</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_15</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_14</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_13</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_12</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_11</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_10</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>errorStatusCode</con:name><con:value/></con:property><con:property><con:name>errorReason</con:name><con:value/></con:property><con:property><con:name>errorID</con:name><con:value/></con:property><con:property><con:name>deletedCreateCount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>DeleteCount</con:name><con:value>0</con:value></con:property><con:property><con:name>currentDBTOD</con:name><con:value>2015/04/29 11:26:55</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>assertionUUID</con:name><con:value/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>14DBEBAA934576F5E05307991F0AB213</con:value></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%3Adece%3Aaccountid%3Aorg%3Adece%3A9B66525BAF65015BE0401F0A059942CA</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:14DC2033935338A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>14DC2033935338A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>assertId</con:name><con:value/></con:property><con:property><con:name>assert</con:name><con:value>pVZbc9o6EP4rjPuYMb5ysScwYyAXN5CkgTZJXzpCXoNSIxtL5pJffyQDDiYkh7ZPHq1X33570e6eMzSLTNdjDFJOYlpZzSLK3FzaUrKUujFihLkUzYC5HLtDb9B3zaruot0VpeL3Wsov22jUAWp1FetjUO3a2FDHoWOpZr0RBmF9bJpGU6gyloFPGUeUtxRTN2qqbqumMzIM17Rd26k2zMZPpfIDUiawhUpVV7akVqylTDlPXE1bLpfVpVWN04lm6rqhPQ36QzyFGVLa5xuPckNpe6uPqwFgiCJcxfFMO9dKOucBc4dkQhHPUtjaCj6ypWu6owmdgJHJF6W4C4FPwzg/dhGNKcEoIq9IxmcAfBoHFS+axCnh09mHThi6BFZhhVVs2PSLopWpnQhUYpgypLIpMrZYDxBCChRD5fuD31K+nJa1/OooRZSFcTpj5eOf8QG6gChOIFDZzq0ttdMBj0SqfQ7Y9SmOMkYWcCuLNUEY2DabgE+HqtynEJJVnzBRoCsm2Wn79A6Om2j0yAQY/5sE7SVnA/IDRRm0LdNhP+epfx9k/urx2RkFN+brN//KB7+VE9hXzgVFajfHg6Isimhz42XafFpEkXc7hq/9QCf0NVh5NjRCa1h/tq6fndU4fESTThInwdP1K25On+2L7uoxWNcTfjXXr2vJuK8/jb3HVyvrLLQwgmnPvyaR8XRvjHB0FQyu+N0Pm+Prr1798WU+DZbLs/pZ37gIUjZapQM8WVwN0pezmx55TQdXFu5y69v3uDNIvmccRw+XDurf/G6uWatwZ49/WbZ788Ns/AKY746yDPxe5VJkCfHPm5mUkEANc1U3kc2HcaBcactbsne4mWh3JHBFDjdnw+51Ljqe51h2rVG/rF3oNUtvOI5xqXsd07B2TWbD4oBiN6YhkbZky92UzecE8cxlQANI1UWciU7HlE8Qe4ijik8fxCOIKYNRLNrzb1xrjtdjO1xPGY0aRG/YITZYolRuY35H71Iv5JCWW7JdaskPgElCQPZtWdZM1DXjIhRztMh4ZFQXqEohE509lU1WXG3WNEZmSQSSqDaLgyyCajJN8sBobPM1VYRZLn24GOWP7UO3Dv/tIiB0AiIVmPSlAyKLcGS2WDtH3jlcPzqDdvBeFhD5rkQ4eUrwhkn511uVyPIoSqTX94b3O9KF7h/c/dUd/jL+EqD/D8b7/2pc5PL9Te2TeGqHqSwMBQuyZ3a3dIjxJRpee1eIc2RU59Vsscjy2rNtS0sFvCaLQNNNbQg4Ey15PYp/A9UKFO2k+VcQPzBeyMsUMz6lQ444zMRbqeTHExaeITC58Pjija9O3aZKJkXoOKz4MVk3EsuaZPzpPoddLPWE+F58lnEavGXsCNaeHeGn2Hc4oRN5krNv/UFd4FjAEtG143Qf/BjAMeNlYRHkggsXBTXOOHz8pyLbcUtBGMcZ5X5PyQX7IyLnydcJuG9K72DyKVSspeT/91KV5CWAQSyzjOT4crtw5ROgk70xszV6MGm6pm5ZjlWzrKZXmjQ9x3OKoJTYtd+J30v24nRY4+3/AA==</con:value></con:property><con:property><con:name>ActualStreamHandleIDList</con:name><con:value>urn:dece:streamhandleid:org:dece:447BDCE150A245DEA26952EE879B0BCC;</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>14DC2033935438A5E05307991F0AD9A9</con:value></con:property><con:property><con:name>accountListDLT</con:name><con:value>urn:dece:accountid:org:dece:14B62D494098068CE05305991F0AB9C6</con:value></con:property><con:property><con:name>errorRespType</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>23c70c45-9074-46f6-be91-e188b2607f26</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>9e836578-c109-4f33-bf13-05a2ad8353a5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="StreamListView tear down" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" discardOkResults="true" id="7dd16088-526c-4b3c-86d5-a6de7539c8cc"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="e0b0673f-96df-4ad1-868b-dacc3d619778"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandleFULL",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("rightstokenidFULL",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("counter","1");
tC.setPropertyValue("loopuntil","1");
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("expectErrTypeStreamListView",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectStreamActiveCnt",null);
tC.setPropertyValue("httpContentEncoding",null);
tC.setPropertyValue("streamAccountActiveCount",null);
tC.setPropertyValue("streamHistoryRows",null);
tC.setPropertyValue("streamFlagCreateDateOld",null);
tC.setPropertyValue("streamFlagIgnoreCreatedDate",null);
tC.setPropertyValue("expectDBModifiedBy",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assertionUserId",null);

tP.setPropertyValue("ActualStreamHandleIDList","");
tP.setPropertyValue("DeleteCount",null);
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Entity Authentication Context LLASP" id="798b6b7c-0636-4c11-b36e-95b14e3e2df4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype","llpcs");
tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid11").toString());
tC.setPropertyValue("username",tP.getPropertyValue("UserName_FAU1").toString());
tC.setPropertyValue("password",tP.getPropertyValue("userFull1Org1Password"));
tC.setPropertyValue("errorRespType","HTTP/1.1 200 OK");

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract required Properties from calling Test Case" disabled="true" id="411bfdfd-c372-40ab-a6bd-dcfd859f1a04"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

int counter;
String sh;
String rt;
String shCreatedBy;
String shValue;
String shExpireDate;
String nickname;
String expectGenericRightsToken;
String expectRequestingUser;
String expectDBDeletedTime;
String expectDBCreatedTime;
String streamFlagCreateDateOld;
String streamFlagIgnoreCreatedDate;
String streamFlagIgnoreDeletedDate;
String expectDBCreatedByNodeType;

tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUUID",callTC.getPropertyValue("assertionUUID"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("rightstokenidFULL",callTC.getPropertyValue("rightstokenidFULL"));
tC.setPropertyValue("streamhandleFULL",callTC.getPropertyValue("streamhandleFULL"));
tC.setPropertyValue("expectErrTypeStreamListView",callTC.getPropertyValue("expectErrTypeStreamListView"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBModifiedBy",callTC.getPropertyValue("expectDBModifiedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("nickname"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("expectGenericRightsToken",callTC.getPropertyValue("expectGenericRightsToken"));
tC.setPropertyValue("expectStreamAvailCnt",callTC.getPropertyValue("expectStreamAvailCnt"));
tC.setPropertyValue("expectStreamActiveCnt",callTC.getPropertyValue("expectStreamActiveCnt"));
tC.setPropertyValue("expectRequestingUser",callTC.getPropertyValue("expectRequestingUser"));
tC.setPropertyValue("streamAccountActiveCount",callTC.getPropertyValue("streamAccountActiveCount"));
tC.setPropertyValue("streamFlagCreateDateOld",callTC.getPropertyValue("streamFlagCreateDateOld"));
tC.setPropertyValue("streamFlagIgnoreCreatedDate",callTC.getPropertyValue("streamFlagIgnoreCreatedDate"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));



if (tC.getPropertyValue("expectErrTypeStreamListView") == null || tC.getPropertyValue("expectErrTypeStreamListView") == "") {
	tC.setPropertyValue("expectErrTypeStreamListView","SUCCESS")
}
if (tC.getPropertyValue("expectDBStatus") == null || tC.getPropertyValue("expectDBStatus") == "") {
	tC.setPropertyValue("expectDBStatus","active")
}
if (tC.getPropertyValue("expectGenericRightsToken") == null || tC.getPropertyValue("expectGenericRightsToken") == "") {
	tC.setPropertyValue("expectGenericRightsToken","false")
}
if (tC.getPropertyValue("expectStreamAvailCnt") == null || tC.getPropertyValue("expectStreamAvailCnt") == "") {
	tC.setPropertyValue("expectStreamAvailCnt",tP.getPropertyValue("streamlimit"))
}
if (tC.getPropertyValue("expectStreamActiveCnt") == null || tC.getPropertyValue("expectStreamActiveCnt") == "") {
	tC.setPropertyValue("expectStreamActiveCnt","0")
}
if (tC.getPropertyValue("streamAccountActiveCount") == null || tC.getPropertyValue("streamAccountActiveCount") == "") {
	tC.setPropertyValue("streamAccountActiveCount","0")
}
if (tC.getPropertyValue("streamFlagIgnoreCreatedDate") == null || tC.getPropertyValue("streamFlagIgnoreCreatedDate") == "") {
	tC.setPropertyValue("streamFlagIgnoreCreatedDate","false")
}

if (tC.getPropertyValue("counter") == null ||
    tC.getPropertyValue("counter") == "") {
    		tC.setPropertyValue("counter","1");
    }
    
counter = tC.getPropertyValue("counter").toInteger();

for (int i = 0; i &lt;= counter; i++) {
	
	sh           = "streamhandleFULL_"  + (i + 1);
	rt           = "rightstokenidFULL_"   + (i + 1);
	shid           = "streamhandle_"  + (i + 1);
	shCreatedBy  = "expectDBCreatedBy_" + (i + 1);
	shDeletedBy  = "expectDBDeletedBy_" + (i + 1);	
	shModifiedBy  = "expectDBModifiedBy_" + (i + 1);
	shValue      = "expectDBStatus_"    + (i + 1);
	nickname     = "expectNickname_"    + (i + 1);
	expectRequestingUser = "expectRequestingUser_" + (i + 1);
	expectGenericRightsToken = "expectGenericRightsToken_" + (i + 1);
	expectDBDeletedTime = "expectDBDeletedTime_" + (i + 1);
	expectDBCreatedTime = "expectDBCreatedTime_" + (i + 1);
	streamFlagCreateDateOld = "streamFlagCreateDateOld_" + (i + 1);
	streamFlagIgnoreCreatedDate = "streamFlagIgnoreCreatedDate_" + (i + 1);
	streamFlagIgnoreDeletedDate = "streamFlagIgnoreDeletedDate_" + (i + 1);
	expectDBCreatedByNodeType = "expectDBCreatedByNodeType_" + (i + 1);

     tC.setPropertyValue(shid,callTC.getPropertyValue(shid));     		
	tC.setPropertyValue(sh,callTC.getPropertyValue(sh));
	tC.setPropertyValue(rt,callTC.getPropertyValue(rt));
	tC.setPropertyValue(shValue,callTC.getPropertyValue(shValue));
	tC.setPropertyValue(shCreatedBy,callTC.getPropertyValue(shCreatedBy));
	tC.setPropertyValue(shDeletedBy,callTC.getPropertyValue(shDeletedBy));
	tC.setPropertyValue(shModifiedBy,callTC.getPropertyValue(shModifiedBy));
	tC.setPropertyValue(nickname,callTC.getPropertyValue(nickname));
	tC.setPropertyValue(expectGenericRightsToken,callTC.getPropertyValue(expectGenericRightsToken));
	tC.setPropertyValue(expectRequestingUser,callTC.getPropertyValue(expectRequestingUser));
	tC.setPropertyValue(expectDBDeletedTime,callTC.getPropertyValue(expectDBDeletedTime));
	tC.setPropertyValue(expectDBCreatedTime,callTC.getPropertyValue(expectDBCreatedTime));
	tC.setPropertyValue(streamFlagCreateDateOld,callTC.getPropertyValue(streamFlagCreateDateOld));
	tC.setPropertyValue(streamFlagIgnoreCreatedDate,callTC.getPropertyValue(streamFlagIgnoreCreatedDate));
	tC.setPropertyValue(streamFlagIgnoreDeletedDate,callTC.getPropertyValue(streamFlagIgnoreDeletedDate));
	tC.setPropertyValue(expectDBCreatedByNodeType,callTC.getPropertyValue(expectDBCreatedByNodeType));
}
</script></con:config></con:testStep><con:testStep type="groovy" name="pem set" id="eeefbbe8-b529-4555-b4ba-df2b5bd1c4d4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tC.getPropertyValue("nodeid"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("GET - StreamListView");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - StreamListView" id="1ce917e3-e9a6-438f-89aa-983fe8394775"><con:settings/><con:config service="DECE StreamCreate API" resourcePath="/rest/{MAJOR}/{MINOR}/Account/{ACCT}/Stream/List" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - StreamListView" mediaType="application/xml" sslKeystore="LLASP_CS_1_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 assertion=${#TestCase#assert}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Query_HostName}</con:endpoint><con:request/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body" id="b2cd49e5-c282-4bdb-826a-138082b5847e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def tStep  = tC.getTestStepByName('GET - StreamListView');

/*
*  Get the XML body raw 
*/
//rawResp = new ByteArrayOutputStream();
//rawResp = tStep.httpRequest.response.getRawResponseData();
//def expXML  = new String(rawResp);

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;
String contentEncoding = null;

expXML     = tStep.httpRequest.response.getResponseContent();

tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			contentEncoding = value[0]; 
			break;
	}
}


tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpContentLocation", contentLocation);
tC.setPropertyValue("httpContentEncoding", contentEncoding);

def testStep = testRunner.testCase.getTestStepByName( "Validation of List of Streams get as per Details stored at StreamCreate for all" )
 log.info status
//if(status=="HTTP/1.1 200 OK")
//{  log.info status
//   testStep.disabled = false;
//}
//else
//{
//	 testStep.disabled = true;
//	}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract ERROR table information" id="3d668744-6f54-40d0-a168-58a559e15b17"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def a = new dbUtils.dbErrors(log,tP.getPropertyValue("targetSystem"));

tC.setPropertyValue("errorStatusCode",null);
tC.setPropertyValue("errorReason",null);
tC.setPropertyValue("errorID",null);

String xmlData = "";
String errId = "";

log.info "expectErrTypeStreamView[" + tC.getPropertyValue("expectErrTypeStreamListView") + "]";

switch (tC.getPropertyValue("expectErrTypeStreamListView")) {
	case "ADULT_CONTENT_NOT_ALLOWED":
		errId = "Policy:AdultContentNotAllowed";
		break;
	case "ACCOUNT_NOT_ACTIVE":
		errId = "AccountNotActive";
		break;
	case "API_NOT_AUTH":
		errId = "Security:RoleInvalid";
		break;
	case "BLOCKED_ACCESS_UNRATED":
		errId = "Policy:UnratedContentBlocked";
		break;
	case "CID_NOT_ACTIVE":
		errId = "ContentIDNotActive";
		break;
	case "CID_NOT_FOUND":
		errId = "ContentIDNotFound";
		break;
	case "LOGICAL_ASSET_NOT_ACTIVE":
		errId = "AssetLogicalIDNotActive";
		break;
	case "RT_RENT_EXPIRED":
		errId = "RightsTokenRentalExpired";
		break;
	case "RT_NOT_FOUND":
		errId = "RightsTokenNotFound";
		break;
	case "RT_NOT_ACTIVE":
		errId = "RightsTokenNotActive";
		break;
	case "RATING_POLICY":
		errId = "RatingPolicyExists";
		break;
	case "CID_NOT_GRANTED":
	case "STREAM_RIGHTS_NOT_GRANTED":
		errId = "StreamRightsNotGranted";
		break;
	case "STREAM_COUNT_EXCEEDED":
		errId = "AccountStreamCountExceedMaxLimit";
		break;
	case "STREAM_COUNT_EXCEEDED_USER":
		errId = "UserStreamCountExceedMaxLimit";
		break;
	case "STREAM_INVALID_TRANS":
		errId = "StreamTransactionIdInvalid";
		break;
	case "STREAM_ACCOUNTID_MISMATCH":
		errId = "AccountIdUnmatched";
		break;		
	case "STREAM_NICKNAME_TOO_LONG":
		errId = "StreamClientNicknameTooLong";
		break;		
	case "STREAM_WINDOW_NOT_ALLOWED":
		errId = "StreamAssetWindowNotAllowed";
		break;
	case "STREAM_OWNER_MISMATCH":
		errId = "StreamOwnerMismatch";
		break;
	case "STREAM_NOT_FOUND":
		errId = "StreamNotFound";
		break;
	case "STREAM_NOT_ACTIVE":
		errId = "StreamNotActive";
		break;
	case "USER_NOT_MATCH_TOKEN":
		errId = "UserIdUnmatched";
		break;
	case "USER_NOT_ACTIVE":
		errId = "UserNotActive";
		break;
	case "USER_NOT_SUPPLIED":
		errId = "UserNotSpecified";
		break;
	default:
		errId = tC.getPropertyValue("expectErrTypeStreamListView").toString();
		break;
}

try {
	xmlData = a.errGetIdInfo(errId);
	
	assert xmlData.trim().length() > 1;

	def myXML = new XmlSlurper().parseText(xmlData);

	log.info myXML.ResultSet.Row.size();
	tC.setPropertyValue("errorStatusCode", myXML.ResultSet.Row[0].STATUS_CODE.toString());
	tC.setPropertyValue("errorReason", myXML.ResultSet.Row[0].REASON.toString());
	tC.setPropertyValue("errorID", myXML.ResultSet.Row[0].ERROR_ID.toString());

	/*
	*  The DB does not contain the complete HTTP status
	*  string, only the code.  Thus, we must adjust.
	*/
	switch (tC.getPropertyValue("errorStatusCode")) {
		case "400":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 400 Bad Request");
			break;
		case "403":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 403 Forbidden");
			break;
		case "404":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 404 Not Found");
			break;
		case "409":
			tC.setPropertyValue("errorStatusCode","HTTP/1.1 409 Conflict");
			break;
	}
}
catch (Throwable e) {
	log.info "STEP FAILURE! --- " + e;
}</script></con:config></con:testStep><con:testStep type="groovy" name="Verify the response headers and body" disabled="true" id="301f5629-ef55-40d2-a7c0-7aa479d2554f"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
     String hsh;
     if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
     {
	int lastColon = sh.lastIndexOf('%');
     hsh = sh.substring(lastColon +3,sh.length());
     }
     else
     {
     int lastColon = sh.lastIndexOf(':');
     hsh = sh.substring(lastColon +1,sh.length());
     }
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectModifiedBy = urnnode + tC.getPropertyValue("expectDBModifiedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	

	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	//assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
//if(tC.getPropertyValue("nodetype")== "llp" )
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
//			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
//			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
//		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
//		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
//		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt.toInteger() <= tP.getPropertyValue("streamlimit").toInteger();

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
//		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
//		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();

		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectmb = urnnode + tC.getPropertyValue("expectDBModifiedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

//			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			//if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
			//	expectRequestingUser = "";
			//} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			//}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				//if (	expectValue == "active") {
				//	doValidations = true;
				//} else {
				//	doValidations = false;
				//}
			//} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;
				log.info "****************************************"+displayStreamCount+"************************************"

				/*  StreamHandleID */
				
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
//				assert recvsh == expectsh;
				
				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				//log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				//assert recvru == expectRequestingUser;
		
				//RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					//assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
//				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));
//
//				int rCnt = myHistoryXML.ResultSet.Row.size();
//
//				log.info "-------------HISTORY-----------------";
//				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
//				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
//					rCnt -= 1;
//				} 
//				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
//				for (int i = 0; i < rCnt; i++) {
//					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
//					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
//					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
//					assert hrecvModifiedBy == expectmb;
//
//					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
//					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
//					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
//					if (hexpectStatus == "active") {
//						assert hrecvStatus == "urn:dece:type:status:active";
//					} else {
//						assert hrecvStatus == "urn:dece:type:status:deleted";
//					}
//					
//					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
//					switch (hexpectStatus) {
//						case "active": hexpectDescription = "active"; break;
//						case "deleted": hexpectDescription = "deleted"; break;
//						default: hexpectDescription = "deleted"; break;
//					}
//					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
//					assert hrecvDescription == hexpectDescription;
//	
//					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
//					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
//					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
//					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
//					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
//					
//				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}
//
//		log.info "--------------------FINAL XML size() Validations -------------------";
//		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
//		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
//		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
//		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
//		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
//		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();
//
//		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
//		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
//		
//		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
//		assert myXML.Stream.size() == displayStreamCount;
//		
//		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
//		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
//		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
//		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Verify the response headers and body" disabled="true" id="ef3ad7f8-857b-4074-a05d-2b702e6a619a"><con:settings/><con:config><script><![CDATA[import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Calendar;
import java.text.SimpleDateFormat;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
//------------------------------------------------------//
def formatDate(recvDate) {
	try {
		String dateHolder = "";
		Pattern datePattern = Pattern.compile("(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})");
		Matcher cdateMatcher = datePattern.matcher(recvDate);
		if (cdateMatcher.find()) {
			dateHolder = cdateMatcher.group(1) + "/" + cdateMatcher.group(2) + "/" +
				cdateMatcher.group(3) + " " + cdateMatcher.group(4) + ":" +
				cdateMatcher.group(5) + ":" + cdateMatcher.group(6);
			log.info "dateHolder[$dateHolder]";	
		}
	} 
	catch (Throwable e) {
		log.info "Matcher Failure!  recvDate[$recvDate] ERROR - " + e;
	} 
	finally {
		return dateHolder;	
	}
}
//------------------------------------------------------//
def getHistoryRecords(sh) {
	def tC = testRunner.getTestCase();
	def tS = tC.getTestSuite();
	def tP = tS.getProject();
	
	log.info "---------IN getHistoryRecords sh[$sh]";
	
	a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());
     String hsh;
     if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
     {
	int lastColon = sh.lastIndexOf('%');
     hsh = sh.substring(lastColon +3,sh.length());
     }
     else
     {
     int lastColon = sh.lastIndexOf(':');
     hsh = sh.substring(lastColon +1,sh.length());
     }
	String hresults = null;
	String hsql = """select 
 	 to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
	  to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
	  to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
	  to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
	  to_char(rawtohex(a.CREATED_BY_USER_OID)) CREATED_BY_USER_OID,
 	 TRANSACTION_ID,
	  STATUS,
	  STREAM_CLIENT_NICKNAME,
	  EXPIRATION_DATE,
	  CLOSED_DATE,
	  CLOSED_BY_ORG_ID,
	  CREATED_DATE,
	  to_char(rawtohex(a.CREATED_BY_NODE_OID)) CREATED_BY_NODE_OID 
	  from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw( '$hsh') 
	  order by STATUS
	  """;

	  log.info "hsql is $hsql";

	hresults = a.SelectFromDB(hsql,tP.getPropertyValue("targetSystem").toString());
	log.info hresults;

	/*
	*  If zero length, no need to continue;
	*/
	assert hresults.length() > 0;

	try {
		def hmyXML = new XmlSlurper().parseText(hresults);
		log.info "hmyXML.ResultSet.Row.size() is [" + hmyXML.ResultSet.Row.size() + "]";
		assert hmyXML.ResultSet.Row.size() >= 1;
	}
	catch(Throwable e) {
		log.info e; 
		assert 1 == 2;
	}
	finally {
		tC.setPropertyValue("streamHistoryRows", hresults);
	}
}
//------------------------------------------------------//


def a = new generalUtils.generalUtils(log);

def url = tP.getPropertyValue("targetHost");
def urnacct = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode = tP.getPropertyValue("urnNode");
def urnErr = tP.getPropertyValue("urnerror");
def urnGenericRightsToken = tP.getPropertyValue("urnGenericRightsToken");
def streamMaxDisplayCount = tP.getPropertyValue("streamMaxDisplayCount");
def streamlimit  = tP.getPropertyValue("streamlimit");
def acct  = tC.getPropertyValue("nodeaccountid");
def sh = tC.getPropertyValue("streamhandleFULL");
def counter = tC.getPropertyValue("counter").toInteger();
def account = tC.getPropertyValue("assertionAccountIdFULL");
def errorRespType = tC.getPropertyValue("expectErrTypeStreamListView");
def XMLbody = tC.getPropertyValue("XMLbody");
def expectCreatedBy = urnnode + tC.getPropertyValue("expectDBCreatedBy");
def expectDeletedBy = urnnode + tC.getPropertyValue("expectDBDeletedBy");
def expectModifiedBy = urnnode + tC.getPropertyValue("expectDBModifiedBy");
def expectStatus = tC.getPropertyValue("expectDBStatus");
def expectRT = tC.getPropertyValue("rightstokenidFULL");
def expectSH = tC.getPropertyValue("streamhandleFULL");
def expectNickname = tC.getPropertyValue("expectNickname");
def expectStreamActiveCnt = tC.getPropertyValue("streamAccountActiveCount");
def expectStreamAvailCnt = streamlimit.toInteger() - expectStreamActiveCnt.toInteger();
def expectGenericRightsToken = tC.getPropertyValue("expectGenericRightsToken");

String errorID     = "";
String errorReason = "";
String errorLink   = "";
String errorHost   = "https://" + tP.getPropertyValue("targetHostq") + ":" + tP.getPropertyValue("targetPort");
String availStreamsCnt = "";
String major = tP.getPropertyValue("V1").toString();
String minor = tP.getPropertyValue("V2").toString();
String errorLinkBase = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#";
String orgRequest = url + "/rest/$major/$minor/Account/$account/Stream/$sh";
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expectDescription = "";
boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean processXMLFlag  = true;
boolean XMLbodynull     = false;
boolean doValidations   = true;
int displayStreamCount = 0;
int xmlIndex = 0;
int g = 0;
int streamAccountActiveCount = tC.getPropertyValue("streamAccountActiveCount").toInteger();


/*
*  Change the expectRH value if policies should result
*  in the generic rightstoken being displayed
*/
if (expectGenericRightsToken == "true") {
	expectRT = tP.getPropertyValue("urnGenericRightsToken");
}

/*
*  Added this override with the 7.7 drop.  They change the name
*  of the <ErrorLink> host.
*/
if (tP.getPropertyValue("targetURL").length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = "https://qa.q.uvvu.com:" + tP.getPropertyValue("targetPort");
}

switch (errorRespType) {
	case "SUCCESS_NO_STREAMS":
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 200 OK";
		XMLbodynull        = false;
		httpLocationHeader = false;
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	

	case "Node_status_inactive":
                                expectHTTPstatus = "HTTP/1.1 403 Forbidden";
                                processXMLFlag  = true;
                                errorID = "urn:dece:errorid:org:dece:securitycontext:Bad_Request";
                                errorReason = "node_status_inactive";
                                errorLink = "$errorHost/deceerrors/error/error_response.html";
break;


	case "XML_PARSING_ERROR":
		errorLinkFlag = true;
		errorReasonFlag = false;
		expectHTTPstatus = "HTTP/1.1 400 Bad Request";
		errorID = "urn:dece:errorid:org:dece:SaxParserException";
		errorLink  = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;
	
	default:
		errorReasonFlag = true;
		expectHTTPstatus = tC.getPropertyValue("errorStatusCode");
		errorID     = urnErr + tC.getPropertyValue("errorID");
		errorReason = tC.getPropertyValue("errorReason");
		errorLink   = "$errorLinkBase" + tC.getPropertyValue("errorID");
	break;
}

log.info "errorRespType[$errorRespType]";

/*
*   HTTP HEADER CHECKS
*/
// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");
assert tC.getPropertyValue("httpStatus") == expectHTTPstatus;

// Connection
if(tC.getPropertyValue("httpStatus") == "HTTP/1.1 400 Bad Request")
{
	expectHTTPconnection = "close";
}
this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert tC.getPropertyValue("httpConnect") == expectHTTPconnection;

/*
* Content-Length
*/
String httpContentEncoding = tC.getPropertyValue("httpContentEncoding");
String contentLength = tC.getPropertyValue("httpContentLength");
log.info "httpContentEncoding[$httpContentEncoding]";
log.info "contentLength[$contentLength]";
if (httpContentEncoding == "null" || httpContentEncoding == null) {
	log.info "Asserting contentLength.length() > 0";
	//assert contentLength.toInteger() > 0;
} else {
	log.info "Asserting httpContentEncoding is chunked";
	assert tC.getPropertyValue("httpContentEncoding") == "chunked";
}

//No Content-Location
assert tC.getPropertyValue("httpContentLocation") == null;

//Content-Type
//if(tC.getPropertyValue("nodetype")== "llp" )
this.log.info "HTTP Content-Type:  Expect: $expectHTTPcontenttype - Received: " + tC.getPropertyValue("httpContentType");
assert tC.getPropertyValue("httpContentType") == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {
	assert XMLbody == null;
}

this.log.info "XMLBody Length [" + XMLbody.length() + "] processXMLFlag[$processXMLFlag]";

if (XMLbody != null && processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	if (errorRespType != "SUCCESS" && errorRespType != "SUCCESS_NO_STREAMS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;

		// ErrorCode
		this.log.info "Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorLink [" + myXML.Error.ErrorLink.toString() + "] errorLink[$errorLink]";
		//assert myXML.Error.ErrorLink.toString() == errorLink;
		
	} else if (errorRespType == "SUCCESS_NO_STREAMS") {
		log.info "--------------SUCCESS NO STREAMS---------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit") + "]";
		assert availStreamsCnt <= tP.getPropertyValue("streamlimit");

		if (tC.getPropertyValue("streamFlagCreateDateOld") != "true") {
			log.info "Assert ActiveStreamCount == 0 -- streamFlagCreateDateOld[" + tC.getPropertyValue("streamFlagCreateDateOld") + "]";
			assert activeStreamCnt.toInteger() == 0;
			log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger();
		} else {
			log.info "ActiveStreamCount[$activeStreamCnt] == expectStreamActiveCnt[$expectStreamActiveCnt]";
			assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
			log.info "ActiveStreamCount[$availStreamsCnt] == " + streamlimit.toInteger() - activeStreamCnt.toInteger() + "]";
			assert availStreamsCnt.toInteger() == streamlimit.toInteger() - activeStreamCnt.toInteger();
		}
		
		log.info "Assert NO <Stream> Rows Present";
		assert myXML.Stream.size() == myXML.Stream.size();
		log.info "Assert NO <Stream>.<ResourceStatus> Rows Present";
		assert myXML.Stream.ResourceStatus.size() == 0;
		log.info "Assert NO <Stream>.<RightsTokenID> Rows Present";
		assert myXML.Stream.RightsTokenID.size() == 0;
		log.info "Assert NO <Stream>.<ExpirationDateTime> Rows Present";
		assert myXML.Stream.ExpirationDateTime.size() == 0;
			
		/*  AvailableStreams */
		log.info "availStreamsCnt[$availStreamsCnt] - expectStreamAvailCnt[$expectStreamAvailCnt]";
		assert availStreamsCnt.toInteger() == expectStreamAvailCnt.toInteger();

		/* ActiveStreamCount */
		log.info "activeStreamCnt[$activeStreamCnt] - expectStreamActiveCnt[$expectStreamActiveCnt]";
		assert activeStreamCnt.toInteger() == expectStreamActiveCnt.toInteger();
	} else {
		log.info "--------------STREAM DATA VERIFICATION-----------------";
		availStreamsCnt = myXML.@AvailableStreams.text();
		
		activeStreamCnt = myXML.@ActiveStreamCount.text();

		this.log.info "AvailableStreams[$availStreamsCnt] lte System Limit of [" + tP.getPropertyValue("streamlimit")  + "]";
		assert availStreamsCnt.toInteger() <= tP.getPropertyValue("streamlimit").toInteger();

		log.info "Assert ActiveStreamCount == $streamAccountActiveCount";
//		assert activeStreamCnt.toInteger() == streamAccountActiveCount;
		log.info "AvailableStreams - recv[$availStreamsCnt] - expect[" + streamlimit.toInteger() - streamAccountActiveCount + "]";
//		assert availStreamsCnt.toInteger() == streamlimit.toInteger() - streamAccountActiveCount;
				
		/*
		*  Due to stream ordering we must work backwards from the 
		*  total number of streams created.  The newest created
		*  stream will be the first in the list.
		*/
		g = counter;

		log.info "g[$g] - counter[$counter]";

		/*
		*  By design, we never return more than 30 streams.   
		*  
		*/
		this.log.info "Recv Stream Count [" + myXML.Stream.size() + "] lessThan [$streamMaxDisplayCount]";;
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();

		
		while (g != 0) {
			String expectValue = tC.getPropertyValue("expectDBStatus_" + g);
			String expectcb = urnnode + tC.getPropertyValue("expectDBCreatedBy_" + g);
			String expectdb = urnnode + tC.getPropertyValue("expectDBDeletedBy_" + g);
			String expectmb = urnnode + tC.getPropertyValue("expectDBModifiedBy_" + g);
			String expectsh = tC.getPropertyValue("streamhandleFULL_" + g);
			String expectNick = tC.getPropertyValue("expectNickname_" + g);
			String expectrt  = tC.getPropertyValue("rightstokenFULL_" + g);
			String expectGeneric = tC.getPropertyValue("expectGenericRightsToken_" + g);
			String expectRequestingUser = tC.getPropertyValue("expectRequestingUser_" + g);
			String expectCDate = tC.getPropertyValue("expectDBCreatedTime_" + g);
			String expectDDate = tC.getPropertyValue("expectDBDeletedTime_" + g);
			String streamFlagIgnoreCreatedDate = tC.getPropertyValue("streamFlagIgnoreCreatedDate_" + g);
			String streamFlagIgnoreDeletedDate = tC.getPropertyValue("streamFlagIgnoreDeletedDate_" + g);
			String expectDBCreatedByNodeType = tC.getPropertyValue("expectDBCreatedByNodeType_" + g);
			String baseRightsToken = tC.getPropertyValue("rightstokenidFULL");

			log.info "g[$g]";

			getHistoryRecords(expectsh);

			/* ---------HACKIE SMACKIE 
			*  The requestinguser displayed in streamview is NOT the 
			*  requestinguser supplied during streamcreation.  It is the 
			*  userid associated with security context (saml) which
			*  invoked the request.  Thus, all requestingusers in all
			*  streams displayed will be the same.  We will override
			*  that NOW!  LLP and LLPCS do not display the requestinguser
			*  element.
			*/
			//if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "llpcs") {
			//	expectRequestingUser = "";
			//} else {
				expectRequestingUser = tC.getPropertyValue("assertionUserIdFULL");
			//}
						
			/*
			*  if the nodetype is 'dlp' or 'llp' streams in 'deleted' status
			*   are not displayed.  Thus, we must adjust accordingly.
			*/
			if (tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp") {
				//if (	expectValue == "active") {
				//	doValidations = true;
				//} else {
				//	doValidations = false;
				//}
			//} else {
				doValidations = true;
			}

			/*
			*  Special processing is required for nickname just
			*  incase it contains special xml characters.
			*/
			if (expectNick != null) {
				if (expectNick.length() > 0) {
					expectNick = expectNick.replace('&amp;','&');
					expectNick = expectNick.replace('&lt;','<');
					expectNick = expectNick.replace('&gt;','>');
					expectNick = expectNick.replace('&apos;','\'');
				}
			}

			/*
			*  There maybe one or more rightstokens created by the test
			*  case.  Thus multiple streams maybe have the same 
			*  rights token.  We will assume that if we get a null
			*  rightstokenFULL_count value that only one rightstoken
			*  was created for the test and that will be contained 
			*  in rightstokenfull.
			*/
			if (expectrt == null) {
				log.info "RIGHTSTOKENFULL - Override to the baseRightsToken value [$baseRightsToken]";
				expectrt = baseRightsToken;
			}
			log.info "g[$g] - doValidations [$doValidations] - nodetype[" + tC.getPropertyValue("nodetype") + "] - expectValue[$expectValue]";
			
			if (doValidations) {
				displayStreamCount++;
				log.info "****************************************"+displayStreamCount+"************************************"

				/*  StreamHandleID */
				
				String recvsh = myXML.Stream[xmlIndex].@StreamHandleID.text();
				log.info "xmlIndex[$xmlIndex] - StreamHandleID - recvsh[$recvsh] - expect[$expectsh]";
				assert recvsh == expectsh;
				
				//StreamClientNickname
				if (expectNick != null) {
					String recvnick = myXML.Stream[xmlIndex].StreamClientNickname;
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - recv[$recvnick] - expect[$expectNick]";
					assert expectNick == recvnick;
				} else {
					log.info "xmlIndex[$xmlIndex] - StreamClientNickname - Element NOT present";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
				}
				
				// RequestingUserID
				String recvru = myXML.Stream[xmlIndex].RequestingUserID;
				//log.info "xmlIndex[$xmlIndex] - RequestingUserID - recv[$recvru] - expect[$expectRequestingUser] - expectDBCreatedByNodeType[$expectDBCreatedByNodeType]";
				//assert recvru == expectRequestingUser;
		
				//RightsTokenID
				String recvrt = myXML.Stream[xmlIndex].RightsTokenID.text();
				if (expectGeneric == "true") {
					expectrt = urnGenericRightsToken;
				}
				log.info "xmlIndex[$xmlIndex] - RightsTokenID - recvrt[$recvrt] - expectrt[$expectrt] - expectGeneric[$expectGeneric]";
				assert recvrt == expectrt;
				
				//ExpirationDateTime
				String recvet = myXML.Stream[xmlIndex].ExpirationDateTime;
				log.info "xmlIndex[$xmlIndex] - ExpirationDateTime - is NOT null";
				assert recvet.length() > 0;

				//CreatedBy
				String recvcb   = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreatedBy.text();
				log.info "xmlIndex[$xmlIndex] - CreatedBy - recvcb[$recvcb] - expectcb[$expectcb]";
				assert recvcb == expectcb;

				//CreationDate
				if (streamFlagIgnoreCreatedDate != "true") {
					log.info "xmlIndex[$xmlIndex] - CreationDate - is NOT null";
					String recvDate = "";
					String recvcd = myXML.Stream[xmlIndex].ResourceStatus.Current.@CreationDate.text();
					recvDate = formatDate(recvcd);
					def j = a.dateDiff(recvDate,expectCDate,"seconds");
					log.info "xmlIndex[$xmlIndex] - CreationDate - recvDate[$recvDate] - expectCDate[$expectCDate] DIFF [$j]";
					assert recvcd.length() > 0;
					log.info "xmlIndex[$xmlIndex] - CreationDate - Differences less that 10 seconds";
					//assert j <= 10;
				} else {
					log.info "xmlIndex[$xmlIndex] - CreationDate - IGNORED DUE TO streamFlagIgnoreCreatedDate" ;
				}

				//Value
				String recvValue = myXML.Stream[xmlIndex].ResourceStatus.Current.Value;
				log.info "xmlIndex[$xmlIndex] - Value - recvValue[$recvValue] - expectValue[$expectValue]";
				if (expectValue == "active") {
					assert recvValue == "urn:dece:type:status:active";
				} else {
					assert recvValue == "urn:dece:type:status:deleted";
				}

				//Description
				switch (expectValue) {
					case "active":
						expectDescription = "active";
						break;
					default:
						expectDescription = "deleted";
						break;
				}
				String recvDesc = myXML.Stream[xmlIndex].ResourceStatus.Current.Description;
				log.info "xmlIndex[$xmlIndex] - Description - recvDesc[$recvDesc] - expectDesc[$expectDescription]";
				assert recvDesc == expectDescription;

				/*  Nickname validation */
				if (expectNick == null || expectNick == "") {
					log.info "Asserting no <StreamClientNickname> element exists";
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 0;
					assert myXML.Stream[xmlIndex].StreamClientNickname.text() == "";
				} else {
					assert myXML.Stream[xmlIndex].StreamClientNickname.size() == 1;
					String recvNick = myXML.Stream[xmlIndex].StreamClientNickname.text();
					log.info "xmlIndex[$xmlIndex] - recvNick[$recvNick] - expectNick[$expectNick]";
					assert recvNick == expectNick;
				}
									
				/*
				*  If the stream is deleted....
				*/
				log.info "DeletedBy length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length();
				log.info "DeletionDate length: " + myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length();
				
				if (	expectValue == "deleted") {
					String recvDeletedBy = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString();
					String recvDeletionDate = myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString();
					
					//DeletedBy
					this.log.info "recvDeletedBy[$recvDeletedBy] - expectdb[$expectdb]";
					assert recvDeletedBy == expectdb;
					
					//DeletionDate
					if (streamFlagIgnoreDeletedDate != "true") {
						String recvDate = formatDate(recvDeletionDate);
						def j = a.dateDiff(expectDDate,recvDate,"seconds");
						log.info "xmlIndex[$xmlIndex] - DeletionDate - recvDate[$recvDate] - expectDDate[$expectDDate] DIFF [$j]";
						assert recvDate.length() > 0;
						log.info "xmlIndex[$xmlIndex] - DeletionDate - Difference less that 10 seconds";
						assert j <= 10;
					} else {
						log.info "xmlIndex[$xmlIndex] - DeletionDate - IGNORED DUE TO streamFlagIgnoreDeletedDate" ;
					}
				} else {
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletedBy.toString().length()    == 0;
					assert myXML.Stream[xmlIndex].ResourceStatus.Current.@DeletionDate.toString().length() == 0;
				}
				/*
				*
				*  History validation
				*
				*/
				def myHistoryXML = new XmlSlurper().parseText(tC.getPropertyValue("streamHistoryRows"));

				int rCnt = myHistoryXML.ResultSet.Row.size();

				log.info "-------------HISTORY-----------------";
				log.info "History Row Count[$rCnt] - <History> Count [" + myXML.ResourceStatus.History.size() + "]";
				if (tC.getPropertyValue("expectDBDeletedBy") != "1") {
					rCnt -= 1;
				} 
				assert myXML.Stream[xmlIndex].ResourceStatus.History.Prior.size() == rCnt;
		
				for (int i = 0; i < rCnt; i++) {
					String hrecvModifiedBy = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModifiedBy.text();
					String hexpectModifiedBy = urnnode + myHistoryXML.ResultSet.Row[i].CREATED_BY_NODE_OID.text();
					log.info "$i --> hrecvModifiedBy[$hrecvModifiedBy] - hexpectModifiedBy[$hexpectModifiedBy]";
					assert hrecvModifiedBy == expectmb;

					String hrecvStatus = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Value;
					String hexpectStatus = myHistoryXML.ResultSet.Row[i].STATUS.text();
					log.info "$i --> hrecvStatus[$hrecvStatus] - hexpectStatus[$hexpectStatus]";
					if (hexpectStatus == "active") {
						assert hrecvStatus == "urn:dece:type:status:active";
					} else {
						assert hrecvStatus == "urn:dece:type:status:deleted";
					}
					
					String hrecvDescription = myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].Description;
					switch (hexpectStatus) {
						case "active": hexpectDescription = "active"; break;
						case "deleted": hexpectDescription = "deleted"; break;
						default: hexpectDescription = "deleted"; break;
					}
					log.info "$i --> hrecvDescription[$hrecvDescription] - hexpectDescription[$hexpectDescription]";
					assert hrecvDescription == hexpectDescription;
	
					String hrecvModificationDate = formatDate(myXML.Stream[xmlIndex].ResourceStatus.History.Prior[i].@ModificationDate.text());
					int subSec = myHistoryXML.ResultSet.Row[i].EXPIRATION_DATE.text().indexOf(".");
					String hexpectModificationDate = myHistoryXML.ResultSet.Row[i].CREATED_DATE.text().substring(0, subSec);
					log.info "$i --> hrecvModificationDate[$hrecvModificationDate] - hexpectModificationDate[$hexpectModificationDate]";
					assert hrecvModificationDate.replace("/","-") == hexpectModificationDate;
					
				}
			
				xmlIndex++;
			}

			/*
			*  By design, we never return more than 30 streams.   So
			*  if we encounter our 30th stream we will break out of 
			*  the XML validation routines and allow size() 
			*  invocations on the xml body to verify no additional
			*  streams were returned.
			*/
			if (displayStreamCount == streamMaxDisplayCount.toInteger()) {
				break;
			}
			
			g--;
		}

		log.info "--------------------FINAL XML size() Validations -------------------";
		log.info "ResourceStatus size: "  + myXML.Stream.ResourceStatus.size();
		log.info "ResourceStatus.Current size: " + myXML.Stream.ResourceStatus.Current.size();
		log.info "ResourceStatus.Value size: " + myXML.Stream.ResourceStatus.Current.Value.size();
		log.info "ResourceStatus.Description size: " + myXML.Stream.ResourceStatus.Current.Description.size();
		log.info "RightsTokenID size: "  + myXML.Stream.RightsTokenID.size();
		log.info "ExpirationDateTime size: " + myXML.Stream.ExpirationDateTime.size();

		log.info "Stream.size() LTE MAX allowed of " + streamMaxDisplayCount.toInteger();
		assert myXML.Stream.size() <= streamMaxDisplayCount.toInteger();
		
		log.info "Stream.size() IS -- recv[" + myXML.Stream.size() + "] Expect[$displayStreamCount]";
//		assert myXML.Stream.size() == displayStreamCount;
		
		assert myXML.Stream.ResourceStatus.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Value.size() == displayStreamCount;
		assert myXML.Stream.ResourceStatus.Current.Description.size() == displayStreamCount;
		assert myXML.Stream.RightsTokenID.size()  == displayStreamCount;
		assert myXML.Stream.ExpirationDateTime.size() == displayStreamCount;
	}
} 

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Validation of List of Streams get as per Details stored at StreamCreate for all" disabled="true" id="7c794f57-fde1-4f24-b4ba-a594e4a2c231"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def commonTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamCreate');
def delete_streamTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamDelete');

tC.setPropertyValue("StreamDeleted",delete_streamTC.getPropertyValue("StreamDeleted"));

tC.setPropertyValue("StreamList",commonTC.getPropertyValue("StreamList"));
def streamCreateCount = context.expand( '${#Project#StreamCreateCount}' )
tC.setPropertyValue("accountList",commonTC.getPropertyValue("accountList"));

tC.setPropertyValue("streamCreateCount",streamCreateCount);

def xMLbody = context.expand( '${#TestCase#XMLbody}' )

def nodeid = context.expand( '${#TestCase#nodeid}' )
def node_flag=true;
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' ).toString();
def StreamList=context.expand( '${#TestCase#StreamList}' ).toString();
def accountList=context.expand( '${#TestCase#accountList}' ).toString();
log.info "accountList :$accountList"
log.info "assertionAccountIdFULL :$assertionAccountIdFULL"
def rawRequest = context.expand( '${GET - StreamListView#RawRequest}' )

String[] List=StreamList.split("#",2);

String ExpectedAcct=List[0];

String[] ExpStreamLL=List[1].split(";");

HashMap Expstrm = new HashMap();

ArrayList<StreamObj> StmObj=new ArrayList<StreamObj>();
int j=0;


if(nodeid=="LLASP_CS_1" || nodeid=="DLASP" || nodeid=="DLASP_CS_1" || nodeid=="LLASP_CS_2"|| nodeid=="DLASP_CS_2")
{
  node_flag=true;
}
else
{ node_flag=false  }

while(j<ExpStreamLL.length)
{   
	String[] str= ExpStreamLL[j].split("!");
	    
	  Expstrm.put(str[0], str[1]);
	  String[] val=str[1].split(",");
//	  log.info "handle id"+str[0] +";" +"property"+ str[1]
	  j++;
//	  log.info val.length;
//	  log.info "Rights :"+val[0]+", User:"+val[1]//+",user:"+val[2]
	  StmObj.add(new StreamObj(str[0],val[0],val[1]));
	
}
//log.info "object :"+StmObj.get(1).getStreamHandleID();
def response = context.expand( '${GET - StreamListView#Response}' )
def myXML;
HashMap Actstrm = new HashMap();

int streamDeleteCount = Integer.parseInt(context.expand( '${#Project#StreamDeleteCount}' ))

def streamDeleted = context.expand( '${#TestCase#StreamDeleted}' )
String[] DeletedStream=streamDeleted.split(";");

if(response!="")
{
myXML = new XmlSlurper().parseText(response).declareNamespace('dece':tP.getPropertyValue("coordinatorSchema"));;
  
  int ActualStreamCount=myXML.Stream.size();
  log.info "Expected StreamCount $streamCreateCount plus, Deleted Stream Count $streamDeleteCount ,Actual StreamCount $ActualStreamCount"
  if(node_flag==true)
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount)+streamDeleteCount;}
  else
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount);
    	}
  log.info "ActualStreamCount :"+ ActualStreamCount
   int count=0;
  for(int i=0;i<ActualStreamCount;i++)
  {  
  	def ActualStreamHandleID=myXML.Stream[i].@StreamHandleID.text();
  	def ActualRghtsTokenID=myXML.Stream[i].RightsTokenID.text();
  	def ActualRequestingUserID=myXML.Stream[i].RequestingUserID.text();
  	def ActExpirationDateTime=myXML.Stream[i].ExpirationDateTime.text();
  	def ResourceStatus=myXML.Stream[i].ResourceStatus.Current.Value.text(); 
  	def Description=myXML.Stream[i].ResourceStatus.Current.Description.text(); 
//  	log.info "ResourceStatus"+Description
  	//urn:dece:type:status:active
     
//     <Value>urn:dece:type:status:deleted</Value>
//                <Description>deleted</Description>
       
     
  	 
  	     for(int s=0; s<StmObj.size();s++)
  	     {
  	         if (ActualStreamHandleID==StmObj.get(s).getStreamHandleID())
  	         {
  	         	
  	           count++;
   	          def ExpectUser= StmObj.get(s).getUserid()
  	          def ExpectRght= StmObj.get(s).getRightstokenidFULL() ;

                log.info "For StreamID :'$ActualStreamHandleID' Expected rightId :'$ExpectRght' ,ActualRights:'$ActualRghtsTokenID'"
  	           assert ExpectRght==ActualRghtsTokenID;
  	   	     log.info "For StreamID :'$ActualStreamHandleID' Expected USERID :'$ExpectUser' ,Actual userID:'$ActualRequestingUserID '"  	           
  	   	     assert ExpectUser==ActualRequestingUserID;
  	   	   
  	           }  	

  	           int flag=0;
  	              for(int x=0;x<DeletedStream.length;x++)
  	              {
  	              	  if (ActualStreamHandleID==DeletedStream[x])
  	              	     {  
  	              	     	log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:deleted' ,Actual resource status:'$ResourceStatus'"
  	              	        assert ResourceStatus=="urn:dece:type:status:deleted"
  	              	         log.info "For StreamID :'$ActualStreamHandleID' expected Description :'deleted' ,Actual Description :'$Description'"
  	              	         assert Description=="deleted"
  	              	          
  	              	         flag=1;
  	              	         break;
  	              	     	}
  	               	}

  	               if(flag==0)
  	               {
  	               	 log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:active' ,Actual resource status:'$ResourceStatus'"
  	               	assert ResourceStatus=="urn:dece:type:status:active"
  	              	      log.info "For StreamID :'$ActualStreamHandleID' expected Description :'active' ,Actual Description :'$Description'"  
  	              	         assert Description=="active"
  	              	          
  	               	}
  	   }
     }  
  	   if(node_flag==true && count==ActualStreamCount)
  	   {   log.info "nodeid :'$nodeid' will get list of all active and deleted streams"
  	   	 log.info "All streams validated active and deleted streams";
  	   	 assert count==ActualStreamCount;
  	   	}
  	   else if(node_flag==false && streamCreateCount==count.toString())
  	   {
           log.info "nodeid :'$nodeid' not able to get deleted streams"
  	   	log.info "All streams validated  expect deleted streams , Total count of streams details in response $ActualStreamCount";
  	   	log.info " Actual Stream count to be validate '$streamCreateCount' ,expected Stream count :$ActualStreamCount "
  	   	log.error " total Streams validated $count";
  	   	 assert streamCreateCount==ActualStreamCount.toString();
  	   	 assert streamCreateCount==count.toString()

  	   }
  	   else{
  	   	  log.info "nodeid :'$nodeid'"
  	   	 log.error "List view don't have all streams in Account $accountList ";
  	   	 assert count==ActualStreamCount;
  	   	}
  
  
}



class StreamObj
{ 
	private String StreamHandleID;
	private String rightstokenidFULL;
	private String Userid;
	private static int keyLs;

	StreamObj(String StreamHandleID,String rightstokenidFULL,String Userid){
		if(keyLs>0)
		   keyLs++;
		   else
		   keyLs=1;

		   this.StreamHandleID = StreamHandleID;
		   this.rightstokenidFULL = rightstokenidFULL;
		   this.Userid = Userid;
		}

		public String getStreamHandleID() {
		return StreamHandleID;
	}
	public void setStreamHandleID(String StreamHandleID) {
		this.StreamHandleID = StreamHandleID;
	}
	public String getRightstokenidFULL() {
		return rightstokenidFULL;
	}
	public void setRightstokenidFULL(String rightstokenidFULL) {
		this.rightstokenidFULL = rightstokenidFULL;
	}
	public String getUserid() {
		return Userid;
	}
	public void setUserid(String Userid) {
		this.Userid = Userid;
	}
	
	
		

}

]]></script></con:config></con:testStep><con:testStep type="groovy" name="Validation of List of Streams get as per Details stored at StreamCreate for all" id="b008dd28-b4db-449e-9495-ee66eb698dd8" disabled="true"><con:settings/><con:config><script><![CDATA[def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def commonTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamCreate');
def delete_streamTC = testRunner.testCase.testSuite.project.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName('StreamDelete');

tC.setPropertyValue("StreamDeleted",delete_streamTC.getPropertyValue("StreamDeleted"));

tC.setPropertyValue("StreamList",commonTC.getPropertyValue("StreamList"));

def TpstreamDeleteList = context.expand( '${#Project#StreamDeleteList}' )
int TpStreamDeleteCount=Integer.parseInt(tP.getPropertyValue("StreamDeleteCount"));

def streamCreateCount = context.expand( '${#Project#StreamCreateCount}' )
tC.setPropertyValue("accountList",commonTC.getPropertyValue("accountList"));

tC.setPropertyValue("streamCreateCount",streamCreateCount);

def xMLbody = context.expand( '${#TestCase#XMLbody}' )

def nodeid = context.expand( '${#TestCase#nodeid}' )
def node_flag=true;
def assertionAccountIdFULL = context.expand( '${#TestCase#assertionAccountIdFULL}' ).toString();
def StreamList=context.expand( '${#TestCase#StreamList}' ).toString();
def accountList=context.expand( '${#TestCase#accountList}' ).toString();
log.info "accountList :$accountList"
log.info "assertionAccountIdFULL :$assertionAccountIdFULL"
def rawRequest = context.expand( '${GET - StreamListView#RawRequest}' )

String[] List=StreamList.split("#",2);

String ExpectedAcct=List[0];

String[] ExpStreamLL=List[1].split(";");

HashMap Expstrm = new HashMap();

ArrayList<StreamObj> StmObj=new ArrayList<StreamObj>();
int j=0;


if(nodeid=="LLASP_CS_1" || nodeid=="DLASP" || nodeid=="DLASP_CS_1" || nodeid=="LLASP_CS_2"|| nodeid=="DLASP_CS_2" || nodeid=="LLASP")
{
  node_flag=true;
}
else
{ node_flag=false  }

while(j<ExpStreamLL.length)
{   
	String[] str= ExpStreamLL[j].split("!");
	    
	  Expstrm.put(str[0], str[1]);
	  String[] val=str[1].split(",");
//	  log.info "handle id"+str[0] +";" +"property"+ str[1]
	  j++;
//	  log.info val.length;
//	  log.info "Rights :"+val[0]+", User:"+val[1]//+",user:"+val[2]
	  StmObj.add(new StreamObj(str[0],val[0],val[1]));
	
}
//log.info "object :"+StmObj.get(1).getStreamHandleID();
def response = context.expand( '${GET - StreamListView#Response}' )
def myXML;
HashMap Actstrm = new HashMap();

int streamDeleteCount = Integer.parseInt(context.expand( '${#Project#StreamDeleteCount}' ))

def streamDeleted = context.expand( '${#Project#StreamDeleteList}' )
String[] DeletedStream=streamDeleted.split(";");



def ActualStreamHandleIDList="";

log.info "##############  $ActualStreamHandleIDList  #########################"


if(response!="")
{
myXML = new XmlSlurper().parseText(response).declareNamespace('dece':tP.getPropertyValue("coordinatorSchema"));;
  
  int ActualStreamCount=myXML.Stream.size();
  log.info "Expected StreamCount $streamCreateCount plus, Deleted Stream Count $TpStreamDeleteCount ,Actual StreamCount $ActualStreamCount"
  if(node_flag==true)
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount)+TpStreamDeleteCount;} 
  else
    {  assert ActualStreamCount==Integer.parseInt(streamCreateCount);
    	}
  log.info "ActualStreamCount :"+ ActualStreamCount

  log.info "############## ActualStreamHandleIDList:  $ActualStreamHandleIDList"
   int count=0;
  for(int i=0;i<ActualStreamCount;i++)
  {  
  	def ActualStreamHandleID=myXML.Stream[i].@StreamHandleID.text();
  	def ActualRghtsTokenID=myXML.Stream[i].RightsTokenID.text();
  	def ActualRequestingUserID=myXML.Stream[i].RequestingUserID.text();
  	def ActExpirationDateTime=myXML.Stream[i].ExpirationDateTime.text();
  	def ResourceStatus=myXML.Stream[i].ResourceStatus.Current.Value.text(); 
  	def Description=myXML.Stream[i].ResourceStatus.Current.Description.text(); 
  	def CreationDate=myXML.Stream[i].ResourceStatus.Current.@CreationDate.text();
  	
  if(Description=="active")
    { ActualStreamHandleIDList=ActualStreamHandleIDList+ActualStreamHandleID+";"
    }
  	              	         
  	
  	
  	if(i+1<ActualStreamCount)
  	{
  	def Next_CreationDate=myXML.Stream[i+1].ResourceStatus.Current.@CreationDate.text();
  	
  	log.info "################# CreationDate :$CreationDate  , CreationDate of Next stream in listView: $Next_CreationDate ########################### "
  	log.info "check Streams Order , should be as per  Streams’ created datetime value, in descending order"
  	 assert CreationDate > Next_CreationDate ;
  	}


  	
//  	log.info "ResourceStatus"+Description
  	//urn:dece:type:status:active
     
//     <Value>urn:dece:type:status:deleted</Value>
//                <Description>deleted</Description>
       
     
  	 
  	     for(int s=0; s<StmObj.size();s++)
  	     {
  	         if (ActualStreamHandleID==StmObj.get(s).getStreamHandleID())
  	         {
  	         	
  	           count++;
   	          def ExpectUser= StmObj.get(s).getUserid()
  	          def ExpectRght= StmObj.get(s).getRightstokenidFULL() ;

                log.info "For StreamID :'$ActualStreamHandleID' Expected rightId :'$ExpectRght' ,ActualRights:'$ActualRghtsTokenID'"
  	           assert ExpectRght==ActualRghtsTokenID;
  	   	     log.info "For StreamID :'$ActualStreamHandleID' Expected USERID :'$ExpectUser' ,Actual userID:'$ActualRequestingUserID '"  	           
  	   	     assert ExpectUser==ActualRequestingUserID;
  	   	   
  	           }  	

  	           int flag=0;
  	              for(int x=0;x<DeletedStream.length;x++)
  	              {
  	              	  if (ActualStreamHandleID==DeletedStream[x])
  	              	     {  
  	              	     	log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:deleted' ,Actual resource status:'$ResourceStatus'"
  	              	        assert ResourceStatus=="urn:dece:type:status:deleted"
  	              	         log.info "For StreamID :'$ActualStreamHandleID' expected Description :'deleted' ,Actual Description :'$Description'"
  	              	         assert Description=="deleted"
  	              	          
  	              	         flag=1;
  	              	         break;
  	              	     	}
  	               	}

  	               if(flag==0)
  	               {
  	               	 log.info "For StreamID :'$ActualStreamHandleID' expected ResourceStatus :'urn:dece:type:status:active' ,Actual resource status:'$ResourceStatus'"
  	               	assert ResourceStatus=="urn:dece:type:status:active"
  	              	      log.info "For StreamID :'$ActualStreamHandleID' expected Description :'active' ,Actual Description :'$Description'"  
  	              	         assert Description=="active"
  	              	         
  	               	}
  	   }
  	   tC.setPropertyValue("ActualStreamHandleIDList",ActualStreamHandleIDList);
     }  
  	   if(node_flag==true && count==ActualStreamCount)
  	   {   log.info "nodeid :'$nodeid' will get list of all active and deleted streams"
  	   	 log.info "All streams validated active and deleted streams";
  	   	 assert count==ActualStreamCount;
  	   	}
  	   else if(node_flag==false && streamCreateCount==count.toString())
  	   {
           log.info "nodeid :'$nodeid' not able to get deleted streams"
  	   	log.info "All streams validated  expect deleted streams , Total count of streams details in response $ActualStreamCount";
  	   	log.info " Actual Stream count to be validate '$streamCreateCount' ,expected Stream count :$ActualStreamCount "
  	   	log.error " total Streams validated $count";
  	   	 assert streamCreateCount==ActualStreamCount.toString();
  	   	 assert streamCreateCount==count.toString()

  	   }
  	   else{
  	   	  log.info "nodeid :'$nodeid'"
  	   	 log.error "List view don't have all streams in Account $accountList ";
  	   	 assert count==ActualStreamCount;
  	   	}
  
  
}



class StreamObj
{ 
	private String StreamHandleID;
	private String rightstokenidFULL;
	private String Userid;
	private static int keyLs;

	StreamObj(String StreamHandleID,String rightstokenidFULL,String Userid){
		if(keyLs>0)
		   keyLs++;
		   else
		   keyLs=1;

		   this.StreamHandleID = StreamHandleID;
		   this.rightstokenidFULL = rightstokenidFULL;
		   this.Userid = Userid;
		}

		public String getStreamHandleID() {
		return StreamHandleID;
	}
	public void setStreamHandleID(String StreamHandleID) {
		this.StreamHandleID = StreamHandleID;
	}
	public String getRightstokenidFULL() {
		return rightstokenidFULL;
	}
	public void setRightstokenidFULL(String rightstokenidFULL) {
		this.rightstokenidFULL = rightstokenidFULL;
	}
	public String getUserid() {
		return Userid;
	}
	public void setUserid(String Userid) {
		this.Userid = Userid;
	}
	
	
		

}

]]></script></con:config></con:testStep><con:properties><con:property><con:name>accountList</con:name><con:value>urn:dece:accountid:org:dece:14DDA87388B821E8E05307991F0A7663</con:value></con:property><con:property><con:name>ActiveStreamCountList</con:name><con:value/></con:property><con:property><con:name>ActualStreamHandleIDList</con:name><con:value>urn:dece:streamhandleid:org:dece:D243657D40F0441AB197E77491578D2E;urn:dece:streamhandleid:org:dece:E7871B3BB015446FA5BB36226DBC51DB;urn:dece:streamhandleid:org:dece:A7A532FDCF1A4E7E9A8D6EB1E7047233;urn:dece:streamhandleid:org:dece:99E114922BB74316A22D3A09CA8F83BC;urn:dece:streamhandleid:org:dece:A3945ECC5B9C45329F30415080CF8CBF;urn:dece:streamhandleid:org:dece:035AC1CD944A4733BBAD913A3925484C;urn:dece:streamhandleid:org:dece:3C0B61BB746A456B9A5ECE762BE1DAE3;urn:dece:streamhandleid:org:dece:9059C2F148DC41A7B88991C12AA7AD16;urn:dece:streamhandleid:org:dece:D0CBBA9B65214A9FBC7096C1AE5778C4;urn:dece:streamhandleid:org:dece:9AE732954E5045278E7F3D48DF66A849;</con:value></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULLEncoded</con:name><con:value>urn%253Adece%253Aaccountid%253Aorg%253Adece%253AEAF5550F8FC462E6E0401F0A059939D6</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>errorID</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorReason</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>errorStatusCode</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_11</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_12</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_13</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_14</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_15</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_16</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_17</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_19</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_20</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_21</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_22</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_23</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_24</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_25</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_26</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_27</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_28</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_29</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_30</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_31</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_32</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_33</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_35</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_36</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_37</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_38</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_39</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_40</con:name><con:value>llp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedByNodeType_5</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_6</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_7</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_8</con:name><con:value>dlp</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_16</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_17</con:name><con:value>0914</con:value></con:property><con:property><con:name>expectDBCreatedBy_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_31</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_32</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_33</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBCreatedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBCreatedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:06:42</con:value></con:property><con:property><con:name>expectDBCreatedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_11</con:name><con:value>2015/04/27 17:41:04</con:value></con:property><con:property><con:name>expectDBCreatedTime_12</con:name><con:value>2015/04/27 17:41:33</con:value></con:property><con:property><con:name>expectDBCreatedTime_13</con:name><con:value>2015/04/27 17:42:06</con:value></con:property><con:property><con:name>expectDBCreatedTime_14</con:name><con:value>2015/04/27 17:42:35</con:value></con:property><con:property><con:name>expectDBCreatedTime_15</con:name><con:value>2015/04/27 17:43:08</con:value></con:property><con:property><con:name>expectDBCreatedTime_16</con:name><con:value>2015/04/27 17:43:37</con:value></con:property><con:property><con:name>expectDBCreatedTime_17</con:name><con:value>2012/11/21 07:50:08</con:value></con:property><con:property><con:name>expectDBCreatedTime_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_19</con:name><con:value>2012/11/02 17:45:50</con:value></con:property><con:property><con:name>expectDBCreatedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_20</con:name><con:value>2012/11/02 17:46:22</con:value></con:property><con:property><con:name>expectDBCreatedTime_21</con:name><con:value>2012/11/02 17:46:56</con:value></con:property><con:property><con:name>expectDBCreatedTime_22</con:name><con:value>2012/11/02 17:47:29</con:value></con:property><con:property><con:name>expectDBCreatedTime_23</con:name><con:value>2012/11/02 17:48:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_24</con:name><con:value>2012/11/02 17:48:38</con:value></con:property><con:property><con:name>expectDBCreatedTime_25</con:name><con:value>2012/11/02 17:49:10</con:value></con:property><con:property><con:name>expectDBCreatedTime_26</con:name><con:value>2012/11/02 17:49:45</con:value></con:property><con:property><con:name>expectDBCreatedTime_27</con:name><con:value>2012/11/02 17:50:21</con:value></con:property><con:property><con:name>expectDBCreatedTime_28</con:name><con:value>2012/11/02 17:50:55</con:value></con:property><con:property><con:name>expectDBCreatedTime_29</con:name><con:value>2012/11/02 17:51:31</con:value></con:property><con:property><con:name>expectDBCreatedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_30</con:name><con:value>2012/11/02 17:52:05</con:value></con:property><con:property><con:name>expectDBCreatedTime_31</con:name><con:value>2012/11/02 17:52:41</con:value></con:property><con:property><con:name>expectDBCreatedTime_32</con:name><con:value>2012/11/02 17:53:02</con:value></con:property><con:property><con:name>expectDBCreatedTime_33</con:name><con:value>2012/11/02 17:53:23</con:value></con:property><con:property><con:name>expectDBCreatedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_35</con:name><con:value>2012/11/02 17:32:23</con:value></con:property><con:property><con:name>expectDBCreatedTime_36</con:name><con:value>2012/11/02 17:32:51</con:value></con:property><con:property><con:name>expectDBCreatedTime_37</con:name><con:value>2012/11/02 17:33:18</con:value></con:property><con:property><con:name>expectDBCreatedTime_38</con:name><con:value>2012/11/02 17:33:49</con:value></con:property><con:property><con:name>expectDBCreatedTime_39</con:name><con:value>2012/11/02 17:34:16</con:value></con:property><con:property><con:name>expectDBCreatedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_40</con:name><con:value>2012/11/02 17:34:45</con:value></con:property><con:property><con:name>expectDBCreatedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedTime_5</con:name><con:value>2015/04/27 17:59:37</con:value></con:property><con:property><con:name>expectDBCreatedTime_6</con:name><con:value>2015/04/27 18:00:04</con:value></con:property><con:property><con:name>expectDBCreatedTime_7</con:name><con:value>2015/04/27 18:00:32</con:value></con:property><con:property><con:name>expectDBCreatedTime_8</con:name><con:value>2015/04/27 18:01:01</con:value></con:property><con:property><con:name>expectDBCreatedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_19</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_20</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_21</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_22</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_23</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_24</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_25</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_26</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_27</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_28</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_29</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_30</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_35</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_36</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_37</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_38</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_39</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_40</con:name><con:value>0910</con:value></con:property><con:property><con:name>expectDBDeletedBy_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBDeletedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2015/04/29 10:06:45</con:value></con:property><con:property><con:name>expectDBDeletedTime_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_11</con:name><con:value>2015/04/27 17:41:18</con:value></con:property><con:property><con:name>expectDBDeletedTime_12</con:name><con:value>2015/04/27 17:41:48</con:value></con:property><con:property><con:name>expectDBDeletedTime_13</con:name><con:value>2015/04/27 17:42:20</con:value></con:property><con:property><con:name>expectDBDeletedTime_14</con:name><con:value>2015/04/27 17:42:52</con:value></con:property><con:property><con:name>expectDBDeletedTime_15</con:name><con:value>2015/04/27 17:43:22</con:value></con:property><con:property><con:name>expectDBDeletedTime_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_19</con:name><con:value>2012/11/02 17:46:00</con:value></con:property><con:property><con:name>expectDBDeletedTime_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_20</con:name><con:value>2012/11/02 17:46:33</con:value></con:property><con:property><con:name>expectDBDeletedTime_21</con:name><con:value>2012/11/02 17:47:05</con:value></con:property><con:property><con:name>expectDBDeletedTime_22</con:name><con:value>2012/11/02 17:47:39</con:value></con:property><con:property><con:name>expectDBDeletedTime_23</con:name><con:value>2012/11/02 17:48:14</con:value></con:property><con:property><con:name>expectDBDeletedTime_24</con:name><con:value>2012/11/02 17:48:48</con:value></con:property><con:property><con:name>expectDBDeletedTime_25</con:name><con:value>2012/11/02 17:49:20</con:value></con:property><con:property><con:name>expectDBDeletedTime_26</con:name><con:value>2012/11/02 17:49:58</con:value></con:property><con:property><con:name>expectDBDeletedTime_27</con:name><con:value>2012/11/02 17:50:32</con:value></con:property><con:property><con:name>expectDBDeletedTime_28</con:name><con:value>2012/11/02 17:51:05</con:value></con:property><con:property><con:name>expectDBDeletedTime_29</con:name><con:value>2012/11/02 17:51:41</con:value></con:property><con:property><con:name>expectDBDeletedTime_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_30</con:name><con:value>2012/11/02 17:52:15</con:value></con:property><con:property><con:name>expectDBDeletedTime_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_35</con:name><con:value>2012/11/02 17:32:34</con:value></con:property><con:property><con:name>expectDBDeletedTime_36</con:name><con:value>2012/11/02 17:33:02</con:value></con:property><con:property><con:name>expectDBDeletedTime_37</con:name><con:value>2012/11/02 17:33:31</con:value></con:property><con:property><con:name>expectDBDeletedTime_38</con:name><con:value>2012/11/02 17:34:00</con:value></con:property><con:property><con:name>expectDBDeletedTime_39</con:name><con:value>2012/11/02 17:34:29</con:value></con:property><con:property><con:name>expectDBDeletedTime_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_40</con:name><con:value>2012/11/02 17:34:56</con:value></con:property><con:property><con:name>expectDBDeletedTime_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBDeletedTime_5</con:name><con:value>2015/04/27 17:59:50</con:value></con:property><con:property><con:name>expectDBDeletedTime_6</con:name><con:value>2015/04/27 18:00:16</con:value></con:property><con:property><con:name>expectDBDeletedTime_7</con:name><con:value>2015/04/27 18:00:46</con:value></con:property><con:property><con:name>expectDBDeletedTime_8</con:name><con:value>2015/04/27 18:01:15</con:value></con:property><con:property><con:name>expectDBDeletedTime_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_11</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_13</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_14</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_15</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBModifiedBy_5</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_6</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_7</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_8</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>expectDBModifiedBy_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">deleted</con:value></con:property><con:property><con:name>expectDBStatus_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_11</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_12</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_13</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_14</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_15</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_16</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_17</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_19</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_20</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_21</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_22</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_23</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_24</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_25</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_26</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_27</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_28</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_29</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_30</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_31</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_32</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_33</con:name><con:value>active</con:value></con:property><con:property><con:name>expectDBStatus_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_35</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_36</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_37</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_38</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_39</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_40</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBStatus_5</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_6</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_7</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_8</con:name><con:value>deleted</con:value></con:property><con:property><con:name>expectDBStatus_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectErrTypeStreamListView</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken</con:name><con:value>false</con:value></con:property><con:property><con:name>expectGenericRightsToken_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectGenericRightsToken_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DAD4AC5F1221A1E05305991F0ADA09</con:value></con:property><con:property><con:name>expectRequestingUser_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:14DAD4AC5F1221A1E05305991F0ADA09</con:value></con:property><con:property><con:name>expectRequestingUser_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_11</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_12</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_13</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_14</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_15</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_16</con:name><con:value>urn:dece:userid:org:dece:14B8D3E968AB4DE4E05305991F0A45B2</con:value></con:property><con:property><con:name>expectRequestingUser_17</con:name><con:value>urn:dece:userid:org:dece:9B65694912BBFE26E0401F0A07996B66</con:value></con:property><con:property><con:name>expectRequestingUser_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_19</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_20</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_21</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_22</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_23</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_24</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_25</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_26</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_27</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_28</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_29</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_30</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_31</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_32</con:name><con:value>urn:dece:userid:org:dece:9B7969EE9EA1770CE0401F0A079930AA</con:value></con:property><con:property><con:name>expectRequestingUser_33</con:name><con:value>urn:dece:userid:org:dece:9DD0CB55ED027BCEE0401F0A07993B89</con:value></con:property><con:property><con:name>expectRequestingUser_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_35</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_36</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_37</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_38</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_39</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_40</con:name><con:value>urn:dece:userid:org:dece:9B65A97BC9DDEC2CE0401F0A05997A79</con:value></con:property><con:property><con:name>expectRequestingUser_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectRequestingUser_5</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_6</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_7</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_8</con:name><con:value>urn:dece:userid:org:dece:14B906FDFECB51F3E05305991F0AB049</con:value></con:property><con:property><con:name>expectRequestingUser_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamActiveCnt</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectStreamAvailCnt</con:name><con:value>12</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentEncoding</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">chunked</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentLocation</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 403 Forbidden</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/LLASP_CS_1_concat.pem</con:value></con:property><con:property><con:name>loopuntil</con:name><con:value>1</con:value></con:property><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">LLASP_CS_1</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">llpcs</con:value></con:property><con:property><con:name>password</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>79611</con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:rightstokenid:org:dece:14DADB24B5464E35E05307991F0A2FD6</con:value></con:property><con:property><con:name>rightstokenidFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenidFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>streamAccountActiveCount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamCreateCount</con:name><con:value>2</con:value></con:property><con:property><con:name>StreamDeleted</con:name><con:value>urn:dece:streamhandleid:org:dece:5752D8A7D1C94E4E8D5C67F18CF41E15;urn:dece:streamhandleid:org:dece:2CDDF97E625346E7A7AA0775A0A97DAB;urn:dece:streamhandleid:org:dece:32061AC4FA08480CBB09AF71FB993E4E;</con:value></con:property><con:property><con:name>streamFlagCreateDateOld</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagCreateDateOld_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreCreatedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_11</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_12</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_13</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_14</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_15</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_16</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_17</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_19</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_20</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_21</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_22</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_23</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_24</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_25</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_26</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_27</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_28</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_29</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_30</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_31</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_32</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_33</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_35</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_36</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_37</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_38</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_39</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_40</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_5</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_6</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_7</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_8</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamFlagIgnoreDeletedDate_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:streamhandleid:org:dece:2BF526533F3A44ED914098C3B29EEE04</con:value></con:property><con:property><con:name>streamhandleFULL_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_11</con:name><con:value>urn:dece:streamhandleid:org:dece:DAEEDC404B25478D8A427697EEED4296</con:value></con:property><con:property><con:name>streamhandleFULL_12</con:name><con:value>urn:dece:streamhandleid:org:dece:FA2FAFAD35F740ACB661E48622495566</con:value></con:property><con:property><con:name>streamhandleFULL_13</con:name><con:value>urn:dece:streamhandleid:org:dece:D1AE4B1CB1594CB49743B1583C5C1BD0</con:value></con:property><con:property><con:name>streamhandleFULL_14</con:name><con:value>urn:dece:streamhandleid:org:dece:2DDBC1BC4B1F42AB85A442976410A1AA</con:value></con:property><con:property><con:name>streamhandleFULL_15</con:name><con:value>urn:dece:streamhandleid:org:dece:CAF3F40CE81F466D80EBDF23FB9ECBDC</con:value></con:property><con:property><con:name>streamhandleFULL_16</con:name><con:value>urn:dece:streamhandleid:org:dece:96092098DB49464C94292CD1B8483B83</con:value></con:property><con:property><con:name>streamhandleFULL_17</con:name><con:value>urn:dece:streamhandleid:org:dece:CEFD90E77819B152E0401F0A07995384</con:value></con:property><con:property><con:name>streamhandleFULL_18</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_19</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E2FD317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_20</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E34D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_21</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E39D317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_22</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87AA799E3ED317E0401F0A05994974</con:value></con:property><con:property><con:name>streamhandleFULL_23</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FEF438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_24</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF4438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_25</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FF9438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_26</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87BC6F0FFE438EE0401F0A05996C3E</con:value></con:property><con:property><con:name>streamhandleFULL_27</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234467FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_28</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2344B7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_29</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234507FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_30</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C234557FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_31</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87C4C2345A7FFDE0401F0A05997E19</con:value></con:property><con:property><con:name>streamhandleFULL_32</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CE58313FD124E0401F0A05990DAA</con:value></con:property><con:property><con:name>streamhandleFULL_33</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87CF9B9FB89952E0401F0A079947F1</con:value></con:property><con:property><con:name>streamhandleFULL_34</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_35</con:name><con:value>urn:dece:streamhandleid:org:dece:CD877D48FF2B0318E0401F0A079928C0</con:value></con:property><con:property><con:name>streamhandleFULL_36</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8AE0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_37</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B30BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_38</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8B80BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_39</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8BD0BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_40</con:name><con:value>urn:dece:streamhandleid:org:dece:CD87862FA8C20BC4E0401F0A07993B54</con:value></con:property><con:property><con:name>streamhandleFULL_41</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandleFULL_5</con:name><con:value>urn:dece:streamhandleid:org:dece:BF6FB3180DD548379B7D6449E9DE0BC0</con:value></con:property><con:property><con:name>streamhandleFULL_6</con:name><con:value>urn:dece:streamhandleid:org:dece:F24333E267B642D9A3816056474F81EC</con:value></con:property><con:property><con:name>streamhandleFULL_7</con:name><con:value>urn:dece:streamhandleid:org:dece:3C161D027D1C4D73A337AC00B1A17A78</con:value></con:property><con:property><con:name>streamhandleFULL_8</con:name><con:value>urn:dece:streamhandleid:org:dece:7F3ACE1411D94A74973BE916C5594B80</con:value></con:property><con:property><con:name>streamhandleFULL_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_1</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">2BF526533F3A44ED914098C3B29EEE04</con:value></con:property><con:property><con:name>streamhandle_10</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_11</con:name><con:value>DAEEDC404B25478D8A427697EEED4296</con:value></con:property><con:property><con:name>streamhandle_12</con:name><con:value>FA2FAFAD35F740ACB661E48622495566</con:value></con:property><con:property><con:name>streamhandle_13</con:name><con:value>D1AE4B1CB1594CB49743B1583C5C1BD0</con:value></con:property><con:property><con:name>streamhandle_14</con:name><con:value>2DDBC1BC4B1F42AB85A442976410A1AA</con:value></con:property><con:property><con:name>streamhandle_15</con:name><con:value>CAF3F40CE81F466D80EBDF23FB9ECBDC</con:value></con:property><con:property><con:name>streamhandle_16</con:name><con:value>96092098DB49464C94292CD1B8483B83</con:value></con:property><con:property><con:name>streamhandle_17</con:name><con:value>CEFD90E77819B152E0401F0A07995384</con:value></con:property><con:property><con:name>streamhandle_2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_3</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_4</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamhandle_5</con:name><con:value>BF6FB3180DD548379B7D6449E9DE0BC0</con:value></con:property><con:property><con:name>streamhandle_6</con:name><con:value>F24333E267B642D9A3816056474F81EC</con:value></con:property><con:property><con:name>streamhandle_7</con:name><con:value>3C161D027D1C4D73A337AC00B1A17A78</con:value></con:property><con:property><con:name>streamhandle_8</con:name><con:value>7F3ACE1411D94A74973BE916C5594B80</con:value></con:property><con:property><con:name>streamhandle_9</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>streamHistoryRows</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>StreamList</con:name><con:value>urn:dece:accountid:org:dece:14E00846A0EC0164E05305991F0AA670#urn:dece:streamhandleid:org:dece:2E776A2726C642AF9B6805F4A106035C!urn:dece:rightstokenid:org:dece:14E06582D56E2F5FE05305991F0AF42F,urn:dece:userid:org:dece:14E00846A0F80164E05305991F0AA670;urn:dece:streamhandleid:org:dece:090DDFB25EFE4290B7D06F680E2E344A!urn:dece:rightstokenid:org:dece:14E06582D56E2F5FE05305991F0AF42F,urn:dece:userid:org:dece:14E00846A1810164E05305991F0AA670;</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_65107 - StreamListView - DECECS - Account has single deleted stream and no active streams_FLAKY</con:value></con:property><con:property><con:name>username</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.2/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:securitycontext:unauthorized">
      <Reason Language="en">The request is not authorized.</Reason>
      <OriginalRequest/>
      <ErrorLink/>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>errorRespType</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>assertId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslockerFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightslocker</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>49968546-ffaf-4aaa-977f-7220ad4d95f7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>93a38a1a-be31-47c6-bf95-a083445abe1e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>798b6b7c-0636-4c11-b36e-95b14e3e2df4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Test Configuration/Setup" disabled="true" id="db356010-cd84-4dc8-b4ce-f17598a5c192"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authentication Contexts" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8243908a-f793-4156-85c5-89f5a5641c7a"><con:settings/><con:testStep type="groovy" name="Data Setup when Stream Count Greater then 12 for Stream Service ON" id="ac1f1309-1d01-4f9c-97cb-dd91826ff630"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

int StreamCreateCount = Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));

log.info "Stream Count from Project level......:" + StreamCreateCount;
log.info "Not required to create test data...."

def temp_username = callTC.getPropertyValue("username");

log.info "temp_username ... " + temp_username;

                if (temp_username == tP.getPropertyValue("UserName_FAU1"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_FAU1");
                }
                else if (temp_username == tP.getPropertyValue("UserName_FAU2"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_FAU2");
                }
                else if (temp_username == tP.getPropertyValue("UserName_SAU1"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_SAU1");
                }
                else if (temp_username == tP.getPropertyValue("UserName_SAU2"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_SAU2");
                }
                else if (temp_username == tP.getPropertyValue("UserName_BAU1"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_BAU1");
                }
                else if (temp_username == tP.getPropertyValue("UserName_BAU2"))
                {
                                tC.setPropertyValue("UserName_Property","UserName_BAU2");
                }

log.info "UserName property from Test Case ... " + tP.getPropertyValue(tC.getPropertyValue("UserName_Property"));

//run E2E when Stream count reached to 12 in the Account

if(StreamCreateCount>=12)
{     

                StreamCreateCount = 0;

                log.info "update StreamCreateCount to Zero at project level."
                tP.setPropertyValue("StreamCreateCount",StreamCreateCount.toString())
                tP.setPropertyValue("StreamDeleteCount","0")            
                def myTS = tP.getTestSuiteByName("E_2_E");
                
                def runnerTS = myTS.run( null , false )
                
                assert runnerTS.status == Status.FINISHED;
}

//Setting the desired user from the testcase
tC.setPropertyValue("username",tP.getPropertyValue(tC.getPropertyValue("UserName_Property")));

log.info tC.getPropertyValue("username");

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Properties from calling test case" id="0bec101b-cdec-4610-8808-d6b6827f2a56"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC;

tC.setPropertyValue("nodeid", null);
//tC.setPropertyValue("username", null);

try {
	callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname);

	tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
//	tC.setPropertyValue("username",callTC.getPropertyValue("username"));
}
catch(Throwable e) {
	log.info "ERROR during getTestCaseByName - $e";
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Authentication Context" id="e88f6bbe-4a6d-4575-a06f-5774dee4e413"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def dbAcct;

int lastColon;
def nodeID = tC.getPropertyValue("nodeid");
String userID = tC.getPropertyValue("username").toString();
String rturn = tP.getPropertyValue("urnRightsLocker").toString();
String useroid = "";
String acctoid = "";
String uuid = "";
String assertionAccountIdFULL = "";
String assertionUserIdFULL = "";
String assertion = "";
String rightslocker;

assert nodeID.length() > 0;
assert userID.length() > 0;

try {
	def a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));
	useroid = a.userGetUserOID(userID);
	acctoid = a.userGetAccountOIDbyUsername(userID);
} 
catch (Throwable e) {
	log.info "ERROR during dbUtils.dbUser - $e";
}
/*
*  Null calling test cases current Properties
*/
callTC.setPropertyValue("assert",null);
callTC.setPropertyValue("assertId",null);
callTC.setPropertyValue("assertionUUID",null);
callTC.setPropertyValue("assertionAccountIdFULL",null);
callTC.setPropertyValue("assertionAccountId",null);
callTC.setPropertyValue("assertionUserIdFULL",null);
callTC.setPropertyValue("assertionUserId",null);
callTC.setPropertyValue("accountoid",null);
callTC.setPropertyValue("useroid",null);
callTC.setPropertyValue("rightslockerFULL",null);
callTC.setPropertyValue("rightslocker",null);

/*
*  LP2 security contexts
*/

log.info "---- PROCESSING nodeID[$nodeID] userID[$userID]";

	switch (nodeID) {
		case tP.getPropertyValue("nodeoid10"):  // Retailer node
		case tP.getPropertyValue("nodeoid11"):  //Linked LASP CS
		case tP.getPropertyValue("nodeoid12"):  //Dynamic LASP
		case tP.getPropertyValue("nodeoid13"):	//Dynamic LASP CS	
		case tP.getPropertyValue("nodeoid14"):  //LLASP 
		if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_1").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_1").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_1").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_1").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;

          case tP.getPropertyValue("nodeoid30"): // Coordinator CS		
		if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_3").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_3").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_3").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_3").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;
          
          case tP.getPropertyValue("nodeoid20"):  // dece cs		
          if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_2").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_2").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_2").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_2").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;
		case tP.getPropertyValue("nodeoid40"):
                                                   // Dynamic lasp and his/her customer service node		
		     if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_4").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_4").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_4").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_4").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;
          
          case tP.getPropertyValue("nodeoid50"):
          case tP.getPropertyValue("nodeoid51"):
                                                 // Linked lasp and his/her customer service node		
		if (userID == tP.getPropertyValue("UserName_FAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLFAU1_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU1_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLSAU1_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU1_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU1").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLBAU1_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU1_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_FAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLFAU2_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDFAU2_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_SAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLSAU2_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDSAU2_5").toString()
			} else if (userID == tP.getPropertyValue("UserName_BAU2").toString()) {				
				assertionAccountIdFULL = tP.getPropertyValue("NODEACCOUNTID_5").toString();
				assertion = tP.getPropertyValue("SAMLBAU2_5").toString();
				assertionUserIdFULL = tP.getPropertyValue("NODEUSERIDBAU2_5").toString()
			} else {
				log.info "ERROR - userID [$userID] supplied is not configured for nodeID[$nodeID]!";
				assert 1 == 2;
			}
			break;
		default:
			log.info "ERROR - NodeID supplied is not configured!";
			assert 1 == 2;
			break;
	}

log.info "---- PROCESSING COMPLETE";
/*
*  Get the account's rightslocker
*/
try {
	dbAcct = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));
}
catch(Throwable e) {
	log.info "ERROR - dbUtils.dbAccount - $e";
	assert 1 == 2;
}
finally {
	try {
		rightslocker = dbAcct.accountGetRightsLockerId(acctoid);

		log.info "rightslocker: $rightslocker";
	}
	catch(Throwable e) {
		log.info "ERROR - dbAcct.accountGetRightsLockerId - $e";
		assert 1 == 2;
	}
	finally {
		assert rightslocker.length() > 0;
	}
}
/*
*  If we are here then we lived.  Now we will populate all the other 
*  generic values everyone gets.
*/
callTC.setPropertyValue("accountoid",acctoid);
callTC.setPropertyValue("useroid",useroid)
callTC.setPropertyValue("assertId",uuid);
callTC.setPropertyValue("assertionUUID",uuid);
callTC.setPropertyValue("assertionAccountIdFULL",assertionAccountIdFULL);
callTC.setPropertyValue("assertionUserIdFULL",assertionUserIdFULL);
callTC.setPropertyValue("assert",assertion);
callTC.setPropertyValue("rightslocker",rightslocker);
callTC.setPropertyValue("rightslockerFULL", rturn + rightslocker);

lastColon = assertionAccountIdFULL.lastIndexOf(':');
callTC.setPropertyValue("assertionAccountId",assertionAccountIdFULL.substring(lastColon + 1));
lastColon = assertionUserIdFULL.lastIndexOf(':');
callTC.setPropertyValue("assertionUserId",assertionUserIdFULL.substring(lastColon + 1));
if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
{
lastColon = assertionAccountIdFULL.lastIndexOf('%');
callTC.setPropertyValue("assertionAccountId",assertionAccountIdFULL.substring(lastColon + 3));
lastColon = assertionUserIdFULL.lastIndexOf('%');
callTC.setPropertyValue("assertionUserId",assertionUserIdFULL.substring(lastColon + 3));
}
else
{
lastColon = assertionAccountIdFULL.lastIndexOf(':');
callTC.setPropertyValue("assertionAccountId",assertionAccountIdFULL.substring(lastColon + 1));
lastColon = assertionUserIdFULL.lastIndexOf(':');
callTC.setPropertyValue("assertionUserId",assertionUserIdFULL.substring(lastColon + 1));
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish other account/user related data" disabled="true" id="cad86a8c-0d27-437e-ba43-1519340f07af"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");
def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

String acctoid = tC.getPropertyValue("accountoid").toString();
String nodeID = tC.getPropertyValue("nodeid").toString();
String userID = tC.getPropertyValue("username").toString();
String rightslocker = "";
String useroid = "";
String accountoid = "";

assert acctoid.length() > 0;

/*
*  useroid
*/
try {
	def a = new dbUtils.dbUser(log,tP.getPropertyValue("targetSystem"));
	useroid = a.userGetUserOID(userID);
	acctoid = a.userGetAccountOIDbyUsername(userID);
} 
catch (Throwable e) {
	log.info "ERROR during dbUtils.dbUser - $e";
}

try {
	def a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));
	rightslocker = a.accountGetRightsLockerId(acctoid);
} 
catch (Throwable e) {
	log.info "ERROR during dbUtils.dbUser - $e";
}
finally {
	callTC.setPropertyValue("rightslocker",null);
	callTC.setPropertyValue("rightslockerFULL",null);
	
	log.info "rightslocker[$rightslocker]";

	callTC.setPropertyValue("rightslocker",rightslocker);
	callTC.setPropertyValue("rightslockerFULL",tP.getPropertyValue("urnRightsLocker").toString() + rightslocker);
}
</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>StreamListView tear down</con:value></con:property><con:property><con:name>sName</con:name><con:value>Test Cases Containing APIs</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150429_101058</con:value></con:property><con:property><con:name>synced</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>81597</con:value></con:property><con:property><con:name>UserName_Property</con:name><con:value>UserName_FAU1</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>ac1f1309-1d01-4f9c-97cb-dd91826ff630</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authorization Information Extraction via STS" searchProperties="true" disabled="true" id="209dbdaa-dbdb-4156-9611-8f4349603e4c"><con:settings/><con:testStep type="groovy" name="Establish Properties" id="e5f5e953-bf76-4a9f-9f44-5579f5ebb5c5"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("username",null);
tC.setPropertyValue("password",null);
tC.setPropertyValue("tokentype",null);
tC.setPropertyValue("expectErrTypeSTS",null);
tC.setPropertyValue("expectErrTypeSTSGet",null);
tC.setPropertyValue("assertionUUID",null);
tC.setPropertyValue("nodeaccountid",null);
tC.setPropertyValue("nodeuserid",null);
tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("userrowoid",null);
tC.setPropertyValue("accountrowoid",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assert",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properities" id="1ea3a901-408a-4ba7-9c1b-0c5471478b67"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("username",callTC.getPropertyValue("username"));
tC.setPropertyValue("password",callTC.getPropertyValue("password"));
tC.setPropertyValue("tokentype",callTC.getPropertyValue("tokentype"));
tC.setPropertyValue("expectErrTypeSTS",callTC.getPropertyValue("expectErrTypeSTS"));


</script></con:config></con:testStep><con:testStep type="groovy" name="Establish whether login is necessary for node/user combo" id="cfb167be-cdd1-4ad4-92ab-ba8244d66d52"><con:settings/><con:config><script>def tC    = testRunner.getTestCase();
def tS    = tC.getTestSuite();
def tP    = tS.getProject();
def today = new Date();

String node      = tC.getPropertyValue("nodeid");
String user      = tC.getPropertyValue("username");
String propAssertion  = node + "_" + user + "_assertion";
String propAssertUUID = node + "_" + user + "_assertUUID";
String propUser       = node + "_" + user;
String propAccountoid = node + "_" + user + "_accountoid";
String propUseroid    = node + "_" + user + "_accountoid";
String propassertionAccountId = node + "_" + user + "_assertionAccountId";
String propassertionAccountIdFULL = node + "_" + user + "_assertionAccountIdFULL";
String propassertionUserId = node + "_" + user + "_assertionUserId";
String propassertionUserIdFULL = node + "_" + user + "_assertionUserIdFULL";
String prop      = tC.getPropertyValue(propUser);
String asstuuid  = tC.getPropertyValue(propAssertUUID);
String assbinary = tC.getPropertyValue(propAssertion);
String assAccountId = tC.getPropertyValue(propAssertion);
String assUserId = tC.getPropertyValue(propassertionUserId);
String assAccountIdFULL = tC.getPropertyValue(propassertionAccountIdFULL);
String assUserIdFULL = tC.getPropertyValue(propassertionUserIdFULL);
String tday = String.format('%tY/%&lt;tm/%&lt;td',today);

this.log.info "Date[$tday] - prop[$prop] - asstuuid[$asstuuid] - assbinary[$assbinary]";
this.log.info "propAssertion[$propAssertion] - propAssertUUID[$propAssertUUID] - propUser[$propUser]";

if (prop == null) {
	tC.setPropertyValue("doSTS","true");
	tC.setPropertyValue(propUser,tday);
	tC.setPropertyValue(propAssertUUID,null);
	tC.setPropertyValue(propAssertion,null);
	tC.setPropertyValue(propAccountoid,null);
	tC.setPropertyValue(propUseroid,null);
	tC.setPropertyValue(propassertionAccountId,null);
	tC.setPropertyValue(propassertionUserId,null);
	tC.setPropertyValue(propassertionAccountIdFULL,null);
	tC.setPropertyValue(propassertionUserIdFULL,null);
	} else if (prop != tday) {
	tC.setPropertyValue("doSTS","true");
	tC.setPropertyValue(propUser,tday);
	tC.setPropertyValue(propAssertUUID,null);
	tC.setPropertyValue(propAssertion,null);
	tC.setPropertyValue(propAccountoid,null);
	tC.setPropertyValue(propUseroid,null);
	tC.setPropertyValue(propassertionAccountId,null);
	tC.setPropertyValue(propassertionUserId,null);
	tC.setPropertyValue(propassertionAccountIdFULL,null);
	tC.setPropertyValue(propassertionUserIdFULL,null);
	tC.setPropertyValue("nodeuserid",null);
} else {
	// Check the UUID property
	if (asstuuid == null || asstuuid == "") {
		log.info "assertionUUID is null/empty";
		tC.setPropertyValue("doSTS","true");
		tC.setPropertyValue(propAssertion,null);
		tC.setPropertyValue(propAssertUUID,null);
		tC.setPropertyValue(propAccountoid,null);
		tC.setPropertyValue(propUseroid,null);
		tC.setPropertyValue(propassertionAccountId,null);
		tC.setPropertyValue(propassertionUserId,null);
		tC.setPropertyValue(propassertionAccountIdFULL,null);
		tC.setPropertyValue(propassertionUserIdFULL,null);
	// Check the assertion binary property
	} else if (assbinary == null || assbinary == "") {
		tC.setPropertyValue("doSTS","true");
		tC.setPropertyValue(propAssertion,null);
		tC.setPropertyValue(propAssertUUID,null);
		tC.setPropertyValue(propAccountoid,null);
		tC.setPropertyValue(propUseroid,null);
		tC.setPropertyValue(propassertionAccountId,null);
		tC.setPropertyValue(propassertionUserId,null);
		tC.setPropertyValue(propassertionAccountIdFULL,null);
		tC.setPropertyValue(propassertionUserIdFULL,null);
	} else {
		int lastSlash = assUserIdFULL.lastIndexOf(':');
		
		tC.setPropertyValue("doSTS","false");
		tC.setPropertyValue("assertionUUID",asstuuid);
		tC.setPropertyValue("assert",assbinary);
		tC.setPropertyValue("accountoid",propAccountoid);
		tC.setPropertyValue("useroid", propUseroid);
		tC.setPropertyValue("assertionAccountId",assAccountId);
		tC.setPropertyValue("assertionUserId",assUserId);
		tC.setPropertyValue("assertionAccountIdFULL",assAccountIdFULL);
		tC.setPropertyValue("assertionUserIdFULL",assUserIdFULL);
		tC.setPropertyValue("nodeuserid",assUserIdFULL.substring(lastSlash + 1));
	}
}
log.info "doSTS is " + tC.getPropertyValue("doSTS");
</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS" id="e4191735-7b0f-482a-a84a-ef5ee976b1a0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String node = tC.getPropertyValue("nodeid");
String user = tC.getPropertyValue("username");
String propAssertion  = node + "_" + user + "_assertion";
String propAssertUUID = node + "_" + user + "_assertUUID";
String propUser = node + "_" + user;

log.info "propUser[$propUser] - propAssertion[$propAssertion] - propAssertUUID[$propAssertUUID]";

def doSTS = tC.getPropertyValue("doSTS");

if (doSTS == "true") {
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("STS API")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	if (runnerTC.status != Status.FINISHED) {
		tC.setPropertyValue(propUser,null);
		tC.setPropertyValue(propAssertUUID,null);
		tC.setPropertyValue(propAssertion,null);
	} 

	assert runnerTC.status == Status.FINISHED;
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Call STS GET" id="8c14b4f7-80c1-4f5a-adde-3e06ff2585f4"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def doSTS = tC.getPropertyValue("doSTS");

String node = tC.getPropertyValue("nodeid");
String user = tC.getPropertyValue("username");
String propassertionAccountId = node + "_" + user + "_assertionAccountId";
String propassertionAccountIdFULL = node + "_" + user + "_assertionAccountIdFULL";
String propassertionUserId = node + "_" + user + "_assertionUserId";
String propassertionUserIdFULL = node + "_" + user + "_assertionUserIdFULL";

if (doSTS == "true") {
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("STS GET API")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
	
	tC.setPropertyValue(propassertionAccountId,tC.getPropertyValue("assertionAccountId"));
	tC.setPropertyValue(propassertionAccountIdFULL,tC.getPropertyValue("assertionAccountIdFULL"));
	tC.setPropertyValue(propassertionUserId,tC.getPropertyValue("assertionUserId"));
	tC.setPropertyValue(propassertionUserIdFULL,tC.getPropertyValue("assertionUserIdFULL"));
} 


</script></con:config></con:testStep><con:testStep type="groovy" name="Store assertionUID for the node/user" id="f82619a1-13c0-456f-9369-7e4b5a5ce54d"><con:settings/><con:config><script>def tC    = testRunner.getTestCase();
def tS    = tC.getTestSuite();
def tP    = tS.getProject();
def today = new Date();

String node = tC.getPropertyValue("nodeid");
String user = tC.getPropertyValue("username");
String prop = tC.getPropertyValue(node + "_" + user);
String asst = tC.getPropertyValue(node + "_" + user + "_assertUUID");
String tday = String.format('%tY/%&lt;tm/%&lt;td',today);

this.log.info "Date[$tday] - prop[$prop] - asst[$asst]";

if (prop == tday) {
	tC.setPropertyValue(node + "_" + user + "_assertUUID", tC.getPropertyValue("assertionUUID"));
	tC.setPropertyValue(node + "_" + user + "_assertion", tC.getPropertyValue("assert"));
} else {
	tC.setPropertyValue(node + "_" + user,null)
	tC.setPropertyValue(node + "_" + user + "_assertUUID",null);
	tC.setPropertyValue(node + "_" + user + "_assertion",null);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract OID level User/Account Information" id="2634d628-0bcb-4044-9c8c-6c8cf2f3ff88"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());


String nodeid = tC.getPropertyValue("nodeid").toString();
String uname = tC.getPropertyValue("username").toString();
String sys = tP.getPropertyValue("targetSystem");
String results = null;
String accountoid = null;
String useroid = null;
String nodeUser = null;
String nodeAccount = null;
String userRowId = null;
String acctRowId = null;
String sql = """select to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID, to_char(rawtohex(a.USER_OID)) USER_OID, 
to_char(rawtohex(b.NODE_USER_ID)) NODE_USER_ID, to_char(rawtohex(c.NODE_ACCOUNT_ID)) NODE_ACCOUNT_ID, 
to_char(rawtohex(b.ROW_OID)) ROW_OID, to_char(rawtohex(c.ROW_OID)) ROW_OID
from 
   ACCOUNT_USER a, NODE_USER b, NODE_ACCOUNT c
where 
   a.USERNAME = '$uname'
   AND
   a.USER_OID = b.USER_OID
   AND
   a.ACCOUNT_OID = c.ACCOUNT_OID
   AND
   b.NODE_OID = c.NODE_OID 
   AND 
   b.NODE_OID = '$nodeid'""";

results = a.SelectFromDB(sql,sys);
log.info results;

/*
*  If zero length, no need to continue;
*/
assert results.length() > 0;

try {
	def myXML = new XmlSlurper().parseText(results);

	accountoid = myXML.ResultSet.Row[0].ACCOUNT_OID.text();
	useroid = myXML.ResultSet.Row[0].USER_OID.text();
	nodeUser = myXML.ResultSet.Row[0].NODE_USER_ID.text();
	nodeAccount = myXML.ResultSet.Row[0].NODE_ACCOUNT_ID.text();
	userRowId = myXML.ResultSet.Row[0].ROW_OID[0].text();
	acctRowId = myXML.ResultSet.Row[0].ROW_OID[1].text();
}
catch(Throwable e) {
	log.info e; 
	assert 1 == 2;
}
finally {
	log.info "accountoid[$accountoid]";
	log.info "useroid[$useroid]";
	log.info "nodeUser[$nodeUser]";
	log.info "nodeAccount[$nodeAccount]";
	log.info "userRowId[$userRowId]";
	log.info "acctRowId[$acctRowId]";

	tC.setPropertyValue("accountoid", accountoid);
	tC.setPropertyValue("useroid", useroid);
	tC.setPropertyValue("userrowid", userRowId);
	tC.setPropertyValue("accountrowid", acctRowId);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store the ACCOUNT.ACCOUNT_OID lockerId" id="c2e18d62-f9ba-40a7-881f-7371209b712a"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

String node = tC.getPropertyValue("nodeid");
String user = tC.getPropertyValue("username");
String propAccountoid = node + "_" + user + "_accountoid";
String propUseroid = node + "_" + user + "_useroid";

tC.setPropertyValue(propAccountoid,tC.getPropertyValue("accountoid"));
tC.setPropertyValue(propUseroid,tC.getPropertyValue("useroid"));

a = new dbUtils.dbAccount(log,tP.getPropertyValue("targetSystem"));

def x = a.accountGetRightsLockerId(tC.getPropertyValue("accountoid"));

this.log.info "x[$x]";

tC.setPropertyValue("rightslocker",tP.getPropertyValue("urnLocker") + x);


</script></con:config></con:testStep><con:testStep type="groovy" name="Setup base node-level information based on calling Node type" id="27c315ea-bc4a-455c-89e0-f21fe49bdc76"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def baseNodeType = tC.getPropertyValue("nodetype");

//
//  Establish project-defined properties at the test case
//  level
//
tC.setPropertyValue("cid",tP.getPropertyValue("cid"));
tC.setPropertyValue("alid",tP.getPropertyValue("alid"));
tC.setPropertyValue("deceorgid",tP.getPropertyValue("deceorgid"));

if (tP.getPropertyValue("targetPort") == "443") {
	tC.setPropertyValue("targetURL",tP.getPropertyValue("targetHost"));
	tP.setPropertyValue("targetURL",tP.getPropertyValue("targetHost"));
} else {
	tC.setPropertyValue("targetURL",tP.getPropertyValue("targetHost") + ":" + tP.getPropertyValue("targetPort"));
	tP.setPropertyValue("targetURL",tP.getPropertyValue("targetHost") + ":" + tP.getPropertyValue("targetPort"));
}
//
//  Establish the basic nodeaccountid, nodeuserid, etc.. by 
//  nodetype
tC.setPropertyValue("assert",tC.getPropertyValue("assert"));
tC.setPropertyValue("assertId",tC.getPropertyValue("assertId"));
tC.setPropertyValue("nodeaccountid",tC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("nodeuserid",tC.getPropertyValue("assertionUserId"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Promote variables to calling TestCase" id="0d1adc40-0f3e-4b34-b806-b1ecfb0c742d"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def toTCName = tC.getPropertyValue("tName");
def toTSName = tC.getPropertyValue("sName")

String usernodeConcat = tC.getPropertyValue("nodeid") + "_" + tC.getPropertyValue("username");
String usernodeUUIDConcat = tC.getPropertyValue("nodeid") + "_" + tC.getPropertyValue("username") +	"_assertUUID";

//
//  Transfer all the properites created in this test case
//  to the calling testcase.
//
if (toTCName != "" &amp;&amp; toTSName != "") {
	def toTC = testRunner.testCase.testSuite.project.getTestSuiteByName(toTSName).getTestCaseByName(toTCName);

	Map testCasePropertiesMap = tC.getProperties();
	Set testCasePropertiesKeySet = testCasePropertiesMap.keySet();
	Iterator iter = testCasePropertiesKeySet.iterator();
	
	while(iter.hasNext()){
		String testCasePropertyKey = (String)iter.next();

		switch (testCasePropertyKey) {
			case "assert":
			case "assertionAccountId":
			case "assertionAccountIdFULL":
			case "assertionUserId":
			case "assertionUserIdFULL":
			case "assertionUUID":
			case "cid":
			case "deceorgid":
			case "rightslocker":
			case "targetURL":
			case "useroid":
			case "accountoid":
			case "nodeaccountid":
			case "nodeuserid":
					toTC.setPropertyValue(testCasePropertyKey,tC.getPropertyValue(testCasePropertyKey));	
			break;
		}
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties" id="de325a57-45c0-40c8-963b-2e2b49eb1cfd"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="1d3630c3-0e97-429a-b3cf-12f69ec5cfae"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableManageUserConsent" id="e2c9e083-7004-4146-a7e5-347312753112"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableManageUserConsent if necessary" disabled="true" id="d49186d4-77c8-4a46-87e2-d877bc3a9492"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ManageUserConsent" id="0a1e5ea7-3e13-4dcc-aec5-96d8f5452b79"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for ManageUserConsent if necessary" id="ca2d828d-8507-471c-a9d2-82fb16706e18"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ManageUserConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsentRequired" id="e05cfe6b-5d2a-47a7-a4b3-1cc56fcba4ff"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsentRequired if necessary" id="4d568ec4-40ec-4ca7-8cd5-5e1ecd63c4a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsent" id="14ce586a-921a-43d4-9c90-5560601b7468"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsent if necessary" id="165aa61b-f774-4d07-86cd-5cef8e55c65b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserDataUsageConsent" id="f143c167-78c0-4d3a-982e-6b4311df0c69"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserDataUsageConsent if necessary" id="f00418cf-1362-49d5-aba2-f7bca0fb4d11"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties 1" id="b181f4eb-45f0-4a44-a374-04a2d6716077"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Establish Test Case Properties 1 1" id="622196f9-cbda-4cd3-980b-e1f8d82d939f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties 1" id="3c8f2b60-7df6-4009-8873-28eac06c65f4"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:properties><con:property><con:name>0910_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Basic1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgOrg1Standard1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Basic1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full2_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgOrg1Standard1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Basic1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgorg1full2_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>10_pjgOrg1Standard1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>20_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full2_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertion</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_assertUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgOrg1Standard1_useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accountrowid</con:name><con:value>9E87C57F4A237E44E0401F0A05992B03</con:value></con:property><con:property><con:name>accountrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:AGAIN_PATS_CID_DONT_TOUCH_24.txt</con:value></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value>nVdbc6JME773V1jupWU4KPFQSaqGo6ioIB7vEEZAEZABQX79N2A0JpvN7vtdWMk0fXi6+6HpeUHG0aN7ACEYxW7gV2X+tba1mpTxTFONbteCjRaz7TSwyGpYRqtDQ8uwOma3VpURSqDso9jw49caTVJUg2w2qGed7PYYusd0n0iG3NSqCxgh7BmrPJG1anb0fNQro77WksjvBQZyUc83jhD1YrM3A8qohzV7xg1S7e3lCrIMGL05cRz2CMJ8sqAJPc98MoMj8UJ80nmxUG/m2r4RJxF8j2mh19q7bZqmT2nzKYhsgiZJkiC7BNaxkGv/qr1VbsbQkv1dcD1zhh/4rml4bm4UoBQYO4FVBZ4dRG7sHP/gmiIosnDdgJnZMKmW/6tGfAQo0f2jp08gI2Q0kGNQN2ca3MEI+iaszjX5tfbrnxp4NdUjw0e7IDqiL+f/hgj6Z+gFIbQa6JbYDdy/e/ymWm8v0OzJvuklyD3DccGS0DAhqk4juHOzkYsw9yxULbtfzdCNYND8Lx15IR5xYtjEN5XhXRui+P9p12Orrl4WhpfAt1XO7OTNMxHP27y+R/tztHfkiRIoaP1aQnhUvoK6d/r9/JWnd1q9Gx3rk+Nk5p0v3HboU1ta6vSbpOtqgbM5EaLVdtAs1+Y0sEx0Vup5eBLzCdjk4c5OdZWk5sNLOG7WDyOfvJwqyioayiTFWuP+erwddR3QGeWd9YyzjnnbZAly1JH56crq9mfSfsZt2nk2YALdoenp1l4991sTbrJchExbQLsK3x4I0JS68aAlhMt4QQnq60dOjzkUeQ3hpUyy+H/FkF3eiI37gSsGxQ6/nTF8U2SZT3KOA5eZDVKZBTb+7cGYtQ8n5+BK3ZRkgaqKgOdYby+MFHCQADUXWEfhFgsl43IwYO3xAhvqFeBtWEUTUj5d8wtV7Qupo1vS4rKVvGSTC2MFoNKYcxRBExa8pguKAoKrLFP4rZTtlZmSyuqar2AHvJCFuYVzhlLmmrTMKDOGXs+YZLNaYLl4GR3H560ueAqnSNzsJM3kbZNXhQHQ1kuTFhNsm4+OYVBZz9kHo0EI9wCKKYljglzRD6miz+kxrxmlTP8sU2RpoKgo5dQyK6kipIPFPP+oBccquKVCJuhgeq2FqXPimNysBshYMr6igZS3S+OhkFqTGxBFJdMKd63VSEg1QZuPRUWTUwGUMl5IPbSlx85Wcs5mU80GOtg/NoZThaXo4+e+djYvzKliSCLYHheU2dQc02VcYxWk9qaT8up6MAw2MnYzBqrAsirAgEhQpIbrz4IRu2AmodulXTjaicEROlFFoYLh4ZxnZMdtTuzpeMnwu0N7KrnTpmE5hOyZ9L55ALIMrSHlqIalrQmN9938eTKcr6AbrfN4zKjUs9thKtoyma/4wGtb/dV6Pqxna1PVJ9PZfDnNs2x82ndyL+5P2H40Gyi8PRlDOEVmnSANkdU7PMOt+3vMp51GQqYCbIUFQNrbtuBiArP9/ZWEfU0RMHmBwqUSt+SkGZCkuiCzvKruRIeamtIimVNjRRYsD5fpsl5pXmXDsTzuFGksN+GaFsmNDqzSmdoSRFudM/XBCm7UsacvYpCGi51PUaQUqv2dktqmUjDAktMZi98itpLIYG5MwgGZDRfPJHVSLW8w64J5M5vRh2zi2JvLwd4ccFPWD6/OWgfeQn/gmIwptqyouqApoHN93zJFnjc1zzxm4fZoZryOe1YaBzoraKJKzjOeB8OrDOmAztA6F/YKJ5T2FZApBqbFebty0NofuxNdSDBpkwe67Lc0+VeOFRSrfObYiQMq+Mox4coxAexOdbnDU4h55kK0TG1WEk5qezEadENSXY0OFbYuEnbseq2J30n1YX1JXdK2s1eXy67MO1zd362d5jZmSSM3VTg4tCVXO/D+c8u7KCNFZeYu4V3IPTylaFQZy5QvNONcJLpRUmePG/eY580WPT9OZ8lZnhtDRF2c7WnZTffT/jNBRNKFydubsyquAvP9O/J1SN6F1zFKPA7YTxP4tnrNku0emvHtWHyHZb4q4o+jEf+8xhUS12rsStVeWOyCKIZ+XHsrrIoVrpfgRc+1evjLeT13hU6bY9piC9CtttBqCWSLpEQSkEy3S7Nk87brXVF8gcgF/s4tYhXL7PVj/TNA89jbQiOCUe0HT0WdqrKv4e0j8BHUg9caS7FNgeNbZLMldjsAiBSDf60m3QXPTbol1qrjIJ74kwjsYhg9LMjtrwuyBk03dGGxRb/vEijGhTgZ5yT2qKez8eTDBK/ZUbHp9uhWhykLQFjJMTTxAzzdojBA8VPohOUy88c0vj67ZYx1LLdQQAVoFuJuwW9W+tYN8W+Z0d+u/jf3ILHcYmfB5Ysj17wi+fzogw0FDe5UILtU64b5rvpvpl2Kev7dlPgBEfG1GPdI1tl9iHu7mOBdG69j5X0E4aadjKfTU3I+J2Wb2iRJExF2T1AEScygmeB18aIHB+gTdw/Evyzqd8xf4t7ln9ElsePPYvyWHzGjquXx75e0T9a4ADHM4u9knIevZUXwH29uZs8s9LB4iv+kQWR91P0bXw9xMORiQrm+XZyKDfvyub3vb0LPDLBXFw+pIHr0/Z39d7E/C+/lukOJMSu2SQz//KRaTJ/XmmGaQeLHMl8rBY8TscQcX0LY+1D6zU254r7fWTL0xzvLShnNTAcejdpd1/27csMtG29CbIXcEstrLcO3bxzctx8m8DvAPwxh+qch/DmTt9/Ev0seavqV2W//Aw==</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserId</con:name><con:value>9E87C57F4A247E44E0401F0A05992B03</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>cid</con:name><con:value>urn:dece:cid:file:AGAIN_PATS_CID_DONT_TOUCH_24.txt</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value>urn:dece:org:org:dece:1</con:value></con:property><con:property><con:name>doSTS</con:name><con:value>true</con:value></con:property><con:property><con:name>expectErrTypeSTS</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectErrTypeSTSGet</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeaccountid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>0914</con:value></con:property><con:property><con:name>nodetype</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeuserid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>rightslocker</con:name><con:value>urn:dece:rightslockerid:org:dece:9E7171CFE6FC3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>sName</con:name><con:value>LASP Dynamic Test Cases</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa.p.uvvu.com:7002</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_36210 - StreamView - DLP - Full user can StreamView Stream created by Standard user</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>username</con:name><con:value>pjgorg1full1</con:value></con:property><con:property><con:name>useroid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>userrowid</con:name><con:value>9E87C57F4A257E44E0401F0A05992B03</con:value></con:property><con:property><con:name>userrowoid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0914_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0912_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>25_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgorg1full1</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>0910_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertUUID</con:name><con:value>b029afa8-ae5c-442b-bfc8-5425a33d1793</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertion</con:name><con:value>nVdZc6rMFn33V1iex5RhUJwqSVUzSFBRQXB6w6YFFEFpEPTX3waj0SRn+O5DyvRmD6v3XjSrX7C189kOwBhFsRcGZUV8raxotm2trVbVQhys1uvsqrpaw1aVq7OcVavZTLNdq5QVjBOkBDi2gvi1wtIMU6VrVaZh0O0O1+iwrec6TS8r5SmKMMlMXJ7pSjnb+QHuFFVfK0kUdEILe7gTWDuEOzHsTIA66BDPjnWFVHl7uYAsCkZvbhzvOxQFn20Eke/DZxjuqBfqwefFxp2J5wRWnEToo6aNXysfsWmaPqe15zByKJamaYpuU8THxp7zq/JWugYjWwnW4WUtWEEYeNDyvbOVg1JR7IZ2GfhOGHmxu/tNaoZi6Dx1FWWwCpl68KtCfRYo0P1jpgeQEbaq2LWYazIdrVGEAojKpq68Vn790wAvoUZkBXgdRjv8Zf3fEKHgiPxwj+wqvm7sCu7fM/7QrbcXBDtKAP0Ee0c0zFmytyDC5XGE1l428DDhno3LxfTLGb4SDMH/MpEX6h4ngU390BnRcxCO/59x3Y/qkmVq+Ql6A+6yazAyXxOpk+sMlIPlytqCX6tD87WAcO98AXWb9Mf6K09vtPoIQj1jnDH+4J1WM7t+qG/i9WE0OPQPK8m22HG9udk8RbXTacs3665rLk7brs8256u6H6tbtDiZp8MqPotwP8DrkhDBFSdF9Wwyex97x8xlnlrjUdhzdjOB0k7aHjrJELKKegz183Tc8lPNOy6n1lq1a5nQZs0Z47s8ng8aLbtkmLPFeEApW9Gwe9JJbvrw9XNP93vI99VHp2KT+f9zjm6LVmzdFkJ+UKzJ2xmjN1VRxOQsCOA0cUCq8MAhfxsw5J3twd16cjuleaBpXSAKvL+RBirYyoAxJd5VhelUzYQz6PHOcEoCjRLwl7yqS6mYLsSppr1LqWvY8vS0kv1keZaGKsBFsOCqki5NRd2QVBWEF1umiis526gTNVW0hVgiCUQp259tuR0jOfNIozh1wrGLCZcs51Ni754Gu+FxZUi+KqiyMDnIE2VVEzWpB/TFDLLdhMSeB7t9WFqY/F1Qb482AHVTmtQEZ9XYpqphskNRtwqb8WhTFbmnajgVtGJXcklKe1Pz/NkLgVcFeydlkgHGl15AQ+gO6eW8h60ZF6g6SEWnCO5LqT26AlE1Oi0Jl14NpFSXdHPYVXUllUBhE6XUxyt26K5k9whrWtYzwOZ+MIImzboBeR7oR3jiDiVL7oLVbsrAmu5Cj/OseZg6y1YqaoteP1wqJM0QaBLPa4AAokG+NdJ/Hgz4KTfae23WQ4N1N9whNyqpTNjfHs8Z3fJqI2c8nHHietscy964ZtkupfiQ3dS2QFGQ3WdczbL1BaWLgXdujPrmHHnR4hwPOY1peC2upM8Scy6GftN+ny/M/lO2gJoxGk/M2ficZcPDpnX24/cR/x5NeqrojIYIjTF8omiryxstkRMW7xvCp7VOI64EHJUHQN44juQRAvPvmwsJ33VVIuQFqpDKwkyQJ0CWnySFFzVt3XWZMZSnickMVUWyfdKm02Ku+6WlwItkUrQ1W+4XbJdeGsAukml1qetoJvfUm6OlNvSNaQzS/XQdMAwt77X3tZo6UM0ZYCvphCdvEV9KFGBao32PzvrTBs0cNNvvTdrArGUTdpuNXGd52jrLLRnK4u7VWRjAnxp3HFMIxWYlzZB0FbQu71umKmZN9+Eu2692MBMNMrMiODR4Se9qtJmJIuhfbNgAbIYXZ2mjClIRXwKZahFaHFdzFy+CoTcypISQNrmjy2bF0n/lWE6x0iPHDgLQwFeOSReOSWB9eFJaIoO5hrDHs9ThZemgNaeDXntPa/PBtsQ/dSkn9vz6KGilRv9pxpzSprvRZrO2IrrCU7BeuLVVzNPWGWqot23Knr4Vg0bdP6kDVeNMj/JP9AYdUjwoDRUmkGrxuUu1o+SJ3y293flcq7PmbjxJjopp9TFzcleHWTvdjN8bFBXJJ+7cXB617jyEi8t35OsheTNejlHq/oB9OIGv0muSrDYIxtdl/h1WxHKXfByt+M8yLrd4dnVduHb2uRbEMQriylselUu4TkKEnmd3yJfzsm5LTabJCF2pSXO1bgNIdJ1mujSguXabkbjGVetdUHyBKITB2str5WL28rH+M0C466yQFaGo8odMeZ/KSqAT9REGGBnha4VpEXzNmgAYgWZBk6txAkNzRGHV680Gzzcr5WEYj4JRBNYxiu4EcvOrQNYR9PYeylX0h5bAMWnEwTomsc88H63nACVEZke50u2w9RZXNICyk90ekgfkdIv2IY6f9+6+EDO/3cbXZ9cdEx/byx1wDppHZFroB0nPXBF/2xn7o/S/pgeJ7eWahbQvjjx4QfL46JMNOQ1uVKDbDH3FfHP9t9A2w3DfQ6k/IKK+NuNWyT56d3WvFxOitYkcK+4jmAztYD0fnpPjMSnG1KRplopIeoqhaGqCYELk4skItyigbhmofxHqN8xf6t7sj+iS2A0mMXnLd4RR5WL590vaQzRpQIyy+Ceb4JNrWV78jzc32IG5HzGPyU8aRvZn33/IdVeHQM5PKC9w8lWusE+P4/14EzowJFk9ckiF0X3un+J/qv1ovLXrBiUmrFglMfr9k3J++rxWLAjDJIgVsVIY7k/EAnN82qPOp9O3NIXE/bizZPi3d5a5OphAF+2sys3X+7tz1SsGDxGJwl6B5bWSkds3KR44dyfwB8CHQ7hNk2S3Nj3gfftm/m6569xX/r79Dw==</con:value></con:property><con:property><con:name>0910_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertionAccountId</con:name><con:value>990200</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertionUserId</con:name><con:value>9E7171CFE7053F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:990200</con:value></con:property><con:property><con:name>0910_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E7171CFE7053F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0910_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0912_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertUUID</con:name><con:value>96fcd296-05f7-46cd-94a7-424fa059b403</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertion</con:name><con:value>nVdZc6pME773V1iey1TCJm51kqphEVFBQcTlDmFYFEEZEPTXfwNGY3Jylve7SMVpenmm+5menp/I2od0DyAEkzSIo7osvDa6Ldd26G7rmWTd9nOzZTvP3aaFf9FN1yLZ7qZJMo26jFAG5QilVpS+NmiSop5J5plqGWS3xzI9knqhmu11o27CBGHPWOWFbNSLfRihXhX1tZElUS+2UIB6kbWHqJfavRlQxj2s2bNukBpvP68gq4DJm5+mhx5B2C8OtGEY2i92vCd+Ep90fjqoNwu8yEqzBL7HdNBr4902z/OXnHmJE4+gSZIkyC6BdRwUeD8ab7WbMXTkyI2va96K4iiwrTC4WCUoBaZ+7NRB6MVJkPr737imCIosXT/Dwn62qWb0o0F8BKjQ/aOnTyATZD0j36JuznTowgRGNqzPdfm18eOfCng1NRIrQm6c7NGX9X9DBKMTDOMDdJ7RbWM3cP/u8Ztsvf2Edk+O7DBDwQmqJUsOlg1RfZpANyjGAcLcc1C9qn69QDeCQfu/VOQn8YgTwya+yYwQeBCl/0+5Hkt19WJaYQbf4kFr0Tb78wHpUt0jkZjLVUduJ0uHIF8rCI/KV1D3Sr+vv/L0Tqt3o+VqOFmqypo8nxUY+6lJssakbUFKSPdmbmuetRkQ640hPu2kzLVYuiUom4T21OnJO04X/RWz9TzfiTWWCWqjXdpRXReNm6pKK6w5Z2Yt1eGW+XKxA+cuYZGU4Abz8Zoc0iOtKy8m3HKhkDtiuTDBAPV3KAyX6sEcTpSw9hRARaUKa24jPxi3mI7YfP3Y0+Meyn2N4LnaZPl7yZJdwUqt+4IvG4WLT2cK3xRZFrILz4PzzAO5zAEP/22Bynm7o78LpG5OckDT+kDguXArjhWwkwA1Fzlf4U1TKfgLGHKeamJDowbCNafoYi7kK8HUtIGY+4YjmeeNFGbri6gqAFXGvK+IumgKuiEqCoivskIRNlKxVWZKLmsroYYdCGJxuDhSN4VSEdi0zCozll7N2Gy9NLG8fx7v1RMuRqjwisTPjtJM3jCCJg6BvlrYdD/Dtpfx/hDXVnPuwWh4gFsA+zmJY4KLYuxyxZjTqqBblcz4LFNkaahoKOe1aldSTcyH5vzykQueU3hnLxaiAabXXNgG31fJ9XKIrAUbKTrIBa8yHom5M7kBUTQyr/HXXI3FXBf1udpXdDkXQSUTxDxEG1r1N5J/shmtGBpg+1gYXhMX/Qh/j/STfWaPNUvqg83epGxG9+2ADaxlnHvrTi5oq+EoXsvYjQo0keM0gAGRoNwazj8HxpzJTg5Blw7g2O3He+gnNYWKR7vTpSA7ATPxpuqCFdxdeyoFU8ZyfEIObXrL7IAsQ2dE+Zrl6CtCF6Lg0pqM5ksYJKtLqrIa1Qo6bE1fZPOlEIdtZ7BczUdPxcrWjMl0Nl9ML0WhHredS5gOJtwgmQ0VwZuoEE6R/USQVp8zOgLLrwZbzCdXJyFbA57CASDhoyYGmMDcYHsl4UBXRExeoPC5xC94aQYk6UmUOUHT3L5PTW3JzOaUqsiiE+I0nVdLPayteU7AlSKtxfqwovvk2gBO5Uxrin1Pm7NPwyVca2pomCnID6YbURQpHbSBq+SerZQMcOR8xuFTxNUyGcytyWFIFiOzRVJHzQmHsy6YM8WM3hUT31ufd956h4uyejg6KwOEpvHAMRlTbFHTDFFXQOd63gpFnjN6aO+Lw2ZvF4KBa1YZxwYn6n2NnBeCAEZXGTIAXaDVRdwqvFjZ10ChWJgWp83SR6tIDSaGmGHSZg902W5o8q8cKylW+8yxIw808JVj4pVjInCPT3JHoBDb4g9okXucJB61tjkedg+kthzvatxTn/DSIGxOok5ujJ4W1Dlv+1ttsejKgs8/Re7KZzYpR1oXW4PDXVsK9J0QtZrhWRkrGjsPiPBMbuExR+OaKlORyKSXPtFNsiduvw72lwvTpOf76Sw7yXNrhKizvzkuuvl2OmgRRCKd2Ut7fdL6y9heXe+Rr03yLry2UeKxwX7qwLfRa5ZtttBOb8vyHpaFeh9fjlb65zGulATOs1up9g7lLIhSGKWNt9KqHOF6GR70AqeHb87ruit22jzb7jN8q9UWm02RbJJUnwR4cOnSHMncZr0rii8Q+ThygzJWOcxeL+s/A7T3vQ20Epg0/uCpzFNdjnQ8fcQRgkb82mjRnQ5L9hmG4Zoc0wUtQLGM0OQolqKEbptq1NU4nUSTBLgpTB4G5PbXAVmHdnAIYDlFv88SKMWJOFqnLA2pl5P1EsEMj9lJOen26GaHrRJAONn+YOMPuLslhxilLwf/UA0zv93G12+3HWMdJygVUAmag7ha8JeRnu6xN8S/7Iz+dvS/uQeZE5QzC05fmgT2FcnnTx9sKGlwpwLZpegb5rvqv5lS35oSf0BEfE3GPZJzCh7i3h4meNbG41j1HkG4aEfr5fiSnU5ZVaY2SdJEgt0TFEESM2hneFw8G/EORsTdA/Evg/od85e4d/lndFnqR7MUn/I9ZlS9Wv79kfbJGicghUX6nYwP8bOsDP7Hl5vds0s9LJ7if3mcOB95/8bXQxwMuexQQeSVq3LCPn8u7/tJ6Nkx9hrgJhUnj76/s/8u9mfhPV13KClmxSZL4e+/1Mvu89qwbDvOolQWGpXgsSNWmNPzAfY+lH5xU42472+WAv32zbJUxjPbh3urcdcN/q78HFSFtyG2QkGF5bVR4Nc3Dh55Dx34HeBvmnDzT034807efhH/KnnI6Vdmv/0P</con:value></con:property><con:property><con:name>0912_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertionAccountId</con:name><con:value>9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertionUserId</con:name><con:value>9E87C57F3C667E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E87C57F3C667E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0914_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertUUID</con:name><con:value>bd31a621-99de-45b8-bd3d-da482edad8c9</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertion</con:name><con:value>nVdbc6JME773V1jupWU4KPFQSaqGo6ioIB7vEEZAEZABQX79N2A0JpvN7vtdWMk0fXi6+6HpeUHG0aN7ACEYxW7gV2X+tba1mpTxTFONbteCjRaz7TSwyGpYRqtDQ8uwOma3VpURSqDso9jw49caTVJUg2w2qGed7PYYusd0n0iG3NSqCxgh7BmrPJG1anb0fNQro77WksjvBQZyUc83jhD1YrM3A8qohzV7xg1S7e3lCrIMGL05cRz2CMJ8sqAJPc98MoMj8UJ80nmxUG/m2r4RJxF8j2mh19q7bZqmT2nzKYhsgiZJkiC7BNaxkGv/qr1VbsbQkv1dcD1zhh/4rml4bm4UoBQYO4FVBZ4dRG7sHP/gmiIosnDdgJnZMKmW/6tGfAQo0f2jp08gI2Q0kGNQN2ca3MEI+iaszjX5tfbrnxp4NdUjw0e7IDqiL+f/hgj6Z+gFIbQa6JbYDdy/e/ymWm8v0OzJvuklyD3DccGS0DAhqk4juHOzkYsw9yxULbtfzdCNYND8Lx15IR5xYtjEN5XhXRui+P9p12Orrl4WhpfAt1XO7OTNMxHP27y+R/tztHfkiRIoaP1aQnhUvoK6d/r9/JWnd1q9Gx3rk+Nk5p0v3HboU1ta6vSbpOtqgbM5EaLVdtAs1+Y0sEx0Vup5eBLzCdjk4c5OdZWk5sNLOG7WDyOfvJwqyioayiTFWuP+erwddR3QGeWd9YyzjnnbZAly1JH56crq9mfSfsZt2nk2YALdoenp1l4991sTbrJchExbQLsK3x4I0JS68aAlhMt4QQnq60dOjzkUeQ3hpUyy+H/FkF3eiI37gSsGxQ6/nTF8U2SZT3KOA5eZDVKZBTb+7cGYtQ8n5+BK3ZRkgaqKgOdYby+MFHCQADUXWEfhFgsl43IwYO3xAhvqFeBtWEUTUj5d8wtV7Qupo1vS4rKVvGSTC2MFoNKYcxRBExa8pguKAoKrLFP4rZTtlZmSyuqar2AHvJCFuYVzhlLmmrTMKDOGXs+YZLNaYLl4GR3H560ueAqnSNzsJM3kbZNXhQHQ1kuTFhNsm4+OYVBZz9kHo0EI9wCKKYljglzRD6miz+kxrxmlTP8sU2RpoKgo5dQyK6kipIPFPP+oBccquKVCJuhgeq2FqXPimNysBshYMr6igZS3S+OhkFqTGxBFJdMKd63VSEg1QZuPRUWTUwGUMl5IPbSlx85Wcs5mU80GOtg/NoZThaXo4+e+djYvzKliSCLYHheU2dQc02VcYxWk9qaT8up6MAw2MnYzBqrAsirAgEhQpIbrz4IRu2AmodulXTjaicEROlFFoYLh4ZxnZMdtTuzpeMnwu0N7KrnTpmE5hOyZ9L55ALIMrSHlqIalrQmN9938eTKcr6AbrfN4zKjUs9thKtoyma/4wGtb/dV6Pqxna1PVJ9PZfDnNs2x82ndyL+5P2H40Gyi8PRlDOEVmnSANkdU7PMOt+3vMp51GQqYCbIUFQNrbtuBiArP9/ZWEfU0RMHmBwqUSt+SkGZCkuiCzvKruRIeamtIimVNjRRYsD5fpsl5pXmXDsTzuFGksN+GaFsmNDqzSmdoSRFudM/XBCm7UsacvYpCGi51PUaQUqv2dktqmUjDAktMZi98itpLIYG5MwgGZDRfPJHVSLW8w64J5M5vRh2zi2JvLwd4ccFPWD6/OWgfeQn/gmIwptqyouqApoHN93zJFnjc1zzxm4fZoZryOe1YaBzoraKJKzjOeB8OrDOmAztA6F/YKJ5T2FZApBqbFebty0NofuxNdSDBpkwe67Lc0+VeOFRSrfObYiQMq+Mox4coxAexOdbnDU4h55kK0TG1WEk5qezEadENSXY0OFbYuEnbseq2J30n1YX1JXdK2s1eXy67MO1zd362d5jZmSSM3VTg4tCVXO/D+c8u7KCNFZeYu4V3IPTylaFQZy5QvNONcJLpRUmePG/eY580WPT9OZ8lZnhtDRF2c7WnZTffT/jNBRNKFydubsyquAvP9O/J1SN6F1zFKPA7YTxP4tnrNku0emvHtWHyHZb4q4o+jEf+8xhUS12rsStVeWOyCKIZ+XHsrrIoVrpfgRc+1evjLeT13hU6bY9piC9CtttBqCWSLpEQSkEy3S7Nk87brXVF8gcgF/s4tYhXL7PVj/TNA89jbQiOCUe0HT0WdqrKv4e0j8BHUg9caS7FNgeNbZLMldjsAiBSDf60m3QXPTbol1qrjIJ74kwjsYhg9LMjtrwuyBk03dGGxRb/vEijGhTgZ5yT2qKez8eTDBK/ZUbHp9uhWhykLQFjJMTTxAzzdojBA8VPohOUy88c0vj67ZYx1LLdQQAVoFuJuwW9W+tYN8W+Z0d+u/jf3ILHcYmfB5Ysj17wi+fzogw0FDe5UILtU64b5rvpvpl2Kev7dlPgBEfG1GPdI1tl9iHu7mOBdG69j5X0E4aadjKfTU3I+J2Wb2iRJExF2T1AEScygmeB18aIHB+gTdw/Evyzqd8xf4t7ln9ElsePPYvyWHzGjquXx75e0T9a4ADHM4u9knIevZUXwH29uZs8s9LB4iv+kQWR91P0bXw9xMORiQrm+XZyKDfvyub3vb0LPDLBXFw+pIHr0/Z39d7E/C+/lukOJMSu2SQz//KRaTJ/XmmGaQeLHMl8rBY8TscQcX0LY+1D6zU254r7fWTL0xzvLShnNTAcejdpd1/27csMtG29CbIXcEstrLcO3bxzctx8m8DvAPwxh+qch/DmTt9/Ev0seavqV2W//Aw==</con:value></con:property><con:property><con:name>0914_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertionAccountId</con:name><con:value>9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertionUserId</con:name><con:value>9E87C57F4A247E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E87C57F4A247E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>20_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertUUID</con:name><con:value>6ef3bd26-e62b-4433-a8db-845f39dd7130</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertion</con:name><con:value>nVdZc6rMFn33V1ieR8swOVeSqmYQUVEZHPANoQUUAWkQ9NffRqMx4znfrUoq6c0eVu+9aFY/I3Pv012AEIwTLwzKEv9SacINs7bpZg026XWtXmeYmtm217V2vbFhOrbdohiyUpYQSqEUoMQMkpcKTVJUjWRqVFOnWl0S/zBPnRa9qpTnMEY4M3Z5wlH53g9Q91L1pZLGQTc0kYe6gbmHqJtYXQ3Ioy727Jo3SJXX5yvIS8H41U2SqEsQ1pMNLej71pMV7oln4oPPs426mucEZpLG8K2mjV4qb7FZlj1lzFMYOwRNkiRBdgjsYyPP+VN5Ld2CoS0Fm/C65swgDDzL9L2zWYCSYeKGdhn4Thh7ibv/ITVFUGSRugZzq2ZR9eBPhXgvcEH3j5k+gIyRWUOuSd2SqXADYxhYsDxTpZfKn38a4DVUj80AbcJ4jz6t/xsiGByhH0bQrqHbxm7g/j3jN916fYZWVwosP0XeEY4LlkSmBVF5GsONl488hLlno/Jl+uUc3QgGrf8ykWfiESeGTXzTGd5zIEr+n3E9juqaZW76KXyt8muTjD1L0QSJMw6SMbFZu58YOh7iBcKj8xXUfdJv6888vdPqLUjqcVxv3z+PsxWxVb2JthNURk6EaGNaq160pVR1Zc2cOr+dHI1mpo4U5mBMxGxucmKLZIhwul5P2w4BdESUxDNrEHSWruoj/ugw51FTQ/udKFqt+XTsu6IQMWSQdhZzlqfYiPIDg1xXNyiqZqtViIbTbVbVo11LIU/+umTRIyvwuD7U0glyT/Z8NHt539PjHop9DeHpssni/2WD7PBmYt4XXHFQbPDbmcBXWZL49Mxx4KQ5IJNY4ODfLRizzu7g7jyxk5EsUJQe4DnW3wojGexEQM0E1pW5+VzOuTMYsM54jgP1EvBXrKwKGZ8Z/FxR+kLm6rY4P61FP12dhbEM0CWYc2VBFea8qguyDMKrLZf5tZhvZU3OJMXgSzgBL+TR2RY7CRRzz6Klhqw1aENrpKvlHNt7p9F+fFzrgi9zsshpB1GT1gyvCAOgGguL7qU49jzaR2HJmLEPQYMIbgHsZSSuCc6yvstkfUaPedW82PSPNlkSB7KCMk657EosCdlgPju/94JjZc7eC7mgg+m1F5bO9cbkajlA5qIRyCrIeOcSPBQye3IDIitkVuKuvRoJmSqos3FPVqVMABcbL2Q+WtNjdy26R4tR8oEOto+D4RRh0Qvw80A9WqfGoWSKPbDezymLUV3La3jmMsycVTvjFWMwDFcSTjMGisCyCsCASFBsDfefBSN23phEXof24GjTC/fQjUsyFQ53x3NOtj1m4kzHiwa/2bWmojdlTNslJN+it8wOSBK0h5SrmLZqECofeOfmZDhbQi82zsm4oVBNr90oqYt0tuRDv2X3l8ZsWM0NS9EnU222mJ7zfHzYts9+0p+w/VgbyLwzGUM4RVaVIM0eq7f5Bmf0t5hPG5WEjRJwZBYAces4gocJzPa3VxL2VVnA5AUyl4ncghM1IIpVQWJ5Rdn0XGpqifN0Ro1lSbB93KaTsVT90opjeTwp0lysIoPukSsd2JdkSl3oOcqsUR0s4UoZ+/o8AVk03wQURYqR0t/ImWPJBQNsKdNY/BaxpVQCM3MSDch8OG+S1EGx/YHWATMm1+hdPnGd1WnnrHZ4KMbDq2PowJ/rDxyTMMUWJUUXVBm0r+9bLkszRvWtfR6t91bO63hml+BQZwW1p5CznOfB8GpDOqBzZJyFrcwJl/gSyGUT0+K4XrrICMbeRBdSTNr0gS7bNU3+lWMFxUofOXbggAI+c0y4ckwAm0NVavMUajS5CC0yhxWFg9KajwadiFSWo12JrfYIJ/H8+iRoZ/qwuqBOWcvdKotFR+JdrhpsDJdZJyxpni0FDnYt0VN3fNCs+yd5JCuNmUf4J3ILDxkalcYSFQhMcu4RnTitsvuVtz+fmTo920+19CjNzCGiTu76sOhk22m/SRCxeGqcW6uj0luGlnH9jnw+JO/G6zFKPB6wH07gm/TS0vUWWsltWXyHJb7cwx9HM/ldxhUWz65tLq7dqNCCKIFBUnktogoJ102x0PPsLv5yXtcdod1m+BbTphkOsO22QNZJqkcCstHpNJle46b1rig+QeTCYOMVtQoxe/1Y/w7Q2nfX0IxhXPklU9GnshSoWH2EAYJ6+FJhWKrDUvU24JtMu8222ny73uo0hQ7Dgw7FcpXyOEwmwSQGmwTGDwK59Vkgq9DyIg8WKrrQEgiLiQLIE8zNfeTDi6TwQ8cLiOlE0y9y5Uegn5/d9oR9bK9wQAUsFuJ5wC+ivdlt3DB9wU5/K+5v6UFqe4UqwQ1KsKC5Ivn46H3exaDvw6bJG+K74z8GUl8DiV/QEJ8bca9jH72HqrdrB1bSWGy93iZyMJ8OT+nxmBbXjW6LJGkixukJiiAJDVopFoMnPdzBgLhnIP5Fht8xf6p7t39ElyZuoCX4Hd5jvpQvy79fwT5E4wYkME++s3E+vnQVxX+9l1ldq/DD5in+k4Wx/d73b3I91MGQi/PHC5xiVejn08fhBjDFe4m7VoizevgICuPH3N/Ff1f7o/HerjuUBLNinSbw5yfl4mx5qZiWFaZBIvGVi+HxvLtgTk4R7L47fUlzEbBvN5Ic/XgjWcojzXLh3qzcfb2/O9e8y+AtiKOQd8HyUsnx3RoXD5yH8/UN4A9HLPjtiP24k9cv5q+Wh55+Zvbr/wA=</con:value></con:property><con:property><con:name>20_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertionAccountId</con:name><con:value>9E883D73823AAB88E0401F0A059963F5</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertionUserId</con:name><con:value>9E883D73823CAB88E0401F0A059963F5</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E883D73823AAB88E0401F0A059963F5</con:value></con:property><con:property><con:name>20_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E883D73823CAB88E0401F0A059963F5</con:value></con:property><con:property><con:name>20_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0914_pjgfull2org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertUUID</con:name><con:value>fa6ebc29-e0dd-4830-9e21-398738245e25</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertion</con:name><con:value>nVdbc6JME773V1i+l1bCSUSsTaqGgwQjKIjHOxxGQBGQg6C//hswuiab3Xff7yJlpunDM93P9PT8SO1DQPdBmqIk86OwqUovra3dRRtI80+IdJynTo8hn3hEU08M3+OYHt1hEc22mmqa5kgN08wOs5cWTVLUE8k8UV2L5Ptsr89SzzTLrFvNOUpS7BmrPJOtZnkIwrRfR31p5UnYj+zUT/uhfUBpP4P9KdBGfazZt2+QWq8/riDrgMmrl2VxnyDgs4MgCgL4DKMD8YP4pPPDSftT3w3tLE/QR0wnfWl92BZF8Vwwz1HiEjRJkgTJE1jHSX33n9Zr42aMHDXcRte1aIdR6EM78C92BUpDmRc5TRC4UeJn3uE3rimCIivXT6iET5DqhP+0iJ8BanR/6ekTyCS1n1LPpm7OTLRFCQohas5M9aX1z18V8GpqJXaYbqPkkH5Z/zdEKDyhIIqR85TeNnYD9/cev8nW6w8E+2oIgzz1T0ivWBLbEKXNSYK2fjnyU8w9J23W1W+W6Y1gCP6XivwgHnFi2MQ3mZF8F6XZ/1Oux1JdvcztIEev7LgsQGdidss2sYP0fK1lOsrnvZOuvdQQHpWvoO6V/lh/5emdVh9GznDjMu+TnHGmC2vDdZJ2aJYWNJK3cbFaoyS/ZO0jF6zbDC/Ml/neg/poPqfH55nOoYJzHR/KQbYYcyPbaqxpfuOTsUGHu9NZkmekfpIjl8kgN4oxrRQ6KKYCGaZnl5XbcoJsQxxBarALu0c2RTTJe/HwIPg74TyKGmqsQ8paLocHbit1g7bnGy8/9/S4h2pf7+hcb7L6f8mSvGRn9n0hVo1ii09nhl41VZXyiyiC89QFhSoAF//tgC64+6O39xW+IAVgGAMgiUKwk0ca2CuAmsmCp4nzuVaKFzAUXH2ODa0GCNaCZsqFVKykuWG8yYVnOcr8vFGCfH2RdQ2ktbHoabIpzyXTkjUNRFdZqUkbpdxpU61QjZXUwA4kuYwvjsJnSCl9SKusNmXp1ZTN18s5lg/Oo4N+2lhyoImaIk6PylTdMJIhD4G5WkB6kGPby+gQR43VTHgwGsZoB9CgIHFMcNGsfaFZM1qXTLuWWZ9lmqoMNSMtRKPeldKQi+F8dvmZC1HQROcgl7IFJtdcQEsc6OR6OUztBRtqJigktzZ+lwtnfAOiGWTREK+5GsmFKZszfaCZaiGDWibJRZBuaN3bKN4JMkY5tMDusTCiIS8GIf4emid4Zo8NWxmAzWFOQcb0oM/69jIq3HWvkIzV8D1aq9iNDgxZEAyAAZGg2hrOvwBGwpwdxz5P+2i0HUQH5CUNjYre96dLSfZ8ZuxO9AUrbffcRPEnjO14hBpAesfsgaoi553yDNsxV4Qphf6lO36fLZGfrC6ZzhpU1++xDXORz5ZSFHDO23I1e2+XK2hY48l0tphcylI/7nqXIHsbC2/JdKhJ7lhHaJLCNkHaA8HqSay4etthPm1NErEN4GoCAMrOdWUfE1h4211J+GZqMiYv0MRCEReiMgWK0pZVQTKM7cCjJlCZ5zNK11TZCXCazqulGTTWoiDhSpH2Yh2v6AG5toBTOzM68sA1Zmx7uERrQw+seQaKeL4NKYpUYuNtqxUu1CoGOCo+yPgUCY1cBTN7HA/J8n3eJamj4QTDKQ9mTDml9+XYc9fnvbve46KsHo7OygLB3HrgmIoptmgYlmxqoHc9b6WmzhgzgIcy3hxgKVm4ZrVxZAmyOTDIWSlJ4P0qSy1Al+nqIu80Ua7tG6DUbEyL02bppatQ98eWnGPS5g902W1o8l85VlGs8ZljRxEY4CvH5CvHZLA9ttWeRKVsV4zTReEKinw0uPloyMeksRztG0J7QLiZH3TGYa+w3tsL6lxw3s5YLHhV8sR2uF15zCYTSPsCDTTcc4pv7qWw2wnO2kgz2JlPBGdyh45FOmroKhXKTHYZEHySt4XD2j9cLkyHnh0m0/ykzuz3lDp7m+OCL3aTty5BJMqZvXDrkzFYRnB1vUe+Nsm78NpGiccG+6kD30avab7ZIZjdltU9rErNAb4c7ezPY1wl8Z2nba3aj6tZMM1QmLVeK6tqhOvneNDznT6+Oa9rXu6JJCt2OZIDjCx3ZbJDUgMSkBzPU1x3cJv1rii+QBSjcOtXsaph9npZ/xkgPPQ3yE5Q0vqDpypPTTU08fQRhSmyIjzNDhhRonmJG/AyCQSaIRmGE1gOdGmhJ9FUq6lH2TgcJ2CboeRhQOa+Dsgmgn7so2qK/pgl0gwn4mif8iygnk/2c4hyPGYn1aTbpzs9tk4A4eSHGOIPuLslcZRmz7EX18PMb7fx9dttx1jH8SuFtAItIFwt9M1I37kh/mVn9Lej/809yB2/mllw+rLEh1cknz/9ZENFgzsVSJ7q3DDfVf/OlKeo7q+mxB8QEV+TcY/knPyHuLeHCZ618ThWv0dSXLSj/Xx8zk+nvC4TR5I0kWD3BEWQxBTBHI+LZyvao5C4eyD+ZlC/Y/4S9y7/jC7PvHCa4VN+wIxq1st/f6R9ssYJyFCZfScTA/wsq4L/8eUG+7DSw+IJ/imixPmZ9298PcTBkKsO5Ydutaom7PPn8n6chD6MsFcfN6koefT9nf13sT8L7+m6Q8kwKzZ5hn7/pVl1n5eWDWGUh5kqtWrBY0esMWfnGPV/Kv3iph5xP94sZfrbN8tSG02hhw52667r/7vyk18XHiJslfo1lpdWiV/fOHjoPnTgD4BfmjAnstygA2iakzudexNmeZ4WSOaewE87ef1F/KvkIadfmf36Pw==</con:value></con:property><con:property><con:name>0914_pjgfull2org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertionAccountId</con:name><con:value>9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertionUserId</con:name><con:value>9E8C05C6707A3EE6E0401F0A0799176F</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgfull2org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E8C05C6707A3EE6E0401F0A0799176F</con:value></con:property><con:property><con:name>0914_pjgfull2org3_useroid</con:name><con:value>9E7171CFE7023F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0914_pjgstandard1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertUUID</con:name><con:value>0a11f365-aeaf-479a-9f2c-e3d99c18724a</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertion</con:name><con:value>nVdZc6pME773V1iey5RhExXrJFXDGlRUFtc7hBFQNlkE/fXfgNGYnJzl/S5SZppenul+pqfnZ2oGPjkAaQqTzIvCpsy/tHCTIHZUl26b0Ny1Oz3GbDM70mpDymYYi+j3yI7ZasppmkM5TDMzzF5aJE4QbZxqE10DZwY0MyA6z51+Z9NqLmCSIs9I5RlvNcvAD9NBHfWllSfhIDJTLx2EZgDTQWYNdKCMB0hzYN4gtV5/XkHWAZNXN8viAYZZzza0oO9bz1YUYD+xTzo/7XSge05oZnkC32Pa6Uvr3bYoiueCeo4SByNxHMdwBkM6duo5P1qvjZsxtOVwF13XnBlGoWeZvncxK1AKzNzIbgLfiRIvc4PfuCYwAq9ct2FptS2iE/5oYR8BanT/6OkTyCQ126lrEjdnGtzBBIYWbM41+aX1458KeDU1EjNMd1ESpF/W/w0RDE/Qj2Jot9Pbxm7g/t3jN9l6/QmtgRxafp56JzipWBKbFkybswTuvHLspYh7dtqsq98s0xvBoPVfKvITe8SJYGPfZIb3HJhm/0+5Hkt19bIw/Ry+lrPzQoYrQeOTxJv19PM4X+ojsJ7ih5cawqPyFdS90u/rrzy90+rdSL+YVrhPYzsTVpLJ5cHacKfayu3hoSkmPd3z4KU7H51X3GgYTHlGp4ZSp88JCyK0N7pb6KJByb2eSbn6vPH0Nt4Vs9WblJGZ2gOreJ0SFL4iHULLmdNK4SLseOx391kQsG4wz87ToyzrgQxZOhCPWA83t/4WpqR8ZJ2GYBAzXtaduGvFW7B1ZFC8fOzpcQ/VvkbwXG+y+n9F4wxvZuZ9wVWNYodOZwZfFVnm8wvHgbPugEJmgYP+9mDCOoeje/AkpsBZoKoi4DnW3wtjBRwkQMwF1lW4xUIpuQsYss5kgQyNBvA3rKIJBV+s+YWqvgmFa9jS4ryV/HxzESYKSGtjzlUETVjwmiEoCoiuslLht1K5V3SlkNU130AOeKGML7bEZFAqPYuUaUWnybVO55vVAsnF8ziYnLaG4CucInH6UdLlLcWrwhBo66VFijmyvYyDOGqs5+yD0TCGewDFAkcxwUUxDoVizMkJr5m1zPgsU2RpqKhpwan1rqSGUAwX88tHLjhW4exAKAUDzK65sAxOnOCb1TA1l3SoaKDgndp4JBT29AZEUfGiwV1zNRYKTdDmE1HR5EIAtYwXCj/dkhN3K7kni1LLoQH2j4XhVGEphuh7qJ2sM31smJIItsGCsCjNtTzaM1dR4Wz6Ba+uh6NoIyM3E6AKLKsCBAgH1dZQ/lkwZhf0NPYY0oPjnRgF0E0aChGNDqdLifc9aurMJkua3x16M8mbUabtYrJvkXvqAGQZ2iPCVU1bW2MaH3qX7nQ0X0EvWV+yCa0SXa9PN7RlPl/xkd+z31br+eipXFuqMZ3p8+XsUpaT475/8bO3KfuW6EOFd6YTCGep9YThpsgafZ7m1m97xKedhkO6ARyFBUDaO47gIQKzb/srCd80RUDkBQpXSNySk3QgSU+CzPKquhNdYmZJi3xOTBRZsH2UpvN6pfmNDcfyqFK4udzEa1LENwawa2dqRxAddU4/DVdwo058Y5GBIl7sQoLApVh92ymFYykVA2y50Fl0ithGLoO5OY2HeDladHHiqNr+UGfAnCp18lBOXWdzPjibAyrK+uHorA3gL4wHjsmIYsuGagiaAvrX81Yq8pzSfCso421glbyBalYbRwYraKKKz0ueB6OrLDUAWabri7BXOKG2b4BSMREtTtuVm67DiTc1hByRNn+gy35L4n/lWEWxxmeOHTmggq8cE64cE8Du+CT3eSKlu1ycLguHlYSj2luMh0yMq6vxocE+iZiTeX5nGvYLY/S0JM5Fz92ryyUj8y73FO7WLrXNWNy8WCocHnqSpx34sNvxz8pYUem5h/lnfA+PRTpuTGQiFKjsImJMkj+xwcYLLheqQ86DmZ6f5Lk5Somzuz0umWI/e+tiWCKd6Utvc1LFVWStr/fI1yZ5F17bKPbYYD914NvopefbPbSy27K6h2W+KaLL0cz+PMZVEs9u72rVQVzNgmkGw6z1WllVI9wgR4OeZw/QzXldM0Kf5XiRJTmR75AdSsA7OCHiAO8xTI/vkrdZ74riC0QuCndeFasaZq+X9Z8BWsFgC80EJq0/eKry1JRDDU0fUZhCI3pp0ZTAAwA4mhLxLsX0+zxDdnt9kcNZigGk2GpOomwaThOwy2DyMCD3vg7IGrS82IPVFP0+S6QZSsTRPOWZTzyfzOcQ5mjMTqpJd0B2+nSdAMzOg9hCH1B3S+IozZ5jN66Hmd9u4+u3246Rju1VCmkFmoWoWvCbkR6/If5lZ+S3o//NPchtr5pZUPqyxLOuSD5/+mBDRYM7FXCG6Nww31X/zZQhiO6vptgfEGFfk3GPZJ+8h7i3hwmatdE4Vr9HUlS0o/l8fM5Pp7wuUw/HSSxB7jECwzEdWjkaF89GdIAhdveA/cugfsf8Je5d/hldnrmhnqFTHiBGNevl3x9pn6xRAjJYZt/JOB89y6rgf3y5WQOr0kPiGfoposT+yPs3vh7iIMhVh/JCp1pVE/b5c3nfT8LAipBXDzWpKHn0/Z39d7E/C+/pukPJECu2eQZ//6VZdZ+XlmlZUR5mMt+qBY8dscacnWM4+FD6xU094r6/Wcr0t2+WlTLWLRcGZuuu6/1due3Vhbcgskq9GstLq0SvbxQ8dB468DvAL024x9E9sQNIsid0OvcmTDMMyeLUPYGfdvL6i/hXyUNOvzL79X8=</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertionAccountId</con:name><con:value>9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertionUserId</con:name><con:value>9E8BCDFB2CFD4243E0401F0A07997D62</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E8BCDFB2CFD4243E0401F0A07997D62</con:value></con:property><con:property><con:name>0914_pjgstandard1org3_useroid</con:name><con:value>9E7171CFE7073F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>25_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertUUID</con:name><con:value>2f9e0cce-ace5-42d2-b50a-aab314454e53</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertion</con:name><con:value>nVdZc6JMF773V1jOpWVYFLdKUtWsooKCoOIdQgsogrII+uu/BqPRTCYz73eRMn04y3MWDk+/xubeJ/sgjmGUeGFQFdm3GrnpQdyyYMO0INVokTbZWFO42TDNdZNotagWpJq1qhjHKRSDODGDBNngBNHAmw2ireG9PkX0KeqF6nZWteocRjHyjFRe8Fo13/tB3C+jvtXSKOiHZuzF/cDcw7ifWP0ZkMZ9pNk3b5Bq769XkGXA6N1NkkMfw6wXG1rQ960XK9xjr9iTzqsd92eeE5hJGsGPmHb8VvuwzbLsJWu+hJGDkTiOY3gPQzp27Dm/au+VmzG0xWATXs+MGYSBZ5m+dzELUBJM3NCuAt8JIy9x939wTWAEXrhuwNxqWEQr+FXDPgOU6P7R0xPIKDYbsWsSN2cq3MAIBhas6qr4Vvv1Tw28mmqRGcSbMNrHX87/DREMTtAPD9BuxLfEbuD+3eM31Xp/hVZfDCw/jb0TlIspOaCk4uo0ghsvH3sxmj07rpbdr+bxbcCg9V868oo94kSwsW8qw3oOjJP/p12Prbp6mZt+Ct9n5InZycDvksJexIcdYtU210q6EVT9rYTwqHwFde/0x/nrnN7H6sOIV+TgkAi78MR13DV2HttSIHYMVbC0FWn1NnTHUS9SmznrGUcbpAu1ZJFzZ9+BO/5MMJihHUgjXc/qYjCqkL3evkkMltlkfF7AldCGutcGW8NVkwhu9/qJ0Zdq/bD0zFNuwiOEmM54wVKn+Pi41W1NIw0zMjcdqk64FT3L+OOyKw+4bnMZMwP5bLx95vSYQ5HXCJ7LJIv/lxTeY83EvB+YYlFs0NuZwHdJFNn0wjDgPHNAJtLAQX9bINPO7ujuPKGX4TRQFB6wDO1vubEEdgIgdI52JWY+l3LmAoa0I8+RoVYB/oqWVC5jM4OdK8qAy1zNFubnteCnqwsnSyAujRlX4lRuzqoaJ0kgvMpyiV0L+VaaSZmoGGwFOWC5/HCxhV4ChdyzSJGSZhRpzKh0tZwjOX8e7+XTWuN8iZEEZnYUZuK6ySrcEKjGwiL5FNlexvtDWDF0+sFoeIBbAPkMRzHBRdJ2maTppMyqZinTnmWSKAwlJc4YpcxKqHDZcK5fPmvB0BJj77mc08D0WgtLY3gZXy2HsbmgAkkFGeuUxiMusyc3IJKCZxXmWqsxl6mcqsu8pIoZB0oZy2V+vCZldy24J6up5EMNbB8bwyjcgg/Q80A9WWfqWDEFHqz3c8Jqqq7lUZ65DDNn1c1YxRiOwpWI3MhA4WhaAQgQDorUUP1pMKbn1OTg9UgPjjd8uIduVJGIcLQ7XXK86zUnzlReUOxm15kK3rRp2i4m+ha5be6AKEJ7RLiKaasGprKBd2lPRvoSepFxSWRKIdpel6qoi1RfsqHfsQdLQx/Vc8NStMl0pi+mlzyXj9vuxU8GE3oQzYYS60xkCKexVcdwk6e1LksxxmCL5mmj4pCqAEeiARC2jsN5aIDpwfY6hANV4tDwAonJBGbBCDMgCHVOpFlF2fAuMbWEeaoTsiRyto/KdDaWql9ZMTSLOoWbi9XBIHl8pQG7dKa0ON5RdKo+XMKVIvvaPAHZYb4JCAIXDspgI2WOJRUTYIvZjEZvEV1JRaCbk8MQz0fzNk4cFdsfznpAb+YzcpdPXGd13jmrHWqK8fDqGBrw59rDjIloxBYVReNUCXSv71suiXpT9a19fljvrZzVUM9K41CjOZVXcD1nWTC6ymINkHlsXLitxHClfQXkkonG4rReurERyN5E41I0tOnDuGzXJP7XGStGrPI8Y0cGKODrjHHXGePA5lgXuywRU23mEC8yhxa4o9KZj4e9A64sx7sKXecxJ/H81iToZtqoviDOWcfdKotFT2Rdph5sDLe5TmjcvFgKHO46gqfu2KDd8s/SWFIo3cP8M76FxyweV2SRCLhmcuGxXpTW6f3K218uzRap76ez9CTq5igmzu76uOhl2+mgjWGRcKYundVJ4ZehZVy/I1+X5F14XaPY44J92sA36jVL11toJbdj8R0W2SqPPo5m8jONKySe3diUqv1DwQXjBAZJ7b2wKihcP0VEz7P76Mt5Pfe4LkcRJKA5vkk0WZ7DWzjB4wCnej28xeM3rndF8QUiEwYbr4hVkNnrx/pngNa+v4ZmBKPaD56KOlXFQEXsIwxiqIWIzdLNXpcBnWa7TVNsp812WZrtdFokYNoUaHO1qhwmk2ASgU0CoweC3PlKkFVoeQcPFiy64BIxIhMFkBeYm/uDD0tK4YeOF2DTyUwr6cofgX59dssJ6dheoRAXsGiI+gG/Ie2tG6bfsJPfkvube5DaXsFKUIGSyLOuSJ4fffa7aPS92SR1Q3xX/EfD9u+G2A9osK+FuMexT95D1Nu1AzFpRLbebx05mi/Hl/R0SovrRr+D4yQWIfcYgeHYDFopIoNnLdzBALt7wP6Fht8xf4l7lz+jSxM3mCXoHd6jeamWx79fwZ6sUQESmCffyRgfXbqK4D/ey6y+Vegh8RT9ZGFkf9b9G18PcRDkYv94gVOcCv58fm5uAFOUS9S3QuTVQysojB59f2f/Xexn4b1cdygJmop1msA/P6kWu+WtZlpWmAaJyNZKweO+KzEn5wPsfyr95qYksB83kjz+441kKY1nlgv3Zu2u6/1dueGVjbcgsoq9EstbLUd3axQ8cB726wfAP6xY4qcV+5zJ+2/i3yUPNf062e//Aw==</con:value></con:property><con:property><con:name>25_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertionAccountId</con:name><con:value>9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertionUserId</con:name><con:value>9E8E512ABEF313DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E8E512ABEF313DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>25_pjgfull2org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertUUID</con:name><con:value>7adce797-930e-4d5f-8258-0e8f5bc7e248</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertion</con:name><con:value>nVdZc6pME773V1ieS8sAKirWSaqGNaigLK53CCOMsiiLoL/+GzQazclZ3u8iZabp5Znunp5nfiZW4Df7IElgnKIorMr8a61rOTbsMt0G0yJho+3Qm0avSfcaJOxt6LXdhc12r1aVkySDcpikVpi+1pokRTXIVoPqmCTTp3t9uvPSpclVrTqDcYI9Y5UXslYtAj9M+peor7UsDvuRlaCkH1oBTPqp3TeAMupjzb51g1R7+3kFeQkYv3lpuu8ThP3iQBv6vv1iRwHxk3jS+ekkfQO5oZVmMfyI6SSvtQ/bPM9f8tZLFLtEkyRJgmQIrOMkyP1Re6vcjKEjh5vouuasMAqRbfnobJWgFJh6kVMFvhvFKPWC37imCIosXTdgYTdsqh3+qBGfAS7o/tHTE8g4sRqJZ1E3ZzrcwBiGNqxOdfm19uOfCng1NWMrTDZRHCRf1v8NEQyP0I/20Gkkt43dwP27x2+y9fYT2n05tP0sQUeoll2yt2yYVCcx3KBihBLce05SvVS/WiS3BoP2f6nIT+IRJ4ZNfJMZHrkwSf+fcj2W6uplZvkZfNvMkD4fRPlsmqqxSqgOnKnvMRj33qevFwiPyldQ90p/rL/26b2tPowGqXBytvSxU9/kBqmtpqid8lyRmfwx7R39JNGzbZy2V2h42FKqyZsrrhsQ0UAAQWyRk/pJyNmmwtiBY8UVj4BIm6TJ0YmErsMEMjGJLTsxkGXs6jYFZ0QkjjfRpth7hHRkLUE6TQ+W3tH8ObInCYBrP+z6dNexgqIidkhI6EI6XgyJ7bsh0hv79XNPj3so9zWEp8smy/8XNMnwVmrdF1w5KDb4dKbwTZFlPjtzHDgZLshlFrj4bwtU1t0dvB2SmJxkgaaJgOdYfyuMFLCTADUVWE/hZjOl4M5gwLrqDBuaFeCvWEUXcj5f8jNNexdyz3Sk2Wkt+dnqLKgKSC7GnKcIujDjdVNQFBBdZYXCr6ViqxhKLmtLvoId8EKxPzsSk0KpQHZTphWDbi4NOlstZlgunkaBelybgq9wisQZB8mQ1y1eEwZAX87tpphh2/Mo2EeV5ZR9MBrs4RZAMSdxTHBWzF2umNOmyuvWRWY+yxRZGihaknPaZVdSRcgHs+n5Mxccq3BOIBSCCSbXXNgmJ6rkajFIrDkdKjrIefdiPBRyZ3wDomhkXuGuuRoJuS7oU1VUdDkXwEXGC7mfrJuqt5a8o93SioEJto+F4TRhLob4e6gf7RN9qFiSCNbBjLJbumcjGlmLKHdXvZzXloNhtJKxGxVoAstqAAMiQbk1nH8WjNgZPd4jpongaCNGAfTiikJFw93xXJA91Bq7E3VO85tddyKhSctyPEL27ea2tQOyDJ0h5WmWoy8JnQ/RuTMeThcQxctzqtIa1UE9uqLPs+mCj/yu875YTof1Ymlr5nhiTOeTc1Goh23v7KfvY/Y9NgYK745VCCeJXSdIS2TNHk9zy/ct7qeNTkK6AlyFBUDauq6AcAOz79trE77rioCbFyhcLnFzTjKAJNUFmeU1bSN61MSWZtmUUhVZcHycptNyofuVFcfyuFKkNV/tl02RXJnAuTjT2oLoalO6PljAlab65iwF+X62CSmKlPba+0bJXVspO8CRc4PFp4itZDKYWuP9gCyGsw5JHTTHHxgMmLYKo7krxp67Ou3c1Q4XZflwdJYm8GfmQ4/JuMXmFc0UdAX0ruetUORpS/ftoNivA7vgTVyzi3FksoIuauS04HkwvMoSEzSLZHkWtgonXOwroFAs3BbH9cJLlqGKxqaQ4abNHtplu26Sf+2xssUqzz124IAGvvaYcO0xAWwOdbnHUwnd4fbJPHdZSTho3dlowOxJbTHaVdi6SLgp8tvjsJebw/qcOuVdb6vN54zMe1w93Cy91jplSetsa3Cw60pI3/Fhp+2flJGi0VNE+CdyCw95MqqoMhUKrfQsEkyc1dlghYLzudVuToOJkR3lqTVMqJO3PsyZfDt57xBELJ3oc3d11MRFZC+v98jXIXkXXsco8ThgnybwjXoZ2XoL7fS2LO9hma+K+HK00j/TuFKCnMbmotrfl1wwSWGY1t5Kq5LC9TNM9JDTxzfndc0ITLcrsBwe0W2BYToC2SYpkQRkl2HoVq9943pXFF8gclG4QWWsksxeL+s/A7SD/hpaMYxrf/BU5qkqhzpmH1GYQDPCJJkDHVFgeRZQnTbXZjiKavVaPdDsdLtUi2dqVTVKx+E4BpsUxg8EufuVIOvQRnsESxZdcokEk4kSyAssrGDvwwul8CMXhcRkbJgXuvJboF+/3faEdRxUKiQlLBbiesBvSHv7hukX7M1vyf3NPcgcVLISnKA0RvYVyfOnz3qXhb4Xu0nfEN8V/9Gw86sh8Qc0xNdE3OM4R/QQ9fbswEwak623W0UO1svhJTses/K50e+SZJOIsXuCIkjCgHaGyeDJjHYwJO4eiH+h4XfMX+Le5c/ostQLjRSf4QD3S/Wy/PsT7MkaJyCFRfqdjPPxo6sM/sd3md23Sz0snuCfPIqdz7x/4+shDoZczh8UuuWq5M+n5+KGMMN7ift2hL0iPIKi+NH3d/bfxX4W3tN1h5LirlhnKfz9l2o5W15rlm1HWZjKfO0ieJx3F8zpaQ/7n0q/uLkQ2I8XSZH89kWyUEaG7cHAqt110d+VG+hSeBtiqwRdsLzWCvy2xsFD92G+fgB8HrE9gaaagBVEPLZ48T5iaYYh2yJ5T+DTTt5+Ef8qecjp185++x8=</con:value></con:property><con:property><con:name>25_pjgfull2org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertionAccountId</con:name><con:value>9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertionUserId</con:name><con:value>9E977EBCADC4E996E0401F0A07995384</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgfull2org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E977EBCADC4E996E0401F0A07995384</con:value></con:property><con:property><con:name>25_pjgfull2org3_useroid</con:name><con:value>9E7171CFE7023F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>25_pjgstandard1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertUUID</con:name><con:value>df65844c-c946-47e2-9c5e-e7d9ca59753a</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertion</con:name><con:value>nVdZc6pME773V1iey1TCoqhYSaoGGBAVFMT1DmEElEVZBP3136DRaJKzvN9FykzTyzPdPT3PvCZm4NMdkCQoTr0orMrCW81eN5l2o2E9W2yj+dxoIfqZtRj0jFo2a5kM22LqZq0qJ0mG5DBJzTB9q9EkRT2T9WeqaZBsh2E7FPvCsuyyVp2iOMGescoLWasWgR8mnXPUt1oWh53ITLykE5oBSjqp1RkDZdDBmh3zCqn2/noBeQ4Yv7tpuusQhPViIwv5vvViRQHxSjzovNpJZ+w5oZlmMfqIaSdvtQ/bPM9f8vpLFDsETZIkQbIE1rETz/lVe69cjZEth+vosubNMAo9y/S9k1mCUlDqRnYV+E4Ue6kb/MY1RVBk6foZFTibVCP8VSM+A5zR/aOnB5BxYj4nrkldnelojWIUWqg60eW32q9/KuDF1IjNMFlHcZB8Wf83RCg8ID/aIfs5uW7sCu7fPf6QrfdXZHXk0PKzxDsgteySnWmhpDqK0dorBl6Ce89OqufqV4vk2mDI+i8VeSXucWLYxA+ZETwHJen/U677Ul28TE0/Q+9rX1FTqEdbmKoAkYF8XJJMa+QcR9u3M4R75QuoW6U/1l/79NZWH0YL8kBbo5E6FvmpczjABKDNQYlH0qjpDwaHrVY48ySpt2xytQ52qOU1kHuEm822P4nYkZQWxHJ+EgPLQGxSEcdg5TF9ezBoehvKba/oPOti292+F0W9wMsIM+sqO/90VDSXD7qrGSB9X1BtVjWOU1McDsY9YVbvdiV5VlH5mT9ckXA5n/unYQwDN3r73NP9Hsp99dHxvMny/zlDsoKZmrcFXw6KNT6dKXpXZFnITjwPjmMH5DIHHPy3ASrnbPfu1pPYnOSApolA4Dl/AwcK2EqAmkDOVfjpVCn4E+hxjjrFhkYF+EtO0WEu5AthqmldmLuGLU2PK8nPlieoKiA5G/OuAnU4FXQDKgqILrJCEVZSsVHGSi5rC6GCHQiw2J1siU2RVHgWLTPKmKEXYyZbzqdYLh4HgXpYGdBXeEXix3tpLK/qggZ7QF/MLFrMsO1pEOyiymLC3Rn1dmgDkJiTOCY4KcY2V4wJrQq6eZYZjzJFlnqKluS8dt6VVIF5bzo5feaC5xTeDmABDTC65MIyeFEll/NeYs6YUNFBLjhn4z7M7eEViKKReYW/5GoAcx3qE1VUdDmH4CwTYO4nK1p1V5J7sOpa0TPA5r4wvAZnYoi/h/rBOjL7iimJYBVMKauuu5bHeOY8yp1lOxe0Ra8fLWXsRgUa5DgNYEAkKLeG88+BATdlhjuPpT00WItRgNy4olBRf3s4FWTbqw+dkTpjhPW2NZK8Ud20XUL2LXpT3wJZRnafcjXT1heELoTeqTnsT+bIixenVGU0qum1mYo+yyZzIfJbdne+mPSfioWlGcPReDIbnYpC3W/aJz/tDrluPO4pgjNUERol1hNBmiJntAWGX3Q3uJ/WOomYCnAUDgBp4zjQww3MdTeXJuzqCsTNCxQ+l/gZL42BJD1BmRM0bS261MiSptmEUhUZ2j5O03Ex1/3KkucEXCnSnC13C1oklwawz860BhQdbcI89eZoqam+MU1BvpuuQ4oipZ3WXSu5YyllB9hyPubwKeIqmQwm5nDXI4v+tElSe832e2MWTOrFmN4WQ9dZHrfOcouLsrg7OgsD+FPjrsdk3GKzimZAXQHty3krFHlS130rKHarwCoEA9fsbBwZHNRFjZwUggD6F1liALpIFie4UXh4tq+AQjFxWxxWczdZhKo3NGCGmza7a5fNiib/2mNli1Uee2zPAw187TF46TEI1vsnuS1QCdPkd8ksdzgJ7rXWdNBjd6Q2H2wr3JNIOKnnN4ZhOzf6TzPqmLfcjTabsbLg8k/heuHWVylHmidLQ71tS/L0rRA2G/5RGSgaM/EI/0hu0D5PBhVVpkJYT08iwcbZExcsveB0qjfoSTAaZwd5YvYT6uiu9jM234y6TYKIpSNzai0PmjiPrMXlHvk6JG/Cyxgl7gfswwS+Uq9xttogK70uy3tYFqoivhzN9M80rpR49vP6rNrZlVwwSVGY1t5Lq5LCdTJM9Dy7g2/Oy5qFbKsFOR6PaABZtgnJBkmJJCBbLMvU240r17ug+AKRj8K1V8Yqyezlsv4zQCvorJAZo7j2B09lnqpyqGP2EYUJMqK3WpuvN8QmzwstgWI5mm83hRZNM3WKbtJNgWNqVTVKh+EwBusUxXcEufWVIOvI8nYeKll0ySUSTCZKIC+oMIOdj86Uwo8cLyRGw7Fxpiu/Bfr123VPWMf2SoWkhMUhXA/0A2knr5i+Yad/JPdX9yCzvZKV4ASlsWddkDx++qx3WehbsWnmivim+I+Gze+GxB/QEF8TcYtjH7y7qNdnB2bSmGy9XyuyN1/2L9nhkJXPjU6LJGkixu4JiiCJMbIyTAaPRrRFIXHzQPwLDb9h/hL3Jn9El6VuOE7xGQ5wv1TPy78/wR6scQJSVKQ/yXgfP7rK4H98l1kdq9TD4hH+yaPY/sz7D77u4mDI5fzxQqdclfz5+FjcEGV4L3HHirBXD4+gKL73/ZP9T7Efhbd03aCkuCtWWYp+/6Vazpa3mmlZURamslA7C+7n3RlzetyhzqfSNzdnAvvxIimS375I5spgbLkoMGs3Xe/vys/eufAWwlaJd8byVivw2xoHD527+foB8HHEtiFD0YCDIkXVBfE2YhmWJRsieUvgw07ev4m/S+5y+rWz3/8H</con:value></con:property><con:property><con:name>25_pjgstandard1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertionAccountId</con:name><con:value>9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertionUserId</con:name><con:value>9E977EBCADCAE996E0401F0A07995384</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E8E512ABEF113DFE0401F0A059904F0</con:value></con:property><con:property><con:name>25_pjgstandard1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E977EBCADCAE996E0401F0A07995384</con:value></con:property><con:property><con:name>25_pjgstandard1org3_useroid</con:name><con:value>9E7171CFE7073F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>10_pjgfull1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertUUID</con:name><con:value>56b6c12d-d7d1-42f5-ab00-6cbdaad9ba92</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertion</con:name><con:value>nVdZc6pME773V1ieS8swoLhVkqphEVFRWVzvEEZAEZRFkF//DRiN5uTknPe7SJlpenmmu6fnmddQP7hUF4YhCiLH98oi91ahm5umQVJmzWyZZK1BbemavgGg1jQ2pq6bnY3eoSplMQxjJHphpHvRW4UCJFkD9RrZ1Mhmt052SfBC0a11pTxHQYg9Y5UXUCmnB9cLu0XUt0oceF1fD52w6+kHFHYjo6tCadTFml39Bqny/noFWQQM3u0oOnYJwngxkYFc13gx/APxSjzpvJphV3UsT4/iAH3ENMO3yodtkiQvSf3FDyyCAgAQoENgHTN0rF+V99LNGJmit/Wva1b3fM8xdNfJ9ByUhCLbN8vQtfzAiezDH1yTBAly1zWUGjWDbHi/KsRngALdP3p6AhmEei20dfLmTEFbFCDPQOWZIr5Vfv1TAa+mWqB74dYPDuGX9X9DhLwzcv0jMmvhbWM3cP/u8Ztsvb8ioyt6hhuHzhmN8y456gYKy9MAbZ105IS498ywXFS/nIa3BkPGf6nIK/GIE8MmvskM51gojP6fcj2W6uplrrsxeoctcczMJ0amZumAWM892t6A43RE7+S3AsKj8hXUvdIf6699em+rDyOO40CfgQI9WR/O++YcLH1joB73ycUWgDpV0Biik8saw+rZ5tdndTbzuV7fhyJNTqvUhXWOHVoe9DNiv96VYnIIrCQ4VOlGdb9jD1qdbs/F5bTZYXYdcFnE7mqaNdI6nIqn9kyRBryudMTOOeZGVNCXGpfVkLNNwToNm34pCtqZtp8EgJyeyebRmKLV2+eeHveQ72uILsUm8/+XNOhweqTfF2w+KLb4dEboXRJFLs5YFl5UCyYiAy38t4Njxtqf7L0jdBLAQFnuQY5l3B0/kuBegOSMZ2yJnc+llM3ggLHGc2yolaC7ZiSFT7hkxc1luc8ntmYK88tGcON1xo8lGBbGrC3xCj/nFI2XJOhfZanEbYR0J6lSIsorroQdcHx6zEyhEyEhdQxKpCWVplYqHa+XcyzvXUaH8Xmj8a7ESgKrngRV3NQ5mR9AZbUwqF6MbbPR4eiXVjPmwWhwRDuIegnAMWEmaftE0mbUmFP0QqY9yyRRGEhymLBysSuhxCeD+Sz7zAXLSKx54FNeg9NrLgyN7Y3BejkI9QXtSQpMOKswHvKJObkBkWSQlNhrrkZ8ovDKbNyTFDHhYSHj+MQNN9TY3gj22ajL6UCDu8fCsDK/6Hn4u6ecjQt9KulCD24Oc9KoK7bh0I6+9BNr3U44eTUY+msRuxlDmWcYGWJAAOZbw/ln4IiZ05Oj06EcNNr2/AOyg5JE+sP9OUtB26lPrOl4QXPbfWsqONO6btqE6BrUrr6HoojMIWnLuqmsCIXznKw5Gc6WyAlWWTSmZbLptOmSsohnS853W2Z/uZoNq+nKkLXJVJ0tplmajk+7duZG/QnTD9SBxFmTMULT0KgSQO8xWpuj2VV/h/tpqwBEl6AlMRAKO8viHdzATH93bcK+IvG4eaHEJgK7YAUVCkKVFxlOlrc9m5wawjyekWNJ5E0Xp+myWipuac0yHK4U0Bfr44rqgbUGzcKZ3OB7ljyjq4MlWstjV5tHMDnOtx5JAuEo97dSYhlS3gGmmKgMPkVMKRbhTJ8cByAdzpuAPMmmO1A7cFZPVWqfTmxrfdlb6z0uyurh6Kw06M61hx4TcYstSrLGKxJsX89bKomzuuIah/S4ORgpp+GaFca+xvBKTwazlOPg8CoLNUil4SrjdxLLF/YlmEo6bovzZmmHK2/sTDQ+xk0bP7TLbkOBv/ZY3mKl5x47sVCGX3uMv/YYD7enqtjmyJBussdwkViMwJ/k1nw06ByBvBztS0y1R1iR4zYmXjvRhtUFeUla9k5eLDoiZ7NVb7uy65uIAXpmyGiwbwmOsue8ZsO9SCNJpmcO4V7ADp2ScFQai6TH16OsR3SCuMoc1s4hy+oNanaYqvFZnOnDkLzYm9Oik+ym/SZBBMKFzlrrs9zDo351vUe+Dsm78DpGiccB+zSBb9RLjTc7ZES3ZX4Pi1y5hy9HPfqZxuUSx6xtC9XuMeeCYYS8qPKeW+UUrhtjoueYXXxzXtcdvsNyPabebrB8sw1IHjQA2QMQ0J1Ok29SN653RfEFIut7WyePlZPZ62X9M0Dj0N0gPUBB5QdPeZ7Koqdg9uF7IdL8twrXaDMk3epxsMU2+Tpocq12o82ydZrrsC2mVSmP/WjiTQK4jVDwQJBbXwmyggzn6KCcRedcIsRkIgfyglL9cHRRQSlc33I8YjpRtYKu/BHo12+3PWEd08kVwhwWg3A90DekHdww/Yad+pbc39zD2HRyVoITFAWOcUXy/Omz3nmh78UmwQ3xXfEfDcnfDYkf0BBfE3GPY56dh6i3Zwdm0phsvd8qctJfTi/x+Rznz41uCwCKCLB7giQAoSIjxmTwovl75BF3D8S/0PA75i9x7/JndHFke2qEz/AB90u5WP79CfZkjRMQoTT6Tsa6+NGVB//xXWZ0jVwPi6f4J/ED8zPv3/h6iIMh5/PH8ax8lfPny3NxPRTjvQRdw8deHTyC/ODR93f238V+Ft7TdYcS4a7YxBH685dyPlveKrph+LEXiVylEDzOuwJzdDmi7qfSb24KAvvxIknDP75IltJINWx00Ct3XefvyjWnKLyBsFXoFFjeKil+W+PgnvUwXz8A/mHEsj+N2OedvP8m/l3ykNOvnf3+Pw==</con:value></con:property><con:property><con:name>10_pjgfull1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertionAccountId</con:name><con:value>9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertionUserId</con:name><con:value>9E9CDFB384CE6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9CDFB384CE6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull1org3_useroid</con:name><con:value>9E7171CFE6FE3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0914_pjgbasic1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertUUID</con:name><con:value>41fac975-cec2-404e-b436-9ad6f4eda488</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertion</con:name><con:value>nVdbc6JME773V1i+l6mEk0SxNqkajqKigni8w2EEFEEZEPTXfwNG12Sz++77XaTMNH14pvuZnp4f2NmHbAdgjJI0iKO6Lr81mszGgUKLf4YIss9Nuome103u9Vlw3NdNE7lOs91u1HWMM6RHOHWi9K3B0gzzTHPPzKvNtDp0u8PzL63X9qpRn6EEE89E5YVu1It9GOFOFfWtkSVRJ3ZwgDuRs0e4k8LOBBiDDtHsODdIjfcfV5BVwOTdT9NDh6Lgi4sgCkP4AuM99YP6pPPDxZ1J4EVOmiXoI6aL3xoftnmev+TcS5x4FEvTNEULFNFxceD903iv3YyRq0eb+LqWnCiOAuiEwcUpQRko9WO3DkIvToLU3//GNUMxdOn6GRXwGTLN6J8G9TNAhe4vPX0CmWDnGfsOc3NmoQ1KUARRfWrpb41//qqAV1M7cSK8iZM9/rL+b4hQdEJhfEDuM75t7Abu7z1+k633Hwh29AiGGQ5OaFiy5OBAhOvjBG2CYhBgwj0X16vq1wt8IxiC/6UiP6hHnAQ29U1m5MBDOP1/yvVYqquXmRNm6H146i/WOzmkVCy0z5m878bQ5tFRnMVvFYRH5Suoe6U/1l95eqfVh1EPjNpDxuTgsKtk1NRvm3PPMhhJHDPdC7X2IJLmMFn6jniOVHXE8oburc4OPhhWayiGOrBPBZ48caoymNfmZtsVp5zZ23khh867nXfh8+Zocclnxgx0obdl+4E4WndDamE7OvYXPJhvg8NGm8+LiXhmmKeFfsxH/CCkahNnzsQ9S5Vkqdhwp+RUeG8/9/S4h3JffXSuNln+v+BpQXZS576QykaxIaczRe+GrsvZRZLAeeKBXBeBR/62YCh6u6O/CzQhp0VgmiqQJTHcKgMD7DTATBXRN6TZzCikC+iJ3nBGDO0aCFeiYSm5nC/lmWl2ldy3XW12XmthtrooQwPgyljyDcVSZrJlK4YB4qusMOS1VmyNiZHr5lKuEQeyUhwuriakSCsCyOq8MeHZ5YTPVosZkavnwX54WttKaEiGJk2O2kRfc7Kp9IC1nENWzYjtZbA/xLXlVHww6h3QFiA1p0lMcDHsXW7YU3YoW04lsz/LDF3rGSbOJbPalVZT8t5sevmZC0k0JHevFIoNxtdcQFtSh/Rq0cPOnI8MC+SyVxn3ldwd3YAYJp3XpGuuBkpuKdZ0qBqWniugkslKHuI1O/TXmn+CnFn0bLB9LIxkKnM1It8j6wTP/LHmaCpY72cM5CwfBnzgLOLcW7Vz2Vz2+vFKJ26GwFRE0QQEEA3KrZH8i2AgzvjRIRDYAA02arxHflIzmLi/O10Kuh1wI288nPPyZtcaa8GYc1yf0kPIbrkd0HXk9hnfdFxrSVlyFFxeR/3pAgXJ8pIOeZN5Ddp8zZpn04Uchy23u1hO+0/FEpr2aDyZzseXohget+1LmHZHYjeZ9AzZGw0RGmP4RNGOKtptmZeW3S3h08aiEV8DniECoG09TwkIgcXu9krCrmUohLzAkHJNmkvaBGjak6KLsmluVJ8ZQ22WTZmhoStuSNJ0Xi6ssLaSRJlUinbmq8OSVemVDdzKmdlUVM+c8k+9BVqZw9CepSA/zDYRw9DawexujNyDRskAV88nIjlFYi3TwdQZHXp00Z+90szRdMPeRABTrpiwu2Lkk2ax81Y7UpTlw9FZ2iCc2Q8c0wnF5jXTViwDtK/nrTD0KWeFcF8c1ntYyDapWWUc26JiqSY9LWQZ9K8ybAO2wMuLsjUkpbKvgcJwCC1O64WPl9EwGNlKRkibPdBlu2bpf+VYSbHaZ44dJWCCrxxTrhxTwOb4pLdlBvOv0gHPc0/UlKPZmg16woE2F4NdTXxSKS8NwuYoaud2/2nOnPOWvzXnc0GXfekp2ix9bp2KtHOBJurtWlpg7eTotRmejYFh8tOACs/0Fh1zPKgNdSZSuPSiUkKSPYn7VbC/XLgmO92PJ9lJnzp9zJz99XEu5Ntx95WiEu3MX1qrk6kuYri83iNfm+RdeG2j1GOD/dSBb6PXJFtvEUxvy/Ie1uW6Si5HJ/3zGFdKAvd5U6l2DuUsiFMUpY330qoc4ToZGfQCt0NuzutaUASZYUmKWSBwnMopdJNmVBrQvCDQDBBus94VxReIUhxtgjJWOcxeL+s/A4T7zho5CUoaf/BU5qmuRxaZPuIIIzt+a3Cywqs005a5lqS0VYVrtwRJFQRBVRmJAc1GfRino2iUgE2KkocBufV1QLYQDA4BKqfoj1kCpyQRR+eUpSHzcnJeIpSRMTspJ90O22zzVQIoN9sfIPlAultyiHH6cvAP1TDz2218/XbbMdFxg1IBl6BFRKqFvhnpmzfEv+yM/Xb0v7kHmRuUMwtJX5oE8Irk86efbChpcKcCLTDNG+a76t+ZCgzz+qsp9QdE1Ndk3CO5p+Ah7u1hQmZtMo5V7xFMinZ0Xo4v2emUVWVq0TRLJcQ9xVA0NUEwI+Pi2Y53KKLuHqi/GdTvmL/Evcs/o8tSP5qk5JTvCaPq1fLfH2mfrEkCUlSk38mkkDzLyuB/fLnBDiz1iHhMfvI4cX/m/RtfD3EI5LJDBZFXrsoJ+/y5vB8noQNj4jUgTSpOHn1/Z/9d7M/Ce7ruUFLCinWWot9/qZfd563hQBhnUarLjUrw2BErzOn5gDo/lX5xU424H2+WAv/2zbIwBhPoo73TuOsG/678HFSFh4hY4aDC8tYoyOubBI+8hw78AfBzE263JL6lNgHLtpRm87EJsyLN3RP4aSfvv4h/lTzk9Cuz3/8H</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertionAccountId</con:name><con:value>9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertionUserId</con:name><con:value>9E9D128D12A933F3E0401F0A059901A9</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F4A227E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9D128D12A933F3E0401F0A059901A9</con:value></con:property><con:property><con:name>0914_pjgbasic1org3_useroid</con:name><con:value>9E7171CFE70D3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0912_pjgstandard1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertUUID</con:name><con:value>3f0f3465-dd16-4299-abfe-b8c5eb9598e8</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertion</con:name><con:value>nVdZc6pME773V1ieS8uwKCrWSaqGNaioIK53CAOMIiiLoL/+GzAazclZ3u8iZabp5ZnuZ3p6fsbm3qd7II5hlKAwqCrCa63pkE6z1WYatk21Gy2aZRvmxoGNTddi4IZl2C7s1qpKHKdQCeLEDJLXGk1SVINsNqi2QXV6ZLfHdF+6HWpdq85hFGPPWOWFrFXzvR/EvTLqay2Ngl5oxijuBeYexr3E6k2BOuxhzZ55g1R7+3kFWQaM3rwkOfQIwnqxoQV933qxwj3xk3jS+WnHvSlyAzNJI/gR045fax+2WZa9ZM2XMHIJmiRJgmQJrGPHyP1Re6vcjKGtBE54XfNmEAbIMn10MQtQKky80K4C3w0jlHj737imCIosXDdgbjUsqhX8qBGfAUp0/+jpCWQUm43YM6mbMx06MIKBBaszXXmt/finAl5NjcgMYieM9vGX9X9DBIMT9MMDtBvxbWM3cP/u8Ztsvf2EVk8JLD+N0QmOCpYcTAvG1UkEHZQPUYy5Z8fVsvrVPL4RDFr/pSI/iUecGDbxTWYE5MI4+X/K9Viqq5e56afwrZkSg2VL30rrTraV6uOuJZOI13PkhK8lhEflK6h7pT/WX3l6p9WHkTBSO0OCmwlLtNixMVL2ikwcfcc5cf2hrorrTFAQxSbj89Aw3CaQmJnut+trsimQ7xmbWUbOiIehtZANqSLHnRF9WfSVjaqP26iz73a6POHS7YkvC856wugt5cA6u/PYSfNsMMlWUXfHnfazZTTULzydB5TGvV+Y+dmaVoQAiTlYCOJU0JO6LIth6/VzT497KPY1gOdyk8X/S4ZkBTMx7wu+aBQOPp0JfFMVRUgvPA/OUxdkCgdc/LcFI87dHb0dktmM5ICmSUDgOX8rDlWwkwE1EzlP5edzNecvoM+5ozk2NCrAX3OqLmZCthLmmvYuZp5hy/PzRvbT9UUcqSAujXlPFXVxLuiGqKogvMpyVdjI+VadqpmirYQKdiCI+eFiy2wC5RxZtMKoU4ZeTZl0vZxjuXQe7kenjSH6Kq/K/PQoT5VNU9DEPtBXC4uWUmx7Ge4PYWU14x6M+ge4BVDKSBwTXFRjl6nGjB4JulnKjGeZqsh9VYszXit3JVfErD+fXT5zwXMqb+/FXDTA5JoLy+ClEble9mNzwQSqDjLBLY0HYmaPb0BUjcwq/DVXQzHTRX02klRdyURQygQx8+MNPfI2sneymlreN8D2sTC8Ji6kAH8P9JN1Zo4VU5bAZj+nrKbuWYhB5jLM3HU3E7RVfxCuFexmBDSR4zSAAZGg2BrOPweG3JwZHxBLIzh0pHAPvaiiUuFgd7rkZBc1x+5ktGAEZ9eZyGjSNG2PUHyL3jZ3QFGgPaA8zbT1FaFjml7a48FsCVG0uiQjRqPaqMtU9EU6Wwqh37Hfl6vZoJ6vLM0YT6azxeSS56Pjtnvxk/cx9x5N+6rgjkcQTmKrTpCmxBldgeFX71vMJ0cnIVMBrsoBIG9dV0SYwNz79krCd3xCMXmBymcyv+DlKZDluqhwgqY5kkdNLHmezqiRqoi2j9N0Xi11v7LmOQFXijQX68OKlsi1AezSmdYSJVebMfX+Eq61kW/ME5Ad5k5AUaR80N4dNXMttWCArWRTDp8irpIqYGaOD30yH8zbJHXUbL8/ZcGsmU/pXT723PV55653uCirh6OzMoA/Nx44pmCKLSqaIeoq6F7PW64qs6buW/v8sNlbuWDgmpXGocGJuqSRs1wQwOAqiw1A5/HqIm5VXiztKyBXTUyL02bpxatghMaGmGLSpg902W5o8q8cKyhWeebYkQca+Mox8coxETjHutIVqJhp84d4kbmcLB61znzYZw+kthzuKlxdItwE+a1x0M2MQX1BnbOOt9UWC1YRPL4eOCuvuUk40rxYGuzvOjLSd0LQbvlndahqzAwR/pncwmMWDysjhQrEZnKRCDZK69x+jfaXS7NFz/aTaXpSZuYgps7e5rhgs+3kvU0QkXxmLp31SZOWobW63iNfm+RdeG2jxGODferAt9Frmm620Epuy+IeVoSqhC9HM/nzGFdIkN1wStXeoZgF4wQGSe2tsCpGuF6KBz1k9/DNeV2zIit0hA7LtEieJXlOJFskJZGA7LAs0yH526x3RfEFIh8GDipiFcPs9bL+M0Br39tAM4JR7Q+eijxVlUDH00cYxNAIX2sSK1HNJkm2aE6SOqwgdRm6yzNNThDILs2xteooTMbBOAJOAqOHAbnzdUDWoYUOCBZT9McsESc4EUfzlCY+9XIyXwKY4jE7KibdHt3qMmUCCDvdHyz8AXe36BDGycvBO5TDzG+38fXbbcdYx0aFQlyA5iCuFvxmpG/dEP+yM/rb0f/mHqQ2KmYWnL4kQtYVyfOnTzYUNLhTgWQp+ob5rvpvptS3psQfEBFfk3GPZJ/QQ9zbwwTP2ngcK98jMS7a0Xw5vqSnU1qWqUOSNBFh9wRFkMQUWikeF89GuIMBcfdA/Mugfsf8Je5d/owuTbxgmuBTvseMqpbLvz/SnqxxAhKYJ9/JeB8/y4rgf3y5WT2r0MPiCf7Jwsj+zPs3vh7iYMhFh0KBW6yKCfv8XN6Pk9CzQuwV4SYVRo++v7P/Lvaz8J6uO5QEs2KTJvD3X6pF93mtmZYVpkGiCLVS8NgRS8zJ+QB7n0q/uClH3I83Sx7/9s2yVIdTy4N7s3bXRX9XbqCy8BbEVjEqsbzWcvz6xsED96EDfwB8bsLdDs90pCbfbnXEVuvehBmWpTmyeU/g007efhH/KnnI6Vdmv/0P</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertionAccountId</con:name><con:value>9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertionUserId</con:name><con:value>9E9D7D79540C90CBE0401F0A0799570C</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9D7D79540C90CBE0401F0A0799570C</con:value></con:property><con:property><con:name>0912_pjgstandard1org3_useroid</con:name><con:value>9E7171CFE7073F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>0912_pjgbasic1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertUUID</con:name><con:value>41a640ba-1796-4064-8ad2-7ed0a78d5093</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertion</con:name><con:value>nVdZc6pME773V1iey5Rhc6+TVA2rqKgsrncII6AIyICgv/4bMBrNyVne7yJlpunlme5nenp+IvPg0z2AEIwTLwyqMv9Wa1Bmq0FuzDrV7rbqDbLVqHdMm663oU2a7Y7dJLtMrSojlEI5QIkZJG81mqSoOsnUqZZBtXtkt0e1Xlskva5V5zBG2DNWeSVr1fzgB6hXRn2rpXHQC03koV5gHiDqJVZPB8qohzV75g1S7f3nFWQZMH53kyTqEYT1akML+r71aoUH4ifxpPPTRj3dcwIzSWP4EdNGb7UP2yzLXjPmNYwdgiZJkiC7BNaxkef8qL1XbsbQloNteF1zZhAGnmX63sUsQCkwcUO7CnwnjL3EPfzGNUVQZOG6DnOrblGN4EeN+AxQovtHT08gY2TWkWtSN2ca3MIYBhaszjT5rfbjnwp4NTViM0DbMD6gL+v/hggGJ+iHEbTr6LaxG7h/9/hNtt5/QqsnB5afIu8ExwVLItOCqDqN4dbLRx7C3LNRtax+NUc3gkHrv1TkJ/GIE8MmvskM7zkQJf9PuR5LdfUyN/0Uvvsdo20N+tNm3Nb5TgcRx5nMbNV9RwdvJYRH5Suoe6U/1l95eqfVh5HBtVsNQ3OP3VmLzPv7UNFsh/D2irAyho0cMu5eD8y+u7QPuwPHbzdodLHgEG4FmAJSHvIxceTE4xh4+rgSpPleaxPTSTtjd/kgGQycwcI+EmeKbbWb0TCT2vtMJkNvk2+tLlyMJqtNdLhgNF5nepqLna4cLRqKF/QZubIVt1mixZO41ZSU6TjNdPT2uafHPRT7GsJzucni/yWmL28m5n3BFY1ii09nAt8VWebTC8eBs+6ATGaBg/92YMw6+6O796RuRrJAVUXAc6y/E0YK2EuAmgmsq3DzuZJzFzBgnfEcGxoV4K9ZRRMyPlvxc1XtC5lr2NL8vJH8dH0RxgpApTHnKoImzHnNEBQFhFdZrvAbKd8pupLJ6oqvYAe8kEcXW+omUMo9i5abit6kV3ozXS/nWC6eR4fxaWMIvsIpEqcfJV3eMLwqDIC2Wli0mGLby+gQhZXVjH0wGkRwB6CYkTgmuCjGPlOMGT3mNbOUGc8yRZYGiooyTi13JVWEbDCfXT5zwbEKZx+EXDDA9JoLy+DEMbleDpC5aAaKBjLeKY2HQmZPbkAUlcwq3DVXIyHTBG02FhVNzgRQyngh89GGHrsbyT1ZjJoPDLB7LAynCgsxwN8D7WSdm8eKKYlgc5hTFqO5ltf0zGWYOetOxqurwTBcy9jNGKgCy6oAAyJBsTWcfxaM2HlzEnld2oOjrRgeoBtXFCoc7k+XnOx4zMSZjhdNfrtvTyVvypi2S8i+Re+YPZBlaA8pVzVtbUVofOBdWpPhbAm9eHVJxk2VanmdZkVbpLMlH/ptu79czYYv+cpSjclUny2mlzwfH3edi5/0J2w/1gcK70zGEE6R9UKQpsgaHb7Jrfo7zKetRsJmBTgKC4C0cxzBwwRm+7srCfuaImDyAoXLJG7BSTqQpBdBZnlV3YouNbWkeTqjxoos2D5O03m11PzKmmN5XCnSXKyjFS2SawPYpTO1IYiOOmu+DJZwrY59Y56ALJpvA4oipUjtb5XMsZSCAbac6Sw+RWwllcHMnEQDMh/OWyR1VG1/oHfBjMl1ep9PXGd93jvrPS7K6uHorAzgz40HjsmYYouKagiaAjrX85Yr8ozRfOuQR5uDlfMGrllpHBqsoIkqOct5HgyvMmQAOkeri7BTOKG0r4BcMTEtTpuli1bB2JsYQopJmz7QZbehyb9yrKBY5ZljRw6o4CvHhCvHBLA9vsgdnkLNFhehReawknBU2/PRoBuR6nK0r7AvIuEknt+YBJ3MGL4sqHPWdnfqYtGVeZd7CbYrl9kkLGleLBUO9m3J0/Z80Gr4Z2WkqM2ZR/hncgePGRpVxjIVCExyEYlunL6wh7V3uFyYBj07TPX0JM/MIaLO7ua46Ga7ab9FELF0bl7a65MqLkNrdb1HvjbJu/DaRonHBvvUgW+jl55udtBKbsviHpb5qogvRzP58xhXSDy7vi1Ve1ExC6IEBkntvbAqRrheigc9z+7hm/O67gpdnqJximmhwzAiI5ANkhJJQDa7XZIC3dusd0XxBSIXBluviFUMs9fL+s8ArUNvA80YxrU/eCryVJUDDU8fYYCgEb7VmjxNNRia6gqdFmBaoCGyNOBERuQ7dIMlxVp1HCaTYBKDbQLjhwG5/XVA1qDlRR4spuiPWQIlOBFH85QmPvV6Ml8DmOIxOy4m3R7d6DTLBBB2eogs/AF3tzgKUfIauVE5zPx2G1+/3XaMdWyvUEAFaBbiasFvRnryhviXndHfjv439yC1vWJmwelLYs+6Inn+9MmGggZ3KpBdir5hvqv+myn1rSnxB0TE12TcI9kn7yHu7WGCZ208jpXvEYSLdjRfj6/p6ZSWZWqTJE3E2D1BESShQyvF4+LZCPcwIO4eiH8Z1O+Yv8S9y5/RpYkb6Ak+5QfMqGq5/Psj7ckaJyCBefKdjPPxs6wI/seXm9WzCj0snuKfLIztz7x/4+shDoZcdCgvcIpVMWGfn8v7cRJ6Voi9erhJhfGj7+/sv4v9LLyn6w4lwazYpAn8/Zdq0X3eaqZlhWmQyHytFDx2xBJzco5g71PpFzfliPvxZsnRb98sS2WkWy48mLW7rvd35bpXFt6C2Ap5JZa3Wo5f3zh44Dx04A+Az0240+aabZHhWo220Gg8NmGaJT9Z+bST91/Ev0oecvqV2e//Aw==</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertionAccountId</con:name><con:value>9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertionUserId</con:name><con:value>9E9D128D12E833F3E0401F0A059901A9</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E87C57F3C647E44E0401F0A05992B03</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9D128D12E833F3E0401F0A059901A9</con:value></con:property><con:property><con:name>0912_pjgbasic1org3_useroid</con:name><con:value>9E7171CFE70D3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>10_pjgfull2org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertUUID</con:name><con:value>fd997d8c-88a1-466a-aba3-7913aba3ca31</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertion</con:name><con:value>nVdXk6pME773V1ieS8slial2t2qIi4oKYsA7hBFQghIE+fXfgKvrhhPeryxLp+nwTHdP88xzbPgeOQBxDKPEDYO6xL00dla/37V6ZqvXM4hWu9MxWsbWoFrdPkGVf0yDIhp1KY5TKAVxYgTJS4PECaKFUy2ioxG9Adkb4ORTp41vGvUljGLkGak84Y167ntBPKiivjTSKBiERuzGg8DwYTxIzMEcyOMB0hwYN0iN1+cryCpg9OokyXGAYeaTBU3oeeaTGfrYM/ZJ59mKB3PXDowkjeB7TCt+abzbZln2lFFPYWRjJI7jGN7HkI4Vu/avxmvtZgwtKdiF1zVrBGHgmobnFkYJSoaJE1p14Nlh5CaO/xvXBEbgpesWzM2WSbSDXw3sI0CF7h89fQIZxUYrdgzi5kyFOxjBwIT1hSq9NH79UwGvplpkBPEujPz4y/q/IYLBGXrhEVqt+LaxG7h/9/hDtl6foTmQAtNLY/cMJ2WXHA0TxvVZBHduPnZj1HtWXK+qX8/jW4NB879U5Bl7xIlgYz9khnNtGCf/T7keS3X1sjS8FL4yZ0s5+e12/8BnXGE2F3xnHpFRT1LllwrCo/IV1L3S7+uvfXpvq3ejVdMb9g/HdndGUEKwWDWpXd/S6ePbIVGiTnTRhTaF+UI0Gy3bFkmuxc4apMARGfIgY5rVXRSz/XSDN0GHiGrLZnY0RV2/WHp63gCdPyzbSehfmv09UWw3J2smOmETa093F3Irb0GPnJDH6YiLPdcoChXvk3ocY2PJT7JtDfcOxMntg+aQXXbJjOPo3svHnh73UO5rBC/VJsv/axrvc0Zi3BdsOSh26HQm8FWWJC4tWBZc5jbIJAbY6LsHE8Y+nJyDK/YznAGKIgCOZbw9P5bBQQTEgmccmV0u5ZwtwJCxJ0tkqNWAt2FkFRUn07mlorzxmaNZ4vKyFb10U/ATGcSVMevIvMovOVXjZRmEV1kuc1sx38tzOZMUnashBxyfHwtL7CdQzF2TlGh5TpP6nE436yWSC5exPzlvNd6TWVlk5ydxLm0pTuGHQNVXJimkyLYY+8ewpi+YB6PhEe4BFDIcxQSFrB0yWVuQE041Kpn2WSZL4lBW4oxVql2JNT4bLhfFRy5YRmYtn895DcyuuTA1Vpjgm/UwNlZ0IKsg4+zKeMRn1vQGRFbwrMZeczXmM5VXFxNBVqWMB5WM4zMv3pITZys6Z5NS8qEG9o+FYRV+JQToeaCezQt9qhmiALb+kjAp1TFd2jXWYWZvehmn6MNRuJGQmwlQeIZRAAKEg3JrKP8MGDNLenp0+6QLxzsh9KET1WQiHB3ORY73XGpqzyYrmtsdujPRnVGG5WCSZ5J76gAkCVojwlEMS9UxlQvcojMdLdbQjfQimdAK0XF7dE1dpYs1F3pd622tL0bNXDcVbTqbL1azIs8np32v8JK3KfMWzYcyZ08nEM5is4nhhsBoPY5m9bc96qedikO6BmyZAUDc2zbvogZm3vbXJnxTZR41L5DZTGRXrDgHotjkJYZTlJ3gEDNTXKYLYiJLvOWhNF30terVNizDoUrhxmpz1EkB32jAqpwpbV6wlQXdHK7hRpl42jIB2XG5CwgCF4/K207ObFMuO8CSsjmDThFTSyWwMKbHIZ6Plh2cOCmWN5z3wYLK5+Qhnzr25nKwNwdUFP3h6Oga8JbaQ49JqMVWNUXjVRn0ructl6UFpXqmnx+3vplzGqpZZRxqDK8KCr7IOQ6MrrJYA2Qe6wW/l1m+sq+BXDZQW5y3ayfWg4k71fgUNW360C77LYn/tcfKFqt97rETCxTwtcf4a4/xYHdqSj2OiOkOe4xXmc2I/EnpLsfD/hFX1uNDjWkKmJ24Xnsa9DJt1FwRl6zr7JXVqi9xDtsMdrpDbRMGNwpTgcNDV3TVAxd02t5FHssKvXAx74Lv4SmLx7WJRAQ8lRQC1o/SJuNvXL8oqDa58Gfz9CwtjFFMXJztadXP9rO3DoZF4oUuupuzIqxDU7++R74OybvwOkaxxwH7aQLfqNc83e6hmdyW5XtY4uoCejkayZ9pXClxrdauUh0cSy4YJzBIGq+lVUnhBikieq41QG/O67rPow/OCyzdwfkuQfF4GycEHOB0v0/zOLhxvSuKLxDZMNi5ZaySzF5f1n8GaPqDLTQiGDX+4KnMU10KVMQ+wiCGWvjSoNvtDjrGHRZvMxTeJtoU2eYQcJZo012eoxv1SZhMg2kEdgmMHghy9ytBVqHpHl1YsuiSS8SITJRAnmBu+EcPVpTCC203wGbTuVbRld8C/frstiekY7mlQlzCYiCqB/xG2rsD+obpG3byR3J/cw9Syy1ZCUpQErnmFcnnRx/1Lgt9LzaB3xDfFf/RkPhuiP0BDfY1Efc41tl9iHq7diAmjcjW660iJ+Pp9JSez2l53Rh0cZzEIuQeIzAcm0MzRWTwooUHGGB3D9i/0PA75i9x7/LP6NLECeYJOsM+6pd6tfz7FeyTNUpAAvPkJxnroUtXGfyP9zJzYJZ6SDxDP1kYWR95/8HXQxwEuZw/bmCXq5I/Xz4XN4Ap2ks0MEPk1UUjKIweff9k/1Psz8J7uu5QEtQV2zSBv39SL2fLS8MwzTANEolrVILHeVdhTi5HOPhQ+uamIrDvN5I8/u2NZC2P56YDfaNx13X/rtxyq8KbEFnFboXlpZGjuzUKHtgP8/Ud4JcRy3ICQ/XaLNvp4cTjiO3wHfKewE87ef0m/i55yOnXzn79Hw==</con:value></con:property><con:property><con:name>10_pjgfull2org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertionAccountId</con:name><con:value>9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertionUserId</con:name><con:value>9E9E90EFC560E713E0401F0A05995E0A</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgfull2org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9E90EFC560E713E0401F0A05995E0A</con:value></con:property><con:property><con:name>10_pjgfull2org3_useroid</con:name><con:value>9E7171CFE7023F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>10_pjgstandard1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertUUID</con:name><con:value>3b22e769-151c-46bf-8ae0-c50c68ba53b9</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertion</con:name><con:value>nVdZc6pME773V1ieS8uwKCpWkqphDSoqiAveIYwwioAsgv76b9BozHKW96tKKpmml2e6n+npeU6svU/3QJLAOEVhUFWEl1pzTdOw02YbFEPZjVZ7vWl0LUg2bIa02921xTTXbK2qJEkGlSBJrSB9qdEkRTXIZoNqG1S3R+Of5hPbJFe16hzGCfaMVZ7IWrXY+0HSu0R9qWVx0AutBCW9wNrDpJfavSlQhz2s2bNukGqvz1eQl4Dxq5emUY8g7CcH2tD37Sc73BPPxCedZyfpTZEbWGkWw/eYTvJSe7fN8/wpbz6FsUvQJEkSJEtgHSdB7q/aa+VmDB0l2ITXNW8FYYBsy0dnqwSlwtQLnSrw3TBGqbf/jWuKoMjSdQMWdsOmWsGvGvER4ILuHz19AhknViPxLOrmTIcbGMPAhtWZrrzUfv1TAa+mRmwFySaM98mX9X9DBIMj9MMIOo3ktrEbuH/3+EO2Xp+h3VMC288SdISjkiWRZcOkOonhBhVDlGDuOUn1Uv1qkdwIBu3/UpFn4hEnhk38kBkBuTBJ/59yPZbq6mVu+Rl8ZYqs2Y+lRBkSOYP47ny1ao8OkOuOzZcLhEflK6h7pd/XX3l6p9W7kcPwbusIQT1vSuYhE81C1VaukWIGxwfC60pcP+oSYmoMU8FVd4fY3USFkdTryJL6raPiFeY43VHSSiCNCj5bsUxHmeyI405drjuCIE5SdZsd8QkU1OjQ1sIwr5vegiUXhIez4K1aAz4/R3V9QE7fhvP+4NRCkrmYtCr9FI5HuR0VI0M6GCp7MrWXjz097qHc1wCeLpss/18yJCtYqXVf8GWj2ODTmcJXVVGE7Mzz4DR1Qa5wwMW/WzDi3N3B2yGZzUkOaJoEBJ7zt+JQBTsZUDOR81R+PlcL/gz6nDuaY0OjAvwVp+piLuSmMNe0NzH3DEeen9ayn63O4kgFycWY91RRF+eCboiqCsKrrFCFtVxs1amaK5opVLADQSyisyOzKZQLZNMKo04Z2pwy2Wo5x3LpNNyPjmtD9FVelfnpQZ4q66agiX2gmwubljJsex7uo7BizrgHo34EtwBKOYljgrNq7HLVmNEjQbcuMuOzTFXkvqolOa9ddiVXxLw/n50/csFzKu/sxUI0wOSaC9vgpRG5WvYTa8EEqg5ywb0YD8TcGd+AqBqZV/hrroZirov6bCSpupKL4CITxNxP1vTIW8ve0W5qRd8A28fC8Jq4kAL8PdCP9ok5VCxZAuv9nLKbumcjBlnLMHdX3VzQzP4gXCnYzQhoIsdpAAMiQbk1nH8ODLk5M44QSyM43EjhHnpxRaXCwe54Lsguao7dyWjBCJtdZyKjSdNyPELxbXrb3AFFgc6A8jTL0U1CFwJ0bo8HsyVEsXlOR4xGtVGXqeiLbLYUQr/jvC3N2aBemLZmjCfT2WJyLorRYds9++nbmHuLp31VcMcjCCeJXSdIS+KMrsDw5tsW82mjk5CpAFflAJC3risiTGDubXsl4Zuuipi8QOVzmV/w8hTIcl1UOEHTNpJHTWx5ns2okaqIjo/TdDKXul9Z8ZyAK0Vai1Vk0hK5MoBzcaa1RMnVZky9v4QrbeQb8xTk0XwTUBQpR9rbRs1dWy0Z4Cj5lMOniKtkCphZ46hPFoN5m6QOmuP3pyyYNYspvSvGnrs67dzVDhfFfDg6pgH8ufHAMQVTbFHRDFFXQfd63gpVmTV1394X0XpvF4KBa3YxDg1O1CWNnBWCAAZXWWIAukjMs7hVefFiXwGFamFaHNdLLzGDERobYoZJmz3QZbumyb9yrKRY5TPHDjzQwFeOiVeOiWBzqCtdgUqYNh8li9zlZPGgdebDPhuR2nK4q3B1iXBT5LfGQTc3BvUFdco73lZbLFhF8Ph6sDG95jrlSOtsa7C/68hI3wlBu+Wf1KGqMTNE+CdyCw95MqyMFCoQm+lZItg4q3P7Fdqfz80WPdtPptlRmVmDhDp568OCzbeTtzZBxPKJOXdWR01ahvb7PfK1Sd6F1zZKPDbYTx34NnpNs/UW2ultWd7DilCV8OVopX8e40oJchqbi2ovKmfBJIVBWnstrcoRrpfhQQ85PXxzXtesyIpcC3Q4sk12Wy1JJFskJZGA7LAsDdjmbda7ovgCkQ+DDSpjlcPs9bL+M0B731tDK4Zx7Q+eyjxVlUDH00cYJNAIX2pA5CmKlTq80O5QlMg0JVECbJtusQLLUBxdq47CdByMY7BJYfwwIHe+Dsg6tFGEYDlFl7NEgoeJEsgTLKx95MPLSOGHLgqIyXhqXMaV3wL9+u22J6zjoFIhKWFxENcD/jC0UzdM37DTPw73N/cgc1A5leAEpTGyr0g+f/qod1noe7Ep8ob4rviPhtR3Q+IPaIivibjHcY7oIert2YEnaTxsvd4qcrCeDk/Z8ZiVz41ehyRpIsbuCYogiSm0MzwMnoxwBwPi7oH4lzH8jvlL3Lv8M7os9YJpis/wHvOleln+/Qn2yRonIIVF+pOM9/Gjqwz+x3eZ3bNLPSye4D95GDsfef/B10McDLnsPyhwy1U5P58+FzeAGd5L3LND7BXhFhTGj75/sv8p9mfhPV13KClmxTpL4e+/VMve8lKzbDvMglQRahfBY7+7YE5PEex9KH1zcxlg318kRfLbF8lSHU5tD+6t2l0X/V25gS6FtyG2StAFy0utwG9rHDxwH/rrO8AvLZYXJK7ZbfF8u0tS9xbLsGxbbNP3BH7ayes38XfJQ06/Mvv1fw==</con:value></con:property><con:property><con:name>10_pjgstandard1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertionAccountId</con:name><con:value>9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertionUserId</con:name><con:value>9E9EB4A7B060844FE0401F0A07992A93</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgstandard1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9EB4A7B060844FE0401F0A07992A93</con:value></con:property><con:property><con:name>10_pjgstandard1org3_useroid</con:name><con:value>9E7171CFE7073F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>10_pjgbasic1org3</con:name><con:value>2011/03/16</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertUUID</con:name><con:value>5de89cc9-0a2e-4ea8-bfb6-f9a828132d5a</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertion</con:name><con:value>nVdZc6rMFn33V1ieR8swKCrWSaoaaBEVFQSnN4QWUASlQdBffxuNxuTkDN99SJne7GHtgc3qn9jaB2wHYIzixI/CsiK9VjgHtXnb5mu0xaJaA1nt2nqzbtY2vNVm20yddTirUlYwTpES4sQKk9cKSzNMja7XmKbBtDss32m0XxiWX1XKMxRj4pmovNCVcr4PQty5Rn2tpHHYiSzs405o7RHuJHZnCtRhh2h2rDukytvPG8hrwPjNS5JDh6LsFwfZKAjsFzvaUz+pTzo/HdyZ+m5oJWmM3mM6+LXybptl2UtWf4lil2JpmqZoniI6DvbdH5W30t0YOUq4iW5n0Qqj0LetwL9YBSgVJV7klEHgRrGfePvfuGYohi5c11Bu12ymEf6oUB8Bruj+0dMnkDG2atizmLszHW1QjEIblU1dea38+KcG3kyN2ArxJor3+Mv5vyFC4QkF0QE5NXxP7A7u3z1+U623n8juKKEdpNg/oVExJQfLRrg8idHGz4c+JrPn4PK1++Uc3wcM2f+lIz+pZ5wENvVNZSTfRTj5f9r13Kqbl5kVpOjNNoW9PcS9k7rR1vjSzs6iPQP1rquZr1cIz8o3UI9Ov5+/zuljrN6N3Fgc9ceng+yZ0npTnSM2DeZquuejOezK3Apjf1MdGH1qkS1W+qLFAZmG6+NRPapbfcmngJqfJDHie/nEKdWb5lyeaD3Q1rPRHFop7amiXG3LaiY3aN1xLpwZaaY3Yg9NL1yaqrs1TlF13hpY4NLM4Yk+nVerwMwzJi/xeEVbdlcHZjWSemIdHeHrR07PORR5DdD5mmTx/4KjeclKrMdBLBbFhrydCXpTFUVKL6IIzlMXZIoAXPK3BSPB3R29nS/zGS0ATesCSRSCLRyqYCcDxoQCSWU2U3PxAvqCO5oRQ6MEgpWg6jCTsqU007QezDzDkWfntRykqwscqQBfjUVPhTqcSboBVRVEN1muSms536pTNVO0pVQiDiSYHy6OzCdIzn2bVTh1yrHLKZeuFjMi756H+9FpbcBAFVVZnB7lqbKuSxrsA305t9luSmwvw/0hKi1N4cmof0BbgLoZTWKCi2rsMtUw2ZGkW1eZ8VmmKnJf1XAmates5BLM+jPz8lELUVBFZw9zaIDJrRa2IXZH9GrRx9acC1UdZJJ7NR7AzBnfgaganZXEW62GMNOhbo66qq5kEFxlEswCvGZH3lr2TnZdy/sG2D43RtTgvBuS56F+ss/csWTJXbDezxi7rnu2z/nWIsrcVTuTtGV/EK0U4mYENCgIGiCAaFCkRuovgKEw48YHn2d9NNx0oz3y4pLKRIPd6ZLTbb8+diejOSdtdq2J7E/qluNRSmCz2/oOKApyBoynWY6+pHQp9C/N8cBcID9eXpIRpzFNv82V9HlqLqQoaDm9xdIcVPOlrRnjydScTy55Pjpu25cg6Y2FXjztq5I7HiE0wXaVoq2uYLQlTlz2tmSeNjqNuBJwVQEAeeu60CcDLPS2tyHs6SokwwtUMZPFuShPgSxXoSJImrbpeszElmepyYxUBToBKdN5udCD0koUJNIp2pqvDku2S68M4FydaQ1YrBau2l+glTYKjFkCssNsEzIMLR+03kbNXFstJsBRsqlA3iKhlCrAtMaHPp0PZk2aOWpO0J/ywKznU3aXjz13dd65qx1pyvLp1VkaIJgZTzOmkBGblzQD6ipo3963XFXMuh7Y+/yw3tu5ZJCeXY0jQ4B6V6PNXJLA4CbDBmBzvLzArSrCq30J5KpFxuK0Xnh4GY78sQFTMrTp07hs1yz91xkrRqz0ecaOItDA1xmDtxmDYHOsKm2JwVxTPOB55goyPGqt2bDPH2htMdyVhGqXchM/aIzDdmYMqnPmnLW8rTaf84rkidVws/Tq60SgrYutof6uJfv6TgqbjeCsDlWNM30qONNbdMzwsDRSmBDWk0uX4uO0KuxX/v5yqTdYcz+ZpifFtAaYOXvr45zPtpNek6Ji+cxdWquT1l1E9vL2Hfm6JB/C2xqlnhfspw18p17TdL1FdnI/Ft9hRSp3ycfRSv5M4wqJ79Q2V9XOoeCCOEFhUnkrrAoK10kJ0fOdDvly3s485CHgBBbUBQYIEEK6QTNdGtAtnmcZpnnnejcUXyCKUbjxi1gFmb19rP8M0N531siKUVz5g6eiTmUl1An7iEKMjOi10pLInuRaXQ6ILR5KDVAHkIMNmq+LtEC3YKU8ipJxOI7BJkHxE0FufSXIOrL9g48KFl1wCUzIRAHkBeXW/hCgK6UIItcPqcl4alzpym+Bfn12z4noOH6hgAtYAiL9QN+Q9vod0y/Y2W/J/d09SB2/YCWkQEns2zcknx999Lto9KPZDH1H/FD8R0PmV0PqD2ior4V4xHFO/lPU+7WDMGlCtt7uHTlaL8eX9HRKi+tGp0XTLBUT9xRD0dQU2Skhg2cj2qGQenig/oWGPzB/ifuQf0aXJl44Tcg7vCfzUr4e/34F+2RNCpCgPPlOJgbk0lUE/+O9zO7YhR4RT8hPFsXOR92/8fUUh0Au9o8fusWp4M/nz80NUUpyiTt2RLz6ZAVF8bPv7+y/i/1Z+CjXA0pCpmKdJuj3T8rFbnmtWLYdpWGiSJWr4HnfXTEn5wPqfCj94uZKYN9vJDn+7Y1koQ6ntof2VuWh6/9dueZfG28jYoX9K5bXSk7u1iR46D7t13eAX1asKHWFershis02zTxWLMfzTdhkHwX8lMnbL+JfJU81/TrZb/8D</con:value></con:property><con:property><con:name>10_pjgbasic1org3_accountoid</con:name><con:value>990200</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertionAccountId</con:name><con:value>9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertionUserId</con:name><con:value>9E9EA5B2A3B1ABEEE0401F0A07992116</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:9E9CDFB384CC6801E0401F0A05996E62</con:value></con:property><con:property><con:name>10_pjgbasic1org3_assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:9E9EA5B2A3B1ABEEE0401F0A07992116</con:value></con:property><con:property><con:name>10_pjgbasic1org3_useroid</con:name><con:value>9E7171CFE70D3F6AE0401F0A05991E56</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>55795</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Verification of STREAM_DATA row" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="da3acc58-7688-4d37-950f-dc7127c1da97"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4cb8bc4c-5c69-43bc-b637-4464b0f7dad0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("dbxmlresponse",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectTransactionid",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectJDBCSQL",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBCreateUser",null);
tC.setPropertyValue("expectDBDeleteUser",null);
tC.setPropertyValue("expectDBRenewedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectDBCreatedByNodeType",null);
tC.setPropertyValue("expectErrTypeStreamRenew",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="193aaeca-543b-40e7-9d8d-a9da3e83ddc8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("accountoid",callTC.getPropertyValue("accountoid"));
tC.setPropertyValue("useroid",callTC.getPropertyValue("useroid"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("expectStatus",callTC.getPropertyValue("expectStreamStatus"));
tC.setPropertyValue("expectTransactionid",callTC.getPropertyValue("expectTransactionid"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("expectNickname"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
tC.setPropertyValue("expectDBCreateUser",callTC.getPropertyValue("expectDBCreateUser"));
tC.setPropertyValue("expectDBDeleteUser",callTC.getPropertyValue("expectDBDeleteUser"));
tC.setPropertyValue("expectDBRenewedBy",callTC.getPropertyValue("expectDBRenewedBy"));
tC.setPropertyValue("expectErrTypeStreamRenew",callTC.getPropertyValue("expectErrTypeStreamRenew"));

if (tC.getPropertyValue("expectDBStatus") == "" || tC.getPropertyValue("expectDBStatus") == null) {
		tC.setPropertyValue("expectDBStatus","deleted");
}
if (tC.getPropertyValue("expectDBCreatedByNodeType") == "" || tC.getPropertyValue("expectDBCreatedByNodeType") == null) {
		tC.setPropertyValue("expectDBCreatedByNodeType",tC.getPropertyValue("nodetype"));
}
if (tC.getPropertyValue("expectDBDeleteUser") == "" || tC.getPropertyValue("expectDBDeleteUser") == null) {
		tC.setPropertyValue("expectDBDeleteUser",tC.getPropertyValue("useroid"));
}
if (tC.getPropertyValue("expectDBCreateUser") == "" || tC.getPropertyValue("expectDBCreateUser") == null) {
		tC.setPropertyValue("expectDBCreateUser",tC.getPropertyValue("useroid"));
}
if (tC.getPropertyValue("expectErrTypeStreamRenew") == "" || tC.getPropertyValue("expectErrTypeStreamRenew") == null) {
		tC.setPropertyValue("expectErrTypeStreamRenew","SUCCESS");
}
if (tC.getPropertyValue("expectDBRenewedBy") == "" || tC.getPropertyValue("expectDBRenewedBy") == null) {
		tC.setPropertyValue("expectDBRenewedBy","");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Assert difference between EXPIRATION_DATE and CREATED_DATE not greater 24 hours" disabled="true" id="a37fde92-cc27-4aab-8b3c-b28523a0bb2e"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def streamhandle = tC.getPropertyValue("streamhandle");

a = new dbUtils.dbStreams(log);

assert a.streamHandleVerifyExpiration(streamhandle) &lt;= 24;</script></con:config></con:testStep><con:testStep type="groovy" name="Extract STREAM_DATA row" id="7015aa9a-a630-434d-8fa9-7c0d7678d082"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

String nodeid = tC.getPropertyValue("nodeid").toString();
String uname = tC.getPropertyValue("username").toString();
String sys = tP.getPropertyValue("targetSystem");
String sh = tC.getPropertyValue("streamhandle");
String results = null;
String accountoid = null;
String useroid = null;
String nodeUser = null;
String nodeAccount = null;
String userRowId = null;
String acctRowId = null;
String sql = """select 
to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
to_char(rawtohex(a.USER_OID)) USER_OID,
TRANSACTION_ID,
STATUS,
STREAM_CLIENT_NICKNAME,
EXPIRATION_DATE,
CLOSED_DATE,
CLOSED_BY_ORG_ID,
CREATED_DATE,
to_char(rawtohex(a.CREATED_BY)) CREATED_BY,
UPDATED_DATE,
to_char(rawtohex(a.UPDATED_BY)) UPDATED_BY 
from STREAM_DATA a where STREAM_HANDLE_OID =hextoraw('$sh')""";

results = a.SelectFromDB(sql,sys);
log.info results;

/*
*  If zero length, no need to continue;
*/
assert results.length() > 0;

try {
	def myXML = new XmlSlurper().parseText(results);
}
catch(Throwable e) {
	log.info e; 
	assert 1 == 2;
}
finally {
	tC.setPropertyValue("dbxmlresponse", results);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify DB Row Data" id="4600d02e-f575-49c1-b8a4-a373fc1effdc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode   = tP.getPropertyValue("urnNode");
def acct      = tC.getPropertyValue("nodeaccountid");

String XMLbody              = tC.getPropertyValue("dbxmlresponse");
String expectStreamHandle   = tC.getPropertyValue("streamhandle");
String expectAccountOID     = tC.getPropertyValue("accountoid");
String expectRightsToken    = tC.getPropertyValue("rightstokenid");
String expectUserOID        = tC.getPropertyValue("expectDBCreateUser");

String expectStatus         = tC.getPropertyValue("expectDBStatus");
String expectDBCreatedBy    = tC.getPropertyValue("expectDBCreatedBy");
String expectDBClosedBy = "null";
String streamCreateNodeType = tC.getPropertyValue("expectDBCreatedByNodeType");
String expectErrTypeStreamRenew = tC.getPropertyValue("expectErrTypeStreamRenew");
String expectDBUpdatedBy = tC.getPropertyValue("expectDBRenewedBy");

if (tC.getPropertyValue("expectDBDeletedBy") != null) {
	tC.setPropertyValue("expectDBClosedBy",urnnode + tC.getPropertyValue("expectDBDeletedBy"));
	
} 
expectDBClosedBy = tC.getPropertyValue("expectDBClosedBy");

String strcrtnodeid = "urn:dece:org:org:dece:"+tC.getPropertyValue("expectDBCreatedBy")
a = new dbUtils.dbNode(log);
String nodeoidcreate = a.nodeGetNodeId(strcrtnodeid);
tC.setPropertyValue("expectDBCreatedBy",nodeoidcreate);

String strdelnodeid = "urn:dece:org:org:dece:"+tC.getPropertyValue("expectDBDeletedBy")
b = new dbUtils.dbNode(log);
String nodeoiddelete = b.nodeGetNodeId(strdelnodeid);
tC.setPropertyValue("expectDBDeletedBy",nodeoiddelete);
if (expectDBUpdatedBy == "" || expectDBUpdatedBy == null) {
	expectDBUpdatedBy = "null";
}
expectDBCreatedBy    = tC.getPropertyValue("expectDBCreatedBy");
expectDBDeletedBy = tC.getPropertyValue("expectDBDeletedBy");

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	// Verify sizes...
	assert myXML.ResultSet.Row.STREAM_HANDLE_OID	.size() == 1;
	assert myXML.ResultSet.Row.ACCOUNT_OID.size() == 1;
	assert myXML.ResultSet.Row.RIGHTS_TOKEN_OID.size() == 1;
	assert myXML.ResultSet.Row.STATUS.size() == 1;
	assert myXML.ResultSet.Row.CREATED_BY.size() == 1;
	assert myXML.ResultSet.Row.CLOSED_BY_ORG_ID.size() == 1;
	assert myXML.ResultSet.Row.CLOSED_DATE.size() == 1;
	assert myXML.ResultSet.Row.UPDATED_DATE.size() == 1;
	assert myXML.ResultSet.Row.UPDATED_BY.size() == 1;
	
	String dbStreamHandle = myXML.ResultSet.Row.STREAM_HANDLE_OID.text();
	String dbAccountOid   = myXML.ResultSet.Row.ACCOUNT_OID.text();
	String dbRightsToken  = myXML.ResultSet.Row.RIGHTS_TOKEN_OID.text();
	String dbUserOid      = myXML.ResultSet.Row.USER_OID.text();
	String dbStatus       = myXML.ResultSet.Row.STATUS.text();
	String dbCreatedBy    = myXML.ResultSet.Row.CREATED_BY.text();
	String dbClosedBy     = myXML.ResultSet.Row.CLOSED_BY_ORG_ID.text();
	String dbClosedDate   = myXML.ResultSet.Row.CLOSED_DATE.text();
	String dbUpdatedDate  = myXML.ResultSet.Row.UPDATED_DATE.text();
	String dbUpdatedBy    = myXML.ResultSet.Row.UPDATED_BY.text();
	
	//STREAM_HANDLE_OID
	this.log.info "dbStreamHandle [$dbStreamHandle] - expectStreamHandle[$expectStreamHandle]";
	assert expectStreamHandle.toUpperCase() == dbStreamHandle;

	//ACCOUNT_OID
	this.log.info "dbAccountOid [$dbAccountOid] - expectAccountOID[$expectAccountOID]";
	assert expectAccountOID == dbAccountOid;

	//RIGHTS_TOKEN_OID
	this.log.info "dbRightsToken [$dbRightsToken] - expectRightsToken[$expectRightsToken]";
	assert dbRightsToken == expectRightsToken;

	//USER_OID
     
     if(tC.getPropertyValue("nodetype") == "llp" || tC.getPropertyValue("nodetype") == "dlp")
     {
	this.log.info "dbUserOid [$dbUserOid] - expectUserOID[$expectUserOID] - streamCreateNodeType[$streamCreateNodeType]";
	assert dbUserOid == expectUserOID;
     }
	//STATUS
	this.log.info "dbStatus [$dbStatus] - expectStatus[$expectStatus]";
	assert dbStatus == expectStatus;

	//CREATED_BY
	this.log.info "dbCreatedBy [$dbCreatedBy] - expectDBCreatedBy[$expectDBCreatedBy]";
	//assert dbCreatedBy == expectDBCreatedBy;

	//CLOSED_BY
	this.log.info "dbClosedBy [$dbClosedBy] - expectDBClosedBy[$expectDBClosedBy]";
	if (expectStatus == "active") {
		assert dbClosedBy == "null";
	} else {
		assert dbClosedBy == expectDBClosedBy;
	}

	//CLOSED_DATE
	this.log.info "dbClosedDate [$dbClosedDate]";
	if (expectStatus == "active") {
		log.info "Asserting dbClosedDate is null";
		assert dbClosedDate == "null";
	} else {
		log.info "Asserting dbClosedDate is length()";
		assert dbClosedDate.length() > 0;
	}

	//UPDATED_DATE
	this.log.info "Asserting dbUpdatedDate is null ";
	if (expectErrTypeStreamRenew == "SUCCESS") {
		assert dbUpdatedDate == "null";
	}

	//UPDATED_BY
	this.log.info "dbUpdatedBy[$dbUpdatedBy] expectDBUpdatedBy[$expectDBUpdatedBy]";
	assert dbUpdatedBy == expectDBUpdatedBy;
	
} else {
	assert 1 == 2;
}

</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_19057 - StreamListView - DECECS - AccountNotActive - ACCOUNT.STATUS of blocked status_not_displayed - 403 Forbidden</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>02B35C99EEAB4AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>useroid</con:name><con:value>02B35C99EEF64AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dececs</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>02B39B161F6C3142E05307991F0AB54B</con:value></con:property><con:property><con:name>dbxmlresponse</con:name><con:value><![CDATA[<Results>
  <ResultSet fetchSize='10'>
    <Row rowNumber='1'>
      <STREAM_HANDLE_OID>02B39B161F6C3142E05307991F0AB54B</STREAM_HANDLE_OID>
      <RIGHTS_TOKEN_OID>02B3C0D5FDAD46A3E05307991F0A8FB0</RIGHTS_TOKEN_OID>
      <ACCOUNT_OID>02B35C99EEAB4AD3E05307991F0AC84B</ACCOUNT_OID>
      <USER_OID>02B35C99EEF64AD3E05307991F0AC84B</USER_OID>
      <TRANSACTION_ID>1.0.1.3.S</TRANSACTION_ID>
      <STATUS>active</STATUS>
      <STREAM_CLIENT_NICKNAME>null</STREAM_CLIENT_NICKNAME>
      <EXPIRATION_DATE>2014-09-10 15:36:15.873</EXPIRATION_DATE>
      <CLOSED_DATE>null</CLOSED_DATE>
      <CLOSED_BY_ORG_ID>null</CLOSED_BY_ORG_ID>
      <CREATED_DATE>2014-09-10 09:36:15.873</CREATED_DATE>
      <CREATED_BY>CCE44AF42FCD063BE0401F0A07991776</CREATED_BY>
      <UPDATED_DATE>null</UPDATED_DATE>
      <UPDATED_BY>null</UPDATED_BY>
    </Row>
  </ResultSet>
</Results>]]></con:value></con:property><con:property><con:name>rightstokenid</con:name><con:value>02B3C0D5FDAD46A3E05307991F0A8FB0</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>expectTransactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectJDBCSQL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>CCE44AF42FCD063BE0401F0A07991776</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">CCE44AF42FCD063BE0401F0A07991776</con:value></con:property><con:property><con:name>expectDBCreateUser</con:name><con:value>02B35C99EEF64AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>expectDBDeleteUser</con:name><con:value>02B35C99EEF64AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>expectDBRenewedBy</con:name><con:value/></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>llpcs</con:value></con:property><con:property><con:name>expectErrTypeStreamRenew</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>QC_Id</con:name><con:value>55796</con:value></con:property><con:property><con:name>expectDBClosedBy</con:name><con:value>urn:dece:org:org:dece:LLASP_CS_1</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Verification of STREAM_DATA_HISTORY row" searchProperties="true" discardOkResults="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="2abf64e2-a163-44da-8659-16fd40af2035"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6cc4f731-0a4e-4152-805f-e95cb6df3e73"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("accountoid",null);
tC.setPropertyValue("useroid",null);
tC.setPropertyValue("counter",null);
tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("nodetype",null);
tC.setPropertyValue("streamhandle",null);
tC.setPropertyValue("dbxmlresponse",null);
tC.setPropertyValue("rightstokenid",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectTransactionid",null);
tC.setPropertyValue("expectNickname",null);
tC.setPropertyValue("expectJDBCSQL",null);
tC.setPropertyValue("expectDBCreatedBy",null);
tC.setPropertyValue("expectDBDeletedBy",null);
tC.setPropertyValue("expectDBStatus",null);
tC.setPropertyValue("expectDBCreateUser",null);
tC.setPropertyValue("expectDBDeleteUser",null);
tC.setPropertyValue("expectDBCreatedByNodeType",null);
tC.setPropertyValue("expectDBUpdatedBy",null);
tC.setPropertyValue("expectErrTypeStreamRenew",null);

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="50ea48e5-3d60-4300-9aa1-2dcb05e660fa"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("accountoid",callTC.getPropertyValue("accountoid"));
tC.setPropertyValue("useroid",callTC.getPropertyValue("useroid"));
tC.setPropertyValue("counter",callTC.getPropertyValue("counter"));
tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("nodetype",callTC.getPropertyValue("nodetype"));
tC.setPropertyValue("streamhandle",callTC.getPropertyValue("streamhandle"));
tC.setPropertyValue("rightstokenid",callTC.getPropertyValue("rightstokenid"));
tC.setPropertyValue("expectStatus",callTC.getPropertyValue("expectStreamStatus"));
tC.setPropertyValue("expectTransactionid",callTC.getPropertyValue("expectTransactionid"));
tC.setPropertyValue("expectNickname",callTC.getPropertyValue("expectNickname"));
tC.setPropertyValue("expectDBCreatedBy",callTC.getPropertyValue("expectDBCreatedBy"));
tC.setPropertyValue("expectDBDeletedBy",callTC.getPropertyValue("expectDBDeletedBy"));
tC.setPropertyValue("expectDBUpdatedBy",callTC.getPropertyValue("expectDBUpdatedBy"));
tC.setPropertyValue("expectDBStatus",callTC.getPropertyValue("expectDBStatus"));
tC.setPropertyValue("expectDBCreatedByNodeType",callTC.getPropertyValue("expectDBCreatedByNodeType"));
tC.setPropertyValue("expectDBCreateUser",callTC.getPropertyValue("expectDBCreateUser"));
tC.setPropertyValue("expectDBDeleteUser",callTC.getPropertyValue("expectDBDeleteUser"));
tC.setPropertyValue("expectErrTypeStreamRenew",callTC.getPropertyValue("expectErrTypeStreamRenew"));


if (tC.getPropertyValue("expectDBStatus") == "" || tC.getPropertyValue("expectDBStatus") == null) {
		tC.setPropertyValue("expectDBStatus","deleted");
}
if (tC.getPropertyValue("expectDBCreatedByNodeType") == "" || tC.getPropertyValue("expectDBCreatedByNodeType") == null) {
		tC.setPropertyValue("expectDBCreatedByNodeType",tC.getPropertyValue("nodetype"));
}
if (tC.getPropertyValue("expectDBDeleteUser") == "" || tC.getPropertyValue("expectDBDeleteUser") == null) {
		tC.setPropertyValue("expectDBDeleteUser",tC.getPropertyValue("useroid"));
}
if (tC.getPropertyValue("expectDBCreateUser") == "" || tC.getPropertyValue("expectDBCreateUser") == null) {
		tC.setPropertyValue("expectDBCreateUser",tC.getPropertyValue("useroid"));
}
if (tC.getPropertyValue("expectErrTypeStreamRenew") == "" || tC.getPropertyValue("expectErrTypeStreamRenew") == null) {
		tC.setPropertyValue("expectErrTypeStreamRenew","SUCCESS");
}
if (tC.getPropertyValue("expectDBUpdatedBy") == "" || tC.getPropertyValue("expectDBUpdatedBy") == null) {
		tC.setPropertyValue("expectDBUpdatedBy",tC.getPropertyValue("nodeid"));
}
</script></con:config></con:testStep><con:testStep type="jdbc" name="Extract the STREAM_DATA_HISTORY row" disabled="true" id="10e92b8d-f1fc-40d2-bc93-f89cab956dc0"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>select * from STREAM_DATA_HISTORY where STREAM_HANDLE_OID = :sh and STATUS = :status ORDER BY UPDATED_DATE
</con:query><con:properties><con:property><con:name>sh</con:name><con:value>${#TestCase#streamhandle}</con:value></con:property><con:property><con:name>status</con:name><con:value>${#TestCase#expectDBStatus}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" disabled="true" id="15ce8b27-e18a-4536-baef-b04d3b9d5985"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" useXQuery="false" entitize="false" transferChildNodes="false" ignoreEmpty="false" transferToAll="false"><con:name>a</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Extract the STREAM_DATA_HISTORY row</con:sourceStep><con:targetType>dbxmlresponse</con:targetType><con:targetStep>#TestCase#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="Extract STREAM_DATA_HISTORY row" id="2427105a-40af-417e-a224-74120a88736e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

a = new dbUtils.dbUtils(log,tP.getPropertyValue("targetSystem").toString());

String nodeid = tC.getPropertyValue("nodeid").toString();
String uname = tC.getPropertyValue("username").toString();
String sys = tP.getPropertyValue("targetSystem");
String sh = tC.getPropertyValue("streamhandle");
String status = tC.getPropertyValue("expectDBStatus");
String results = null;
String accountoid = null;
String useroid = null;
String nodeUser = null;
String nodeAccount = null;
String userRowId = null;
String acctRowId = null;
String sql = """select 
to_char(rawtohex(a.STREAM_HISTORY_OID)) STREAM_HISTORY_OID,
to_char(rawtohex(a.STREAM_HANDLE_OID)) STREAM_HANDLE_OID,
to_char(rawtohex(a.RIGHTS_TOKEN_OID)) RIGHTS_TOKEN_OID,
to_char(rawtohex(a.ACCOUNT_OID)) ACCOUNT_OID,
to_char(rawtohex(a.USER_OID)) USER_OID,
TRANSACTION_ID,
STATUS,
STREAM_CLIENT_NICKNAME,
EXPIRATION_DATE,
CLOSED_DATE,
CLOSED_BY_ORG_ID,
CREATED_DATE,
to_char(rawtohex(a.CREATED_BY)) CREATED_BY,
UPDATED_DATE,
to_char(rawtohex(a.UPDATED_BY)) UPDATED_BY 
from STREAM_DATA_HISTORY a where STREAM_HANDLE_OID =hextoraw('$sh') 
 and STATUS = '$status'""";

results = a.SelectFromDB(sql,sys);
log.info results;

/*
*  If zero length, no need to continue;
*/
assert results.length() > 0;


try {
	def myXML = new XmlSlurper().parseText(results);
	log.info "myXML.ResultSet.Row.size() is [" + myXML.ResultSet.Row.size() + "]";
	assert myXML.ResultSet.Row.size() >= 1;
}
catch(Throwable e) {
	log.info e; 
	assert 1 == 2;
}
finally {
	tC.setPropertyValue("dbxmlresponse", results);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Verify DB Row Data" id="6439eea9-590e-4cc5-b331-ab5dfcba6b42"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = tP.getPropertyValue("targetHost");
def urnacct   = tP.getPropertyValue("urnaccount");
def urnstream = tP.getPropertyValue("urnstream");
def urnnode   = tP.getPropertyValue("urnNode");
def acct      = tC.getPropertyValue("nodeaccountid");

String XMLbody = tC.getPropertyValue("dbxmlresponse");
String expectStreamHandle = tC.getPropertyValue("streamhandle");
String expectAccountOID   = tC.getPropertyValue("accountoid");
String expectRightsToken  = tC.getPropertyValue("rightstokenid");
String expectUserOID      = tC.getPropertyValue("expectDBCreateUser");
String expectStatus       = tC.getPropertyValue("expectDBStatus");
String expectDBCreatedBy  = tC.getPropertyValue("expectDBCreatedBy");
String expectDBUpdatedBy  = tC.getPropertyValue("expectDBUpdatedBy");
String expectDBClosedBy   = urnnode + tC.getPropertyValue("expectDBDeletedBy");
String streamCreateNodeType     = tC.getPropertyValue("expectDBCreatedByNodeType");
String expectErrTypeStreamRenew = tC.getPropertyValue("expectErrTypeStreamRenew");
int    counter = tC.getPropertyValue("counter").toInteger();

if (expectErrTypeStreamRenew == "SUCCESS") {
	counter++;
} else {
	expectDBUpdatedBy = "";
}

if (XMLbody != null) {
	def myXML = new XmlSlurper().parseText(XMLbody);

	// Verify sizes...
	this.log.info "Row size is " + myXML.ResultSet.Row.size() + " counter[$counter]";
	assert myXML.ResultSet.Row.size() == counter;
	assert myXML.ResultSet.Row.STREAM_HISTORY_OID.size() == counter;
	assert myXML.ResultSet.Row.STREAM_HANDLE_OID	.size() == counter;
	assert myXML.ResultSet.Row.ACCOUNT_OID.size() == counter;
	assert myXML.ResultSet.Row.RIGHTS_TOKEN_OID.size() == counter;
	assert myXML.ResultSet.Row.STATUS.size() == counter;
	assert myXML.ResultSet.Row.CREATED_BY.size() == counter;
	assert myXML.ResultSet.Row.CLOSED_BY_ORG_ID.size() == counter;
	assert myXML.ResultSet.Row.CLOSED_DATE.size() == counter;

	for (int i = 0; i &lt; counter; i++) {
		this.log.info "----ROW [$i] ----";
		String dbStreamHandle = myXML.ResultSet.Row[i].STREAM_HANDLE_OID.text();
		String dbAccountOid   = myXML.ResultSet.Row[i].ACCOUNT_OID.text();
		String dbRightsToken  = myXML.ResultSet.Row[i].RIGHTS_TOKEN_OID.text();
		String dbUserOid      = myXML.ResultSet.Row[i].USER_OID.text();
		String dbStatus       = myXML.ResultSet.Row[i].STATUS.text();
		String dbCreatedBy    = myXML.ResultSet.Row[i].CREATED_BY.text();
		String dbClosedBy     = myXML.ResultSet.Row[i].CLOSED_BY_ORG_ID.text();
		String dbClosedDate   = myXML.ResultSet.Row[i].CLOSED_DATE.text();
		String dbUpdatedBy    = myXML.ResultSet.Row[i].UPDATED_BY.text();
		String dbUpdatedDate  = myXML.ResultSet.Row[i].UPDATED_DATE.text();
	
		//STREAM_HANDLE_OID
		this.log.info "dbStreamHandle [$dbStreamHandle] - expectStreamHandle[$expectStreamHandle]";
		assert expectStreamHandle.toUpperCase() == dbStreamHandle;

		//ACCOUNT_OID
		this.log.info "dbAccountOid [$dbAccountOid] - expectAccountOID[$expectAccountOID]";
		assert expectAccountOID == dbAccountOid;

		//RIGHTS_TOKEN_OID
		this.log.info "dbRightsToken [$dbRightsToken] - expectRightsToken[$expectRightsToken]";
		assert dbRightsToken == expectRightsToken;

		//USER_OID
		this.log.info "dbUserOid [$dbUserOid] - expectUserOID[$expectUserOID]";
		if (streamCreateNodeType == "llpcs" || streamCreateNodeType == "dlpcs") {
			assert dbUserOid == "";
		} else {
			assert dbUserOid == expectUserOID;
		}

		//STATUS
		this.log.info "dbStatus [$dbStatus] - expectStatus[$expectStatus]";
		assert dbStatus == expectStatus;

		//CREATED_BY
		this.log.info "dbCreatedBy [$dbCreatedBy] - expectDBCreatedBy[$expectDBCreatedBy]";
		assert dbCreatedBy == expectDBCreatedBy;

		//CLOSED_BY
		this.log.info "dbClosedBy [$dbClosedBy] - expectDBClosedBy[$expectDBClosedBy]";
		if (expectStatus == "active") {
			assert dbClosedBy == "";
		} else {
			assert dbClosedBy == expectDBClosedBy;
		}

		//CLOSED_DATE
		this.log.info "dbClosedDate [$dbClosedDate]";
		if (expectStatus == "active") {
			assert dbClosedBy == "";
		} else {
			assert dbClosedBy.length() > 0;
		}

		//UPDATED_BY and UPDATED_DATE
		/*
		*  The last row returned will always be the history row that 
		*  StreamCreate made.  Thus, the UPDATED_BY should always be
		*  NULL
		*/
		this.log.info "i[$i] - dbUpdatedDate length [" + dbUpdatedDate.length() + "]";
		if (i == counter - 1) {
			expectDBUpdatedBy = "";
			assert dbUpdatedDate.length() == 0;			
		} else {
			expectDBUpdatedBy = tC.getPropertyValue("expectDBUpdatedBy");
			assert dbUpdatedDate.length() > 0;			
		}
		this.log.info "dbUpdatedDate[$dbUpdatedDate]";
		this.log.info "dbUpdatedBy[$dbUpdatedBy] - expectDBUpdatedBy[$expectDBUpdatedBy]";
		assert dbUpdatedBy == expectDBUpdatedBy;
	}
} else {
	assert 1 == 2;
}

</script></con:config></con:testStep><con:properties><con:property><con:name>tName</con:name><con:value>TC_DECE_02010 - StreamRenew - DLPCS - Two stream renewals allowed for a stream</con:value></con:property><con:property><con:name>sName</con:name><con:value>LASP Dynamic (DLPCS) Customer Service Test Cases</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>0900</con:value></con:property><con:property><con:name>useroid</con:name><con:value>0600</con:value></con:property><con:property><con:name>streamhandle</con:name><con:value>9904BDD1BD5DCB6DE0401F0A0599071B</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>9116</con:value></con:property><con:property><con:name>expectTransactionid</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectNickname</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectJDBCSQL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>expectSQLwithTransaction</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID>${#TestCase#useroid}</USER_OID>        <TRANSACTION_ID>${#TestCase#expectTransactionid}</TRANSACTION_ID>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME/>        <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectSQLDefault</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID>${#TestCase#useroid}</USER_OID>        <TRANSACTION_ID/>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME>${#TestCase#expectNickname}</STREAM_CLIENT_NICKNAME>        <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectSQLwithNickname</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID>${#TestCase#useroid}</USER_OID>        <TRANSACTION_ID/>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME>${#TestCase#expectNickname}</STREAM_CLIENT_NICKNAME>       <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectSQLDefaultLLP</con:name><con:value><![CDATA[<Results>     <ResultSet fetchSize="10">         <Row rowNumber="1">             <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>             <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>             <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>             <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>             <USER_OID/>             <TRANSACTION_ID/>             <STATUS>deleted</STATUS>             <STREAM_CLIENT_NICKNAME/>             <EXPIRATION_DATE>*</EXPIRATION_DATE>             <CLOSED_DATE>*</CLOSED_DATE>             <CLOSED_BY_ORG_ID>${#Project#urnNode}${#TestCase#expectDBDeletedBy}</CLOSED_BY_ORG_ID>             <CREATED_DATE>*</CREATED_DATE>             <CREATED_BY>${#TestCase#expectDBCreatedBy}</CREATED_BY>             <UPDATED_BY/>             <UPDATED_DATE/>         </Row>     </ResultSet> </Results>]]></con:value></con:property><con:property><con:name>nodetype</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectSQLwithTransactionLLP</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID/>        <TRANSACTION_ID>${#TestCase#expectTransactionid}</TRANSACTION_ID>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME/>        <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectSQLwithNicknameLLP</con:name><con:value><![CDATA[<Results>    <ResultSet fetchSize="10">      <Row rowNumber="1">        <STREAM_HISTORY_OID>*</STREAM_HISTORY_OID>        <STREAM_HANDLE_OID>${#TestCase#streamhandle}</STREAM_HANDLE_OID>        <RIGHTS_TOKEN_OID>${#TestCase#rightstokenid}</RIGHTS_TOKEN_OID>        <ACCOUNT_OID>${#TestCase#accountoid}</ACCOUNT_OID>        <USER_OID/>       <TRANSACTION_ID/>        <STATUS>${#TestCase#expectStatus}</STATUS>        <STREAM_CLIENT_NICKNAME>${#TestCase#expectNickname}</STREAM_CLIENT_NICKNAME>       <EXPIRATION_DATE>*</EXPIRATION_DATE>        <CLOSED_DATE/>        <CLOSED_BY_ORG_ID/>        <CREATED_DATE>*</CREATED_DATE>        <CREATED_BY>${#TestCase#nodeid}</CREATED_BY>        <UPDATED_BY/>        <UPDATED_DATE/>      </Row>    </ResultSet>  </Results>]]></con:value></con:property><con:property><con:name>expectDBCreatedBy</con:name><con:value>9116</con:value></con:property><con:property><con:name>expectDBDeletedBy</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">9116</con:value></con:property><con:property><con:name>expectDBStatus</con:name><con:value>active</con:value></con:property><con:property><con:name>dbxmlresponse</con:name><con:value><![CDATA[<Results>
    <ResultSet fetchSize="10">
        <Row rowNumber="1">
            <STREAM_HISTORY_OID>9904BDD1BD63CB6DE0401F0A0599071B</STREAM_HISTORY_OID>
            <STREAM_HANDLE_OID>9904BDD1BD5DCB6DE0401F0A0599071B</STREAM_HANDLE_OID>
            <RIGHTS_TOKEN_OID>9904BDD1BD4CCB6DE0401F0A0599071B</RIGHTS_TOKEN_OID>
            <ACCOUNT_OID>0900</ACCOUNT_OID>
            <USER_OID>0600</USER_OID>
            <TRANSACTION_ID/>
            <STATUS>active</STATUS>
            <STREAM_CLIENT_NICKNAME/>
            <EXPIRATION_DATE>2011-01-05 06:59:37</EXPIRATION_DATE>
            <CLOSED_DATE/>
            <CLOSED_BY_ORG_ID/>
            <CREATED_DATE>2011-01-04 13:05:33.241</CREATED_DATE>
            <CREATED_BY>9116</CREATED_BY>
            <UPDATED_BY>9116</UPDATED_BY>
            <UPDATED_DATE>2011-01-04 13:05:39.87</UPDATED_DATE>
        </Row>
        <Row rowNumber="2">
            <STREAM_HISTORY_OID>9904BDD1BD5ECB6DE0401F0A0599071B</STREAM_HISTORY_OID>
            <STREAM_HANDLE_OID>9904BDD1BD5DCB6DE0401F0A0599071B</STREAM_HANDLE_OID>
            <RIGHTS_TOKEN_OID>9904BDD1BD4CCB6DE0401F0A0599071B</RIGHTS_TOKEN_OID>
            <ACCOUNT_OID>0900</ACCOUNT_OID>
            <USER_OID>0600</USER_OID>
            <TRANSACTION_ID/>
            <STATUS>active</STATUS>
            <STREAM_CLIENT_NICKNAME/>
            <EXPIRATION_DATE>2011-01-05 13:05:33.242</EXPIRATION_DATE>
            <CLOSED_DATE/>
            <CLOSED_BY_ORG_ID/>
            <CREATED_DATE>2011-01-04 13:05:33.241</CREATED_DATE>
            <CREATED_BY>9116</CREATED_BY>
            <UPDATED_BY/>
            <UPDATED_DATE/>
        </Row>
    </ResultSet>
</Results>
]]></con:value></con:property><con:property><con:name>expectStatus</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>rightstokenid</con:name><con:value>9904BDD1BD4CCB6DE0401F0A0599071B</con:value></con:property><con:property><con:name>expectDBCreatedByNodeType</con:name><con:value>dlpcs</con:value></con:property><con:property><con:name>expectDBCreateUser</con:name><con:value>0600</con:value></con:property><con:property><con:name>expectDBDeleteUser</con:name><con:value>0600</con:value></con:property><con:property><con:name>counter</con:name><con:value>1</con:value></con:property><con:property><con:name>expectErrTypeStreamRenew</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>expectDBUpdatedBy</con:name><con:value>9116</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>55797</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename Test Cases" searchProperties="true" disabled="true" id="c35ac29d-e035-4d02-910e-bfdb7a5fabf3"><con:settings/><con:testStep type="groovy" name="Rename Test Cases" id="88824c31-487d-40cc-8377-cbee8eed6b45"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

import java.io.*;

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "Coordinator Customer Support Test Cases";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

def TCNum = 13;

//BufferedWriter bufferedWriter = null;
//bufferedWriter = new BufferedWriter(new FileWriter("c:\\DiscreteMediaLeaseCreateQuestions.txt"));

def oldTestCaseName;
def newTestCaseName;

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	//if(targetTestCase.isDisabled() == false)
	//{
		targetTestCase.setFailOnError(true);
		oldTestCaseName = TCList[i].name;
		//newTestCaseName = oldTestCaseName.replace(" ", "");
		//newTestCaseName = newTestCaseName.replace("_POST_", "_GET_");
		//newTestCaseName = newTestCaseName.replace("_RTL_", "_RTL_CS_");
		newTestCaseName = oldTestCaseName.replace(" DECECS ", " COORDINATORCS ");	
		/*	
		if (TCNum.toString().length() == 1)
			newTestCaseName = "TC_DECE_0000" + TCNum.toString() + "_PolicyCreate" + newTestCaseName.split("PolicyCreate")[1]
		else if (TCNum.toString().length() == 2)
			newTestCaseName = "TC_DECE_000" + TCNum.toString() + "_PolicyCreate" + newTestCaseName.split("PolicyCreate")[1]
		else if (TCNum.toString().length() == 3)
			newTestCaseName = "TC_DECE_00" + TCNum.toString() + "_PolicyCreate" + newTestCaseName.split("PolicyCreate")[1]
		else if (TCNum.toString().length() == 4)
			newTestCaseName = "TC_DECE_0" + TCNum.toString() + "_PolicyCreate" + newTestCaseName.split("PolicyCreate")[1]
			*/
		targetTestCase.name = newTestCaseName;	
		TCNum = TCNum + 1;
		log.info "Done renaming Test Case '" + oldTestCaseName + "' to '" + newTestCaseName + "'";
	//}
	//else
	//{
	//	bufferedWriter.write(targetTestCase.name);
	//	bufferedWriter.newLine();
	//}
}

//if (bufferedWriter != null) {
	//bufferedWriter.flush();
     //bufferedWriter.close();
//}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>PERM_ACCOUNT_CONSENT_POLICIES</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set a Property" searchProperties="true" disabled="true" id="bf671097-2c6e-4ff9-a0f1-61582473e815"><con:settings/><con:testStep type="groovy" name="Set a Property" id="8d4cfc18-5262-40fd-a75a-696f66857be1"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "Portal (PORTAL) Test Cases";
def propertyName;

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);	
	propertyName = testCase.getPropertyValue("PropertyName");	
	propertyValue = testCase.getPropertyValue("PropertyValue");		
	if(targetTestCase.isDisabled() == false)
	{
		try
		{
			//nodeRole = targetTestCase.getPropertyValue("ErrorResponse");
			propertyName != "aaaaaa";			
			/*if(nodeRole == 'ForbiddenRightsTokenAccessNotAllowed')
			{
				nodeRole = 'ForbiddenDiscreteMediaRightOwnerMismatch';
			}
			*/
			propertyValue = null
			targetTestCase.setPropertyValue(propertyName, propertyValue);
			log.info "Done with Test Case '" + TCList[i].name + "'";
		}
		catch(Throwable e)
		{
			log.info e.text;
		}		
	}	
}

log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>FUNC_USER_CONSENT_POLICIES</con:value></con:property><con:property><con:name>PropertyName</con:name><con:value>NumberOfPolicyRequestingEntities</con:value></con:property><con:property><con:name>PropertyValue</con:name><con:value>1</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Change a step's script for all Steps in a Suite" searchProperties="true" disabled="true" id="7c85533d-a6f9-48d3-afb2-c0c7887f5078"><con:settings/><con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="a8f6bfe2-c6b3-4d36-8057-3df2b8f8c5ca"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Authentication and Authorization"; 

def oldString = """tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid20").toString());""";
def newString = """tC.setPropertyValue("nodeid","5440");""";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				def testStepName = testStepList[j].name;
				
				if (testStepName == "Establish Requesting Entity Environment") {
					log.info "Hit!";
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					
					stepScript = testStepList[j].getScript();
				
					/*
					*  Delete a step
					*/
					//targetTestStep.delete();

					/*
					*  Replaces step's script completely
					*/
					stepScript = """import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Configuration/Setup").getTestCaseByName("Authentication Contexts")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
""";
					targetTestStep.setScript(stepScript);		

					/*
					*  Replace a part of the script
					*/
					//stepScript = stepScript.replace(oldString, newString);
					//targetTestStep.setScript(stepScript);		
				}
				
				//targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info e;
			}	
		}
	}
}						
log.info 'Woohoo!'
</script></con:config></con:testStep><con:testStep type="groovy" name="change test case script" id="7f52b76d-e402-4575-b9cd-c43441a32bef"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
//def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Coordinator Customer Support Test Cases"; 

def oldString = """tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid40").toString());""";
def newString = """tC.setPropertyValue("nodeid",tP.getPropertyValue("nodeoid50").toString());""";

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				def testStepName = testStepList[j].name;
				
				if (testStepName == "Establish Entity Authentication Context to DECECS") {
					log.info "Hit!";
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					stepScript = testStepList[j].getScript();
					stepScript = stepScript.replace(oldString, newString);
					targetTestStep.setScript(stepScript);		

					/*
					*  Delete a step
					*/
					//targetTestCase.removeTestStep(targetTestStep);

					/*
					*  Replaces step's script completely
					*/
					//stepScript = """""";
					//targetTestStep.setScript(stepScript);		
				}

			}
			catch(Throwable e)
			{
				log.info e;
			}	
		}
	}
}						
log.info 'Woohoo!'</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL_CS</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove a Property" searchProperties="true" disabled="true" id="5661f9e3-4dbe-4aaa-bcd7-e897ab5bebec"><con:settings/><con:testStep type="groovy" name="Remove a Property" id="9663b1a5-71ab-4644-94cd-dce0d9f2bdf6"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
//def testSuite = testCase.getPropertyValue("TestSuite"); 
def testSuite = "Portal Customer Support Test Cases";
def propertyName;

def TCList = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{	
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);	

	for( prop in targetTestCase.properties) {
		/*
		*  This will remove all test case properties
		*/
   		//targetTestCase.removeProperty( prop.value.name )
   		log.info "prop.value.name is " + prop.value.name;
   		if (prop.value.name == "cid" || prop.value.name == "alid") {
   			log.info "Removing " + prop.value.name;
   			targetTestCase.removeProperty( prop.value.name )
   		}
   	}
}
/*	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	propertyName = testCase.getPropertyValue("PropertyName");	
	propertyValue = testCase.getPropertyValue("PropertyValue");		
	if(targetTestCase.isDisabled() == false)
	{
		try
		{
			//nodeRole = targetTestCase.getPropertyValue("ErrorResponse");
			propertyName = "synced";			
			/*if(nodeRole == 'ForbiddenRightsTokenAccessNotAllowed')
			{
				nodeRole = 'ForbiddenDiscreteMediaRightOwnerMismatch';
			}
			*/
			/*
			propertyValue = null
			targetTestCase.setPropertyValue(propertyName, propertyValue);
			log.info "Done with Test Case '" + TCList[i].name + "'";
		}
		catch(Throwable e)
		{
			log.info e.text;
		}		
	}	
}
*/
log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>FUNC_USER_CONSENT_POLICIES</con:value></con:property><con:property><con:name>PropertyName</con:name><con:value>NumberOfPolicyRequestingEntities</con:value></con:property><con:property><con:name>PropertyValue</con:name><con:value>1</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Remove a Step for all Testcases in a Suite" searchProperties="true" disabled="true" id="5346399c-ab41-473a-a37b-c1d560fb2939"><con:settings/><con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="07bbace4-f813-4ce5-ae19-a17f8b6d9b2a"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Portal (PORTAL) Test Cases"; 
def stepName  = "Change context to DECE";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList  = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				if (testStepList[j].name == stepName) {
					log.info "Removing Step " + testStepList[j].name;
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					targetTestCase.removeTestStep(targetTestStep);
				}
				
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info "ERROR:" + e;
			}	
		}
	}
}						
log.info 'Woohoo!'
</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL_CS</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Rename a Step" searchProperties="true" disabled="true" id="2f9de82d-88be-4b07-8b34-925fda46662d"><con:settings/><con:testStep type="groovy" name="Change a step's script for all Steps in a Suite" id="99be64e4-3c75-4689-b4a2-357311146b7a"><con:settings/><con:config><script>//Copyright (c) 2010 Bhavin Bharat Joshi - Neustar, Inc.

//TestCase
def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Coordinator Customer Support Test Cases"; 
def stepName  = "Establish Entity Authentication Context to DECECS";
def stepNewName  = "Establish Entity Authentication Context to COORDINATORCS";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList  = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				if (testStepList[j].name == stepName) {
					log.info "Renaming Step " + testStepList[j].name;
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					targetTestStep.name = stepNewName;
				}
				
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info "ERROR:" + e;
			}	
		}
	}
}						
log.info 'Woohoo!'
</script></con:config></con:testStep><con:testStep type="groovy" name="Remove script for all test cases in a suite" id="b273bc45-1205-4295-8b89-cea576481815"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();

//Get Arguments
def testSuite = "Link LASP Customer Service Test Cases_P2"; 
def stepName  = "Delay 2";

def TCList  = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseList();
def TCCount = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseCount();

for(i = 0; i &lt;= TCCount - 1; i++)
{			
	def targetTestCase = testRunner.testCase.testSuite.project.getTestSuiteByName(testSuite).getTestCaseByName(TCList[i].name);
	testStepList  = targetTestCase.getTestStepList();
	testStepCount = targetTestCase.getTestStepCount();
	if(targetTestCase.isDisabled() == false)
	{
		for(j = 0; j &lt;= testStepCount - 1; j++)
		{
			try
			{
				if (testStepList[j].name == stepName) {
					log.info "Removing Step " + testStepList[j].name;
					targetTestStep = targetTestCase.getTestStepByName(testStepList[j].name);
					targetTestCase.removeTestStep(targetTestStep);
				}
				
				//stepScript = testStepList[j].getScript();
				//stepScript = stepScript.replace(oldString, newString);
				//targetTestStep.setScript(stepScript);		
			}
			catch(Throwable e)
			{
				log.info "ERROR:" + e;
			}	
		}
	}
}						
log.info 'Woohoo!'</script></con:config></con:testStep><con:properties><con:property><con:name>TestSuite</con:name><con:value>RTL_CS</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Remove Allow Adult Policy" searchProperties="true" id="67f91954-c6a0-4f4f-bdf2-6c82e5b65ad4"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="5252c6d1-17d7-4bfd-9f1a-13affd5f4b79"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="204f0c16-6679-4979-9cd3-dfbd604dfe34"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:AllowAdult" id="fb42e03f-e4c0-4a37-9a0a-b86d46cdf582"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ParentalControl:AllowAdult");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalControlAllowAdult")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:AllowAdult" id="34d85784-bcc2-4f51-8b9b-0a3c9dfa81af"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "ParentalControl:AllowAdult");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlAllowAdult")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="removepolicies" disabled="true" id="b5e00af4-683c-4d9c-be3a-0d46e9410e1b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def useroid = context.expand( '${#TestCase#useroid}' )

a = new dbUtils.dbPolicy(log,tP.getPropertyValue("targetSystem"));
log.info "useroid"+useroid;
a.policyDelete(302,useroid,"deleted")
a.policyDelete(300,useroid,"deleted")
a.policyDelete(304,useroid,"deleted")
</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>true</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[Unauthorized request with Authorization value too short
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
<Error ErrorID="urn:dece:errorid:org:dece:securitycontext:unauthorized">
       <Reason Language="en">The request is not authorized.</Reason>
        <OriginalRequest></OriginalRequest>
       <ErrorLink></ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>Coordinator Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_68152 - StreamListView - COORDINATORCS - Policy - AllowAdult - US - MMPA - Can view stream that IS_ADULT without policy</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77796</con:value></con:property><con:property><con:name>useroid</con:name><con:value>0600</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>0013F89D25CC5A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Allow Adult Policy Establishment" searchProperties="true" id="1a4dc79c-4c62-4ded-b616-7c24b5099165"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="57da43ee-8357-4aa5-89dd-187304bece97"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="8a8d3a97-3780-44a9-b835-555138c75999"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
	tC.getPropertyValue("policyCreator") == tC.getPropertyValue("assertionUserIdFULL");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for Policy" id="7f3da642-07cd-48a2-8bf1-b1e91508201d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalControlAllowAdult")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for Policy if necessary" id="0a9da1c8-b4d5-4cfb-ace3-e8f11aec510b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", tC.getPropertyValue("policyClass"));

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlAllowAdult")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for Policy" id="b7affec0-7c18-439f-8707-f8ec2e31d211"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyRequestEntity","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass","ParentalControl:AllowAdult");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for ParentalControlAllowAdult")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>nodeid</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>urn:dece:type:policy:ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[Unauthorized request with Authorization value too short
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
<Error ErrorID="urn:dece:errorid:org:dece:securitycontext:unauthorized">
       <Reason Language="en">The request is not authorized.</Reason>
        <OriginalRequest></OriginalRequest>
       <ErrorLink></ErrorLink>
    </Error>
</ErrorList>
]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>Coordinator Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_68152 - StreamListView - COORDINATORCS - Policy - AllowAdult - US - MMPA - Can view stream that IS_ADULT without policy</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77798</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>0013F89D25CC5A72E0533D991E0A0D12</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Establish High-Level Policies for User/Account/Node" searchProperties="true" id="47fd6f6e-b776-41dc-a51d-a76451e711e4"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="6570ebcd-218a-4bac-86ba-6699c05997d5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="60d6a919-12c4-444a-ba37-fc9e846a7dc8"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserLinkConsent" id="8b2255e3-b761-44d6-8c81-5f59521e417a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "UserLinkConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserLinkConsent if necessary" id="5b8a569c-c105-4498-9f44-0b93d45fe2a8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "UserLinkConsent");
	tC.setPropertyValue("policyRequestEntity","urn:dece:org:org:dece:"+tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	tC.setPropertyValue("policyCreator","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableManageUserConsent" disabled="true" id="c3505b2d-1a0f-4b1c-9ef6-430548c7e9a7"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableManageUserConsent if necessary" disabled="true" id="2f1ea482-8ed3-412a-9bff-2e5e5b1fd295"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ManageUserConsent" id="136af926-fe85-4267-8bbb-09f2b4252bd9"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for ManageUserConsent if necessary" id="1a413845-1857-465c-8198-cdfbabb097b6"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass","ManageUserConsent");
	tC.setPropertyValue("policyRequestEntity","urn:dece:org:org:dece:"+tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	tC.setPropertyValue("policyCreator","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsentRequired" disabled="true" id="e739d107-3f13-4c2b-a440-349fafb43ee0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsentRequired if necessary" disabled="true" id="fcc038bf-5711-40d6-bd69-8773760cd9e0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsent" disabled="true" id="ae5e54c0-24a7-4568-99da-1e1292e4fb43"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsent if necessary" disabled="true" id="d72f12e9-9175-4718-a013-4e18a0190770"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserDataUsageConsent" id="1aa6b15c-651d-4e17-8ea3-4579162c2ee2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserDataUsageConsent if necessary" id="2dc70af9-8b7f-449d-8db4-10f9f3c91c93"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass","UserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity","urn:dece:org:org:dece:"+tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	tC.setPropertyValue("policyCreator","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">true</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_68152 - StreamListView - DECECS - Policy - AllowAdult - US - MMPA - Can view stream that IS_ADULT without policy</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>UserLinkConsent</con:value></con:property><con:property><con:name>assert</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>0014007EB29E633EE0533D991E0A916B</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionAccountId</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Remove all Parental Control Policies" searchProperties="true" id="de14713a-155d-4fd2-a530-e3d528cecae5"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="916483f6-61e9-4047-b655-9fb1552a5d8f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="3bc214a2-f6c2-4a14-a901-07fd64bd858b"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:RatingPolicy" id="c69406ce-08fd-45c2-afb0-bf1639fe5dd8"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ParentalControl:RatingPolicy");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalConrolRating")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:RatingPolicy" id="a82dc51a-4a2f-4877-b453-b8e8df391109"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "ParentalControl:RatingPolicy");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlRating")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:BlockUnratedContent" id="1ee985ce-be3f-4a56-9418-e36f5bb6f25e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ParentalControl:BlockUnratedContent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalControlBlockUnratedContent")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:BlockUnratedContent" id="c829a18e-09d2-431d-a877-0e0ba3e3f408"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "ParentalControl:BlockUnratedContent");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlBlockUnratedContent")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:AllowAdult" disabled="true" id="a9ece84b-6e72-4785-92d2-8745b5339b6c"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:AllowAdult");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:AllowAdult" disabled="true" id="15833cb6-0a21-4864-acd2-58ed7bb8c8d3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:AllowAdult");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="removepolicies" disabled="true" id="6dee5d4e-bce3-46be-a78b-6dc02b7c7bdb"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def useroid = context.expand( '${#TestCase#useroid}' )

a = new dbUtils.dbPolicy(log,tP.getPropertyValue("targetSystem"));
log.info "useroid"+useroid;
a.policyDelete(302,useroid,"deleted")
a.policyDelete(300,useroid,"deleted")
a.policyDelete(304,useroid,"deleted")
</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZpb+I8EP4rKP1YhZwciQoS5zZdoC2h55fKdRwwJA61HaD99a8dIAVK+7K7EhLyZDzzzOFn5oKBODLdBmOIcpyQwiqOCHMzaU1JKXETwDBzCYgRczl0/Ua/55pF3QXbK0rBa9eUF8t8tQIbQVVHAKl2YJuqYzlQdaqVaqi/OkHFMoQqYynyCOOA8Jpi6kZJ1S3xGxmGWzJc2yqKS89K4R5RJmwLlaKubECtWE2ZcD53NW25XBaXVjGhY83UdUN77Pd8OEExUOoX64gyR7S+0YfFAEEURbAIk1i70PZ0LgLm+nhMAE8p2vgKvvOla7qjCZ2A4fGZkt9FgUfCJDu2AEkIhiDCH0Dmp4/4JAkKjWicUMwn8bdBGLo0rKIVVKFhkzNF24d2oqE9hJQBlU2AsbE1RCGiiEBUuBt6NeXstKplV0cUEBYmNGb7xz/Dg8gCRckcBSrbhrWBdrrBI5mqXyDoegRGKcMLNJDNOgcQsU01ETzdVOGGohCvepiJBl0xiU7bhXdwXGejjceI8b8p0E5x1kbuQZSievvh49Lyyk8jsrwcNBu37XAxJXfLgRl5tQzArnImyEu7Ph40Zd5E6xtX1dFyFU4a1F82P5pW9O7Pbht9Ypb03t15VJmGveo9WcQP+HkaPN7HLfPm1bseDp3B1cPV2+juujK7YtMuXbJpase3g+mUdanTvOrEaDq7fe4351NzdXlfWXq/gR+PZ+ed7qBfrdqzgT+6gQNAxuPV+dMkmZXijvWr+9R6vny7+T389fQYnlfNymJ2G5t4NdLCq9tOLQ9nB/++bPvm/fR1iiDfHmUbeO1CV1QJ8J/JTEpwoIaZqjuX5MM4Ilypy1uSO9xU0B0OXFHD9dnQy0bXbFrtlu0YZcfu6CVLLzmO0dUbHafT3JLMGsUBxFZCQix9Scpdt83PAGHsMkQCRNVFkgqmY8oPFtuAg4JHhuIRJIShUSLo2ajQCaORMbbscGaEK5Kk1pQG3KBKYZDwa3JNGyFHdJ+U7T1SHiKI5xhJ5paNzURnMy6S8QYWKY+M4gIUCUoFt1NJs65pV0saw/E8QhKqFidBGqHifDLPUqOx9b+pAsgy6bAzyp7bt4EdftvmQOgEWCowGUsTiTqiI9PF2gbyJeDy0Sm0Nd9IAyxflkgopxiukex/+uwT2SB5k7R7Df9mCzrX/YO7Ly3/xfhLA71/cN77V+eill9vaj/kUzssZe4oWOAdt9u1QwwwQXn1bSO+geJbMV0s0qz1KpLaqTCvCYY3NB/BVDDy+yiZIaLlJrSTxl+O+sBzLt/Hl/IJ8TngKBYPpZAdT9h3fMTkvuOJJ746dZnacynyxtGKH5O1IrGrScQ/rnPQhVJPiG/E3zKhwWe5jtja8SPiFOsOx2QsT3L0vX/TFDARZrEg7YTuGj9m4JjzfWGe5BwLF930mnL0/ZeCZOOaAiBMUsK9tpIJdidEhpO/z5H7qfTFTDaE8q0U//9aquKsBSASuyzDmX25XLiy/8l4Z8psnH4dNIZTbrbLdqdsZoOmsh40Truj50nZQ1f/Iv4q2cnTYY/X/wM=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:1061F2196BD64E62E05307991F0A9DE0</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:1061F2B3DC491694E05305991F0AE9EB</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>http://stdecqavap1.va.neustar.com:8009/rest/1/11/Account/urn:dece:accountid:org:dece:1061F2196BD64E62E05307991F0A9DE0/User/urn:dece:userid:org:dece:1061F2B3DC491694E05305991F0AE9EB/Policy/urn:dece:type:policy:ParentalControl:BlockUnratedContent</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/11/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_60000 - StreamListView - DECECS - Test Suite Staging</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77796</con:value></con:property><con:property><con:name>useroid</con:name><con:value>0600</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>FC7209E5FCE16132E0401F0A0799461A</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1061F2B3DC491694E05305991F0AE9EB</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1061F2196BD64E62E05307991F0A9DE0</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Establish Parental Control Rating" searchProperties="true" id="e8d91738-7a64-4076-aafa-a895c2c54d5e"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="4af6e570-f033-4ea7-9824-6ca54138ddb9"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass","urn:dece:type:policy:ParentalControl:RatingPolicy");
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="a45ab711-8618-46f1-903b-b4df2b982a4f"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
	tC.getPropertyValue("policyCreator") == tC.getPropertyValue("assertionUserIdFULL");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:RatingPolicy" id="2b42a25e-f64d-4d5c-a59d-f4d533496092"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ParentalControl:RatingPolicy");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalConrolRating")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:RatingPolicy if necessary" id="0df34b0f-33c2-42c8-91c0-f82a69bd83ad"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:RatingPolicy");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlRating")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for ParentalControl:RatingPolicy" id="19eb1478-728e-4e4a-937a-5b69d9ca7b18"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyRequestEntity","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass","ParentalControl:RatingPolicy");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for ParentalControlRating")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value>pVbtcto6EH0Vxv3ZAdnGQOwJzJiPpiSkpJjkJvzpKPLaqNgysWRD+vRXMuACIbm0d4YZRuvV7tkPnd1LjuPIdFzOIRU0YZV1HDHuFNK2lqXMSTCn3GE4Bu4I4nju7cgxa7qDd1e0yrDf1n6YF8GzTaBZNX2rUbUC3azipmVXSdC8aOlmvWU0DanKeQZDxgVmoq2ZumFVdbtq6FPddkz502uWZc+0ygOkXNqWKjVd24Ja87Y2F2LpILRarWqrei1JQ2TquoEeb0cemUOMtc7lJqLCUdrZ6pOaDwSiiNRIEqNLdKBz6XPHoyHDIkth68t/z5eOdBtJHZ/T8JNW3gV/yIKkOPYwSxglOKK/sMrPLYh54lfcKExSKubxu0EYujJchTWpEsNinzR0CO1MQwcIU46rfI6Nra0JBJACI1C5nwzb2qfzqlZcnaaY8SBJY354/DM8wHKIkiX4Vb4LawvtfIMnMtW5BOIMGYkyTnP4ppp1iQnwbTWBnG+qcpdCQNcjymWDrrlCh/bhHR032ejTELj4mwLtFWdj5AFHGXQ89yle6/csQMbT1crqvzZ63/8JxUqvf28XAPaVC0FZ2s3xqCnLJtrcwOufPb3XvXbZ5+ln89pe/Fqv0Nfu+MZH9uP029S6fxzePfcXo37jcT5+mnk3/eYTdW/MaJVPwkV4e/s8cXmvSZtfoTXDoj8bo/x6dDXAjfsr7ylyF3e4vhAtL9BRbnLeq38NmtFV3kWDcB6OR9f5+CFsunezmD5Mjfrj7GURf4+a417EuoZxMR3MLl6uGj+bs9GwXYazh/9QtnvzXvb8E4jYHVUbDPuVL7JKWHxMZkpC/WpQqDpLRT5cABNaR91S3OFkku6o78gabs662a03Bnbry8AwG27TGOiNut6wbeOL7hp1q74jmQ2KI4i9hAVU+VKUu2mbjwGS2OHAfEireZJJpuPaBxb7WODKkE3kI0gYh2ki6TlJAiskmC1MHLWgHsNrFBs6aJVviRizceoGAtIDRjbMA0aeAKFLCoq2VVdz2dZcyEy84DwTkVHLcY1BJok9VRzrmNZFA3EaLyNQOFGc+FkEteV8WeQF8c2/pBvCC+lkMC3e2rtRHX/bJUDq+FQpcBVLF2QR4cRoMXaBvAm4cXIE7cy7mU/Vs5LZFCklGySHn343ieqOskP6I9e724Eudf/g7o+e98P4SwOj/2tA1uPtTfRBTtBxOUpHfk733O72BjmBJGd1ds30gmsvtSzPs6J9WoqbU2keqQIh3UQekEyy6us0WQBDpRV01ggrgR85L+WHEDMxZ57AAmLZ75XieMbO4gFXO8tQPtP1uQvRgUuZOgFrcUrWi+S+pRB/uJIRhyg9Kb6Tf6sk9X9X7IStPT8yTrmyCMpCdVLj6/WdviCJNEsl8SbpvvFTBk45PxSWSS6xCNlQz5mA979UFKO2NUxIkjEx7GuFYJ/lC5zidQnOb6U3ZopBUm6W9L9XyyotWoBIzpT6hX21IDjqCbBwb1Jsnb4ZFj3bHgxc13L79WJYtDbDondhdcukHKDrvBG/lezl6bjHO/8C</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:02B35C99EEAA4AD3E05307991F0AC84B</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2015/03/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2001/04/xmlenc#" xmlns:ns4="http://www.w3.org/2000/09/xmldsig#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>https://qa.q.uvvu.com:7001/rest/2015/02/Account/urn:dece:accountid:org:dece:02B35C99EEAA4AD3E05307991F0AC84B/User/urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343/Policy/urn:dece:type:policy:ParentalControl:RatingPolicy</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/2015/02/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value>urn:dece:userid:org:dece:02B35E97FE125A61E05305991F0A1343</con:value></con:property><con:property><con:name>policyResource</con:name><con:value>urn:dece:type:rating:FR:MOC:18</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_19096 - StreamListView - DECECS - Policy - Nonenforcement PC:RatingPolicy - FR - MOC - 18 rating - Full User</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77797</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>FC720987768468C3E0401F0A0799462C</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>02B35E97FE125A61E05305991F0A1343</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>02B35C99EEAA4AD3E05307991F0AC84B</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - General Policy Establishment" searchProperties="true" id="fc04d923-3c22-4d3d-9a9f-e8ed6a11ae27"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="9116176d-c032-40ae-a476-d1fb99228af5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="49b778b7-4132-4411-b6e9-ad3ff9a8bdd5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));
tC.setPropertyValue("policyCreator",callTC.getPropertyValue("policyCreator"));
tC.setPropertyValue("policyClass",callTC.getPropertyValue("policyClass"));
tC.setPropertyValue("policyResource",callTC.getPropertyValue("policyResource"));
tC.setPropertyValue("policyRequestEntity",callTC.getPropertyValue("policyRequestEntity"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));

if (tC.getPropertyValue("policyCreator") == null || tC.getPropertyValue("policyCreator") == "") {
	tC.getPropertyValue("policyCreator") == tC.getPropertyValue("assertionUserIdFULL");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for Policy" id="7616beee-7c0f-4fd6-9838-8d3c454c4ee5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for ParentalControlBlockUnratedContent")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for Policy if necessary" id="9c34ba2e-3b44-4310-90b9-13695edac421"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", tC.getPropertyValue("policyClass"));

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for ParentalControlBlockUnratedContent")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for Policy" id="a5dd8c5d-53ed-4e34-a964-349abae1038b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyRequestEntity","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("policyClass", "ParentalControl:BlockUnratedContent");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for ParentalControlBlockUnratedContent")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">pVZpb+JMDP7eXxGlH6uQowkhESCxHNosvZaj2/ZLNUwMTBsmITPh6K/fSSApV/u2+0pIaByP/dh+xnaVoVlguA3GIOYkpJLXqsnPjm9i5PiGUtYsSzENx1EcNNKVkY0uHcB4ZNiWLHmMJeBRxhHlNdnQdFPRyophDHTb1Q3Xskpl6/JJlu4hZsK0UClpsrSaBZS5mduanMTUDREjzKVoBszl2O03rq9coemiHJNcr25QZg7j+pTzyFVVXPIBQxDgEg5nalXd06n6zO2TCUU8iWHr02c1eXt3uVyWlpelMJ6ohqZpquaoQsdnZHIu18/yy+B7dBxuzk1EQ0owCsgbSkFdA5+GvtQIJmFM+HT2gWld1bXUtAIrrGDdpOey+u4gQ/dFS3sgY4YUNkV6bqwHY4iBYpCGPa8mn3+tgpu7gxhRNg7jGTs4fw8S0AUEYQS+wvLIcnRft3giXfUqYNejOEgYWcBNSpMIYWDSXQxjsroiTJDPZ1JWfmnFxI/kLAP8nbJU1V2sArp6IjstMgHG/6Vmu/XaWLlHQQJ1spx749+DaPQ4nJDpYPqgv3kj9pP/mQ9rGYRd5Q2ootzb8yFZC25tL01RZ/UnaDdQdBFW2DjpNoZ9AnQVr+8fVPQWo8fyKyze+O3a1xcRwQb1zH7nvgJAxp7Z9WAycG6RBWWny88GFy2E77RfTfjxOh+acycBVmmHCSmvospNO9Fv1fLPjv0ECKNhc8SfHudddZ68AB7dxA/tIV4Sr9lq26+065/97vS6zFs/zV9m3vDtAv1qe7X3mHZj2BfmLaGfjIRhnh9TengtqSPqhfjn7SWVEF8ZZ6pulPYoxoFyuZ7eSluLm4gGRHxXFHNz7jRtrVlu282WpTmWWWlrpqZ3tIZmOY51aTl5D9qgOIDYDOmYpL7SLrvhz+cA8cxlQH2IlUWY4Ckw+ROLLcSR5NGeeBwhZTAIRRcPYBS8jE1/rfn8xfSZMXWs9TKYy9JNyG/pbdwYc4j3Oreh7XXuHmASCaLwDb+ZIDjjIhVztEh4oJcWqEQhEQMgTnuwa5gVS2VkFgWQAlVnoZ8EUIqmUZYYlW3+DQVhlkl77UH27j4M6/BbngGh45NUgaWx/ABRRTgxgsw8kKOArZOjKjffSHySPi+RTh4TvEGy/+mdJSk9Coq0rhr9uxx0ofuNu8/N/rP+jwau/q8BUY/jm+onOVEPy1E48hdkx20+ysV0Er2rnpNpjkrzUrJYJBl97LQvx8K8KtqzrvYBJ6K5rgfhK1C1MKF+abYVqA88F/J9fAmf0j5HHGaC7FJ2/MJi0weWLjaeeKSrr25Ney5F3jis+ClZMxD7T4r40xUJuzjVE+I78bcMY/+9XCds7fgRcYpthhM6SU/pFFt/QAocCrNEtN0w3jV+ysAp5/vCIskFFi7YNEo4fPxFSvtpTUYYhwnlXkvOBLs9PsPJ1xG470pHZrI5sl0MVuzDxeDh+qovuu0MyYUu+W9lhWR0wSCn+0eGpSavxJ4rnNPJzkzZAjwaK7ZuN63Wj9al3SjGiu04hm61iwTuRVI/Eh9LdnJ6+B7qfwE=</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:FC70C717C5DBD37AE0401F0A0799215E</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>policyExists</con:name><con:value>false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>https://qa.q.uvvu.com:8001/rest/1/11/Account/urn:dece:accountid:org:dece:FC70C717C5DBD37AE0401F0A0799215E/User/urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359/Policy/urn:dece:type:policy:ParentalControl:BlockUnratedContent</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/11/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:type:rating:US:MPAA:G</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>Coordinator Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_68086 - StreamListView - COORDINATORCS - Policy - BlockUnratedContent - US - MMPA - NC17 - unrated/unknown content viewable</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>77798</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value>FC720D176EAA7F91E0401F0A05991F7D</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>FC70C6E7CD509548E0401F0A05995359</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>FC70C717C5DBD37AE0401F0A0799215E</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Remove Manage account consent policy" searchProperties="true" id="f357146f-dc4b-47e1-a1cc-cbd772075592"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="d34475c8-ffcd-4c8d-b649-2ee2dac58a47"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("returnXMLResult","true");
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("username",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="770a637e-643e-4062-9f4f-3d9852f7e935"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("useroid",callTC.getPropertyValue("useroid"));
tC.setPropertyValue("username",callTC.getPropertyValue("username"));
</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:RatingPolicy" disabled="true" id="6ad5ecb0-a141-413e-888c-944f220c82c2"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:RatingPolicy");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:RatingPolicy" disabled="true" id="03be5c50-c866-49e8-b485-b3de90f4866d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:RatingPolicy");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:BlockUnratedContent" disabled="true" id="61f2898b-1093-4ef1-a7a6-f900bbdadb88"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:BlockUnratedContent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:BlockUnratedContent" disabled="true" id="fa4ab444-bc90-4191-b47a-5ead8c221d8d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:BlockUnratedContent");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ParentalControl:AllowAdult" disabled="true" id="b81fd4f6-8683-4b53-bd36-49d4eda15160"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:AllowAdult");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyDelete for ParentalControl:AllowAdult" disabled="true" id="ca49f80b-070e-4952-acd5-376bd6c39f7e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
	
if (tC.getPropertyValue("policyExists") == "true") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:ParentalControl:AllowAdult");

	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyDelete for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for Manage Account Consent" id="55e40f86-9132-4fd1-a269-668ed584edca"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ManageAccountConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="remove policies" id="9a4d140b-beae-4dc2-83c8-f5e950c392b0"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def responseXML = tC.getPropertyValue("policyGetXML");
def policyOid=null;

log.info "@@@"+ responseXML;

a = new dbUtils.dbPolicy(log,tP.getPropertyValue("targetSystem"));

def myXML = null;
if(responseXML != null)
{
                try
                {
                                myXML = new XmlSlurper().parseText(responseXML);
                }
                catch(Throwable e)
                {
                                log.info e;                                                                            
                }
}

// Assert that policyListSize is 2 (EMUC and MAC)

log.info myXML.Policy.size()
for(i = 0; i &lt; myXML.Policy.size(); i++)
{        
	policyOid = myXML.Policy[i].@PolicyID.toString().split(':')[5]; 
log.info policyOid;

a.policySetDeleted(policyOid)
//a.sqlPolicyStatus(policyOid,'deleted')
               
}
</script></con:config></con:testStep><con:properties><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrb+I6EP0rKP24gjyAAlFBAgoUCqUFtrvdL1fGmYBLYkPsBOivXztASij0cq+EhDwZnznz8LHvOPI9y65zDoEgjGY2vke5HVurWhhQmyFOuE2RD9wW2B7XB33byhk2OmzRMt37qvaPVXIK5cLUyTpWqZwtWFPITsGxsqiQB2zeVooArnTlPIQu5QJRUdUswyxmjbz8TYyKbZVsy8xVyvk/WuYVAi6xpUvO0PakNryqzYVY2rq+Xq9z63yOBTPdMgxT/z3oj/EcfKTV7nYZxYGC2t4f5xzA4Hk4h5mv3+kpnzuH22Myo0iEAexjOZdiGbpR0aWPw8nsRkv2gtOlLouXTUQZJRh55AOp+gxAzJmTqXszFhAx9y8mYRoKOAsbnMVmgd5oepralUAphgFHWT5H5h5rBC4EQDFkfo66Ve3muq7FWycBotxlgc/Ty//GB2gEHluCk+WHtPbUrgc8U6naHWC7S7EXchLBkxrWJcLA990EfD1U5jkAl2z6hMsB3XDFTj+md7LcVeOezICL/9Ogo+bsQF6RF0INr17ch0c2Qr0POmaDTs9t/hku5vO+W6/GBI6dY0PS2t3yZCiTIdrteNrMHjdb/PBqBdNKr8ec/JAX6h/vbtAoR/Wf/ZLTGfP8okFxr7X4NTL7w9Vk6ueHjultfQu8x7e2SzrW8+KtyUayYHpp5K6ioVeZ/qqsy+9hD/8weT98Hq3CzqBHab/bLWx/B43Bi4DlR2vWsXrkwS39iFpTWDa2Hd6a6KbJ2wtXfxk1Xt4Wj8gqLiMfmYVqks4R/7TtcObH4fQdsDgs1Rh07zNt2SUkvhczZSFO1o1d7aUSHy6ACq2mdintsEMpd8SxZQ93a9MotlvFZtss3lZKVqnSMop5o1SpmG2jfttstg4is2NxQrHJqEtULCW5u7H5niD2bQ7UgSAbsVAqHde+QbxHAmW6dCQPAaMcJkzK89p3o+mtN4ss6pr41jTKLB8h8zavZZ6YGNJhUHcFBClNNq2UJo8AkyUBJdxqrrkcbC5kLVYoCoVn5iKUoxBKaQ+UytpWoVzUOfGXHiimus+c0IPccr6MK6Pz3b/UGsxja1xWvDtxF3M7/XYog/RxiHLgKp8GyFbCmQvGPCRzIenCyUV0gK+HDlGHS9ZUBATvmKQ/fY6KmpFkTvZZHWgn3qeGFLJ+mlQSzIkITgY+ubalmsvzXzu0ZYVyq1wYRWHciJLSuUDC6ypN3bD0MeBQKtR2whZA9QRFv+o6SIifBE/saYqhmNOxQAJ8OTmZeHnF/T8Gru7/rhz5zbWPi1RIWToBG3HO1vTk20Ux/vZ5g22s/KT5Wf6tWeB8duwM1lEcmae8/gWhM7VSV8H2wmxgJmGJFDEWHIOfAzgXPG1MipxwEXKgpqGAy18ySp2qGsKYhVR077XYcKyYMU+xXYL96fQFJhbl5JVG/v2ZliXxCGCQbztOYnx12drqCNDZkerug54R3qaZrxel8JrHwpu3ikZSlBS72hfzV8tRnU5nvPYX</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:105FE5CF15697279E05307991F0A6CCE</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>policyClass</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ManageAccountConsent</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<PolicyList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Policy PolicyID="urn:dece:policyid:org:dece:105FE5CF15E87279E05307991F0A6CCE">
      <PolicyClass>urn:dece:type:policy:ManageAccountConsent</PolicyClass>
      <Resource>urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250</Resource>
      <RequestingEntity>urn:dece:org:org:dece:dece:cs</RequestingEntity>
      <PolicyAuthority>urn:dece:role:coordinator</PolicyAuthority>
      <ResourceStatus>
         <Current CreationDate="2015-03-03T09:29:32.000Z" CreatedBy="urn:dece:userid:org:dece:105FE5CF15697279E05307991F0A6CCE">
            <Value>urn:dece:type:status:active</Value>
         </Current>
      </ResourceStatus>
   </Policy>
</PolicyList>]]></con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyResource</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>returnXMLResult</con:name><con:value>true</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_60000 - StreamListView - DECECS - Test Suite Staging</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>QC_Id</con:name><con:value>81175</con:value></con:property><con:property><con:name>useroid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1061F2B3DC4A1694E05305991F0AE9EB</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value/></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150303_052324</con:value></con:property><con:property><con:name>Policy_id</con:name><con:value>urn:dece:policyid:org:dece:105FE5CF15E87279E05307991F0A6CCE</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>e49350ab-f189-4e52-ba89-4c768adb0cf7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>55e40f86-9132-4fd1-a269-668ed584edca</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Policy - Establish Manage account consent policy" searchProperties="true" id="3ed216e4-0cb3-4f1c-99ba-5274b05b96bc"><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="0ca8e6cf-c932-40cf-bcea-9d7f3bbcb299"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("nodeid",null);
tC.setPropertyValue("assertionUserIdFULL",null);
tC.setPropertyValue("assertionAccountIdFULL",null);
tC.setPropertyValue("assert",null);
tC.setPropertyValue("policyExists",null);
tC.setPropertyValue("policyClass",null);
tC.setPropertyValue("policyRequestEntity",null);
tC.setPropertyValue("policyResource",null);
tC.setPropertyValue("policyCreator",null);
tC.setPropertyValue("policyStatus","urn:dece:type:status:active");
tC.setPropertyValue("assertionUserId",null);
tC.setPropertyValue("assertionAccountId",null);</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Calling Test Case Properties" id="120600da-0b35-43a3-9b57-e115586d95d3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

tC.setPropertyValue("nodeid",callTC.getPropertyValue("nodeid"));
tC.setPropertyValue("assertionUserIdFULL",callTC.getPropertyValue("assertionUserIdFULL"));
tC.setPropertyValue("assertionAccountIdFULL",callTC.getPropertyValue("assertionAccountIdFULL"));
tC.setPropertyValue("assert",callTC.getPropertyValue("assert"));
tC.setPropertyValue("assertionUserId",callTC.getPropertyValue("assertionUserId"));
tC.setPropertyValue("assertionAccountId",callTC.getPropertyValue("assertionAccountId"));</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserLinkConsent" disabled="true" id="7bab2053-aeb8-4356-abf2-fb296e8a02bc"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserLinkConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserLinkConsent if necessary" disabled="true" id="caaad0c9-4cba-4e7d-b149-30748e7172d3"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserLinkConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableManageUserConsent" disabled="true" id="881589d2-9aea-4bee-8cb6-a0b528befd34"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableManageUserConsent if necessary" disabled="true" id="ed8312d2-edea-4988-8aef-93da357058e5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableManageUserConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for ManageAccountConsent" id="bbde2cc9-a0eb-43a9-ac4d-dd22614a2877"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "ManageAccountConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyGet for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for ManageAccountConsent if necessary" id="40c6214a-ef67-4b7b-8e70-de0cdee058bd"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "ManageAccountConsent");
	tC.setPropertyValue("policyRequestEntity","urn:dece:org:org:dece:"+tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource","urn:dece:accountid:org:dece:"+tC.getPropertyValue("assertionAccountId"));
	tC.setPropertyValue("policyCreator","urn:dece:userid:org:dece:"+tC.getPropertyValue("assertionUserId"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsentRequired" disabled="true" id="3f7d7710-ee13-45f5-813d-c252dae98143"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsentRequired if necessary" disabled="true" id="70e139e2-634a-481d-8f28-5062b4c3737a"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for EnableUserDataUsageConsent" disabled="true" id="365c97d9-c560-48e7-9d86-f2dd37c3c7a5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for Account")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for EnableUserDataUsageConsent if necessary" disabled="true" id="26ecea4a-be7c-4a48-a7d6-d5a08c40679d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:EnableUserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for Account")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyGet for UserDataUsageConsent" disabled="true" id="14efdcf3-1ec3-40a5-aa98-7b66644fb763"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserDataUsageConsent");

def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("Policy GET for User")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

</script></con:config></con:testStep><con:testStep type="groovy" name="PolicyCreate for UserDataUsageConsent if necessary" disabled="true" id="cc699955-0e23-4df7-a661-4878739b1b06"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if (tC.getPropertyValue("policyExists") == "false") {
	tC.setPropertyValue("policyClass", "urn:dece:type:policy:UserDataUsageConsent");
	tC.setPropertyValue("policyRequestEntity",tP.getPropertyValue("urnNode") + tC.getPropertyValue("nodeid"));
	tC.setPropertyValue("policyResource",tC.getPropertyValue("assertionUserIdFULL"));
	tC.setPropertyValue("policyCreator",tC.getPropertyValue("assertionUserIdFULL"));
	
	def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("PolicyCreate for User")

	myTC.setPropertyValue("tName",tC.getName());
	myTC.setPropertyValue("sName",tS.getName());

	def runnerTC = myTC.run( null , false )

	assert runnerTC.status == Status.FINISHED;
}

</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:105FE5CF15697279E05307991F0A6CCE</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250</con:value></con:property><con:property><con:name>policyExists</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">false</con:value></con:property><con:property><con:name>tName</con:name><con:value>TC_DECE_60000 - StreamListView - DECECS - Test Suite Staging</con:value></con:property><con:property><con:name>sName</con:name><con:value>DECE Customer Support Test Cases_P1</con:value></con:property><con:property><con:name>policyClass</con:name><con:value>ManageAccountConsent</con:value></con:property><con:property><con:name>assert</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">nVZrb+I6EP0rKP24gjyAAlFBAgoUCqUFtrvdL1fGmYBLYkPsBOivXztASij0cq+EhDwZnznz8LHvOPI9y65zDoEgjGY2vke5HVurWhhQmyFOuE2RD9wW2B7XB33byhk2OmzRMt37qvaPVXIK5cLUyTpWqZwtWFPITsGxsqiQB2zeVooArnTlPIQu5QJRUdUswyxmjbz8TYyKbZVsy8xVyvk/WuYVAi6xpUvO0PakNryqzYVY2rq+Xq9z63yOBTPdMgxT/z3oj/EcfKTV7nYZxYGC2t4f5xzA4Hk4h5mv3+kpnzuH22Myo0iEAexjOZdiGbpR0aWPw8nsRkv2gtOlLouXTUQZJRh55AOp+gxAzJmTqXszFhAx9y8mYRoKOAsbnMVmgd5oepralUAphgFHWT5H5h5rBC4EQDFkfo66Ve3muq7FWycBotxlgc/Ty//GB2gEHluCk+WHtPbUrgc8U6naHWC7S7EXchLBkxrWJcLA990EfD1U5jkAl2z6hMsB3XDFTj+md7LcVeOezICL/9Ogo+bsQF6RF0INr17ch0c2Qr0POmaDTs9t/hku5vO+W6/GBI6dY0PS2t3yZCiTIdrteNrMHjdb/PBqBdNKr8ec/JAX6h/vbtAoR/Wf/ZLTGfP8okFxr7X4NTL7w9Vk6ueHjultfQu8x7e2SzrW8+KtyUayYHpp5K6ioVeZ/qqsy+9hD/8weT98Hq3CzqBHab/bLWx/B43Bi4DlR2vWsXrkwS39iFpTWDa2Hd6a6KbJ2wtXfxk1Xt4Wj8gqLiMfmYVqks4R/7TtcObH4fQdsDgs1Rh07zNt2SUkvhczZSFO1o1d7aUSHy6ACq2mdintsEMpd8SxZQ93a9MotlvFZtss3lZKVqnSMop5o1SpmG2jfttstg4is2NxQrHJqEtULCW5u7H5niD2bQ7UgSAbsVAqHde+QbxHAmW6dCQPAaMcJkzK89p3o+mtN4ss6pr41jTKLB8h8zavZZ6YGNJhUHcFBClNNq2UJo8AkyUBJdxqrrkcbC5kLVYoCoVn5iKUoxBKaQ+UytpWoVzUOfGXHiimus+c0IPccr6MK6Pz3b/UGsxja1xWvDtxF3M7/XYog/RxiHLgKp8GyFbCmQvGPCRzIenCyUV0gK+HDlGHS9ZUBATvmKQ/fY6KmpFkTvZZHWgn3qeGFLJ+mlQSzIkITgY+ubalmsvzXzu0ZYVyq1wYRWHciJLSuUDC6ypN3bD0MeBQKtR2whZA9QRFv+o6SIifBE/saYqhmNOxQAJ8OTmZeHnF/T8Gru7/rhz5zbWPi1RIWToBG3HO1vTk20Ux/vZ5g22s/KT5Wf6tWeB8duwM1lEcmae8/gWhM7VSV8H2wmxgJmGJFDEWHIOfAzgXPG1MipxwEXKgpqGAy18ySp2qGsKYhVR077XYcKyYMU+xXYL96fQFJhbl5JVG/v2ZliXxCGCQbztOYnx12drqCNDZkerug54R3qaZrxel8JrHwpu3ikZSlBS72hfzV8tRnU5nvPYX</con:value></con:property><con:property><con:name>policyRequestEntity</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:org:org:dece:dece:cs</con:value></con:property><con:property><con:name>policyResource</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250</con:value></con:property><con:property><con:name>policyCreator</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">urn:dece:userid:org:dece:105FE5CF15697279E05307991F0A6CCE</con:value></con:property><con:property><con:name>policyStatus</con:name><con:value>urn:dece:type:status:active</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>PolicyID</con:name><con:value/></con:property><con:property><con:name>assertionUserId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">105FE5CF15697279E05307991F0A6CCE</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">105FE5CC13A57271E05307991F0A3250</con:value></con:property><con:property><con:name>policyGetXML</con:name><con:value><![CDATA[<ErrorList xmlns="http://www.decellc.org/schema/2013/10/coordinator" xmlns:ns2="http://www.movielabs.com/schema/md/v2.1/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
   <Error ErrorID="urn:dece:errorid:org:dece:Policy:PolicyNotFound">
      <Reason Language="en">The policy was not found.</Reason>
      <OriginalRequest>http://stdecqavap1.va.neustar.com:8009/rest/1/11/Account/urn:dece:accountid:org:dece:105FE5CC13A57271E05307991F0A3250/Policy/urn:dece:type:policy:ManageAccountConsent</OriginalRequest>
      <ErrorLink>https://qa.q.uvvu.com:7001/rest/1/11/error/en/ErrorList.html#Policy:PolicyNotFound</ErrorLink>
   </Error>
</ErrorList>]]></con:value></con:property><con:property><con:name>Policy_id</con:name><con:value>urn:dece:policyid:org:dece:105FE5CF15E87279E05307991F0A6CCE</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Setup" disabled="true" id="ed7d6746-cbfd-43e9-9d06-fa7cb5312a70"><con:description/><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Node_Setup" searchProperties="true" id="9e2f91e1-d901-42b3-8fd7-84bd6fa2b47a"><con:settings/><con:testStep type="jdbc" name="Update_Node_Role" id="439f510b-dc4e-4d25-bf01-7d4392e8c0d8"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" maxRows="" fetchSize="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>update NODE_ROLE set ROLE = '${#TestCase#Node_Value}' where NODE_OID = '${#TestCase#Node_OID}'</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>Node_Value</con:name><con:value>${#Project#NodeValueRetailer}</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>${#Project#Node_OID}</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccName_Gen" searchProperties="true" id="daf60a15-1523-47a9-a27b-c16845c7a955"><con:settings/><con:testStep type="datagen" name="AccName" id="766b755e-eb9c-4863-850e-ae999df8e8bf"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script>def today= "Ashwin_Acc_Create_" + new Date().format( 'yyyyMMdd_hhmms' );

return today; 
</script></con:configuration><con:name>AccName</con:name><con:mode>READ</con:mode><con:shared>true</con:shared></con:property></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="f9fa0da5-0c53-43be-9be4-863808ee9163"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>DisplayName</con:name><con:sourceType>AccName</con:sourceType><con:sourceStep>AccName</con:sourceStep><con:targetType>AccountDisplayName</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Account_Delete" searchProperties="true" id="ba869b11-2026-4766-8171-1f7c5564ea7b"><con:settings/><con:testStep type="jdbc" name="Delete_Account" id="de7ad49b-68ac-4f4f-a58f-a51d7bf4da7f"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" maxRows="" fetchSize="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>DECLARE
accountid ACCOUNT.ACCOUNT_OID%TYPE;
newsfeedid NEWSFEED_EVENT.NEWSFEED_EVENT_OID%TYPE;
BEGIN
select ACCOUNT_OID into accountid from NODE_ACCOUNT where NODE_ACCOUNT_ID = '${#Project#NODEACCID}';
--select NEWSFEED_EVENT_OID into newsfeedid from NEWSFEED_EVENT where ACCOUNT_OID = accountid;
delete from RIGHTS_LOCKER where ACCOUNT_OID = accountid;
delete from NODE_ACCOUNT where ACCOUNT_OID = accountid;
delete from DRM_DOMAIN where ACCOUNT_OID = accountid;
delete from ACCOUNT_STATUS_HISTORY where ACCOUNT_OID = accountid;
--delete from NEWSFEED_PARM_VAL where NEWSFEED_EVENT_OID = newsfeedid;
--delete from NEWSFEED_EVENT where ACCOUNT_OID = accountid;
delete from ACCOUNT where ACCOUNT_OID = accountid;
END;</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>ACCID</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Get_User_Details" searchProperties="true" id="0aa1d722-f38d-4bee-8887-717f19d61d16"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="0ff58cab-60c1-42e6-8030-277b377228d6"><con:settings/><con:config><script>String userid;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

//def targetHost = testProject.getPropertyValue("targetHost");
//def nodeaccountId = testCase.getPropertyValue("nodertraccountid");

def a = testRunner.testCase.getTestStepByName('User_Create').httpRequest.response.responseHeaders["Content-Location"];
def b = a.toURL();
def urlStr = b.getPath();

//Assert the hostname in the URL is correct
//assert b.getHost().matches(targetHost.toString());
//Assert the protocol is correct
//assert b.getProtocol().matches("https");
//Assert the URI is correct
//assert b.getPath().matches("/dece/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9]*" );
//this.log.info "b is " + b.getPath();


//this.log.info "urlStr is " +urlStr;

int lastSlash = urlStr.lastIndexOf(':');
accountid = urlStr.substring(lastSlash + 1);

//this.log.info "lastSlash is " +lastSlash + "and user id is " + userid ;

testProject.setPropertyValue("NODEUSERID",userid);
</script></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserName_Gen" searchProperties="true" id="4d1c6624-48ba-4bf2-819a-e4368da8d501"><con:settings/><con:testStep type="datagen" name="UserName" id="32341085-1db7-4841-bcad-ab3aebdb8ab5"><con:settings/><con:config xsi:type="con:DataGeneratorStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:property type="Script"><con:configuration><script>def today= "stream_list_view_" + new Date().format( 'yyyyMMdd_hhmms' );

return today; 
</script></con:configuration><con:name>UserName</con:name><con:mode>READ</con:mode><con:shared>true</con:shared></con:property></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="688a2001-204c-4a2c-8762-ac939a200723"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>DisplayName</con:name><con:sourceType>UserName</con:sourceType><con:sourceStep>UserName</con:sourceStep><con:targetType>UserName</con:targetType><con:targetStep>#Project#</con:targetStep></con:transfers></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:dece</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="User_Delete" searchProperties="true" id="4ab4940e-59c0-4c54-8973-7561e7a97a31"><con:settings/><con:testStep type="jdbc" name="Delete_User" id="5e662978-de85-4fcb-98b7-fec80de977a7"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" maxRows="" fetchSize="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>DECLARE
MyAccount ACCOUNT.ACCOUNT_OID%TYPE;
MyUser ACCOUNT_USER.USER_OID% TYPE;
num NUMBER;
BEGIN
SELECT count(*) into num FROM ACCOUNT_USER where ACCOUNT_OID = (select ACCOUNT_OID from NODE_ACCOUNT where NODE_ACCOUNT_ID = '${#Project#NODEACCID}');
IF (num > 0)
THEN
for MyUser in (SELECT USER_OID FROM ACCOUNT_USER where ACCOUNT_OID= (select ACCOUNT_OID from NODE_ACCOUNT where NODE_ACCOUNT_ID = '${#Project#NODEACCID}'))
LOOP
Select ACCOUNT_OID into MyAccount from ACCOUNT_USER where USER_OID = MyUser.USER_OID;
--delete from node_user_saml_assertion where NODE_USER_OID = (select NODE_USER_OID from node_user where USER_OID = MyUser.USER_OID) ;
delete from node_user where USER_OID = MyUser.USER_OID;
delete from user_address where USER_OID = MyUser.USER_OID;
delete from user_alt_email where USER_OID = MyUser.USER_OID;
delete from user_language where USER_OID = MyUser.USER_OID;  
delete from user_status_history where USER_OID = MyUser.USER_OID;
delete from user_security_questions where USER_OID = MyUser.USER_OID;
delete from email_notification where USER_OID = MyUser.USER_OID;
delete from account_user_avatar where USER_OID = MyUser.USER_OID;
delete from NEWSFEED_PARM_VAL where NEWSFEED_EVENT_OID in (select NEWSFEED_EVENT_OID from NEWSFEED_EVENT where ACCOUNT_OID = 
MyAccount);
delete from NEWSFEED_EVENT where ACCOUNT_OID = MyAccount;
delete from account_user where USER_OID = MyUser.USER_OID;
commit;
END LOOP;
END IF;
END;
</con:query><con:storedProcedure>false</con:storedProcedure><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Set_PEM" searchProperties="true" id="50ea9ae0-8bee-40a7-9bc9-4b303518cf8f"><con:settings/><con:testStep type="groovy" name="Set_Pem_File" id="c1a57706-a0ca-4615-b95d-3944a6e03706"><con:settings/><con:config><script/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Node_Setup for streams" searchProperties="true" id="b9809bda-8297-40a2-95af-6cd5baf0a6c7"><con:settings/><con:testStep type="jdbc" name="Update_Node_Role" id="14c0727e-6959-4653-95bd-c813c768a238"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" maxRows="" fetchSize="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>${#Project#JDBCDriver}</con:driver><con:connectionString>${#Project#JDBCConnStr}</con:connectionString><con:password/><con:query>update NODE_ROLE set ROLE = '${#TestCase#Node_Value}' where NODE_OID = '${#TestCase#Node_OID}'</con:query><con:storedProcedure>false</con:storedProcedure><con:assertion type="JDBC Status"/><con:properties/></con:config></con:testStep><con:properties><con:property><con:name>Node_Value</con:name><con:value>urn:dece:role:lasp:linked</con:value></con:property><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>C381F9C22E4A41E6E0401F0A0599030B</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="End_To_End" disabled="true" id="53a8a99a-aaee-4e16-b21e-04d9271a593d"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountNameGeneration" searchProperties="true" id="e935ae03-bd7b-431a-9e09-1226688bdf75"><con:settings/><con:testStep type="calltestcase" name="AccName" id="7e1484db-dee9-4614-a146-5ff0568502ba"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>daf60a15-1523-47a9-a27b-c16845c7a955</con:targetTestCase><con:properties><con:property><con:name>synced</con:name><con:value>true</con:value></con:property><con:property><con:name>tName</con:name></con:property><con:property><con:name>sName</con:name></con:property></con:properties><con:returnProperties><con:entry>synced</con:entry></con:returnProperties><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties><con:property><con:name>UserNameCounter</con:name><con:value>6</con:value></con:property><con:property><con:name>LoopUntil</con:name><con:value>6</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E2E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c0697308-b6c8-47f7-96a0-bcb6977b8f38</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="AccountCreate" searchProperties="true" id="78cb25e6-cb53-4c03-b415-0ae949c79bb9"><con:settings><con:setting id="IncludeOverview">true</con:setting><con:setting id="IncludeResults">true</con:setting><con:setting id="FlowLayout">false</con:setting><con:setting id="ErrorDetails">true</con:setting><con:setting id="IncludeCoverage">true</con:setting></con:settings><con:testStep type="groovy" name="Set pem" id="7e034ca8-0024-4306-ad77-e96603b188db"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("Account_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="Account_Create" id="56a5c09e-b290-433a-af70-98d6e834d523"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account" methodName="AccountCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Account_Create" mediaType="application/xml" postQueryString="false" id="ca4ff0a9-00f8-41e3-871a-d799b7db932c" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@remove_empty_content">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting><con:setting id="discardResponse">false</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<Account xmlns="${#Project#coordinatorSchema}"> 
<DisplayName>${#Project#AccountDisplayName}</DisplayName>
<Country>US</Country>
</Account>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="03ecb40c-96be-49ac-b978-5200b11706c0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="b140b65c-540a-4184-a17d-b6575263b020"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('Account_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="458e397c-5509-4b7e-b874-fb3b1992f9de"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();


def url       = context.expand( '${#Project#Provision_HostName}' );
def nodeacc = context.expand( '${#Project#NODEACCID}' )
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#VersionMajor}' );
String minor = context.expand( '${#Project#VersionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;	
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

     if(minor == tP.getPropertyValue("versionUrlEncode"))
     {
	assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeaccountid     = urlStr.substring(lastSlash + 1);
	accountid = urlStr.substring(lastColon + 3);
	
	tP.setPropertyValue("ACCOUNTID",accountid);
	tP.setPropertyValue("NODEACCOUNTID",nodeaccountid);
     }
     else
     {
	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*");
	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeaccountid     = urlStr.substring(lastSlash + 1);
	accountid = urlStr.substring(lastColon + 1);
	
	tP.setPropertyValue("ACCOUNTID",accountid);
	tP.setPropertyValue("NODEACCOUNTID",nodeaccountid);
     }
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value>close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>500500</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>39da0c46-7f38-4527-b6be-af58fbc91aba</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bf0fa3e3-b1e7-4bf9-9635-da2c55ceeed9</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>0696f15b-f3ce-463e-b03b-33fc4c9d061d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserNameGeneration" searchProperties="true" id="1c691717-9d52-49d3-996d-1cdc5df009f1"><con:settings/><con:testStep type="groovy" name="SetCounter" id="fe045e84-5267-4640-a2f4-b2a0e2dc95fd"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

testCase.setPropertyValue("UserNameCounter","1");
testCase.setPropertyValue("LoopUntil","6");</script></con:config></con:testStep><con:testStep type="calltestcase" name="Get_UserName" id="dfec746f-192d-44f4-b28d-0225c447d54f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4d1c6624-48ba-4bf2-819a-e4368da8d501</con:targetTestCase><con:properties><con:property><con:name>synced</con:name></con:property><con:property><con:name>Node_Value</con:name></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="delay" name="Delay" id="37cf1fc7-f8eb-46b4-aa9e-5c7d3d33910b"><con:settings/><con:config><delay>1000</delay></con:config></con:testStep><con:testStep type="groovy" name="SetUserNames" id="3718939f-5d0c-4ba9-b419-1046c0dc29ca"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def UserName = testProject.getPropertyValue("UserName");

def count = testCase.getPropertyValue("UserNameCounter").toInteger();

if(count == 1)
{
	testProject.setPropertyValue("UserName_FAU1",UserName);
	log.info "==============="
}
if(count == 2)
{
	testProject.setPropertyValue("UserName_SAU1",UserName);
	log.info "==============="
}
if(count == 3)
{
	testProject.setPropertyValue("UserName_BAU1",UserName);
	log.info "==============="
}
if(count == 4)
{
	testProject.setPropertyValue("UserName_FAU2",UserName);
	log.info "==============="
}
if(count == 5)
{
	testProject.setPropertyValue("UserName_SAU2",UserName);
	log.info "==============="
}
if(count == 6)
{
	testProject.setPropertyValue("UserName_BAU2",UserName);
	log.info "==============="
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Increment Counter and loop again if necessary" id="064908c2-2086-490a-b896-4cd8ffac1506"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def counter = testCase.getPropertyValue("UserNameCounter").toInteger();
def loopuntil = testCase.getPropertyValue("LoopUntil").toInteger();

counter++;

if (counter &lt;= loopuntil) {
    testCase.setPropertyValue("UserNameCounter",counter.toString());
    testRunner.gotoStepByName("Get_UserName");
}
</script></con:config></con:testStep><con:properties><con:property><con:name>UserNameCounter</con:name><con:value>6</con:value></con:property><con:property><con:name>LoopUntil</con:name><con:value>6</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>c0697308-b6c8-47f7-96a0-bcb6977b8f38</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="FirstUserCreate" searchProperties="true" id="3599067a-2762-4939-87cf-7d2547d2de24"><con:settings/><con:testStep type="groovy" name="Set properties from calling test case" id="e1af9221-5f1a-4cb4-b7c9-ef3cc43d5886"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));
testCase.setPropertyValue("UserClass",callTC.getPropertyValue("UserClass"));

</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="e3511ccd-e8b3-4872-afee-fd382c9eb22b"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="ed50f249-f8b9-4c40-ad82-5f37de1014a2"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account" methodName="AccountUserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[
<Account xmlns="${#Project#coordinatorSchema}"> 
	<DisplayName>${#Project#AccountDisplayName}</DisplayName>
	<Country>${#Project#Country}</Country>
	<UserList>
<User UserClass="urn:dece:role:user:class:full" xmlns="${#Project#coordinatorSchema}">
	<Name>
        	<GivenName>${#Project#UserName}</GivenName>
		<SurName>uvtc_user</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	 <Value>testing@uvvutesting.biz</Value>
        <!--<Value>sunitha.pemmasani@neustar.biz</Value>-->
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>testing1@uvvutesting.biz</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	</ContactInfo>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>testing</Password> 
	</Credentials>
</User>
</UserList>
</Account>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8ec19c93-3bf1-4caa-a49b-0e6eb7febc0b"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCOUNTID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="bed6cfc3-4ec6-4066-81c1-951863b59106"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="23c92155-631b-44ed-8d33-e1759e1d51fc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );

def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');


boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#VersionMajor}' );
String minor = context.expand( '${#Project#VersionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

                if (tP.getPropertyValue("versionMinor") != tP.getPropertyValue("versionURLEncode"))
                {                              
                                assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");                             
                } else {
                                assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
                }

                urlStr = URLDecoder.decode(urlStr);
                def arrayString = urlStr.split("Account/");
      arrayString= arrayString[1].split("/User/");
      log.info "Node_User_ID=="+arrayString[1]
      log.info "Node_Account_ID=="+arrayString[0]


      

       int lastColon = arrayString[1].lastIndexOf(':');
       accountid     = arrayString[0].substring(lastColon+4);
       userid     = arrayString[1].substring(lastColon +1);
       def useridfull = arrayString[1];    
       def accountidfull = arrayString[0];     
       log.info useridfull  
                                         
       
 
     tP.setPropertyValue("ACCOUNTID",accountid);
	tP.setPropertyValue("NODEACCOUNTID",accountidfull);                           
	tP.setPropertyValue("USERID",userid);
	tP.setPropertyValue("USERIDFULL",useridfull);
	tP.setPropertyValue("NODEUSERID",useridfull);
	

     }
 else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}




//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:188AE1B460E43094E0533D991F0A7A41/User/urn:dece:userid:org:dece:188AE1B460E53094E0533D991F0A7A41</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>UserName</con:name><con:value>stream_list_view_20150615_013950</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:full</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate_Standard" searchProperties="true" id="a016a0a4-9913-4014-80af-5aa93e181190"><con:settings/><con:testStep type="groovy" name="Set properties for User" id="fb71d603-7007-46c5-b6a0-df099b885df4"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));
testCase.setPropertyValue("UserClass",callTC.getPropertyValue("UserClass"));
testCase.setPropertyValue("MeetsAgeOfMajority",callTC.getPropertyValue("MeetsAgeOfMajority"));
testCase.setPropertyValue("DateOfBirth",callTC.getPropertyValue("DateOfBirth"));

def NODEUSERIDFULLDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDFULLDecoded",NODEUSERIDFULLDecoded)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="ee150693-0249-4052-bf4b-943eadce303d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="1b2f0742-818f-4c24-9e1c-db56a3cdc4ad"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{AccountID}/User" methodName="UserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="${#TestCase#UserClass}" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>sau</SurName>
	</Name>	
	<ContactInfo>
        <PrimaryEmail>			
	       <Value>ashwin.tikle@compugain.com</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>ashwin776@gmail.com</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>UK</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
      <LegalGuardian>${#TestCase#NODEUSERIDDecoded}</LegalGuardian>
       <Credentials> 
               <Username>${#TestCase#UserName}</Username>	
                <Password>${#TestCase#Password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8ec19c93-3bf1-4caa-a49b-0e6eb7febc0b"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCOUNTID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="804bca7d-01da-44f6-b398-89e708dec5d1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="ce0aa73a-729c-4937-9af1-33650b9462bc"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#VersionMajor}' );
String minor = context.expand( '${#Project#VersionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

     if(minor == tP.getPropertyValue("versionUrlEncode")){
	assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");	
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeuserid     = urlStr.substring(lastSlash + 1);
	userid = urlStr.substring(lastColon + 3);
     tP.setPropertyValue("NODEUSERID",nodeuserid);
	tP.setPropertyValue("USERID",userid);
     }
     else
     {
     assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");	
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeuserid     = urlStr.substring(lastSlash + 1);
	userid = urlStr.substring(lastColon + 1);
     tP.setPropertyValue("NODEUSERID",nodeuserid);
	tP.setPropertyValue("USERID",userid);
     }
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">close</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa1.q.uvvu.com/rest/2015/02/Account/urn:dece:accountid:org:dece:188AE1B460E43094E0533D991F0A7A41/User/urn:dece:userid:org:dece:188AE1B4619E3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>UserName</con:name><con:value>stream_list_view_20150615_013951</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB93D9108325E854E0401F0A0799736D</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:standard</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-07-01</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:E072D07F07FC9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForFirstUser" searchProperties="true" id="073a39f5-7848-4927-ab31-715d49e5e81c"><con:settings/><con:testStep type="groovy" name="Set pem" id="b389f019-6641-4509-a5ae-ee92db08589e"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

testProject.setPropertyValue("userIndex","0");

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

def keyStorePath = testCase.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
//this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="ef295039-dee9-4b0c-a101-452ecf8a84c7"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;



if(testProject.getPropertyValue("count") != "1"){
//def NODEUSERIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEUSERID"),"UTF-8");
//testProject.setPropertyValue("NODEUSERID",NODEUSERIDEncoded)
//testProject.setPropertyValue("NODEUSERIDFAU1_Encoded",NODEUSERIDFAU1_Encoded)

//def NODEACCOUNTIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEACCOUNTID"),"UTF-8");
//testProject.setPropertyValue("NODEACCOUNTID",NODEACCOUNTIDEncoded)

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;	
}



</script></con:config></con:testStep><con:testStep type="groovy" name="set user index and create policies" id="9a4bbda0-c863-4daf-91ca-bb2a4d662f9f"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def audienceArray = testProject.getPropertyValue("audienceList").toString();
if(audienceArray.contains(";"))
{
def audiencelistArray = testProject.getPropertyValue("audienceList").toString().split(";");
def l = audiencelistArray.length;
log.info "l==="+l;
def userIndex = testProject.getPropertyValue("userIndex").toInteger();
log.info "userindex====="+userIndex;


String nodeoid = testProject.getPropertyValue("nodeoid"+testProject.getPropertyValue("count")+testProject.getPropertyValue("userIndex"));
testProject.setPropertyValue("Node_OID",nodeoid.toString());

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

def keyStorePath = testCase.getPropertyValue("keyStorePath");

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
if(testProject.getPropertyValue("userIndex") != "0"){
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
}
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="409a9092-91c3-4ca5-abd6-f150775f730d"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
      <dece:Resource>${#Project#policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#USERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="c5804332-06e6-4b86-a6fe-24dda61d3dbc"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="799d2b16-c846-4eec-91c8-88d579b3167b"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Go to policy create again if necessary" id="9608c495-5d2e-4d76-b81e-6a651fcb5bf8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def audiencelistArray = tP.getPropertyValue("audienceList").toString().split(";");
def Length = audiencelistArray.length;
log.info "l====="+Length;
def userIndex   = tP.getPropertyValue("userIndex").toInteger();

if(Length > userIndex+1){
    userIndex++;
    log.info "========"+userIndex
    tP.setPropertyValue("userIndex",userIndex.toString());
    
    testRunner.gotoStepByName("set user index and create policies");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set the initial properties" id="d056febe-a750-451a-bd15-16e9287cbc85"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("userIndex","0");
String nodeoid = tP.getPropertyValue("nodeoid"+tP.getPropertyValue("count")+tP.getPropertyValue("userIndex"));
log.info"========"+nodeoid
tP.setPropertyValue("Node_OID",nodeoid.toString());
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:E682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:E682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/coordcs_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2f020102-31af-4191-b98e-c0bba2ab7ab5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>707eff09-f96a-455f-b067-5fcaba4a8db6</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>71a94c3c-2ce0-4432-b4cd-f0190ffabade</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5c31e517-f3d1-4b5b-8698-6d855054e184</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForStandardUser" searchProperties="true" id="907c0b5d-646b-4745-9d82-94f723e19a22"><con:settings/><con:testStep type="groovy" name="Set pem" id="48935514-d905-44c3-ab9c-8edf408bf977"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

def keyStorePath = testCase.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="7149eaff-3fad-4b7e-8736-6535eae05e92"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();


def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

if(testProject.getPropertyValue("count") != "1"){
//def NODEUSERIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEUSERID"),"UTF-8");
//testProject.setPropertyValue("NODEUSERID",NODEUSERIDEncoded)
//testProject.setPropertyValue("NODEUSERIDFAU1_Encoded",NODEUSERIDFAU1_Encoded)
//
//def NODEACCOUNTIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEACCOUNTID"),"UTF-8");
//testProject.setPropertyValue("NODEACCOUNTID",NODEACCOUNTIDEncoded)

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
}</script></con:config></con:testStep><con:testStep type="groovy" name="set user index and create policies" id="1e0e459f-93f2-4d0b-9aa0-aab0b1bd5e0d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def audienceArray = testProject.getPropertyValue("audienceList").toString();
if(audienceArray.contains(";"))
{
def audiencelistArray = testProject.getPropertyValue("audienceList").toString().split(";");
def l = audiencelistArray.length;
log.info "l==="+l;
def userIndex = testProject.getPropertyValue("userIndex").toInteger();
log.info "userindex====="+userIndex;


String nodeoid = testProject.getPropertyValue("nodeoid"+testProject.getPropertyValue("count")+testProject.getPropertyValue("userIndex"));
testProject.setPropertyValue("Node_OID",nodeoid.toString());

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

def keyStorePath = testCase.getPropertyValue("keyStorePath");

//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
if(testProject.getPropertyValue("userIndex") != "0"){
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="96672d84-a14e-4de1-8cf1-e49555d35bec"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#USERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="0887613a-d93e-4405-8550-260795ff50fe"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="171a3b03-116c-4d4f-83d0-f5e503697def"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Go to policy create again if necessary" id="3c89f94d-5812-4971-9e3b-9ffa4e737ec8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def audiencelistArray = tP.getPropertyValue("audienceList").toString().split(";");
def Length = audiencelistArray.length;
log.info "l====="+Length;
def userIndex   = tP.getPropertyValue("userIndex").toInteger();

if(Length > userIndex+1){
    userIndex++;
    log.info "========"+userIndex
    tP.setPropertyValue("userIndex",userIndex.toString());
    
    testRunner.gotoStepByName("set user index and create policies");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set the initial properties" id="9778cd02-57db-4690-9316-61e14b6d56ea"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("userIndex","0");
String nodeoid = tP.getPropertyValue("nodeoid"+tP.getPropertyValue("count")+tP.getPropertyValue("userIndex"));
log.info"========"+nodeoid
tP.setPropertyValue("Node_OID",nodeoid.toString());
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;

</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:E682B98D77DD7311E0401F0A05991189</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:E682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/coordcs_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>95c44820-dc3d-41b1-aaeb-046ed883cdd0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bebf0d96-3664-4297-8a60-39c898da110e</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ae07363f-1c5d-48de-93f1-d5ae9ad79a72</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="STS" searchProperties="true" id="b53e7706-38bb-4d95-8bf1-eb6aced62be7" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="Establish Test Case Properties" id="2dbf97c8-b6fa-4be4-9a27-48b664ca071d"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));


if(testProject.getPropertyValue("V2") == testProject.getPropertyValue("versionUrlEncode"))
{
	def audienceList = URLEncoder.encode(testProject.getPropertyValue("audienceList"),"UTF-8");
	testCase.setPropertyValue("audienceList",audienceList);
	def tokentype = URLEncoder.encode(testProject.getPropertyValue("tokentype"),"UTF-8");
	testCase.setPropertyValue("tokentype",tokentype);
}
else
{
	def audienceList = URLDecoder.decode(testProject.getPropertyValue("audienceList"),"UTF-8");
	testCase.setPropertyValue("audienceList",audienceList);
	def tokentype = URLDecoder.decode(testProject.getPropertyValue("tokentype"),"UTF-8");
	testCase.setPropertyValue("tokentype",tokentype);
}</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem1" id="a6f55df6-9fb5-4c04-857e-f72d4bdebd00"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("STS - POST");
RestTestRequestStep testStep1 = tC.getTestStepByName("GET - STS");
def keyStorePath = tC.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="STS - POST" id="c16995fe-69bf-4a40-8ee2-fa107ae0b62b"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/SecurityToken/SecurityTokenExchange" methodName="STSCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="STS - POST" mediaType="application/xml" postQueryString="false" sslKeystore="coordcs_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">All</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes" ?> 
<Credentials xmlns="${#Project#coordinatorSchema}">
  <Username>${#TestCase#UserName}</Username> 
  <Password>${#TestCase#Password}</Password> 
</Credentials>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="fa7995e8-03c8-4191-840e-4453f03b89e4"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokentype" value="${#TestCase#tokentype}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Rerun STS Post"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");
def tStep = testCase.getTestStepByName("STS - POST");

log.info "#########################IN RERUN ######################" + tStep.getName();
String status = tStep.httpRequest.response.responseHeaders["#status#"]; 


if(!status.contains("201 Created"))
{
	log.info "STS Post not Sucessful Retrying...!";
	testRunner.runTestStepByName(tStep.getName());
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers" id="76586b9e-59bc-40d0-969e-9463ff48cf88">
        <con:settings/>
        <con:config>
          <script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def callTSname = tC.getPropertyValue("sName");
def callTCname = tC.getPropertyValue("tName");

def tStep  = tC.getTestStepByName('STS - POST');

/*
*  Get the HTTP headers
*/
def status = tStep.httpRequest.response.responseHeaders["#status#"]; 
def connection = tStep.httpRequest.response.responseHeaders["Connection"];
def contentType = tStep.httpRequest.response.responseHeaders["Content-Type"];
def contentLength = tStep.httpRequest.response.responseHeaders["Content-Length"];
def contentLocation = tStep.httpRequest.response.responseHeaders["Location"];

log.info status[0];
//log.info connection[0];
log.info contentType[0];
log.info contentLength[0];
log.info contentLocation[0];

tC.setPropertyValue("status",status[0]);
//tC.setPropertyValue("connection", connection[0]);
tC.setPropertyValue("contentType", contentType[0]);
tC.setPropertyValue("contentLength", contentLength[0]);
tC.setPropertyValue("contentLocation", contentLocation[0]);

//this.log.info "contentLength [$contentLength]";

if (contentLength[0].toInteger() > 0) {
	rawResp = new ByteArrayOutputStream();
    def rawResp = tStep.httpRequest.response.getRawResponseData();
     strVal  = new String(rawResp);
      log.info strVal[0];

    int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");

    	//XMLbody =  strVal.tokenize('\n').last();

	String XMLbody  = strVal.substring(startAssert, strVal.size());
     
	tC.setPropertyValue("XMLbody", XMLbody);
}</script>
        </con:config>
      </con:testStep><con:testStep type="groovy" name="Verify Response Body and Headers and save assertion" id="976a847a-cea2-4b80-82c0-addc07020e8b">
        <con:settings/>
        <con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def url           = tP.getPropertyValue("targetURL");
//def urnacct       = tP.getPropertyValue("urnaccount");
//def urnstream     = tP.getPropertyValue("urnstream");
def major = tP.getPropertyValue("VersionMajor");
def minor = tP.getPropertyValue("VersionMinor");
def expectErrType = tC.getPropertyValue("expectErrType");
log.info(expectErrType);
def XMLbody       = tC.getPropertyValue("XMLbody");
def nodeaccountid = tC.getPropertyValue("nodeaccountid");

boolean dobodyXML = true;
boolean doContentTypeHeader = true;
boolean doConnectionClose = false;
boolean doContentLocaton  = true;
boolean contentLengthZero = false;

String errorID     = "";
String errorReason = "";
String errorLink   = "";
//String orgRequest  = url + "/rest/1/0/Account/" + urnacct + nodeaccountid;
String expectHTTPstatus = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "close";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";

if (expectErrType == "") {
	expectErrType = "SUCCESS";
}

this.log.info "expectErrType is $expectErrType";
switch (expectErrType) {
	case "SUCCESS":
		expectHTTPstatus = "HTTP/1.1 201 Created";
		expectHTTPcontenttype = "text/plain; charset=UTF-8";
		contentLengthZero = true;
		doContentLocaton  = true;
		dobodyXML = false;
	break;
	case "FORBIDDEN":
	default:
		errorReason = "Forbidden";
		errorID = "Forbidden";
		errorLink = "";
		orgRequest = "";
		doContentLocaton  = false;
		dobodyXML = true;
	break;
}

// HTTP header status
this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("status");
assert tC.getPropertyValue("status") == expectHTTPstatus;

// Connection

if (doConnectionClose) {
	this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("connection");
	assert tC.getPropertyValue("connection") == expectHTTPconnection;
}


//Content-Length
if (contentLengthZero) {
	//assert tC.getPropertyValue("contentLength").toInteger() == 0;
} else {
	//assert tC.getPropertyValue("contentLength").toInteger() > 0;
}
	
//Content-Type
if (doContentTypeHeader) {
	assert tC.getPropertyValue("contentType") == expectHTTPcontenttype;
}

// Content-Location
if (doContentLocaton) {
	assert tC.getPropertyValue("contentLocation") != null;
	
	def b = tC.getPropertyValue("contentLocation").toURL();
	assert b.getPath().matches("/rest/$major/$minor/SecurityToken/Assertion/[_,0-9,a-f,-]*");
	def parms = b.getPath().split("/");
	
	tC.setPropertyValue("assertionUUID",parms[parms.size() - 1]);
} else {
	assert tC.getPropertyValue("contentLocation") == null;
}

if (dobodyXML) {
	if (XMLbody.length() > 0) {
		def myXML = new XmlSlurper().parseText(XMLbody);

		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode: Expect[$errorID] Received: " + myXML.Error.@ErrorID.toString();
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason: Expect[$errorReason] Received: " + myXML.Error.Reason.toString();
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		this.log.info "ErrorReason: Expect[$errorLink] Received: " + myXML.Error.ErrorLink.toString();
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} else {
		return false;
	}
}</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="GET - STS" id="2d6e6827-0bf9-419f-b838-8f73bd88ceca"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/SecurityToken/Assertion/{ASSERTION}" methodName="STSGet" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - STS" mediaType="application/xml" sslKeystore="coordcs_concat.pem" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="31743bc4-b3c6-4521-8732-aa46248b343c"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 200 OK]";</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#Project#UserName}</con:username><con:password>Password1</con:password><con:domain>DECE</con:domain><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract Response Body and Headers 1" id="96e4326e-6d7a-4a04-af30-061942ad636c"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

//def callTSname = tC.getPropertyValue("sName");
//def callTCname = tC.getPropertyValue("tName");
//
//def callTC = tP.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
def tStep  = tC.getTestStepByName('GET - STS');


/*
*  Get the HTTP headers
*/
tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
	   /*	case "Location": 
			contentLocation = value[0];
		break;*/
		case "#status#": 
			status = value[0]; 
			break;
		/*case "Connection": 
			connection = value[0]; 
			break;*/
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}
//def contentLocation = tStep.httpRequest.response.responseHeaders["Content-Location"];

//def expXML = tStep.httpRequest.response.getResponseContent();
this.log.info tStep.httpRequest.response.getRawResponseData();
//new b = tStep.httpRequest.response.getResponseContent();
rawResp = new ByteArrayOutputStream();
rawResp = tStep.httpRequest.response.getRawResponseData();
strVal  = new String(rawResp);
log.info strVal;

int startAssert = strVal.indexOf("&lt;?xml version=\"1.0\" ");
String XMLbody  = strVal.substring(startAssert, strVal.length());

tC.setPropertyValue("XMLbody", XMLbody);
tC.setPropertyValue("status", status);
//tC.setPropertyValue("connection", connection);
tC.setPropertyValue("contentType", contentType);
//tC.setPropertyValue("contentLength", contentLength);
//tC.setPropertyValue("contentLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Deflate and encode the &lt;Assertion>" id="113011f4-739e-4521-85dc-49030172a8d9"><con:settings/><con:config><script>import java.util.zip.Deflater;
import org.w3c.tools.codec.Base64Encoder;
import java.io.ByteArrayOutputStream;
import java.util.zip.DeflaterOutputStream;
import java.lang.*;

//import groovy.sql.Sql;
//import org.apache.commons.codec.binary.Base64;

//com.eviware.soapui.support.ClasspathHacker.addFile( new File("opensaml-2.3.1.jar") );

//import org.opensaml.*;
import org.opensaml.xml.util.Base64;

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int compressedLength = 0;
//String XMLbody = tC.getPropertyValue("XMLassertion").toString();
String XMLbodyRaw = tC.getPropertyValue("XMLbody").toString();

int startAssert = XMLbodyRaw.indexOf("&lt;saml2:Assertion ");
int endAssert   = XMLbodyRaw.indexOf("&lt;/saml2:Assertion>");

String XMLbody = XMLbodyRaw.substring(startAssert, endAssert + 18).trim();
String base64encodeStr = "";

this.log.info "XMLbody is [$XMLbody]";

def myXML = new XmlSlurper().parseText(XMLbody);
tC.setPropertyValue("assertId",myXML.@ID.toString());

// Perform Deflation
//byte[] xmlBytes = XMLbody.trim().getBytes();
byte [] xmlBytes = new byte[XMLbody.trim().length()];

Deflater compresser = new Deflater(Deflater.DEFLATED, true);
compresser.setInput(XMLbody.trim().getBytes());
compresser.finish();
compressedLength = compresser.deflate(xmlBytes);
    
//ByteArrayOutputStream byteOutputStream    = new ByteArrayOutputStream();
//DeflaterOutputStream deflaterOutputStream = new DeflaterOutputStream(byteOutputStream);

//deflaterOutputStream.write(xmlBytes, 0, xmlBytes.length);
//deflaterOutputStream.close();

/*
// next, base64 encode it
Base64 base64Encoder = new Base64();

byte[] base64EncodedByteArray = base64Encoder.encode(byteOutputStream.toByteArray());
String base64EncodedMessage = new String(base64EncodedByteArray);
*/

//BaseID base64Encoder1 = new BaseID();

byte [] subArray = Arrays.copyOfRange(xmlBytes, 0, compressedLength);
base64encodeStr = Base64.encodeBytes(subArray,Base64.DONT_BREAK_LINES);

// finally, URL encode it
//String urlEncodedMessage = URLEncoder.encode(base64EncodedMessage, "UTF-8");
tC.setPropertyValue("assert", base64encodeStr);

//tP.setPropertyValue("SAMLFAU1_"+tP.getPropertyValue("Count")+"1", "SAML2 Assertion="+base64encodeStr);
tP.setPropertyValue("SAML",base64encodeStr);

//DatatypeHelper DTH = new DatatypeHelper();

</script></con:config></con:testStep><con:testStep type="groovy" name="Extract and Store Account and User Info based on Assertion UUID" id="12771a4e-de9a-410d-9d41-01655b42afd3"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def XMLbody       = tC.getPropertyValue("XMLbody");
def expectErrType = tC.getPropertyValue("expectErrType");

if(tP.getPropertyValue("count") != "1"){
if (expectErrType == "" || expectErrType == "SUCCESS") {
                if (XMLbody.length() > 0) {
                                def myXML = new XmlSlurper().parseText(XMLbody).declareNamespace(saml2: "urn:oasis:names:tc:SAML:2.0:assertion");

                                                // Verify response sizes...
                                                assert myXML.size() == 1;

                                                /*
                                                String accountId = myXML."saml2:Assertion"."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
                                                String userId    = myXML."saml2:Assertion"."saml2:Subject"."saml2:NameID";
                                                */
                                                String accountId = myXML."saml2:AttributeStatement"."saml2:Attribute"."saml2:AttributeValue";
                                                String userId    = myXML."saml2:Subject"."saml2:NameID";
                                                
                                                this.log.info "accountId [$accountId]";
                                                this.log.info "userId [$userId]";

                                                tC.setPropertyValue("assertionAccountId",accountId.substring(accountId.lastIndexOf(":")+1, accountId.length()));
                                                tC.setPropertyValue("assertionUserId",   userId.substring(userId.lastIndexOf(":")+1,userId.length()));
                                                tC.setPropertyValue("assertionAccountIdFULL",accountId);
                                                tC.setPropertyValue("assertionUserIdFULL",userId);
                                                tP.setPropertyValue("NODEACCOUNTID",accountId);
                                                tP.setPropertyValue("NODEUSERID",userId);
                                                def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID"); 
                                                int lastColon = nodeaccountid.lastIndexOf(':');
                                                def accountid = nodeaccountid.substring(lastColon + 1);
                                                tP.setPropertyValue("ACCOUNTID",accountid);
                                                def nodeuserid = tP.getPropertyValue("NODEUSERID"); 
                                                int lastSlash = nodeuserid.lastIndexOf(':');
                                                def userid = nodeuserid.substring(lastSlash + 1);
                                                tP.setPropertyValue("USERID",userid);
									     if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
										{
											def nodeacctid = URLEncoder.encode(tP.getPropertyValue("NODEACCOUNTID"),"UTF-8");
										     tP.setPropertyValue("NODEACCOUNTID",nodeacctid);
										     def nodeuseridfull = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
										     tP.setPropertyValue("NODEUSERID",nodeuseridfull);
										}
										else
										{
											def nodeaccid = tP.getPropertyValue("NODEACCOUNTID");
										     tP.setPropertyValue("NODEACCOUNTID",nodeaccid);
										     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
										     tP.setPropertyValue("NODEUSERID",nodeuseridfull);
										}
                                                this.log.info "assertionAccountId property is " + tC.getPropertyValue("assertionAccountId");
                                                this.log.info "assertionUserId property is " + tC.getPropertyValue("assertionUserId");
                } else {
                                return false;
                }
}
}
</script></con:config></con:testStep><con:properties><con:property><con:name>XMLbody</con:name><con:value><![CDATA[<?xml version="1.0" encoding="UTF-8"?><saml2:Assertion xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion" ID="_3f6d7e47-a2d9-4882-9990-ba15797e84b0" IssueInstant="2015-06-15T08:08:22.511Z" Version="2.0" xmlns:xs="http://www.w3.org/2001/XMLSchema"><saml2:Issuer>http://c.decellc.com/</saml2:Issuer><ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"><ds:SignedInfo><ds:CanonicalizationMethod Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"/><ds:SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/><ds:Reference URI="#_3f6d7e47-a2d9-4882-9990-ba15797e84b0"><ds:Transforms><ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/><ds:Transform Algorithm="http://www.w3.org/2001/10/xml-exc-c14n#"><ec:InclusiveNamespaces xmlns:ec="http://www.w3.org/2001/10/xml-exc-c14n#" PrefixList="xs"/></ds:Transform></ds:Transforms><ds:DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1"/><ds:DigestValue>1/oCNOQ+vHS8eJI3js4TtCBR7O4=</ds:DigestValue></ds:Reference></ds:SignedInfo><ds:SignatureValue>tIvQ8di2/pcy3ke9o4EzE4nXuXDchKRPoxhujzkqAqAQvKcJpg65EMr840LTqzcC6gCfkFUThIP8rMBkoHmKhqCca4Yudv8xwqIf9RKLCwTmZGF+N8J1qGPnpVi7CT+uB9VrTmk/VCHacw8yOz6n2CBs/o+L3nUJoV251JWIPv4=</ds:SignatureValue></ds:Signature><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:persistent">urn:dece:userid:org:dece:188AE1B4619C3094E0533D991F0A7A41</saml2:NameID><saml2:SubjectConfirmation Method="urn:oasis:names:tc:SAML:2.0:cm:sender-vouches"><saml2:SubjectConfirmationData InResponseTo="_1rq1eeayc8xton0x64wve1qeq" NotOnOrAfter="2015-06-15T11:08:22.511Z" Recipient="https://stdecqavutl1.va.neustar.com:2485/simplesaml/module.php/saml/sp/saml2-acs.php/coord:cs"/></saml2:SubjectConfirmation></saml2:Subject><saml2:Conditions NotBefore="2015-06-15T08:08:12.511Z" NotOnOrAfter="2016-06-15T08:08:22.511Z"><saml2:AudienceRestriction><saml2:Audience>urn:dece:org:org:dece:coord:cs</saml2:Audience></saml2:AudienceRestriction></saml2:Conditions><saml2:Advice><saml2:AssertionURIRef>https://qa1.q.uvvu.com:443/rest/2015/02/SecurityToken/Assertion/_3f6d7e47-a2d9-4882-9990-ba15797e84b0</saml2:AssertionURIRef></saml2:Advice><saml2:AuthnStatement AuthnInstant="2015-06-15T08:08:22.511Z" SessionIndex="_3f6d7e47-a2d9-4882-9990-ba15797e84b0"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef><saml2:AuthenticatingAuthority>urn:dece:org:org:dece:coordinator</saml2:AuthenticatingAuthority></saml2:AuthnContext></saml2:AuthnStatement><saml2:AttributeStatement><saml2:Attribute Name="accountID" NameFormat="urn:dece:type:accountID"><saml2:AttributeValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string">urn:dece:accountid:org:dece:188AE1B460E03094E0533D991F0A7A41</saml2:AttributeValue></saml2:Attribute></saml2:AttributeStatement></saml2:Assertion>]]></con:value></con:property><con:property><con:name>useroid</con:name><con:value>CE0FA9BFE5F80C65E0401F0A07990DF9</con:value></con:property><con:property><con:name>username</con:name><con:value>stream_list_view_20150615_013951</con:value></con:property><con:property><con:name>uname</con:name><con:value>shikha_user_create_accp_test_20110610_11508</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>status</con:name><con:value>HTTP/1.1 200 OK</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>password</con:name><con:value>testing</con:value></con:property><con:property><con:name>nodeuserid</con:name><con:value>CE0FA9BFE5F30C65E0401F0A07990DF9</con:value></con:property><con:property><con:name>nodeid</con:name><con:value>3512</con:value></con:property><con:property><con:name>nodeaccountid</con:name><con:value>CE0F1A1CC2F19345E0401F0A07990CC5</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/coordcs_concat.pem</con:value></con:property><con:property><con:name>expectErrType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>contentType</con:name><con:value>text/xml; charset=UTF-8</con:value></con:property><con:property><con:name>contentLocation</con:name><con:value>https://qa1.q.uvvu.com:443/rest/2015/02/SecurityToken/Assertion/_3f6d7e47-a2d9-4882-9990-ba15797e84b0</con:value></con:property><con:property><con:name>contentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>audienceList</con:name><con:value/></con:property><con:property><con:name>assertXML</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertRaw</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertPackaged</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertionUUID</con:name><con:value>_3f6d7e47-a2d9-4882-9990-ba15797e84b0</con:value></con:property><con:property><con:name>assertionUserIdFULL</con:name><con:value>urn:dece:userid:org:dece:188AE1B4619C3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>assertionUserId</con:name><con:value>188AE1B4619C3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>assertionAccountIdFULL</con:name><con:value>urn:dece:accountid:org:dece:188AE1B460E03094E0533D991F0A7A41</con:value></con:property><con:property><con:name>assertionAccountId</con:name><con:value>188AE1B460E03094E0533D991F0A7A41</con:value></con:property><con:property><con:name>assertIdL</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>assertId</con:name><con:value>_3f6d7e47-a2d9-4882-9990-ba15797e84b0</con:value></con:property><con:property><con:name>assert</con:name><con:value>nVZtb+I4EP4rKPuxColDgCQqSDS0t+n7Atvb2y8n1xnA28SG2Am0v/7sAFlCaY87CQl5Mp55ZubxY58LnCZOMBACMkk5a6zThImgtPaMPGMBx4KKgOEURCBJMB7c3QZO0w7wbovRiIY94+/WtBN3we2a2Il90/U8x/R93zafMWp3/S547rOtXIXIIWJCYiZ7hmOjtml3TNSe2F6gfo7TbCP002g8QSZUbOXSVLs2oNaiZ8ylXASWtVqtmqtWk2czy7FtZP24ux2TOaTY6J9vKioTZf2tP2nGQCBJSJPw1Dq3aj7nsQjGdMawzDPY5oo/ymVbtm8pn1jQ2Rej2gtxxKa8XIaYcUYJTugb1v25AznncWOQzHhG5Tz9sAhk68AmrIlJkMu+GFYd2omBaggzgU0xx2gbawRTyIARaHwfRT3jy2lTK7dOMszElGepqC//Gx5gBSR8AbEpdmVtoZ0e8Ein+udAgoiRJBe0gHtN1gUmILbTBHJ6qMZjBlO6vqVCEXQtNDprH97BctONIZ2BkP9nQHvD2QR5wkkOfWTx8P7h21nxdezBddT6JdyJDC9G3Qe3VwLYdy4N1Wg3ywNSViTa7JBR8c2LqWMtyGvrBXzuXr5duuxH/mNI5jejR76e57/eXpaD5eBbcUOuF7NO+/Iu81z7drJ8I2FnFk5frr5P5tGjl91dvPCv6c18GRLs/pXHhbdeLaOpP7q5DVeT9OcfV2f33jVa/vHIFk+0G07O8gv/KZukL9ZT+BWTlff68NZhTnghLH5222Lfr/mT00bXf0aPxbbcA/x12+7Mj/PnX0DkbqlpEA0bV2pKWH4uZtpCY3NaugYLLT5CApNGX+/S2hHkSu5oHKgZbtbI8waX6MLtID9s2b57abdbraHvoyt70B24aCcyGxQHEEPOplTn0pK7oc3nAEkaCGAxZGbBc6V0wvgk4hBL3IjYSB0CzgRMuJJnlC0RAH4l3lpyZq877qoAtISl0bjn8oE9ZIOphKymyQjVNHkEhC4oaOHWvBaK2EKqXixxkcsENQvcZJArac+0ygaO67UtQdNFAhqplfI4T6C5mC/Kzlhi8++YmIjSSjjP4oBsjtyHxR1+2/VB+cRUOwhd0AWoWcKRGwbtqnlXdefoTbQLP8hjqk+XaqrMKNkgqX/6zRVNkooou7J2uCv3Q0MttHVYVZUtLiipKF9d3ErPlQL0d4NZYtRcNvOiyMtZuG7LylR4S/fDsh1rDCRXGvU64S/ArCqKddKFUAE/SF7Z6xBzOWdjiSWkijuNcnnCC2AMQr8AIkX69anPi1pK1ToJa3nMFibq9aIRf/rAIQHRfsr8qP5Waoq/J3Yk1l4eVad6AEjKZnqlL4PXz8hBlYzxbD/4sQDHkteNVZMrLFIR6jmX8PGXhtannoEJ4TmT0dAoDfuaWeKUrwsIfju9C1PKcvVOo//+UDNpSQEC6nUnaBlfX7eBPgJstqe726RHpde+tD+T3jq6/jvze8tenw453v8H</con:value></con:property><con:property><con:name>accountoid</con:name><con:value>CE0F1A1CC2F69345E0401F0A07990CC5</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>800673c1-3147-4c8c-b0c1-58e0015b4b03</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>175431f8-b1ab-411a-838d-f62e6ec865f5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>7b4251c4-b0c9-4524-b11d-58f032477794</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ad58565a-ea44-49b7-aab1-812ed0ed9584</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>63c7be09-e6de-4048-88a8-4093708a9d7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>a41302e2-c2f1-4384-92f7-153edc9522ab</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>2fe33502-92b9-4bc5-9cab-1083378ddd6c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>1adab77f-1cd6-4d9f-ac40-f99f00ddbb94</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>af3889f5-e9ad-4a18-837c-7ead87c1caed</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>fdb00829-308f-406e-9775-a6c8de3621f2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>98f48738-f6c6-4056-be18-f24b60c6a023</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>cb39d541-2f26-4a00-9fc8-5a5ea810f40b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserCreate_Basic" searchProperties="true" id="9846f9e8-8413-41aa-a9b9-78aaecdb77ad"><con:settings/><con:testStep type="groovy" name="Set properties for user" id="d8514ac9-3c24-4581-a466-435251a46de2"><con:settings/><con:config><script>def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def callTSname = testCase.getPropertyValue("sName");
def callTCname = testCase.getPropertyValue("tName");

def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)

testCase.setPropertyValue("UserName",callTC.getPropertyValue("UserName"));
testCase.setPropertyValue("Password",callTC.getPropertyValue("Password"));

def NODEUSERIDFULLDecoded = URLDecoder.decode(testProject.getPropertyValue("NODEUSERIDFULL"),"UTF-8");
testCase.setPropertyValue("NODEUSERIDFULLDecoded",NODEUSERIDFULLDecoded)
</script></con:config></con:testStep><con:testStep type="groovy" name="Set pem" id="8f01ae0a-df4e-473f-9c81-ea1c91d9ee10"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 


def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tC.setPropertyValue("keyStorePath",null);

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",tP.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep = tC.getTestStepByName("User_Create");
def keyStorePath = tC.getPropertyValue("keyStorePath");
this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep, keyStorePath);</script></con:config></con:testStep><con:testStep type="restrequest" name="User_Create" id="cf357eae-3832-4806-978b-c561330ae874"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{AccountID}/User" methodName="UserCreate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="User_Create" mediaType="application/xml" postQueryString="false" accept="application/xml" sslKeystore="RET_concat.pem"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<User UserClass="urn:dece:role:user:class:basic" xmlns="${#Project#coordinatorSchema}" xmlns:ns2="http://www.movielabs.com/md" xmlns:ns3="http://www.w3.org/2000/09/xmldsig#" xmlns:ns4="http://www.w3.org/2001/04/xmlenc#">
	<Name>
        	<GivenName>${#TestCase#UserName}</GivenName>
		<SurName>bau</SurName>
	</Name>	
	
  <!--<DisplayImage>
        <DisplayImageData>/9j/4AAQSkZJRgABAgAAZABkAAD/7AARRHVja3kAAQAEAAAAPAAA/+4ADkFk
b2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAM
DAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAY
GhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f
Hx8fHx8fHx8f/8AAEQgANwBEAwERAAIRAQMRAf/EAKAAAAIDAQEAAAAAAAAA
AAAAAAMEAgUHAAYBAAIDAQEAAAAAAAAAAAAAAAABAgMEBgUQAAIBAwIEAwYE
BQUAAAAAAAECAxESBCETAEEiBTFCFFFhcTIjBoFichXBUjNDJOGCooMHEQAB
AgIGBggDBgcAAAAAAAABABEhAvAxQWESA1FxoeEEFIGRscHRMqITIrIj8UJS
coIFYpLC8jNjJP/aAAwDAQACEQMRAD8ApsDsnY/2/DaTt8e2qIFUxgzZE1tS
BdqEBqfHX3IOriOL4zPGdOBOfMbYSh6f3VVko57F2YGVWw8VZaXZU22m1joB
W1bhQvQ1qw/M2lqHPz+fD45msiXO77BFyh1Nex9kujZe2Q6gjExWQB3oKGWY
kFgoB5+HOrkKFz2fH6k15fYKbHJHRE+3uxMrIcWDbD0yckRqtzk27UIFbden
TUeAq9SA8fn14prg+009MCOqbtvdPtXun3Rl9lxezJHNAJI4MiRUMTNCTuM0
SqrL4dNWNaAdNTxvz8visrh5c2bNLFnDl41Rfrh1snFW57H9v2RsMGJ8dW+k
RGhlyZDr06KAnPkD7ox1Yee4h/PM+stKPGnmqTlDbsXZgZVbExVkAuypttNr
HQCtq3ChehrVh+ZtLU4Ofz4fHNdEud32CLlDrv2TsYaNh2yHUFcPFZAHegoZ
ZmILBQDz8OdXIUHPZ8fqTXl9gpsckdV37F2L9+s24q7Ft+19H1G7SlnyW+Sl
fHS6/Xj0ObzuUxOX9zTHDh0137WwpvBWeLIVhWko3UiUTZRoEx4rQ1ig1F5F
Ca/qbS1eMHGD608IY5oaS52fYIuUiiBwBEqxGyt2JiMSGdgamaYmpFCburUH
U1cgDM1cdZ7hT0uSkVHFJSZTbULl5a1DOwNBDCBUihNvTqDoKuSQNVDUO809
LBNQ7x33t3YMBO4dy6CPp9vwYwCQQvIDput+Zq0UdI/Nbw3CT8RPgk/VMabL
azcMsu7F94YWL93Znec3Cuxe4GUTwxmrIJnDsy/KHOlGBoCCeOr4r9umn4aX
Klm+KRmOlhs7lMiC1r1KToMuCZWWaJZfWeCQwOocBLvMVoTX4toFXjjjIZTh
IqLNpIhTZaVBLswAiURmypbExGJDOwNTNMTUihN3VqDqauQA2rjrPcKelyko
GUASs0ptqFzMtahnYGghhAqRQm3p1B0FXJYGGqGod5p6WCEGmR6+uxHt+ms9
HQf0bqbda2Xf8fL+bj0YcnWf8td+GvT323J2IMbkRwKYxprjYgIAdxqZpCKg
AMbvd46uVAr4sfWnj94uemoU2OUFTEoG6TKbahcvLWoZ2BoIYQKkUJppqDoK
uSRmaqGod5p6WCSZgZ9yNVRVmVf8fH/t48dLb3t0upoAP0rpc3CIhdadNN5s
Ca8n/wCiY69xm7fhQOSuPh5vcpZm8XCr83KoY49o5U8NKce3+zz+2JpzbNJJ
T+bxipBZ72nB9f3TEwrrPUzJFcBUi9gNB+PHR8Rm+3lzT/hBKkVsH2tnLl/a
naHA3Gji2YsbwrJAxW9zr0r0kez3taBxfH5WDiMwXu9xsp2OoFMyyAbpMptq
FyspahnINBDCBUihNNNQdBVySMwFUNQ7zT0sElAPJuRqqKs6r/j4/wDbx46W
3vboWI0AH6V0ubgYNdadNN5sCSWvxN/c+pZbd63S66tN+v8AL5a0tt5bfHpN
Nyjf7Kv01Ui/8SlYgxTR7JYSMIiFGRk+dqaCGK3XQm3p56DrJIq4sH3ptOKZ
h01mmxIoqyPuIqoqzKv0INNuBPlve3QtTQAfpXS5uMzBrrTppvNgQjQyxGPz
PjO3uMmU5H4Cyg+BHsQahBe/5d9PMhUX35n+iyPVSlDPl9omwEC6hXbJDMNd
dIpTrz49T9qyvclwiqXNE3p8QmFnHbctsLuOLmLo2NNHMp98bBv4cdNnZeOS
aX8QI61NbB2NIsbsjwx1hxY8vKXcAKu0e8TGiAa9SsKEe3p1NRxfFkzZrmMx
ll68MadagpySPuIqoomVfoQeSBPlva3S6mgp+ldLm4oYNdadNN5sCSX3YjF5
nxnb3GTKkI/AWUHwIHKMazYvf8u+nmqF2/P6z+unqbf6VRZX5tqtLvl6q+PO
lOnjbhHJ1Q9z+mumquKdiVjllO18rzhAYU1KRIRTcbwqzf6DS5uIcUB7k+jE
emNVNegIK4SxmPzPju3uL5LkfgLKD4EexBrSxe/5d9PMkmo533HZnUTAfWm8
kCfNat3m5mvxOlq8Rwhru2m4WlCX+6MfFy/tbOuhAlx4DJhVLiW3ejaVnFdQ
1K0YEg6nU0408BPNJxErGExjU1Rag7AmFluXgS42NhTsDZmxNMhIoOmV4iAf
+vjrcvNE00w/CW2A96mtkZ2SPGRApnMMcix06IjJGC8je0k1A93SKC48cOQ5
Ohz0sYCmvQq1XyyxNHzfHdvcXyXI/AWUHwI9iDWYlL3/AC76eZCiZn3HZnVZ
gv1p/JAnzWpdpdz1+LaWrwYQ12jTTcLShB3F3LfTnY2621bcturuU+a+7q8b
ufzacb2/5q4+50eWrVs6Ip2JWKRPTIGVhC1Kx+eeQjw18unPxA5INYcSD7s2
lz0R7aVoKLuve7M4EwH1pvJCnjatfNz1+J0tXijDC7tpuFpSRI5QBGAhtrXH
xzUFiDUyyk1Pia6/E1YgBEbz3CmxNMPXI7f3LHDBjLiZCy5B0BdYmZUQclVh
+HvNeCQ4Z5Domlh0im5kJHtUEj967ZlwuDD2nsuNssfBZ8mMgaChu62f/b48
a+InAyp5TXmZ03VKdwHShOzZKSISxaSGRqknV8lyPw6dPgR7EGuMStr+WlIo
S8kz3uxcCYD603khTxtWvm56/E6WrwxLC7tpuFpQh7gpGAhtrXHxjUFiDUyy
k1OhNdfiasQA23nuFNiSDvD1tPUNu203aGzcupbT5bfLSvjzv143N/y1Qx7M
PbSpOxKQ5LBIgBJvSJpJtN0RilQi0NTqKn2+PJeJZ+QTPMXlbEfvDbGnWUMp
erQJcInMUb2xRlXo0l1LnYg63/E111bQV8vNplf8w2RpqQyKmQTIY6S3sA08
ojcMQSQqqAKquh/hqSRE8OWd5bvil8aaoIZGizIXx33YpBjTwSRARqyiKB4m
DyA2lbhHU+ymnhVuDl5hMGMuIEHzCJeAr00dghkTDftWPFlNE+ZLi+nx0ngk
jEiyCKEjGkEg29kFK6G4MLuXDzsvNmZ8AmxTMRMzOfiDRxR1EQtQgyZcu4Kr
IJ5AasI3O2gpUICuupGtPeeS8IcPCuVvzDbGm1DJdstAlwik2o3tiisejSXU
udiDrf8AE111agEuXOmV/wAw8aakMuGQTI0dJb2AbIlEbhiCSFVQBVV8f4dR
JC5cs7y3fFL401QQyB676u5s/wCPsV2ttqbNfCtLfDX+Xl+bjX7B9nC4fHW4
ral9qbL/2Q==</DisplayImageData>-->
<!--DisplayImageData>jfdkjdkfgdgd</DisplayImageData-->
<!--DisplayImageURL>https://qa.uvvu.com:7001/ssp/image?type=avatar&amp;nodeId=urn:dece:org:org:dece:500500&amp;nodeUserId=urn:dece:userid:org:dece:B2F5D0FFF1B7BEC4E0401F0A0599368E</DisplayImageURL-->
<!--DisplayImageURL>www.yahoo1.com</DisplayImageURL-->
    <!--</DisplayImage>-->
<ContactInfo>
        <PrimaryEmail>			
	       <Value>ashwin.tikle@compugain.com</Value>
               <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</PrimaryEmail>
	<AlternateEmail>			
        <Value>ashwin776@gmail.com</Value>			
        <ConfirmationEndpoint>www.abc.com</ConfirmationEndpoint>
	</AlternateEmail>
	<!--Address>
		<PostalAddress>45999 Center Oak Plaza</PostalAddress>
		<PostalCode>20166</PostalCode>
		<Locality>Sterling</Locality>
		<StateOrProvince>NJ</StateOrProvince>
                <Country>US</Country>
	</Address-->
	</ContactInfo>
        <Languages>
		<Language>de</Language>	
	</Languages>
       <!-- <DateOfBirth> depricated </DateOfBirth> -->
       <LegalGuardian>urn:dece:userid:org:dece:${#Project#USERIDFULL}</LegalGuardian>
       <Credentials> 

               <Username>${#TestCase#UserName}</Username>	
                <Password>${#TestCase#Password}</Password> 
	</Credentials>
<UserRecoveryTokens>
      <RecoveryItem>
		<QuestionID>1200</QuestionID>  
		<QuestionResponse>Turner</QuestionResponse>
       </RecoveryItem>
       <RecoveryItem>
		<QuestionID>1650</QuestionID>  
		<QuestionResponse>Phoenix</QuestionResponse>
       </RecoveryItem> 
</UserRecoveryTokens>
</User>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="8ec19c93-3bf1-4caa-a49b-0e6eb7febc0b"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="AccountID" value="${#Project#NODEACCOUNTID}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Extract_Details" id="f3979390-c6ac-445d-a651-e14e54a4ded5"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();
def tStep  = tC.getTestStepByName('User_Create');
def expXML = tStep.httpRequest.response.getResponseContent();

String status = null;
String connection = null;
String contentType = null;
String contentLength = null;
String contentLocation = null;


tStep.httpRequest.response.responseHeaders.each() { header, value ->
	switch (header) {
		case "Location": 
			contentLocation = value[0];
			break;
		case "#status#": 
			status = value[0]; 
			break;
		case "Connection": 
			connection = value[0]; 
			break;
		case "Content-Type": 
			contentType = value[0]; 
			break;
		case "Content-Length": 
			contentLength = value[0]; 
			break;
		case "Transfer-Encoding": 
			httpContentEncoding = value[0]; 
			break;
	}
}

tC.setPropertyValue("XMLbody", expXML);
tC.setPropertyValue("httpStatus", status);
tC.setPropertyValue("httpConnect", connection);
tC.setPropertyValue("httpContentType", contentType);
tC.setPropertyValue("httpContentLength", contentLength);
tC.setPropertyValue("httpLocation", contentLocation);
</script></con:config></con:testStep><con:testStep type="groovy" name="Validate_Response" id="42564bbc-e0a6-4324-9951-f17e1f3634b1"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def url       = context.expand( '${#Project#Provision_HostName}' );
def errorRespType = context.expand( '${#TestCase#ResponseType}' );
def XMLbody       = context.expand( '${#TestCase#XMLbody}');

boolean errorIDFlag     = true;
boolean errorReasonFlag = true;
boolean errorLinkFlag   = true;
boolean XMLbodynull     = false;
boolean httpLocationHeader = false;
boolean processXMLFlag  = true;

String errorID = "";
String errorReason = "";
String errorLink  = "";
String errorHost  = "";
String major = context.expand( '${#Project#VersionMajor}' );
String minor = context.expand( '${#Project#VersionMinor}' );
String orgRequest = url + "/rest/$major/$minor/Account/";
String expectHTTPstatus      = "HTTP/1.1 403 Forbidden";
String expectHTTPconnection  = "Keep-Alive";
String expectHTTPcontenttype = "application/xml; charset=UTF-8";
String expected;
String received;
String description;
/*
*  Added this override with the 7.7 drop.  They change the name
*  of the &lt;ErrorLink> host.
*/
if (context.expand( '${#Project#Query_HostName}' ).length() == 0) {
	errorHost = "http://error.decellc.org";
} else {
	errorHost = context.expand( '${#Project#Query_HostName}' );
}
this.log.info "errorRespType[$errorRespType]";

switch (errorRespType) {
	case "SUCCESS":
		expectHTTPstatus   = "HTTP/1.1 201 Created";
		XMLbodynull        = true;
		httpLocationHeader = true;
		//this.log.info "Hello";
	break;

	case "INVALID_DISPLAY_NAME":
	     expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
		errorID     = "urn:dece:errorid:org:dece:AccountDisplayNameNotValid";
		errorReason = "The display name exceeds 256 characters (or is empty).";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountDisplayNameNotValid";
	break;

	case "INVALID_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeNotValid";
	errorReason = "The supplied country code is invalid.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeNotValid";
	break;

	case "NULL_COUNTRY":
	expectHTTPstatus   = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:AccountCountryCodeCannotBeNull";
	errorReason = "The country code cannot be null.";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#AccountCountryCodeCannotBeNull";
	break;
	
	case "API_NOT_AUTH":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:Security:RoleInvalid";
	errorReason = "API call not authorized";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Security:RoleInvalid";
	break;

	case "FORBIDDEN":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		processXMLFlag  = false;
		errorIDFlag     = false;
		errorReasonFlag = false;
		errorLinkFlag   = false;
	break;
	
	case "USER_NOT_MATCH_TOKEN":
	     expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserIdUnmatched";
		errorReason = "User ID does not match security token";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserIdUnmatched";
		break;
	
	case "USER_NOT_ACTIVE":
	expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
	errorID     = "urn:dece:errorid:org:dece:UserNotActive";
	errorReason = "User is not active";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotActive";
	
	break;
	case "USER_REQUESTING_NOT_PROVIDED":
	expectHTTPstatus = "HTTP/1.1 400 Bad Request";
	errorID     = "urn:dece:errorid:org:dece:UserNotSpecified";
	errorReason = "Requesting User ID Not Specified";
	errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserNotSpecified";
	break;
	
	case "USER_NOT_PERMIT":
		expectHTTPstatus = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:UserPrivilegeAccessRestricted";
		errorReason = "User Privilege Access Restricted";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#UserPrivilegeAccessRestricted";
	break;

		case "CANNOT_CREATE_FAU":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorPrivilegeInsufficientToCreateFullAccessUser";
		errorReason = "The user does not have permission to create a full-access user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorPrivilegeInsufficientToCreateFullAccessUser";
	break;
	
	case "CANNOT_CREATE_USER":
		expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
		errorID     = "urn:dece:errorid:org:dece:RequestorNotAllowedToCreateUsers";
		errorReason = "The user does not have permission to create a user.";
		errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#RequestorNotAllowedToCreateUsers";
	break;
	
	case "FIRST_USER_MUST_BE_ADULT":
			expectHTTPstatus   = "HTTP/1.1 403 Forbidden";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBe18OrOlder";
			errorReason = "First User must be 18 years or older";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBe18OrOlder";
	break;


	case "NO_MNG_ACC_CNST":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The setting of the \"Manage Account Consent\" policy prevents the requested action from being completed.";
			errorID     = "urn:dece:errorid:org:dece:Policy:ManageAccountConsentRequired";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#Policy:ManageAccountConsentRequired";
	break;
	
	case "FIRST_USER_MUST_BE_FAU":
		     expectHTTPstatus = "HTTP/1.1 403 Forbidden";
			errorReason = "The first user in a household account must be a full-access user.";
			errorID     = "urn:dece:errorid:org:dece:FirstUserMustBeCreatedWithFullAccessPrivilege";
			errorLink   = "$errorHost/rest/$major/$minor/error/en/ErrorList.html#FirstUserMustBeCreatedWithFullAccessPrivilege";
	break;
	
}
// HTTP header status
//this.log.info "HTTP status:  Expect: $expectHTTPstatus - Received: " + tC.getPropertyValue("httpStatus");

assert context.expand( '${#TestCase#httpStatus}' ) == expectHTTPstatus;

// Connection
//this.log.info "HTTP status:  Expect: $expectHTTPconnection - Received: " + tC.getPropertyValue("httpConnect");
//assert context.expand( '${#TestCase#httpConnect}') == expectHTTPconnection;;

//Content-Length
//this.log.info "HTTP Content-Length:  Value is " + context.expand( '${#TestCase#httpContentLength}').toInteger();
if (XMLbodynull) {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() == 0;
} else {
	//assert context.expand( '${#TestCase#httpContentLength}').toInteger() > 0;
}

//Location Header
if (httpLocationHeader) {
	assert context.expand( '${#TestCase#httpLocation}') != null;

	def a = context.expand( '${#TestCase#httpLocation}');
	def b = a.toURL();
	def urlStr = b.getPath();

	if(minor == tP.getPropertyValue("versionUrlEncode")){
	assert b.getPath().matches("/rest/$major/$minor/Account/urn%3Adece%3Aaccountid%3Aorg%3Adece%3A[0-9,A-F]*/User/urn%3Adece%3Auserid%3Aorg%3Adece%3A[0-9,A-F]*");
	int lastColon = urlStr.lastIndexOf('%');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeuserid     = urlStr.substring(lastSlash + 1);
	userid = urlStr.substring(lastColon + 3);
     tP.setPropertyValue("NODEUSERID",nodeuserid);
	tP.setPropertyValue("USERID",userid);
	}
	else
	{
	assert b.getPath().matches("/rest/$major/$minor/Account/urn:dece:accountid:org:dece:[0-9,A-F]*/User/urn:dece:userid:org:dece:[0-9,A-F]*");
	int lastColon = urlStr.lastIndexOf(':');
	int lastSlash = urlStr.lastIndexOf('/');
	nodeuserid     = urlStr.substring(lastSlash + 1);
	userid = urlStr.substring(lastColon + 1);
     tP.setPropertyValue("NODEUSERID",nodeuserid);
	tP.setPropertyValue("USERID",userid);
	}
} else {
	assert context.expand( '${#TestCase#httpLocation}') == "";
}

//Content-Type
assert context.expand( '${#TestCase#httpContentType}') == expectHTTPcontenttype;

//XML body should be null test
if (XMLbodynull) {

	assert XMLbody == "";
}

if (XMLbody != "" &amp;&amp; processXMLFlag == true) {
	def myXML = new XmlSlurper().parseText(XMLbody);
  
	if (errorRespType != "SUCCESS" ) {
		// Verify response sizes...
		assert myXML.Error.size() == 1;
		assert myXML.Error.Reason.size() == 1;
		assert myXML.Error.OriginalRequest.size() == 1;
		assert myXML.Error.ErrorLink.size() == 1;
		
		// ErrorCode
		this.log.info "ErrorCode Received [" + myXML.Error.@ErrorID.toString() + "] Exp[$errorID]";
		assert myXML.Error.@ErrorID.toString() == errorID;
	
		// ErrorReason
		this.log.info "ErrorReason Received [" + myXML.Error.Reason.toString() + "] Exp[$errorReason]";
		assert myXML.Error.Reason.toString() == errorReason;

		// ErrorLink
		assert myXML.Error.ErrorLink.toString() == errorLink;
	} 
	
 } 

</script></con:config></con:testStep><con:properties><con:property><con:name>ResponseType</con:name><con:value>SUCCESS</con:value></con:property><con:property><con:name>XMLbody</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>httpStatus</con:name><con:value>HTTP/1.1 201 Created</con:value></con:property><con:property><con:name>httpConnect</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Keep-Alive</con:value></con:property><con:property><con:name>httpContentType</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>httpContentLength</con:name><con:value>0</con:value></con:property><con:property><con:name>httpLocation</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">https://qa.q.uvvu.com:7001/rest/1/11/Account/urn:dece:accountid:org:dece:FC70C717C5DBD37AE0401F0A0799215E/User/urn:dece:userid:org:dece:FC70C6E5A6DD4BE4E0401F0A05995347</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>UserName</con:name><con:value>stream_list_view_20140622_011231</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:DB8F0F6588921CE6E0401F0A05991E36</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:E072D07F07FC9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/RET_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>7f3628e8-17b4-4b24-9a27-1a62fd725b3a</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="PoliciesForBasicUser" searchProperties="true" id="632bf0f0-f265-4e94-80b1-1307c9fdd4db"><con:settings/><con:testStep type="groovy" name="Set pem" id="2a5c085d-3624-49e9-91e5-4c784bb2b74d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");
RestTestRequestStep testStep4 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_CLGAttestation");
RestTestRequestStep testStep5 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_COPPA");
//String keyStorePath = testCase.getPropertyValue("KeyStorePath");
//String keyStoreAlias = testCase.getPropertyValue("notValidExpiredNode");

def keyStorePath = testCase.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep4, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep5, keyStorePath);</script></con:config></con:testStep><con:testStep type="groovy" name="Set Encoded NodeUserID" id="1238698a-0f12-4485-86a4-3b254eca88fa"><con:settings/><con:config><script>import groovy.*
import groovy.xml.*
import groovy.util.*;
import com.eviware.soapui.model.testsuite.TestRunner.Status
import java.net.URLDecoder;
import java.net.URLEncoder;

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();



def testStep = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" )
if( testStep.disabled )
  testStep.disabled = false;

def testStep1 = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" )
if( testStep1.disabled )
  testStep1.disabled = false;

def testStep2 = testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_ManageUserConsent" )
if( testStep2.disabled )
  testStep2.disabled = false;

if(testProject.getPropertyValue("count") != "1"){
//def NODEUSERIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEUSERID"),"UTF-8");
//testProject.setPropertyValue("NODEUSERID",NODEUSERIDEncoded)
//testProject.setPropertyValue("NODEUSERIDFAU1_Encoded",NODEUSERIDFAU1_Encoded)
//
//def NODEACCOUNTIDEncoded = URLEncoder.encode(testProject.getPropertyValue("NODEACCOUNTID"),"UTF-8");
//testProject.setPropertyValue("NODEACCOUNTID",NODEACCOUNTIDEncoded)

testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" ).disabled = true;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_ManageUserConsent" ).disabled = true;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_COPPA" ).disabled = true;
}</script></con:config></con:testStep><con:testStep type="groovy" name="set user index and create policies" id="96d314a8-0e24-4b34-8404-89ebc8e5ad22"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status
import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def audienceArray = testProject.getPropertyValue("audienceList").toString();
if(audienceArray.contains(";"))
{
def audiencelistArray = testProject.getPropertyValue("audienceList").toString().split(";");
def l = audiencelistArray.length;
log.info "l==="+l;
def userIndex = testProject.getPropertyValue("userIndex").toInteger();
log.info "userindex====="+userIndex;


String nodeoid = testProject.getPropertyValue("nodeoid"+testProject.getPropertyValue("count")+testProject.getPropertyValue("userIndex"));
testProject.setPropertyValue("Node_OID",nodeoid.toString());

def myTC = testProject.getTestSuiteByName("End_To_End").getTestCaseByName("SetPem")
myTC.setPropertyValue("nodeId",testProject.getPropertyValue("Node_OID"));
myTC.setPropertyValue("tName",testCase.getName());
myTC.setPropertyValue("sName",testSuite.getName());
def runnerTC = myTC.run( null , false );
assert runnerTC.status == Status.FINISHED;

RestTestRequestStep testStep0 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_TOU");
RestTestRequestStep testStep1 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_UserLinkConsent");
RestTestRequestStep testStep2 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageAccountConsent");
RestTestRequestStep testStep3 = testCase.getTestStepByName("PolicyCreateSinglePolicyPost_ManageUserConsent");

def keyStorePath = testCase.getPropertyValue("keyStorePath");
//this.log.info "testStep [$testStep]";
this.log.info "keyStorePathStep [$keyStorePath]";

soapUtils = new soapUIUtils(log);
soapUtils.setStepSSLSettingsKeyStore(testStep0, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep1, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep2, keyStorePath);
soapUtils.setStepSSLSettingsKeyStore(testStep3, keyStorePath);
if(testProject.getPropertyValue("userIndex") != "0"){
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = true;
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_COPPA" ).disabled = true;
	testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" ).disabled = true;
	
}
}</script></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_CLGAttestation" id="c2a3a715-2d93-4016-a882-231ba0abc4ad"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_CLGAttestation" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:CLGAttestation</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>     
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERIDFULL}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}CLGAttestation"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_TOU" id="528fe7df-877f-4a02-aa33-ecfe0aa6070d"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_TOU" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:TermsOfUse</dece:PolicyClass>
  <dece:Resource>${#Project#policy_TOU}</dece:Resource>    
      <dece:RequestingEntity>urn:dece:userid:org:dece:${#Project#USERID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERIDFULL}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}TermsOfUse"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_COPPA" id="d79e7172-e421-4fd4-a523-55f9b8357f03"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_COPPA" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:GeoPrivacyAssent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>     
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERIDFULL}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="76a6d451-0751-487b-a822-7afe464d5c6d"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}GeoPrivacyAssent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_UserLinkConsent" id="e4b4e028-4228-4e16-9931-7d02528546b2"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_UserLinkConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAML}" xmlns="http://eviware.com/soapui/config"/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding/><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" 
xmlns:dece="${#Project#coordinatorSchema}" 
xmlns:ds="http://www.w3.org/2000/09/xmldsig#" 
xmlns:md="http://www.movielabs.com/md" 
xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
<dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:UserLinkConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
      <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERID}">
      <dece:Value>urn:dece:type:status:active</dece:Value>
      </dece:Current>
      </dece:ResourceStatus>
</dece:Policy>
</dece:PolicyList>]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="3f24880e-3b76-4d4b-9613-3837945935d0"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}UserLinkConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PolicyCreateSinglePolicyPost_ManageUserConsent" id="01e89933-972f-4c3b-835a-fad7768badcb" disabled="true"><con:settings/><con:config service="E2E" resourcePath="/rest/${#Project#VersionMajor}/${#Project#VersionMinor}/Account/{NodeAccountId}/User/{NodeUserId}/Policy/{PolicyClass}" methodName="PolicyCreateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PolicyCreateSinglePolicyPost_ManageUserConsent" mediaType="application/xml" postQueryString="false" id="5f368efb-3bbc-4d75-bfcc-4bac66be2c45" sslKeystore="coordcs_concat.pem" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="SAML2 Assertion=${#Project#SAMLFULL}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Provision_HostName}</con:endpoint><con:request><![CDATA[<dece:PolicyList xsi:schemaLocation="http://www.decellc.org/schema dece.xsd" xmlns:dece="${#Project#coordinatorSchema}" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:md="http://www.movielabs.com/md" xmlns:xenc="http://www.w3.org/2001/04/xmlenc#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <dece:Policy>
      <dece:PolicyClass>urn:dece:type:policy:ManageUserConsent</dece:PolicyClass>
      <dece:Resource>urn:dece:userid:org:dece:${#Project#USERID}</dece:Resource>
      <dece:RequestingEntity>urn:dece:org:org:dece:${#Project#Node_OID}</dece:RequestingEntity>
      <dece:PolicyAuthority>urn:dece:org:org:dece:coordinator</dece:PolicyAuthority>
      <dece:ResourceStatus>
         <dece:Current CreatedBy="urn:dece:userid:org:dece:${#Project#USERIDFULL}">
            <dece:Value>urn:dece:type:status:active</dece:Value>
         </dece:Current>
      </dece:ResourceStatus>
   </dece:Policy>
</dece:PolicyList>
]]></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="0db5f4bd-bb18-40bf-87fe-157ef3181f84"><con:configuration><scriptText>assert messageExchange.responseHeaders["#status#"].toString() == "[HTTP/1.1 201 Created]";</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="NodeUserId" value="${#Project#NODEUSERID}"/>
  <con:entry key="PolicyClass" value="${#Project#urnPolicy}ManageUserConsent"/>
  <con:entry key="NodeAccountId" value="${#Project#NODEACCOUNTID}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Go to policy create again if necessary" id="510751dd-0c63-4cdd-b724-37ca8369c7b8"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def audiencelistArray = tP.getPropertyValue("audienceList").toString().split(";");
def Length = audiencelistArray.length;
log.info "l====="+Length;
def userIndex   = tP.getPropertyValue("userIndex").toInteger();

if(Length > userIndex+1){
    userIndex++;
    log.info "========"+userIndex
    tP.setPropertyValue("userIndex",userIndex.toString());
    
    testRunner.gotoStepByName("set user index and create policies");
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Set the initial properties" id="bdd5b448-295f-4111-a93d-9bdf0a304218"><con:settings/><con:config><script>def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("userIndex","0");
String nodeoid = tP.getPropertyValue("nodeoid"+tP.getPropertyValue("count")+tP.getPropertyValue("userIndex"));
log.info"========"+nodeoid
tP.setPropertyValue("Node_OID",nodeoid.toString());
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_TOU" ).disabled = false;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_COPPA" ).disabled = false;
testRunner.testCase.getTestStepByName( "PolicyCreateSinglePolicyPost_CLGAttestation" ).disabled = false;
</script></con:config></con:testStep><con:properties><con:property><con:name>UserID</con:name><con:value>9E9EB486B0E941E6E0401F0A05996C5F</con:value></con:property><con:property><con:name>tName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>sName</con:name><con:value>E_2_E</con:value></con:property><con:property><con:name>NODEUSERIDDecoded</con:name><con:value>urn:dece:userid:org:dece:E682B98D789E7311E0401F0A05991189</con:value></con:property><con:property><con:name>NODEACCOUNTIDDecoded</con:name><con:value>urn:dece:accountid:org:dece:E682B036D956188DE0401F0A05997A50</con:value></con:property><con:property><con:name>NODEUSERIDFULLDecoded</con:name><con:value>urn:dece:userid:org:dece:E682B036DCFD188DE0401F0A05997A50</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>/opt/dece/certs/coordcs_concat.pem</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>2d787415-6ad6-4403-9bbc-37fb4687847b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ede2863a-87cd-4b07-8480-d41d12995398</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>538eac1e-267d-47ba-b194-f9953171618c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>bac177f5-5586-4318-b970-cc997f810ec4</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b2dc8a3b-c62a-4c6a-a101-634c57a370ce</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>41774e16-4267-4acd-bbcd-b821f3f16b23</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SetPem" searchProperties="true" id="b6fcc4b2-d288-432c-b071-fb72c86366b7"><con:settings/><con:testStep type="groovy" name="Set Pem" id="cecda72b-4bd3-49a4-b53b-084c7cbb3b7e"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import org.apache.commons.lang.SystemUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context) 
def projectPath = groovyUtils.projectPath

def eNV = context.expand( '${#Project#ENV}' )

def propertiesPath = null;

if (System.properties['os.name'].toLowerCase().contains('windows')) 
	{
    		log.info "it's Windows OS!!";
    		File temp = new File( projectPath + "\\..\\..\\..\\Properties\\");
    		propertiesPath = temp.getCanonicalPath();
	} 
else 
	{
    		log.info "it's Linux OS!!";
    		File temp = new File(projectPath + "/../../../Properties/");
    		propertiesPath = temp.getCanonicalPath();
	}
	
log.info("Properties File Location : '" + propertiesPath+ "'");




def propMap=[:]
BufferedReader reader = new BufferedReader(new FileReader(propertiesPath + "/" + eNV +"project.properties"));

String line;
while ((line = reader.readLine()) != null)
      {
	       if (line.trim().length()==0) continue;
	       if (line.charAt(0)=='#') continue;
	
	       int delimPosition = line.indexOf("=");
	       String key = line.substring(0, delimPosition-0).trim();
	       String value = line.substring(delimPosition+1).trim();
	       propMap.put(key, value);
      }


if (System.properties['os.name'].toLowerCase().contains('windows')) 
      {
            log.info "it's Windows OS!!!";
            File temp = new File( projectPath + "\\..\\..\\..\\Certs\\" + eNV + "\\");
    		  certPath = temp.getCanonicalPath();      
      } 
else 
      {
            log.info "it's Linux OS!!!";
            File temp = new File(projectPath + "/../../../Certs/" + eNV + "/");
    		  certPath = temp.getCanonicalPath();
      }  
      
 log.info("Cert path: " + certPath );  
                  
def nodeId = context.expand( '${#TestCase#nodeid}' )

log.info "nodeId: "+nodeId;

 if (nodeId == "dece:cs")
       {
             nodeId = "dececs";
       }
 else if (nodeId == "coord:cs")
       {
             nodeId = "coordcs";
       }
 else
       {
             nodeId = nodeId;
       }


//log.info "~~~~~~~~~~~~" +nodeId
boolean imFine = true;
def pwd = null;
def certMatchesNodeID = context.expand( '${#Project#CertMatchesNodeID}' )
log.info("CertMatchesNodeID : '" + certMatchesNodeID + "'");
if (certMatchesNodeID == "YES")
{
		File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
		File f2 = new File(certPath+"/"+nodeId + ".jks");
		File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");
		File f4 = new File(certPath+"/"+nodeId + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");
	
	// sets the certificate from the specific folder when the certname and NodeId are same
	  if(f1.exists()) 
             {
                   keyStorePath = certPath+"/"+nodeId + "_concat.pem";
                   pwd = "123"
                   log.info("F1 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");      
             }
	  else if(f2.exists())
             {
                  	keyStorePath = certPath+"/"+nodeId + ".jks";
                   	pwd = "abcd1234" 
                   	log.info("F2 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");          
             }
	  else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
                   	pwd = "12elma";
				log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
             }
	  else if(f4.exists()) 
             {
                   	keyStorePath = certPath+"/"+nodeId + ".pem";
                   	pwd = "123";
                   	log.info("F4 file exists!!!");
                   log.info("keyStorePath : '" + keyStorePath + "'");       
             }
	  else
             {
                  	log.info "No cert file is Found!!!";
                  	imFine = false;
             }
}
else
{
	//to get the certificate name from another property based on the nodeid property.
		
	
       def value = propMap.find{ it.value == nodeId }?.key
       def certName = testProject.getPropertyValue(value+"_cert");       
       log.info "cert name .... " + certName;

		File f1 = new File(certPath+"/"+certName + "_concat.pem");
		File f2 = new File(certPath+"/"+certName + ".jks");
		File f3 = new File(certPath+"/truststore-"+certName + ".jks");
		File f4 = new File(certPath+"/"+certName + ".pem");

		log.info("F1 : '" + f1.getPath()+ "'");
		log.info("F2 : '" + f2.getPath()+ "'");
		log.info("F3 : '" + f3.getPath()+ "'");
		log.info("F4 : '" + f4.getPath()+ "'");      
		     
       if(f1.exists()) 
             {
             		
				keyStorePath = certPath+"/"+certName + "_concat.pem";
				pwd = "123";
				log.info("F1 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else if(f2.exists())
             {
				keyStorePath = certPath+"/"+certName + ".jks";
				pwd = "abcd1234";
				log.info("F2 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");           
             }
       else if(f3.exists())
             {
                  	keyStorePath = certPath+"/truststore-"+certName + ".jks";
                   	pwd = "abcd1234";
                   	log.info("F3 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");
                   	         
             }
       else if(f4.exists()) 
             {
				keyStorePath = certPath+"/"+certName + ".pem";
				pwd = "123";  
				log.info("F4 file exists!!!");
                   	log.info("keyStorePath : '" + keyStorePath + "'");     
             }
       else
			{
			log.info "No cert file is Found!!!";
			imFine = false;
			}                             
}


if(imFine)
{
      def callTSname = testCase.getPropertyValue("sName");
      def callTCname = testCase.getPropertyValue("tName");
      
      def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
      
      callTC.setPropertyValue("keyStorePath","$keyStorePath");
      testCase.setPropertyValue("keyStorePath","$keyStorePath");
      
      SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
      SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
      log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:testStep type="groovy" name="Copy of Set Pem" disabled="true" id="300c3299-bad0-43f8-9a69-a576d8140a3f"><con:settings/><con:config><script>import soapUIUtils.soapUIUtils;
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep;
import com.eviware.soapui.support.types.StringToStringMap 

import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI
def testCase  = testRunner.getTestCase();
def testSuite = testCase.getTestSuite();
def testProject = testSuite.getProject();
def today = new Date()

String nodeId = testCase.getPropertyValue("nodeid");

log.info "nodeId: "+nodeId;

if (nodeId == "dece:cs")
	{
		nodeId = "dececs";
	}
else if (nodeId == "coord:cs")
	{
		nodeId = "coordcs";
	}
else
	{
		nodeId = nodeId;
	}
String certPath = testProject.getPropertyValue("certPath");

File f1 = new File(certPath+"/"+nodeId + "_concat.pem");
File f2 = new File(certPath+"/"+nodeId + ".jks");
File f3 = new File(certPath+"/truststore-"+nodeId + ".jks");

boolean imFine = true;

if(f1.exists()) 
	{
		keyStorePath = certPath+"/"+nodeId + "_concat.pem";
		pwd = "123"	
	 }
 else if(f2.exists())
	 {
	 	keyStorePath = certPath+"/"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else if(f3.exists())
	 {
	 	keyStorePath = certPath+"/truststore-"+nodeId + ".jks";
		pwd = "abcd1234"	
	 }
 else
	 {
	 	log.info "Error!";
	 	imFine = false;
	 }


if(imFine)
{
	log.info "keyStorePath: "+keyStorePath;
	def callTSname = testCase.getPropertyValue("sName");
	def callTCname = testCase.getPropertyValue("tName");
	
	def callTC = testProject.getTestSuiteByName(callTSname).getTestCaseByName(callTCname)
	
	callTC.setPropertyValue("keyStorePath","$keyStorePath");
	
	SoapUI.settings.setString( SSLSettings.KEYSTORE, keyStorePath );
	SoapUI.settings.setString( SSLSettings.KEYSTORE_PASSWORD, pwd);
	log.info 'pwd='+pwd
}

assert imFine == true;
</script></con:config></con:testStep><con:properties><con:property><con:name>nodeid</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">coord:cs</con:value></con:property><con:property><con:name>tName</con:name><con:value>STS</con:value></con:property><con:property><con:name>sName</con:name><con:value>End_To_End</con:value></con:property><con:property><con:name>keyStorePath</con:name><con:value>C:\Code_Repo\uv-coordinator-api-regression\Certs\QALP1/coordcs_concat.pem</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite name="E_2_E" disabled="true" id="80e86fd4-e3d6-43ea-8404-0715360d8a51"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="End_To_End" searchProperties="true" id="c3c35af5-f4cb-4b60-81a4-de0b3fab4fcb"><con:settings/><con:testStep type="groovy" name="Set ALID CID Properties" id="b7d22607-a28c-4c64-a1a4-533e2127af76" disabled="true"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("V2") == "07")
{
	tP.setPropertyValue("alid","urn:dece:alid:file:STREAMS_ALIDVersion_315037.txt");
	tP.setPropertyValue("cid","urn:dece:cid:file:STREAMS_CIDVersion_315037.txt");
}
else if(tP.getPropertyValue("V2") == "11")
{
	tP.setPropertyValue("alid","urn:dece:alid:eidr-s:512F-4CA1-D6E8-D57D-5012-I");
	tP.setPropertyValue("cid","urn:dece:cid:eidr-s:512F-4CA1-D6E8-D57D-5012-I");
}
else if(tP.getPropertyValue("V2") == "21")
{
	tP.setPropertyValue("alid","urn:dece:alid:file:STREAMS_ALIDVersion_828445.txt");
	tP.setPropertyValue("cid","urn:dece:cid:file:STREAMS_CIDVersion_828445.txt");
}


if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
{
	tP.setPropertyValue("urnParentalControlRating","urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ARatingPolicy")
	tP.setPropertyValue("urnParentalControlBlockUnratedContent","urn%3Adece%3Atype%3Apolicy%3AParentalControl%3ABlockUnratedContent")
	tP.setPropertyValue("urnParentalControlAllowAdult","urn%3Adece%3Atype%3Apolicy%3AParentalControl%3AAllowAdult")
	tP.setPropertyValue("urnPolicyID","urn%3Adece%3Apolicyid%3Aorg%3Adece%3A");
	tP.setPropertyValue("urnPolicy","urn%3Adece%3Atype%3Apolicy%3A");
	tP.setPropertyValue("urnAccount","urn:dece:accountid:org:dece:");
	tP.setPropertyValue("urnUser","urn:dece:userid:org:dece:");
	tP.setPropertyValue("urnNode","urn:dece:org:org:dece:");
	tP.setPropertyValue("urnRating","urn:dece:type:rating:");
	tP.setPropertyValue("urnRightsToken","urn:dece:rightstokenid:org:dece:");
	tP.setPropertyValue("urnStream","urn:dece:streamhandleid:org:dece:");	
	tP.setPropertyValue("primaryemail","testing@uvvutesting.biz");
	tP.setPropertyValue("AlternateEmail","testing1@uvvutesting.biz");
	tP.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword")
}
else
{
	tP.setPropertyValue("urnParentalControlRating","urn:dece:type:policy:ParentalControl:RatingPolicy")
	tP.setPropertyValue("urnParentalControlBlockUnratedContent","urn:dece:type:policy:ParentalControl:BlockUnratedContent")
	tP.setPropertyValue("urnParentalControlAllowAdult","urn:dece:type:policy:ParentalControl:AllowAdult")
	tP.setPropertyValue("urnPolicy","urn:dece:type:policy:");
	tP.setPropertyValue("urnPolicyID","urn:dece:policyid:org:dece:");
	tP.setPropertyValue("urnAccount","urn:dece:accountid:org:dece:");
	tP.setPropertyValue("urnUser","urn:dece:userid:org:dece:");
	tP.setPropertyValue("urnNode","urn:dece:org:org:dece:");
	tP.setPropertyValue("urnRating","urn:dece:type:rating:");
	tP.setPropertyValue("urnRightsToken","urn:dece:rightstokenid:org:dece:");
	tP.setPropertyValue("urnStream","urn:dece:streamhandleid:org:dece:");
	tP.setPropertyValue("primaryemail","testing@uvvutesting.biz");
	tP.setPropertyValue("AlternateEmail","testing1@uvvutesting.biz");
	tP.setPropertyValue("tokentype","urn:dece:type:tokentype:usernamepassword")
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Set Initial Values" id="c7aa5e14-6776-4965-8181-c9f6f3c297da"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

tP.setPropertyValue("loop","5");
tP.setPropertyValue("count","1");

tP.setPropertyValue("nodeoid10",tP.getPropertyValue("nodeIdRTL"));
tP.setPropertyValue("nodeoid11",tP.getPropertyValue("nodeIdLLASPCS"));
tP.setPropertyValue("nodeoid12",tP.getPropertyValue("nodeIdDLASP"));
tP.setPropertyValue("nodeoid13",tP.getPropertyValue("nodeIdDLASPCS"));
tP.setPropertyValue("audiencelist1","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdRTL")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdLLASPCS")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASP")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASPCS")+";urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdLLASP")+";");

tP.setPropertyValue("nodeoid20",tP.getPropertyValue("nodeIdLLASPCS2"));
tP.setPropertyValue("audiencelist2","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdLLASPCS2"));

tP.setPropertyValue("nodeoid30",tP.getPropertyValue("nodeIdDLASPCS2"));
tP.setPropertyValue("audiencelist3","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdDLASPCS2"));

tP.setPropertyValue("nodeoid40",tP.getPropertyValue("nodeIdDECECS"));
tP.setPropertyValue("audiencelist4","urn:dece:org:org:"+tP.getPropertyValue("nodeIdDECECS"));

tP.setPropertyValue("nodeoid50",tP.getPropertyValue("nodeIdCoordCS"));
tP.setPropertyValue("audiencelist5","urn:dece:org:org:dece:"+tP.getPropertyValue("nodeIdCoordCS"));</script></con:config></con:testStep><con:testStep type="groovy" name="Set NodeID and counter" id="b97f2428-9782-44bf-96f6-12394a759060"><con:settings/><con:config><script>def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid10"));
tP.setPropertyValue("audienceList",tP.getPropertyValue("audiencelist1"));
}
if(tP.getPropertyValue("count") == "2")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid20"));
tP.setPropertyValue("audienceList",tP.getPropertyValue("audiencelist2"));
}
if(tP.getPropertyValue("count") == "3")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid30"));
tP.setPropertyValue("audienceList",tP.getPropertyValue("audiencelist3"));
}
if(tP.getPropertyValue("count") == "4")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid40"));
tP.setPropertyValue("audienceList","");
}
if(tP.getPropertyValue("count") == "5")
{
tP.setPropertyValue("Node_OID",tP.getPropertyValue("nodeoid50"));
tP.setPropertyValue("audienceList","");
}</script></con:config></con:testStep><con:testStep type="groovy" name="SetAccountName" id="439ce046-4bac-4b80-aded-5aab4fb10585"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def myTC = tP.getTestSuiteByName("Setup").getTestCaseByName("AccName_Gen");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
}
</script></con:config></con:testStep><con:testStep type="groovy" name="AccountCreate" id="0a149190-372b-43fa-bc59-4c9dc78c1a6f" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("AccountCreate")

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID");
tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);	
def accountid = tP.getPropertyValue("ACCOUNTID");
tP.setPropertyValue("ACCOUNTID_"+tP.getPropertyValue("count"),accountid);	

}
</script></con:config></con:testStep><con:testStep type="groovy" name="SetUsenamesForSixUsers" id="1dcffc96-fa76-4498-9de5-c5a21b15d68d"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserNameGeneration");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
}</script></con:config></con:testStep><con:testStep type="groovy" name="FirstUserCreate_FAU1" id="afaff94f-aafc-4aa4-9a00-7fc31f862c99"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_FAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:full");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("FirstUserCreate");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID");
			tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);	
		def accountid = tP.getPropertyValue("ACCOUNTID");
		tP.setPropertyValue("ACCOUNTID_"+tP.getPropertyValue("count"),accountid);	

def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDFAU1_"+tP.getPropertyValue("count"),nodeuseridfull);
def useridfull = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDFAU1_"+tP.getPropertyValue("count"),useridfull);

}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_FAU1" id="1e5bd2af-275e-455b-a679-5b7e9f792225"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_FAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
		def nodeaccountid = URLEncoder.encode(tP.getPropertyValue("NODEACCOUNTID"),"UTF-8");
	     tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);
	     def nodeuseridfull = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
	     tP.setPropertyValue("NODEUSERIDFAU1_"+tP.getPropertyValue("count"),nodeuseridfull);
	}
	else
	{
		def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID");
	     tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);
	     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
	     tP.setPropertyValue("NODEUSERIDFAU1_"+tP.getPropertyValue("count"),nodeuseridfull);
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_FAU1" id="c513ebc3-3b3e-4e54-ae84-f38f7d12d077"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForFirstUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;


</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_FAU1" id="41bb6ae0-9ee1-47bf-9edd-7f69a63c9ea5"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_FAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");
tP.setPropertyValue("SAMLFULL",samlfull); 

tP.setPropertyValue("SAMLFAU1_"+tP.getPropertyValue("count"),samlfull);

if(tP.getPropertyValue("count") != "1")
{
	def nodeaccountid = tP.getPropertyValue("NODEACCOUNTID");
     tP.setPropertyValue("NODEACCOUNTID_"+tP.getPropertyValue("count"),nodeaccountid);
     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDFAU1_"+tP.getPropertyValue("count"),nodeuseridfull);
}

</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_SAU1" id="08239126-dc0a-4be9-a2e4-f7a11c638b92"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_SAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth","1997-07-01");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDSAU1_"+tP.getPropertyValue("count"),nodeuseridstandard);
def useridstandard = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDSAU1_"+tP.getPropertyValue("count"),useridstandard);

}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_SAU1" id="ef91845d-c881-4b37-8920-2a35317adfed"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_SAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
     {
     def nodeuseridstandard = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDSAU1_"+tP.getPropertyValue("count"),nodeuseridstandard);
     }
     else
     {
     def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDSAU1_"+tP.getPropertyValue("count"),nodeuseridstandard);
     }
     
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_SAU1" id="7c497bcc-d5ad-4f56-a66a-03ec0eb74911"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_SAU1" id="84b06621-d00c-4b5e-b154-9c59ba5a2bb0"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_SAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlstandard = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLSAU1_"+tP.getPropertyValue("count"),samlstandard);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDSAU1_"+tP.getPropertyValue("count"),nodeuseridstandard);
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_BAU1" id="716a4268-b4a5-419f-91dc-16cea02d03b5" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_BAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Basic");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDBAU1_"+tP.getPropertyValue("count"),nodeuseridbasic);
def useridbasic = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDBAU1_"+tP.getPropertyValue("count"),useridbasic);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_BAU1" id="d6c63e37-2357-4f75-834c-4d90c679ed35" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_BAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
     def nodeuseridbasic = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDBAU1_"+tP.getPropertyValue("count"),nodeuseridbasic);
	}
	else
	{
     def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDBAU1_"+tP.getPropertyValue("count"),nodeuseridbasic);
	}
}
</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_BAU1" id="fb617a48-89fb-4907-92f5-069475d51b10" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForBasicUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_BAU1" id="80692543-c9b6-4201-8124-1002f18384d6" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_BAU1");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlbasic = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLBAU1_"+tP.getPropertyValue("count"),samlbasic);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDBAU1_"+tP.getPropertyValue("count"),nodeuseridbasic);
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_FAU2" id="def75638-2433-4262-b0d3-f8f042e3dee0" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_FAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:full");
tC.setPropertyValue("MeetsAgeOfMajority","true");
tC.setPropertyValue("DateOfBirth","1986-02-25");
def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");



myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDFAU2_"+tP.getPropertyValue("count"),nodeuseridfull);
def useridfull = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDFAU2_"+tP.getPropertyValue("count"),useridfull);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_FAU2" id="1120752a-5175-4b1a-b56d-ed911a7d1669" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_FAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
     def nodeuseridfull = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDFAU2_"+tP.getPropertyValue("count"),nodeuseridfull);
	}
	else
	{
     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDFAU2_"+tP.getPropertyValue("count"),nodeuseridfull);
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_FAU2" id="f890f9d7-4fbe-41a4-8554-53b1f592c807" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_FAU2" id="89494d7a-929d-4cd1-b91a-23c2005f362b" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_FAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlfull = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLFAU2_"+tP.getPropertyValue("count"),samlfull);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridfull = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDFAU2_"+tP.getPropertyValue("count"),nodeuseridfull);
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_SAU2" id="224391be-2ca0-4d46-a6b4-3d604dc3bad2" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_SAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");
tC.setPropertyValue("UserClass","urn:dece:role:user:class:standard");
tC.setPropertyValue("MeetsAgeOfMajority","false");
tC.setPropertyValue("DateOfBirth","1997-01-07");
def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Standard");



myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDSAU2_"+tP.getPropertyValue("count"),nodeuseridstandard);
def useridstandard = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDSAU2_"+tP.getPropertyValue("count"),useridstandard);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_SAU2" id="63f550ab-5f21-4523-bfea-deb915ef628b" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_SAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
     def nodeuseridstandard = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDSAU2_"+tP.getPropertyValue("count"),nodeuseridstandard);
	}
	else
	{
     def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDSAU2_"+tP.getPropertyValue("count"),nodeuseridstandard);
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_SAU2" id="8b6838f1-cb28-44e4-9105-20d6e4f4b1a5" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForStandardUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_SAU2" id="b62f61bf-2209-48c0-897d-6c5a278df249" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_SAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def samlstandard = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLSAU2_"+tP.getPropertyValue("count"),samlstandard);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridstandard = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDSAU2_"+tP.getPropertyValue("count"),nodeuseridstandard);
}</script></con:config></con:testStep><con:testStep type="groovy" name="UserCreate_BAU2" id="49d4c7bb-4254-47af-8dca-228ae50509d0" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

if(tP.getPropertyValue("count") == "1"){
def UserName = tP.getPropertyValue("UserName_BAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("UserCreate_Basic");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;

def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
tP.setPropertyValue("NODEUSERIDBAU2_"+tP.getPropertyValue("count"),nodeuseridbasic);
def useridbasic = tP.getPropertyValue("USERID");
tP.setPropertyValue("USERIDBAU2_"+tP.getPropertyValue("count"),useridbasic);
}
</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_BAU2" id="a5e6dd2e-4915-4407-a963-baba4013e05c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_BAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
if(tP.getPropertyValue("count") != "1")
{	
	if(tP.getPropertyValue("V2") == tP.getPropertyValue("versionUrlEncode"))
	{
     def nodeuseridbasic = URLEncoder.encode(tP.getPropertyValue("NODEUSERID"),"UTF-8");
     tP.setPropertyValue("NODEUSERIDBAU2_"+tP.getPropertyValue("count"),nodeuseridbasic);
	}
	else
	{
     def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDBAU2_"+tP.getPropertyValue("count"),nodeuseridbasic);
	}
}</script></con:config></con:testStep><con:testStep type="groovy" name="CreatePoliciesForUser_BAU2" id="0e9bf9df-689f-4802-8abd-129af33df60e" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("PoliciesForBasicUser");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;</script></con:config></con:testStep><con:testStep type="groovy" name="STSCreate_1Year_BAU2" id="dd551089-3b4e-4334-9fb4-f84566793d55" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.model.testsuite.TestRunner.Status

def tC = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

def UserName = tP.getPropertyValue("UserName_BAU2");
tC.setPropertyValue("UserName",UserName);
tC.setPropertyValue("Password","testing");

def myTC = tP.getTestSuiteByName("End_To_End").getTestCaseByName("STS");

myTC.setPropertyValue("tName",tC.getName());
myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

assert runnerTC.status == Status.FINISHED;
def samlbasic = tP.getPropertyValue("SAML");

tP.setPropertyValue("SAMLBAU2_"+tP.getPropertyValue("count"),samlbasic);
if(tP.getPropertyValue("count") != "1")
{	
     def nodeuseridbasic = tP.getPropertyValue("NODEUSERID");
     tP.setPropertyValue("NODEUSERIDBAU2_"+tP.getPropertyValue("count"),nodeuseridbasic);
}</script></con:config></con:testStep><con:testStep type="groovy" name="Increment Counter and loop if necessary" id="b238be31-029c-41ad-9607-38849f57b896"><con:settings/><con:config><script>import com.eviware.soapui.impl.wsdl.panels.support.MockTestSuiteRunner;
import com.eviware.soapui.impl.wsdl.panels.support.MockTestSuiteRunContext;

def tC  = testRunner.getTestCase();
def tS = tC.getTestSuite();
def tP = tS.getProject();

int loopuntil = tP.getPropertyValue("loop").toInteger();
int counter   = tP.getPropertyValue("Count").toInteger();


if (counter &lt; loopuntil) {
	counter++;
    tP.setPropertyValue("Count",counter.toString());
    log.info "==========================================================";
    testRunner.gotoStepByName("Set NodeID and counter");
}
</script></con:config></con:testStep><con:properties><con:property><con:name>UserName</con:name><con:value>stream_list_view_20150615_013951</con:value></con:property><con:property><con:name>Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>UserClass</con:name><con:value>urn:dece:role:user:class:standard</con:value></con:property><con:property><con:name>MeetsAgeOfMajority</con:name><con:value>false</con:value></con:property><con:property><con:name>DateOfBirth</con:name><con:value>1997-07-01</con:value></con:property><con:property><con:name>Consent_Version</con:name><con:value>20121024</con:value></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>993282f6-9376-4ef1-a63a-3c8080ed376d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d586b16a-25ab-42e7-843f-4615e6e5b6af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>eceab473-b205-4123-8cc3-1e3b1cc51d7f</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>8328e7ca-1a6e-4e28-8384-b121130eac4d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>f524a7af-4278-406d-9a4d-e50ccabff836</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>AccountDisplayName</con:name><con:value>Ashwin_Acc_Create_20150615_013950</con:value></con:property><con:property><con:name>ACCOUNTID</con:name><con:value>188AE1B460E03094E0533D991F0A7A41</con:value></con:property><con:property><con:name>ACCOUNTID_1</con:name><con:value>188AE1B460E43094E0533D991F0A7A41</con:value></con:property><con:property><con:name>accountList</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>accountListDLT</con:name><con:value>urn:dece:accountid:org:dece:14E094CA5C70068FE05307991F0AEBC4</con:value></con:property><con:property><con:name>ActualStreamHandleIDList</con:name><con:value/></con:property><con:property><con:name>alid</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_368915851.txt</con:value></con:property><con:property><con:name>alidUK</con:name><con:value>urn:dece:alid:file:Pat_Do_Not_Touch_UK_UK_BBFC_Rating_R18.txt</con:value></con:property><con:property><con:name>AlternateEmail</con:name><con:value>test_+126@uvvutesting.biz</con:value></con:property><con:property><con:name>APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A487811501</con:value></con:property><con:property><con:name>APItestSuite</con:name><con:value>Test Cases Containing APIs</con:value></con:property><con:property><con:name>audienceList</con:name><con:value/></con:property><con:property><con:name>audiencelist1</con:name><con:value>urn:dece:org:org:dece:RET;urn:dece:org:org:dece:LLASP_CS_1;urn:dece:org:org:dece:DLASP;urn:dece:org:org:dece:DLASP_CS_1;urn:dece:org:org:dece:LLASP;</con:value></con:property><con:property><con:name>audiencelist2</con:name><con:value>urn:dece:org:org:dece:LLASP_CS_2</con:value></con:property><con:property><con:name>audiencelist3</con:name><con:value>urn:dece:org:org:dece:DLASP_CS_2</con:value></con:property><con:property><con:name>audiencelist4</con:name><con:value>urn:dece:org:org:dece:cs</con:value></con:property><con:property><con:name>audiencelist5</con:name><con:value>urn:dece:org:org:dece:coord:cs</con:value></con:property><con:property><con:name>Batch_HostName</con:name><con:value>https://qa1.b.uvvu.com</con:value></con:property><con:property><con:name>cacheDuration</con:name><con:value>86400</con:value></con:property><con:property><con:name>CertMatchesNodeID</con:name><con:value>YES</con:value></con:property><con:property><con:name>CertMatchesNodeName</con:name><con:value>YES</con:value></con:property><con:property><con:name>certspath</con:name><con:value>C:\certificates\</con:value></con:property><con:property><con:name>certsPath_Linux</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>certsPath_Windows</con:name><con:value>../../Certs/QALP1/</con:value></con:property><con:property><con:name>cid</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_596034053.txt</con:value></con:property><con:property><con:name>cidUK</con:name><con:value>urn:dece:cid:file:Pat_Do_Not_Touch_UK_UK_BBFC_Rating_R18.txt</con:value></con:property><con:property><con:name>clusterNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>coordinatorSchema</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_02</con:name><con:value>http://www.decellc.org/schema/2015/03/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_06</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_07</con:name><con:value>http://www.decellc.org/schema/2013/06/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_11</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coordinatorSchema_21</con:name><con:value>http://www.decellc.org/schema/2013/10/coordinator</con:value></con:property><con:property><con:name>coords</con:name><con:value>FALKY,COORD-10000,COORD-3034,COORD-2999,COORD-2509,COORD-627,UV-135,UV-340,Coord-2180</con:value></con:property><con:property><con:name>count</con:name><con:value>5</con:value></con:property><con:property><con:name>Country</con:name><con:value>US</con:value></con:property><con:property><con:name>DBIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>DBPassword</con:name><con:value>lp1db_23</con:value></con:property><con:property><con:name>DBUsername</con:name><con:value>DEQA1_APP</con:value></con:property><con:property><con:name>deceorgid</con:name><con:value>urn:dece:org:org:dece:1</con:value></con:property><con:property><con:name>DeleteCount</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>Device_HostName</con:name><con:value>https://qa.d.uvvu.com</con:value></con:property><con:property><con:name>disablePriority</con:name><con:value>P3,CHILD,CLG</con:value></con:property><con:property><con:name>DMR_ALID</con:name><con:value>urn:dece:alid:org:200002</con:value></con:property><con:property><con:name>DMR_APID</con:name><con:value>urn:dece:apid:org:200002</con:value></con:property><con:property><con:name>DMR_BID</con:name><con:value>urn:dece:bid:org:200002</con:value></con:property><con:property><con:name>DMR_CID</con:name><con:value>urn:dece:cid:org:200002</con:value></con:property><con:property><con:name>enableFlakyScript</con:name><con:value>false</con:value></con:property><con:property><con:name>enablePriorityScript</con:name><con:value>false</con:value></con:property><con:property><con:name>ENV</con:name><con:value>QALP1</con:value></con:property><con:property><con:name>envIdentifier</con:name><con:value>LP1</con:value></con:property><con:property><con:name>ExpirationDateTime</con:name><con:value>2015-04-30T00:41:13.133Z</con:value></con:property><con:property><con:name>Flaky_Disabled</con:name><con:value>false</con:value></con:property><con:property><con:name>Flaky_Disabler</con:name><con:value>without_flaky</con:value></con:property><con:property><con:name>idempotentdelaymillisecs</con:name><con:value>60000</con:value></con:property><con:property><con:name>JDBCConnStr</con:name><con:value>jdbc:oracle:thin:@stdeqp-clu2-scan.va.neustar.com:2115/stdecqa.neustar.com</con:value></con:property><con:property><con:name>JDBCDriver</con:name><con:value>DECEOracle</con:value></con:property><con:property><con:name>JKSAliasName</con:name><con:value>qalp1</con:value></con:property><con:property><con:name>JKSPassword</con:name><con:value>testing</con:value></con:property><con:property><con:name>loop</con:name><con:value>5</con:value></con:property><con:property><con:name>microService</con:name><con:value>ON</con:value></con:property><con:property><con:name>NODEACCOUNTID</con:name><con:value>urn:dece:accountid:org:dece:188AE1B460E03094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEACCOUNTID_1</con:name><con:value>urn:dece:accountid:org:dece:188AE1B460E43094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEACCOUNTID_2</con:name><con:value/></con:property><con:property><con:name>NODEACCOUNTID_3</con:name><con:value/></con:property><con:property><con:name>NODEACCOUNTID_4</con:name><con:value>urn:dece:accountid:org:dece:188AE1B460DE3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEACCOUNTID_5</con:name><con:value>urn:dece:accountid:org:dece:188AE1B460E03094E0533D991F0A7A41</con:value></con:property><con:property><con:name>nodeDLP</con:name><con:value>0914</con:value></con:property><con:property><con:name>nodeIdAccportal</con:name><con:value>ACCESS</con:value></con:property><con:property><con:name>nodeIdAccportal2</con:name><con:value>ACCESS_2</con:value></con:property><con:property><con:name>nodeIdAccportalCS</con:name><con:value>ACCESCS</con:value></con:property><con:property><con:name>nodeIdAccportalCS2</con:name><con:value>ACCESSCS_2</con:value></con:property><con:property><con:name>nodeIdCON</con:name><con:value>CON</con:value></con:property><con:property><con:name>nodeIdCON2</con:name><con:value>CON_2</con:value></con:property><con:property><con:name>nodeIdCONCS</con:name><con:value>CON_CS_1</con:value></con:property><con:property><con:name>nodeIdCONCS2</con:name><con:value>CON_CS_2</con:value></con:property><con:property><con:name>nodeIdCoo</con:name><con:value>COO</con:value></con:property><con:property><con:name>nodeIdCoo2</con:name><con:value>COO_2</con:value></con:property><con:property><con:name>nodeIdCoordCS</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>nodeIdDECE</con:name><con:value>DECE</con:value></con:property><con:property><con:name>nodeIdDECECS</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeIdDEV</con:name><con:value>DEV</con:value></con:property><con:property><con:name>nodeIdDEV2</con:name><con:value>DEV_2</con:value></con:property><con:property><con:name>nodeIdDEVCS</con:name><con:value>DEV_CS_1</con:value></con:property><con:property><con:name>nodeIdDEVCS2</con:name><con:value>DEV_CS_2</con:value></con:property><con:property><con:name>nodeIdDLASP</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeIdDLASP2</con:name><con:value>DLASP_2</con:value></con:property><con:property><con:name>nodeIdDLASPCS</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdDLASPCS2</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdDSP</con:name><con:value>DSP</con:value></con:property><con:property><con:name>nodeIdDSP2</con:name><con:value>DSP_2</con:value></con:property><con:property><con:name>nodeIdDSPCS</con:name><con:value>DSP_CS_1</con:value></con:property><con:property><con:name>nodeIdDSPCS2</con:name><con:value>DSP_CS_2</con:value></con:property><con:property><con:name>nodeIdLLASP</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeIdLLASP2</con:name><con:value>LLASP_2</con:value></con:property><con:property><con:name>nodeIdLLASPCS</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeIdLLASPCS2</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeIdportal</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeIdportalCS</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeIdRTL</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeIdRTL2</con:name><con:value>RET_2</con:value></con:property><con:property><con:name>nodeIdRTLCS</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeIdRTLCS2</con:name><con:value>RET_CS_2</con:value></con:property><con:property><con:name>nodeoid10</con:name><con:value>RET</con:value></con:property><con:property><con:name>nodeoid11</con:name><con:value>LLASP_CS_1</con:value></con:property><con:property><con:name>nodeoid12</con:name><con:value>DLASP</con:value></con:property><con:property><con:name>nodeoid13</con:name><con:value>DLASP_CS_1</con:value></con:property><con:property><con:name>nodeoid14</con:name><con:value>LLASP</con:value></con:property><con:property><con:name>nodeoid15</con:name><con:value>iscportal1</con:value></con:property><con:property><con:name>nodeoid16</con:name><con:value>iscportalcs1</con:value></con:property><con:property><con:name>nodeoid17</con:name><con:value>RET_CS_1</con:value></con:property><con:property><con:name>nodeoid20</con:name><con:value>LLASP_CS_2</con:value></con:property><con:property><con:name>nodeoid21</con:name><con:value>3611</con:value></con:property><con:property><con:name>nodeoid30</con:name><con:value>DLASP_CS_2</con:value></con:property><con:property><con:name>nodeoid31</con:name><con:value>3711</con:value></con:property><con:property><con:name>nodeoid40</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>nodeoid50</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>NODEUSERID</con:name><con:value>urn:dece:userid:org:dece:188AE1B4619C3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_1</con:name><con:value>urn:dece:userid:org:dece:FC70C6FEAC4778F7E0401F0A07992160</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_2</con:name><con:value>urn:dece:userid:org:dece:FC70C6FEAC8E78F7E0401F0A07992160</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_3</con:name><con:value>urn:dece:userid:org:dece:FC70C6FEAC8E78F7E0401F0A07992160</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_4</con:name><con:value>urn:dece:userid:org:dece:FC70C6FEAC4478F7E0401F0A07992160</con:value></con:property><con:property><con:name>NODEUSERIDBAU1_5</con:name><con:value>urn:dece:userid:org:dece:FC70C6FEAC4578F7E0401F0A07992160</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_1</con:name><con:value>urn:dece:userid:org:dece:FC70C6E5A6DD4BE4E0401F0A05995347</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_2</con:name><con:value>urn:dece:userid:org:dece:FC70C6E74E7964A2E0401F0A0799215A</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_3</con:name><con:value>urn:dece:userid:org:dece:FC70C6E74E7964A2E0401F0A0799215A</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_4</con:name><con:value>urn:dece:userid:org:dece:FC70C6E5A6DA4BE4E0401F0A05995347</con:value></con:property><con:property><con:name>NODEUSERIDBAU2_5</con:name><con:value>urn:dece:userid:org:dece:FC70C6E5A6DB4BE4E0401F0A05995347</con:value></con:property><con:property><con:name>NODEUSERIDFAU1_1</con:name><con:value>urn:dece:userid:org:dece:188AE1B460E53094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU1_2</con:name><con:value/></con:property><con:property><con:name>NODEUSERIDFAU1_3</con:name><con:value/></con:property><con:property><con:name>NODEUSERIDFAU1_4</con:name><con:value>urn:dece:userid:org:dece:188AE1B460DF3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU1_5</con:name><con:value>urn:dece:userid:org:dece:188AE1B460E13094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_1</con:name><con:value>urn:dece:userid:org:dece:14D895DF377A5C99E05305991F0A5780</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_2</con:name><con:value>urn:dece:userid:org:dece:105FE5CF15C47279E05307991F0A6CCE</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_3</con:name><con:value>urn:dece:userid:org:dece:105FE5CF15C47279E05307991F0A6CCE</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_4</con:name><con:value>urn:dece:userid:org:dece:105FE6C909586EAAE05307991F0AA09E</con:value></con:property><con:property><con:name>NODEUSERIDFAU2_5</con:name><con:value>urn:dece:userid:org:dece:105FE6C909596EAAE05307991F0AA09E</con:value></con:property><con:property><con:name>NODEUSERIDFULL</con:name><con:value>urn%3Adece%3Auserid%3Aorg%3Adece%3AE072D07F07FC9AC4E0401F0A07993B75</con:value></con:property><con:property><con:name>NODEUSERIDSAU1_1</con:name><con:value>urn:dece:userid:org:dece:188AE1B4619E3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU1_2</con:name><con:value/></con:property><con:property><con:name>NODEUSERIDSAU1_3</con:name><con:value/></con:property><con:property><con:name>NODEUSERIDSAU1_4</con:name><con:value>urn:dece:userid:org:dece:188AE1B4619B3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU1_5</con:name><con:value>urn:dece:userid:org:dece:188AE1B4619C3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_1</con:name><con:value>urn:dece:userid:org:dece:14D898B6C1196DACE05307991F0A42C7</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_2</con:name><con:value>urn:dece:userid:org:dece:105FE5CE1C227273E05307991F0A750C</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_3</con:name><con:value>urn:dece:userid:org:dece:105FE5CE1C227273E05307991F0A750C</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_4</con:name><con:value>urn:dece:userid:org:dece:105FE5CF38B2727BE05307991F0A17AE</con:value></con:property><con:property><con:name>NODEUSERIDSAU2_5</con:name><con:value>urn:dece:userid:org:dece:105FE5CF38B3727BE05307991F0A17AE</con:value></con:property><con:property><con:name>Node_ID</con:name><con:value>dece:cs</con:value></con:property><con:property><con:name>Node_OID</con:name><con:value>coord:cs</con:value></con:property><con:property><con:name>OrgID</con:name><con:value>ISC_R1</con:value></con:property><con:property><con:name>policy_TOU</con:name><con:value>https://qa1.c.uvvu.com/Consent/Text/US/urn:dece:type:policy:TermsOfUse:20140811/html</con:value></con:property><con:property><con:name>portalnodeid</con:name><con:value>10</con:value></con:property><con:property><con:name>PrimaryEmail</con:name><con:value>testing@uvvutesting.biz</con:value></con:property><con:property><con:name>Provision_HostName</con:name><con:value>https://qa1.p.uvvu.com</con:value></con:property><con:property><con:name>QC_AutoMapping</con:name><con:value>enabled</con:value></con:property><con:property><con:name>QC_BulkUpdate</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_Domain</con:name><con:value>DEFAULT</con:value></con:property><con:property><con:name>QC_password</con:name><con:value>******</con:value></con:property><con:property><con:name>QC_Project</con:name><con:value>DECE</con:value></con:property><con:property><con:name>QC_ProjectPath</con:name><con:value/></con:property><con:property><con:name>QC_ReExport</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_ResultExportLevel</con:name><con:value>off</con:value></con:property><con:property><con:name>QC_RunName</con:name><con:value/></con:property><con:property><con:name>QC_soapUI_ARGS</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value>Root\DECE_API\DECE_API_FINAL_REGRESSION_1.0.1.5</con:value></con:property><con:property><con:name>QC_TestPlanDirectory</con:name><con:value>Subject\DECE_1.0_Release\DECE_API\APIs\StreamListView</con:value></con:property><con:property><con:name>QC_TestSet</con:name><con:value>StreamListView</con:value></con:property><con:property><con:name>QC_TestType</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>QC_URL</con:name><con:value>http://stprqc01.va.neustar.com:8080/qcbin</con:value></con:property><con:property><con:name>QC_user</con:name><con:value>pgentry</con:value></con:property><con:property><con:name>Query_HostName</con:name><con:value>https://qa1.q.uvvu.com</con:value></con:property><con:property><con:name>Rights_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_233695895.txt</con:value></con:property><con:property><con:name>Rights_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A828402846</con:value></con:property><con:property><con:name>Rights_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_196237681.txt</con:value></con:property><con:property><con:name>runTeardown</con:name><con:value>false</con:value></con:property><con:property><con:name>SAML</con:name><con:value>nVZtb+I4EP4rKPuxColDgCQqSDS0t+n7Atvb2y8n1xnA28SG2Am0v/7sAFlCaY87CQl5Mp55ZubxY58LnCZOMBACMkk5a6zThImgtPaMPGMBx4KKgOEURCBJMB7c3QZO0w7wbovRiIY94+/WtBN3we2a2Il90/U8x/R93zafMWp3/S547rOtXIXIIWJCYiZ7hmOjtml3TNSe2F6gfo7TbCP002g8QSZUbOXSVLs2oNaiZ8ylXASWtVqtmqtWk2czy7FtZP24ux2TOaTY6J9vKioTZf2tP2nGQCBJSJPw1Dq3aj7nsQjGdMawzDPY5oo/ymVbtm8pn1jQ2Rej2gtxxKa8XIaYcUYJTugb1v25AznncWOQzHhG5Tz9sAhk68AmrIlJkMu+GFYd2omBaggzgU0xx2gbawRTyIARaHwfRT3jy2lTK7dOMszElGepqC//Gx5gBSR8AbEpdmVtoZ0e8Ein+udAgoiRJBe0gHtN1gUmILbTBHJ6qMZjBlO6vqVCEXQtNDprH97BctONIZ2BkP9nQHvD2QR5wkkOfWTx8P7h21nxdezBddT6JdyJDC9G3Qe3VwLYdy4N1Wg3ywNSViTa7JBR8c2LqWMtyGvrBXzuXr5duuxH/mNI5jejR76e57/eXpaD5eBbcUOuF7NO+/Iu81z7drJ8I2FnFk5frr5P5tGjl91dvPCv6c18GRLs/pXHhbdeLaOpP7q5DVeT9OcfV2f33jVa/vHIFk+0G07O8gv/KZukL9ZT+BWTlff68NZhTnghLH5222Lfr/mT00bXf0aPxbbcA/x12+7Mj/PnX0DkbqlpEA0bV2pKWH4uZtpCY3NaugYLLT5CApNGX+/S2hHkSu5oHKgZbtbI8waX6MLtID9s2b57abdbraHvoyt70B24aCcyGxQHEEPOplTn0pK7oc3nAEkaCGAxZGbBc6V0wvgk4hBL3IjYSB0CzgRMuJJnlC0RAH4l3lpyZq877qoAtISl0bjn8oE9ZIOphKymyQjVNHkEhC4oaOHWvBaK2EKqXixxkcsENQvcZJArac+0ygaO67UtQdNFAhqplfI4T6C5mC/Kzlhi8++YmIjSSjjP4oBsjtyHxR1+2/VB+cRUOwhd0AWoWcKRGwbtqnlXdefoTbQLP8hjqk+XaqrMKNkgqX/6zRVNkooou7J2uCv3Q0MttHVYVZUtLiipKF9d3ErPlQL0d4NZYtRcNvOiyMtZuG7LylR4S/fDsh1rDCRXGvU64S/ArCqKddKFUAE/SF7Z6xBzOWdjiSWkijuNcnnCC2AMQr8AIkX69anPi1pK1ToJa3nMFibq9aIRf/rAIQHRfsr8qP5Waoq/J3Yk1l4eVad6AEjKZnqlL4PXz8hBlYzxbD/4sQDHkteNVZMrLFIR6jmX8PGXhtannoEJ4TmT0dAoDfuaWeKUrwsIfju9C1PKcvVOo//+UDNpSQEC6nUnaBlfX7eBPgJstqe726RHpde+tD+T3jq6/jvze8tenw453v8H</con:value></con:property><con:property><con:name>SAMLBAU1_1</con:name><con:value>pVZtc6JIEP6+v4JiP14h4BuGilYp6oasZg2YZC9ftsah0dnADGEGNPn1N2Awakwue1dllTVNT/fTL/N0n3MUR3W7zzmkgjCquMOu+ssKUQe3wrpmBS2kNZtnLa3TDtoabgULoxG0mhYKVMXlPAOXcoGo6Kp1w2xqRlur1+emZZsNu9GpGZ3OvarcQsqlaalSM1RlE0eU26Xbrpql1GaIE25TFAO3Bbb9/nRiS00bVZjU3vkWZekw7a2ESGxdx7UAMEQRrmEW6+f6gc55wG2fLCkSWQovPgPeVV/urtfr2rpRY+lSrxuGoRtnutQJOFl+VXtfqssQuDRk27ODKKMEo4g8owLUFMSKBUo/WrKUiFX8jmlTN43CtAYbrGGzSb+q+quDEt0nLR2ATDnS+AqZlTEPQkiBYlBuPLerfv1cBbd35ymiPGRpzI/OfwYJaA4RSyDQeBVZhe7zFk+kq3cO2HYpjjJOcrgq2iRBGLgySyEkmwnhsvkCrpTlVzZc/kjVZYD/pCzn+j5WCV0/kZ0hWQIX/6Vm+/XaWrlFUQY9c3iLrn0/9EaT5PuZS5bxKvbvxMBnvFtC2FfegtqV++V83Ky73nq5dPe7Qxt3f10PrLFpLhbfBy3zwvBu+GzmTddTMBPn4jJFN2jsrsPLH2l/4F0tHKM5MzzyPGDUu2k5etN5ns467O8v0/Wt9/Oykfyk3rc+YT8maGHqd0HHHV9cX7jsgS9mD4ObZ7z5tmZTXzTu82RJv/9uO0/QWN/Osm/5aLHYXNUfL0bzL/eXs+tRPm6DyDHM7wPfaXZfY9qP4VBYUYKfLX4DFtWxaA93qIxlvZD4mF4KCQm0sFS1k4KjuAAq1F5xq6AWO5MERAJbFnN7HjuW4bTHo77TtKzO2BoZTcMcG33DOjurm22j4qAtiiOIDqMhKXwVLLvtn48B4tjmQANItZxleAVc/cDiEAmkuNSTj4NRDnMmWXyzThdJbq5Y8zFkefR4BiuABxaqyhUTP6iscyggPWDuunHA3B5gkhAo6L3oby4bnAuZikeUZyIyazmqUcjkAEgLDrbrzU5L5yROIiiA6jELsghqySopE6Pz7X9dQ5iXUm80L9/du2Edf6syIHUCUijwIpYByCrCiRFUrwJ5E3Dr5KiqzPezgBTPS6ZTpARvkRx+eu2Soj12LTKc9P1ZBXqn+wd3fzn+L/M/Gpj8XwOyHm9v6h/kRD8ux85RkJM9t9Uol9NJclevaqZHVHusZXmele1jFbycSvO6pGdT9wFnklyf5uwBqL4zoX9qtu1QH3neyQ/xZWJFfYEExLLZlfL4icXGB14sNq58pJvPbk0HLmXeBGzEKZkTyf2nQPzhioRtXOhJ8Uz+rVn6GvgpW3t+ZJxymxGELotTMcWe3mkKzKRZImmXpfvGTxk45fxQuEvyDouQ3bTIBLz/RSn4tKsijFlGhTtUS8E+x5c4xVMC9qvSGzPlHHlZDDb83cXg53TiS7aNkbrTJf+urJGyXTCoxf5RYumqG7nnSud0uTdTXgC+GSuWaTmt4WDYsPqHY6U12iXwIJLeG/FbyV5Oj99D7x8=</con:value></con:property><con:property><con:name>SAMLBAU1_2</con:name><con:value>nVZbb+I6EH7vr4jSxyrkQrhFBYmlsJsWdinQnrYvlesMwd3EAdvhsr/+2KEJl9Ke7pGQkCfjmW88n7/xJUdx5HhtzoEJklDNv2rqz9iulqdVu2xYbrVsuAG4BnIwGC5qlB0XGhigrms+5yn4lAtERVN3LNs1rKrhOBO75tmu5zZKtUr5SdfugXEZWrqULF1bxxHlXpa2qaeMegnihHsUxcA9gb1xe9D3pKeHckx663KLMkvIWjMh5p5p4lIAGKIIl3ASm5fmgc9lwL0xCSkSKYO3nAFv6m97V6tVaVUuJSw0HcuyTKthSp+Ak/Bcb53lmyHw6TTZrjuIJpRgFJE/SIEagJglgdaOwoQRMYs/CG2btqVCG7DGBrZdeq6buwQZui9GOgDJODL4DNl5sBFMgQHFoN2N/KZ+/rUObvdOGKJ8mrCYH63/DhLQJUTJHAKD55Xl6L4e8cRxtS4Bez7FUcrJEn4qmswRBq4NGUzJuk+4JF/Ataz92prLH8lZBvhv2nJp7mOV0M0Tp3NFQuDi//Rsv1/bKPcoSqE1Sy10M6ygEK5Hkyo8mjG+viH9QVCvNzMI+85bUEW739bHZC249baps565d98m7pS9LtbQvy3fdoPZ4vHuYfawMU20ChCja59+typTvNrMXyrsekXCYXm0XPFg80jqs4H7g4qXzv11cOYvxg6EyeZhUG/Txmts17s3aXwx9mNGessOti7g+2h9++MfcS9uktew8mTXy7RyMZ70Lxr3L7/vvzsRsvu9JyYez5zHhDWugsUwckXvOkLz7qC5q2m/hkNjLgnj9OUVsMiXih7+ldaT/ULic3lRFhIY08zVmyuN4gKo0Ftql5IWL5UCRAJPNnO77nVqVqfa67Y79W6t3qt1Ldeye1bbqjUajl21cg3aojiC2EnolKhcSmW3/PkcII49DjQAZiyTFM+A659EvEICaT4dycuRUA6TRKo4XdSi18oijHkItljVq69WgCuIO7r2MxG/6C/WngpgB9LtWAfSPQJM5gSUviuCc8lwLuRZLNAyFZFdWqIShVROAKZE2HPcesXkJJ5HoJCacRKkEZTms3l2Mibf/jsGwjyz9vvt8fC5M352svv3YXnH3/KTkD4BUQ5clfQNZDfhxCgq5/V8UHf5aGTl4dtpQNQ1k8cqGMFbJIefdmxRNCmosissR15sODYcBDeP6yryBUuCC9oX81rKvRSDVt6cBSotSulymWbtqCmhYzK8KfXONseAU6lWm0nyG6hZhDC/NCwK1EeZC/shvlTM6FggAbEkj5Ytv/BSGANXLwVfsn791WfIQUp5bgLW4pStE8kHhUL86ZsDe1j5SfNQ/q0SFuzadSLWXh5Zp3weCEJDtVJjYfMBN3AiwxKpYwnbD34qwKnkh8bikAssQrLpJRXw8RdNCVRTRxgnKRX+lZ4Z9kUzwyk2c/B2Tu/CZML8NmnX/MNJ+zDoj6V8xUgvfMl/OxskowsGXQ30DEtTX8uHo0xOwz2RfgP4TqdrcupU3a5brh7pdGXH5YNKWu/M7y17Z3p8H1r/Ag==</con:value></con:property><con:property><con:name>SAMLBAU1_3</con:name><con:value>nVZdU+o8EL73V3Tq5ZnSDwotHWGmVvD0+C0I6o0T0gDRkpYkxeqvP0mxFRB9Oe8MM0w2m91nd58+yRED89jyfMYQ5TghSnjSVp9s02g5jbGjtVpRS7OBa2qtphtpjhFFjXETADh2VCVkLEMhYRwQ3lYtw7Q1o6lZ1sB0PLPhWVbNatiPqjJElInQwqVmqEo+jwnzirRtNaPESwDDzCNgjpjHodf3L8494emBEpPaOVqhLBLSzozz1NN1WIsQRHEMazCZ60f6hs9RxLw+nhLAM4o+ckasrX6cfX19rb3Wawmd6pZhGLrR0oVPxPD0UO0clIdRFJJJsloHgCQEQxDjdyBBXSA+SyLFj6cJxXw2/ya0qZuGDK2hHGrQtMmhqn8mKNDtGWkDJGVAYzNglsFu0QRRRCBS7m7Dtnq43wRXZwcUEDZJ6Jxtrf8NEiJLFCcpijRWVlai2z/ijnZ1jhD0QgLjjOElupQ0SQFETLmmaILzc8wE+SKmFONXciZ+uGQZgv8yliN9HauAru/ozgmeIsb/z8zW57WKMgRxhjovze7oFzntgouHs0VX9/GZlV1c6U7wetMuIKw7r0BV4/5Yb5O14tbHoTxsOL+xYb8lQQsuXD17iBv1nr648runw9aDe4VP7aFl2Ms0f3wG9tQfPQ7/oOz5uGG3Rr+773MysusD4wZO2OXB5TM5bp4Hpv/nNKg/pAP/zXo3rvvX9ws6DdPkPie/mxQGw+7li//cG7UIodNg9PjsHvfO7vqn/mW+vAF3VoMB9+aAsatZ3H/Iw1D/1aDvUd68aX/WtF7DprGUhH42fkaQl0tJj/BE6Yl5Af6zvEgLjrRJ4eqlUqMYR4SrHXlKSouXCQHCkSeGuVr3AscImr2uH7hdx+05XcM2zJ7hG06rZZlNo9SgFYotiEFCJljmkiq74s/PAOHcY4hEiGrLJIMzxNQfIp4ADpSQ3IqPIyEMDRKh4mbdYWnG6Zi7lmta6VjsLBZZBHJVuUz4Fbmi/oQjuqHdlrGh3bcI4hQjKfCS4UxQnHHRjAVYZjw2a0tQIygTVwCVKuxZttvQGZ6nMZJQ9XkSZTGqpbO0aI3OVv+WBiArrCfnfv/6Keg/WcUH+G1923tlK4RPhKUDkyUdIzFOtOMuMst6vtTd2HlnleH9LMLyOxN95RTDFZLNrU+6SJ5UXPksrEReHdg2bATXt+uq8kVLDCveVxe20HuhBp1yOAtQW9Sy5TIrxuFIpaMivC4Ez9T7CGZCrt4GyQsiehVC3+u2qFBvZa7sm/gyPiN9DjiaC/IoxXKPp0IfMflUCAXt833fIRspRd84yvkuWxCLF4VE/OOjA3pQ+gnztfh7TWj0Oa4dsdbyiDrF+4BjMpUreS+8fcMNmIiwWAhZQteD7wqwK/mmsWpyhYULNo0zjr7fUaRCtVUAYZIRHp6ohWFdNQuc/C1F3qfTlzCFMn9ctTn79qq9vzjvC/2aA7Xyxf/trOGCLhCp8kYvsLTVXLwcRXIyXVPpD4BfhNox3XrT7tr15pZQN9yqgRuVdL6Yv1rWerr9PXT+Ag==</con:value></con:property><con:property><con:name>SAMLBAU1_4</con:name><con:value>nVZbb+I6EH7fXxFlH1chFwKBqCCxXLppgXahl21fjowzAZfgpLETaH/9sQNJgdKe7pGQkCfjmW9mPn/2GUOr0HI7jEHCSUQVr9dS/8FWsx4Yvq9Vmw2k2Q62NVSfzbR6YwZN0/dtZ1ZTFY+xFDzKOKK8pVqGaWtGXbOsG9NxzZpbsypN235UlTtImAgtXCqGqmxWIWVunralpgl1I8QIcylaAXM5dqed0dAVni4qMKntsy3KPGHSXnAeu7qOKz5gCENcwdFKP9MPfM585k7JnCKeJrDL6bOWutu7Xq8r62olSua6ZRiGbjR14eMzMv+utr8Vm8H3aBBt111EI0owCskrkqBGwBeRr3TCeZQQvlh9ENrUTUOG1mCDNWza9LuqvyXI0X0x0gHIhCGNLZBZBJtAAAlQDMrtxGup3782we3emwRRFkTJih2t/w4S0AzCKAZfY0VlBbqvRzzRrvYZYNejOEwZyWAsaRIjDEy5TiAgmyFhgnw+U/LxKxsmfqRgGeC/GcuZvo9VQNdPdKdH5sD4/5nZ/ry2Ue5QmEL7z/rnyHnJeC17qt8lXnXkG53fhF1cjW9bOYR95y2octy79TFZS27tNvk/agMn6Hvcu2z0HL6qr2desHRGt/dPy4U1xOjXfDNG9Qf7HF/8rmF+7zy/Du/RcnVJ+7cB6/iPF/f8kmZ37Krz7T5oxMbdOP7VOW8+/K4/TszkUn+822Tk9uJF70eTx1e9EZKrV/6n+QB9I/nxY0wXywdyYY3vz63XZf08eX2OHkbD68234aBa9cLx8sp6Hsz7FOFJ1Hqrab+GQ2MhCdN09gSYF0tJD6+nDMS8EP9cXqSF+FqQu7qx1CjGgXK1LXdJaXFTIUDEd8Uwt+tB1zG69UG/07VtpzFw+oZtmAOjYzjNpmXWjUKDtiiOIHYjGhCZS6rslj+fA8QrlwH1IdGyKMULYOonEXuII8WjE3E4IsrgJhIqbjq0VjPmQf0JSBxVG3FmvRAAK1SVccSv6FXSCTgkB9JtGQfSPQFMYgJS3yXBmWA446IXzyhLeWhWMlShkIobIJEi7Fp2o6YzsopDkEj1VeSnIVTiRZx3Rmfbf0tDmOXWvK2Y5Yfvw9qOvxVtED4+kQ5M1vMTxCjhxD1kF8V8UHT16L4qwndSn8gzJnrKE4K3SA4/vVFFcqTkya6qAnbpfWw4iKwfF1Um8zOCS8KXN7UQeiED7WIsz6jyXEmzLM0H4UiJS0R4XSidqU8Bp0KnXm6iJVC9DKF/6ZooUR9lLu2H+FK+oFOOOKwEbZR8+YU3whSYfCN4gu+brz5ADlKKvnHY8FO2biieEhLxp68N7GLpJ8zX4m8dJf7buE7E2ssj6hQPA07oXK7khfDyATFwJMISoWBRsh/8VIBTyQ+NZZNLLFywaZZy+PiLIqWppSKMo5Ryr6fmhn25zHHylxjcN6d3YXJJ3t2xG/bhHftnNJwK4VohtfQl/+2skZwuGFR5ledYWupGPBlFcjrfk+cdwHcK7ZhOt9Zr9KpO51Cha/2ygQeVtN+Z31v2enp8Htr/Ag==</con:value></con:property><con:property><con:name>SAMLBAU1_5</con:name><con:value>nVZbb+o4EH7vr4jSxyrkRhKIAIly6dIL7QHa0/ZlZRwnuE1sGjuQ7q9fOzQpUNrlrISEPBnPfDPz+bNbDCSx5XcZQynHlCijflv9GwYNiEAdai4wA63uha42NxpzrWHadmgB2zWNhqqMGMvQiDAOCG+rlmHWNcPVLGtmer7p+pZbM5zGs6o8oJSJ0MKlZqhKnsSE+UXatpqlxKeAYeYTkCDmc+hPuzfXvvD0QYlJ7bQ2KIuEaWfB+dLXdVgLEERxDGuQJnpL3/FpBcyf4ogAnqXoI2fA2urH3vV6XVvbNZpGumUYhm40deETMBydqp2TcjMKRiSkm3UPEEowBDH+B0hQN4gvaKB044immC+Sb0KbumnI0BrKoQbNOjlV9c8EBbojI+2ATBnQ2AKYZbAJClGKCETK/WTUVk+Pm+Bm7ywFhIU0Tdje+s8gIbJCMV2iQGNlZSW64yMeaFenhaA/IjDOGF6hsaTJEkDElLsUhTi/xkyQL2BKMX4lZ+KHS5Yh+CdjaenbWAV0/UB3+jhCjP+fmW3PaxPlAcQZ6kTo/bwZuoPcxvTyLoALPn85M/Wu+wLbBYRt5w2oatwf632yVtz62JQ3ms9XAzpa3q/DJLpzzJvZPHq0zhziPj5g5+ptPgts0/DoYHIZ2YvfzMmbdhxdnzUbcXB3FwyHaZ6+PY8vpx46oeMzB05sc3Fu1CfoyX55vxkT8Nxf/aX/ejL5eLx4elld6MN72I1ur7zf1mR+MdAv1oP+1SLOpze3LtabmCfnj/DxZAx/2dycPczuV4EzhfSVddufNW3XsGssJWGazV8Q5OVS0mPUV4ZiXoD/LC/SggMtLFz9pdQoxhHhakfuktLiZ0KAcOCLYW7Ww55n9NzhoNurO15j6A2MumEOja7hNZuW6RqlBm1Q7EHsURJimUuq7IY/PwOEic8QCVCqrWgGF4ipP0TsAw6UEZmIw0EJQzMqVJw6cWTY8TIL6zadv/EkbLzG4YurKmPKb8lt2g05SneU2zJ2lHuCIF5iJOVd8psJgjMuWvEGVhmPzdoK1AjKxAWQSg32rXrD0RlOljGSQPWEBlmMasvFsmiMzjb/lgYgK6yQ0jTwISsO37e17X8r2yB8AiwdmCzoHIlRogP3kFlW86Vq5+B9VYbvZgGWZ0z0lKcYbpDsfvqkiuRIxZOyrBJ35b5v2Amt71dVZQtWGFaMr65qofRCBzrlYN5A7a2WrVZZMQpPalwqwutC6kx9imAmhOp9Rl8R0asQ+lH3RIV6L3Nl38WX8QWZcsBRIoijFMsjHglTxOQjYSQInx/7AtlJKfrGUc4P2XqxeEtIxD8+N6APpZ8w34m/tRjh57gOxNrKI+oULwOOSSRX8kZ4/4kZWEgYTbeDHwpwKPmusWpyhYULNs0zjr7/okhtaqsAQpoRPuqrhWFbLwuc/H2J/E+nL2EKTf64ZHP27SX7eHM9FcqVALXyxf/trOGCLhCp8i4vsLTVXLwZRXISbenzB8AvEu2ZXs/pN/u2192VaGdQNXCnks4X81fLVk/3z0PnXw==</con:value></con:property><con:property><con:name>SAMLBAU2_1</con:name><con:value>pVZbb+I6EH7fXxFlH6vgJA2kRAWJAj3LLiwtsL29rFxnAHcTB2wH0v76Y4cmBUp72j0SEvJkPPPNxd/MqcBx5AYtIYBLmjCj12mYv32n5thkiq3w3r23PN+zLQzH99bU9e0phHYNu65p9IRIoceExEw2TNd2PMuuWa47cfzA8YLj44pXq9+ZxhVwoUwrlYptGlkcMRHkbhtmylmQYEFFwHAMIpAkGLcG/UBpBrjAZDZPNyhzh7w5l3IRIEQqIRCIIlIhSYxO0Y7OaSiCMZ0xLFMOzz5D0TCf767X68r6uJLwGXJt20Z2HSmdUNDZV7P5pbgMYY9Nk825jVnCKMERfcIa1ADkPAmNVjRLOJXz+A3TDnJsbdqCjFjE8dhXE704yNF90NIOSC6wJebYKYyNYAocGAHj16jXML9+rIKbuxOOmZgmPBZ7589BAraCKFlAaIkisgLdxy0eSFfzFEjQYyRKBV3BT90mC0xAGBccpjTrU6GaLxRGXn4jE+pHiy4D8pmynKJtrAo6OpCdDp2BkH9Ts+16baxc4SiF5sP1cDk8qqGL/vXo7qpfjy+fJv1x/WEw8xo5hG3lDaiy3M/n/WYte+v5Eh3dnvsg1t0THF3dzO95+wlnw0e5FP4AXz+s+fWKemw9G588Xd1ep4NzsMPerDsmd63by9bQ5ssz/mcN37/x2cWXhftPe4SSUbcqji47N8tf7pAl9Ml3We0WfRtdnWWX63m1FV4DGsU/j378sFcD6eN+eHOSfEf+t4iS2Q04Q5Sc334ZZkfU4xedaHWbTU4Gk/mR13iJaTuGXWFBCeP0/gGILI66PXod41zVC8v36UVLaGhNc9VgoTlKSGDSbOpbmlqCVBEQDQNVzM35vO3b7Vq32qp1Ot5Z1+vanu2c2y27Wq9Xjz2/4KANij2I7YRNqfalWXbTP+8DJHEggIXArVWSkjkI8x2LHSyx0WMj9TgSJmCSKBZ3Hvx44YTVP3hlg+PXfW8xjaPMZnXT+JnIIRvy1lQC3+Fu197h7hEQuqCgCV53uFAtLqRKxhKvUhk5lRWuMEjVCOCahQPXO6kiQeNFBBoqipMwjaCymC/y1CCx+XctTEQuHXUn+ct7M7D9b0UOlE5ItYLQsZyBqiMcGEJuEcirgKsHh1VhvpWGVD8wlVDJKdkg2f300ie6Qcom6fRb44sCdKn7ibu/2+Pfzl8a6P9fA6oer2+id3KC9stROgpXdMttMczVfFLs1SyaaYkry0q6WqV5+/iambkyjxRBO2gMJFX0+jhJ/gBDpQn0oelWot7zXMp38aVyzsYSS4hVsxv58QOrzRiEXm166plmH92bdlyqvEnI5CFZO1IbkEb87pJEAqL1lPhC/a0THr6U64CtLT8qTrXPSMpm+qTn2OMbTUESZZYq4k34tvFDBg453xWWSS6xSNVN96mEt78YmlEbJiYkSZnsdcxcsM3yOU75uIDgRemVmXySPK8GmXhzNbgZ9MeKb2Nslrr0v5UtmrcLAVNvIDmWhpmpTVc5Z7OtqfIM8NVg8R2/Xe2cdY79VjlY/HrddardMoE7kTRfiV9LtnK6/x6a/wI=</con:value></con:property><con:property><con:name>SAMLBAU2_2</con:name><con:value>nVZbb+I8EH3fXxGlj1XIlVtUkCiXXbbQpUAv25eV60zAbeKE2IHQX792aFKgl6/7SUjIk/HMmZnjY58xFAaW22EMEk4iqgx7LfUP+M0mBtvWGrjxoDlO09GQ3wCtXjUsMDD2wfBVZchYCkPKOKK8pVqG6WhGTbOsuVl3zaprVCt2zbhXlRtImAgtXCqGqmRhQJmbp22paULdCDHCXIpCYC7H7qwzHrnC00UFJrV9tkOZJ0zaS85jV9dxxQMMQYArOAr1M/3A58xj7owsKOJpAi85PdZSX/ZuNpvKxq5EyUK3DMPQjaYufDxGFidq+1uxGbwh9aPduotoRAlGAXlGEtQY+DLylE6wiBLCl+EHoU3dNGRoDTKsYdOhJ6r+miBH98VIByAThjS2RGYRbAo+JEAxKNfTYUs9+doEd3vnCaLMj5KQHa3/DRLQNQRRDJ7GisoKdF+P+E672meA3SHFQcrIGi4lTWKEgSmTBHySjQgT5POYko9fyZj4kYJlgP9lLGf6PlYBXX+nOz2yAMb/z8z257WLcoOCFNrz6W16dxr27U1/YPctlg3Gd6t+13q4vG7lEPadd6DKcb+sj8lacutlE12tx3cjYFm4NUzjsXf/i9qd7eB73/MmfDFZXo3Dh/C6MZhf38yW0ePFaZw+3T75+Ha0fA5WwemdvcGek3nX50P07QJ3hn1bT+bPpzfOli2eL5arzWR6Phz3jPvHydV3llxcgjG4zyb3UF2f/9wmv3845tUP6x7jyF//nv9cTPn0/Ofvsf4tOjVIaD89k47hzK/W27jfaL3WtF/DobGQhFn68AiYF0tJj2FPGYh5If65vEgL8TQ/d3VjqVGMA+VqW+6S0uKmQoCI54ph7taDbt3o1vp1p19v1pyO1TccwxwYHaPebFpmtVNo0A7FEcRuRH0ic0mV3fHnc4A4dBlQDxJtHaV4CUz9JGIPcaQM6VQcjogymEdCxeus8RTHS+4FTyvnMag/bgNrkfk1VbmM+C/6K+n4HJID5baMA+WeAiYxASnvkt9MEJxx0YoVWqc8MCtrVKGQigsgkRrsWk6jqjMSxgFIoHoYeWkAlXgZ543R2e7f0hBmuXU06swmf7qzP1Z+/D6s7vhb0Qjh4xHpwGRJ5yCGCW9uIsetFvV8ULd9dGMV4TupR+QpE13lCcE7JIefXskiWVIy5bWwAnm54dhwEFw/rqvM560JLllfXtdC7YUWtIvhrFBlVUnX6zQfR13qXCLC60LuTH0GOBVitZ1HT0D1MoT+pbuiRH2UubQf4kv5ks444hAK8ij58gsPhRkw+VAYCtJnX32FHKQUfeOQ8fds3UC8JyTiT58c2MXST5gn4m8TJd7ruN6JtZdH1CleB5zQhVzJW2H7ATdwJMISIWNRsh/8vQDvJT80lk0usXDBpoeUw8dfFKlPLRUJNU4pH/bU3LCvmTlOvo3BfXV6EybX5ZeLNmMfXrR349FMqFeI1NKX/LezRnK6YFDlfZ5jaamZeDeK5HSxp9EvAN/IdN1s2DWn79i1+pFMN8oGHlTSfmN+a9nr6fF5aP8F</con:value></con:property><con:property><con:name>SAMLBAU2_3</con:name><con:value>nVZdc9o6EH3vr/C4jx3jD4iNPYEZCkkuGdLQQELbl44iLUaJLTuSzEd//ZVM7AAhuemdYYbRerV7dvfoSKcCpYkX9YQALmnGjOGgY/52/TZpNUOwfL8VWC2f3FsobGILOcTxHdfzQwhNYyhEAUMmJGKyY3qO27Ic3/K8qRtE7knU9BvtsPnLNO6ACxVauTQc01inCRNRmbZjFpxFGRJURAylICKJo0nvahQpzwhVmMzu6RZlmZB3F1LmkW3jBgEMSYIbOEvtU3vP55SIaEJjhmTB4TknER3zee9qtWqsmo2Mx7bnOI7thLbyIYLGn83up2ozkCGbZ9t1H7GMUYwS+gdpUFcgFxkxekmccSoX6RuhXdt1dGgL1tjCbot9Nu2XBCW6D0baA8kFssQCuVWwG5gDB4bBuL0ZdszPH5vgdu+UIybmGU/FwfrvIAFbQpLlQCxRVVah+3jEI+3qngKOhgwnhaBL+KZpkiMMwhhzmNP1iApFPiKMcvzGWqgfrVgG+G/GcmrvYlXQ7SPdGdAYhPw/M9ud1zbKHUoK6P4KyZlYzji6f7oW5DIgIb71J7Ofm/CqU0LYdd6Cqsf9vD4ka82t503/zEZBM86v828/4XGV3T1crS6yL7PR5cIJ+zM+PrtoPwxa+HZyPoaek59/+X4TTz2RBLOv5AesfOyJL33pnwUDJj/FKLelvSkuV85odhnHt0v/bnzh/1r+s5YUXazx6ntzNv26mA8uyLBlP3jJH3lpu5tFmj/Yw5/elLDgYfPHpZ4oPo0e03FfxM6Nxwm/7sskzTovNe3WsG+sJGFS3D8AltVS02M4MM7VvJB8X160hRJrXrpGudYoIYFJs6t3aWmJCiVAlERqmNv1eT9w+qoLrbMg9Fs978xpOe6503OCMPTck16lQVsUBxD7GZtTnUur7JY/7wPEaSSAEeDWMivwAoT5TsQBksgYsht1ODImYJppFSdM8jhzQ1fK0A142s5TIh79lVLhb5m8Zte8N5fA97Tbc/a0+wYwzSlogdcMF4riQqpmPKFlIRO3sUQNBoW6ArhW4chrtU9sQdM8AQ3VTjNSJNDIF3nZGlts/z0LYVFaB6PeZPy7P/ntlQfwzfoOv1WtUD6EagehS/oKapxw5C7yqnpe1X1y9M6qwvcKQvU5U32VnOItkv1PL3TRPKm58lJYhbzecGjYC24f1lXnI0uKa97XF7bSe6UG3Wo4T6jx1CiWy6IcR6CVjqvwthI8154ALpRcbabZIzC7DmF/6LaoUR9kru37+Aq5YBOJJKSKPEa5/MBTYQJCPxWGivbrj75D9lKqvklYy2O2fqJeFBrxu48OHGHtp8xj9bfKOHkZ15FYO3lUnep9ICmL9UrfC5s3uIEzFZYqIcv4bvBjAY4l3zfWTa6xSMWm+0LC218MrVAdE2GcFUwOB2Zp2FXNEqfc5BC9OL0KUyrz81W7Fm9etT+uRhOlXykya1/6384WLemCwdQ3eomlY67Vy1ElZ/GOSj8DfCXUgdtu+q2zVtMPDoS6XTdwr5LuK/Nry05PD89D918=</con:value></con:property><con:property><con:name>SAMLBAU2_4</con:name><con:value>nVZbb+I6EH7fXxGlj6uQC4E0UUGiXLYUSltgabcvR8aZgLuJk8YOl/31xw4kBXo53SMhIU/GM9/MfP7sC4ai0PJajEHKSUyVfqeh/lN16whX53OtPp8Hmm1boM1d39J8C1vntgFz7Nuq0mcsgz5lHFHeUC3DtDWjrlnW1HQ8s+4ZbqV27j6pygxSJkILl4qhKpsopMzL0zbULKVejBhhHkURMI9jb9K6GXrC00MFJrV5sUOZJ0ybS84TT9dxxQcMYYgrOI70C/3I58Jn3oQsKOJZCvucPmuo+73r9bqyrlbidKFbhmHohqsLH5+RxZna/FZsBr9Pg3i3biMaU4JRSP4gCeoG+DL2lVa4iFPCl9EHoU3dNGRoDTZYw6ZNz1T9NUGO7ouRjkCmDGlsicwi2BgCSIFiUH6O+w317GsT3O2dpoiyIE4jdrL+O0hAVxDGCfgaKyor0H094jvtal4A9voUhxkjKxhJmiQIA1PuUgjIZkiYIJ/PlHz8yoaJHylYBvhvxnKhH2IV0PV3utMhC2D8/8zscF67KDMUZtDUB6s1sQZX5iyY2QP21AqC4WXvqf5y1W3kEA6dd6DKce/Xp2QtubXfdI+q+q/r9QN/nA/bq+Wi23ma9Qxyf4XZuNN9vn8IbfIj0n8+zsJAX9535jDqu/bLUxu2Yz6KH76Ps4k9paOV/Wvx7S5Z0fWgS7aOyxnq3A0H11PmXI4cZ3qPnfrl9cB87IH//erhJemzH+EkGPx8dv/cjOPsbjg3bpOb6+exs+DZNETf4Fdv5LTa8W3W3qLL7Sy5MxqvNR3WcGwsJGGSzZ8B82Ip6dHvKD0xL8Q/lxdpIb4W5K5eIjWKcaBcbcpdUlq8TAgQ8T0xzN2613aMdr1ba9U7Lfuya3cN2zB7RsuouW6tajuFBu1QnEBsxzQgMpdU2R1/PgeII48B9SHVVnGGl8DUTyJ2EEdKn47F4Ygpg2ksVNzEvwMcuuZ2WU3WJpDzKDbhd337TFVlFPNbepu2Ag7pkXZbxpF2jwGThIAUeMlwJijOuGjGC1plPDQrK1ShkIkrIJUq7Fn2eU1nJEpCkFD1KPazECrJMslbo7Pdv6UhzHJr3lfM8tP3YXGn34o+CB+fSAcm67kEMUt4cxHVvFpRzAdFV08urCJ8K/OJPGSiqTwleIfk+NMrVyRJSqLsqypgl96nhqPI+mlRZTJ/RXDJ+PKqFkovdKBZjOUFVV4q2WqV5YNwpMalIrwupM7UJ4AzIVTbafwbqF6G0L90T5SoTzKX9mN8GV/SCUccIkEbJV9+4ZEwASYfCX1B+M1XXyBHKUXfOGz4e7Z2KN4SEvGnzw3sYeknzHfibx2n/uu43ol1kEfUKV4GnNCFXMkbYfsBMXAswhIhYXF6GPy9AO8lPzaWTS6xcMGmecbh4y+K1KaGijCOM8r7HTU3HOpljpNvE/Bend6EyTV5f8lu2IeX7OPNcCKUK0Jq6Uv+21kjOV0wqPIuz7E01I14M4rkdHGgz3uAbyTaMZ12rXPeqTqtUqId17XMWrds4FElzTfmt5aDnp6eh+a/</con:value></con:property><con:property><con:name>SAMLBAU2_5</con:name><con:value>nVZbc9o6EH7vr/C4jx3jSzAGT2DG3FK35AaUtnk5I+QF1NgyWLJx+PVHMrEDhOSkZ4YZRuvV7re7nz7pkqEotFyPMUg4iani99vqP3UEhoHroOHAaWn1hdnQmhcNWwtQ0MAty2yahqMqPmMp+JRxRHlbtQyzrhkNzbKmpuOaDbdu1ppN+0FVZpAwEVq41AxVyaOQMrdI21bThLoxYoS5FEXAXI7diXc9coWni0pMaudyj7JImHRWnK9dXce1ADCEIa7hONIv9SOfy4C5E7KkiKcJPOcMWFt93rvdbmvbi1qcLHXLMAzdaOnCJ2Bk+VntfCo3Q+DTRbxf9xCNKcEoJDskQV0DX8WB4oXLOCF8Fb0R2tRNQ4bWIMcaNuv0s6q/JCjQfTDSEciEIY2tkFkGG8MCEqAYlB9jv61+/tgE93unCaJsEScRO1n/HSSgGYTxGgKNlZWV6D4e8Uy7OpeAXZ/iMGUkgxtJkzXCwJS7BBYkHxEmyBcwpRi/kjPxIyXLAP/NWC71Q6wCun6mO32yBMb/z8wO57WPMkNhCp3h/Oto+GXwYOx+3e6m3Nh07fF9+Gje2PftAsKh8x5UNe7n9SlZK249b9pwSx+1kq/9TZCPk5/p1S6e27M5DHNvnH9Fj/lFv7vLdiNrzMj1YPOtN8TB5A/dXt3NvvBx5v34GTw4D/j3oxcan+D7wz2Evw2T39+lc2fSuxpwNrR/RaNRejVt3vj9wWPDa4V293b6OJzNbD9ofrcAd/3fvLkZ+3N7HvFdeLX7Oep/elrP6nfeePhnld5d2UliZsv2S02HNRwbS0mYpPM/gHm5lPTw+8pQzAvx9+VFWkigLQpXdy01inGgXO3IXVJa3FQIEAlcMcz9ethzjF5jYHuNfrfeHdQHRt0wh4Zn2K2WfVF3Sg3aoziB2IvpgshcUmX3/HkfII5cBjSARMviFK+Aqe9E7COOFJ+OxeGIKYNpLFTcJLvFxmrFieWQxGwu10u7meW7DLaqchPzW3qbeAsOyZF2W8aRdo8BkzUBKfCS4UxQnHHRjA3KUh6atQzVKKTiCkikCrtWvWnrjETrECRUPYqDNITaerUuWqOz/b+lIcwKK47jJHAxK47fm9WdfisbIXwCIh2YLKgLYphw5ia6KKt5VbV99sYqw3tpQOQpE13lCcF7JMefXsgiWVIxpSyrxF25nxqOQuunVVXZgozgivPVZS20XihBpxzMBtU2tTTL0mIUjlS5RITXhdiZ+gRwKqTqaRo/AtWrEPqHbooK9Unmyn6ML+UrOuGIQySIoxTLDzwTJsDkM8EXlM8/+gY5Sin6xiHn52y9ULwmJOJ3HxzYxdJPmO/E31aM8GVcZ2Id5BF1ircBJ3QpV/JOeHqPGUSIWJwcBj8X4FzyY2PV5AoLF2yapxze/qJIdWqrCOM4pdzvq4XhUDELnPxpDe6L06swhSo/X7M5e/Oa/XU9mgjtipBa+ZL/dtZIQRcMqrzNCyxtNRevRpGcLg8U+hngK5F2TKdn91v9C8erRNppCdbYg6qBR5V0XplfWw56enoeOv8C</con:value></con:property><con:property><con:name>SAMLFAU1_1</con:name><con:value>pVbZcuI6EP0VyvNsvGA2V6DKQCbhBjLsd8JLSpYb0MSWHUtm+/orGXCAEC4z8+RSu3X69KLuvmMo8E3bYQxiTkKaWwc+ZXYqrSlJTO0QMcJsigJgNsf20Ol2bDOv2+hwRcm1WzXltYpc3cWup85Ms6RabqWgVq2yrpaRV8KlagWK5YJQZSyBNmUcUV5TTN0oqnpJNYojvWLrJdss5y2rOFVyE4iZwBYqeV3Zk1qzmrLgPLI1bbVa5VeFfBjPNVPXDe1ntzPECwiQUr/beZQaiut7fZz3AIPv4zwOA+1OO9G585g9JHOKeBLD3pb3lS1d06ua0PEYmX9TsrvgteksTI9NRENKMPLJFsn4dIEvQi/n+PMwJnwRfOmEoUtgFdZYxYZFvynaKbUbgU4YxgypbIGMPdYAZhADxZAbD9o15dttWUuvjmJE2SyMA3Z6/D0+QJfghxF4Kju4tad2O+CFSNXvANttiv2EkSU8y2KNEAa2zybg26FyvRhmZN0hTBTomkl22jG9s+MuGi0yB8b/JEFHydmBTJCfQD2B53Xp4WlVdgcP225EDf4YeHg0dt1KLSVwrJwKstTujmdFmRXR7kZvtdUrCV4/vYxfCq3+Uznoe+6Er6jl40Z/vMTFJHyLmg9Tt0oAGl3qv7jm9HltaM1m8uQO29EbfXPMyXRbeuhVnmDea3bMRzZeeo/83vi3v9r8M3mrdDqJqz1PG3pjqldfQiLgonLBooVB15kHvYdNv2V1Rv1wvGHb5uJhPJlWqlpXJ4O3n5PyL7x5cV6ex7XMnSP+p7LDmx8m7i/A/HCUZdBu5b6LLCF+vZlJCRGPIFW1I9l8GAfKlbq8JXuHnYh2Rzxb5HB3NioV595oWCX9vljQq9a9XiwUWtWq8V13yo5lHJrMjsUZxWZIZ0Taki13VzbXCeLAZkA9iNVlmIhOx5QriC3EUa5NB+IRhJTBKJTtWS8EOpS3RWNeNVg5NnzgOA4AKbnnkP+gP2JnxiE+6cmGcdKTB4BJREA2blnXTBQ24yIW72iZcN/IL1GeQiJaeyy7rG1alaLGSBD5IJlqQeglPuSjRZRGRmO7r6kizFLp4H6UvrYv/Tr/dwiB0PGIVGDSlwaINMKF4WIcHPnkcOniEDrAO4lH5MMS8eQxwTsmp78+ykTWR1YjrY4z7B1IZ7q/cfe1OXw1/hCg8xfGO39rXOTy803tSjy181RmhrwlOTJ72DrE/BIdr34oxHdk5N/zyXKZpLVnWQUtFvCaLAJNN7Uh4ET05M0ofAOqZSjaTQMwI35mPJOfUkz4gg454hCIt5JLjzdsPENgcuNpi0e+vnWdOjEpQsdhzS/Jmr7Y1iTjqwsdtrHUE+Ke+KzC2PvI2AWsIzvCT7HwcELn8iSH3+aLusChgCWibYfxMfglgEvGT4VZkDMuXBSUm3D4+k9O9uOagjAOE8rbLSUVHM+IlCffRGB/KH2CScdQtpeS/19MVZKWAAaxzTKS4sv1wpZPgM6P5sze6Bejxro2ak7Z1T+JP0uO4nRe4/X/AA==</con:value></con:property><con:property><con:name>SAMLFAU1_2</con:name><con:value>pVZbc9o6EP4rjPvYMb5gKHgCM06gLYEkHEybnLxkhLw2So1kLNlAfv2RDDhASA5tnzxar7799qLdveBoHtuuxzmkgjBaWc1jyt1C2taylLoMccJdiubAXYFd37sZunbVdNHuilbpd9vaUxMhCyC0dXtqIt0xv3zRW9Cs6dNWq46QUw9aYUOqcp5Bn3KBqGhrtmnVdbOhW/WJ2XTNhluzq5bdeNQqPyHlEluqVE1tS2rF29pMiMQ1jOVyWV3WqiyNDNs0LePhZujjGcyR1rnYeFQYSjtbfVwNAEMc4ypmc+PCONC5CLjrk4gikaWwtRW8Z8s0zJYhdQJOok9aeReCPg1ZcbxClFGCUUxekIrPDYgZCypeHLGUiNn8XScsUwHrsMI6thz6STMOqZ0JdMAw5UjnM2RtscYQQgoUQ+XHuN/WPp2XteLqJEWUhyyd88Pj7/EBmkPMEgh0vnNrS+18wBOR6lwAdvsUxxknOdyqYk0QBr7NJuDzoSqjFEKyGhIuC3TFFTtjn97RcRONLomAiz9J0F5yNiA/UZxBZ9GcsKH3z83zWgTh9bfxcs79sPk5N0ZRuyCwr1wIytRujkdFWRbR5sajv/geD5pXg3jqDC7TdePXzePcdK4/3y0na/6vdxlGddQUntMaDfLAe1z6189RCNF17/vlILYWy6Dv9XxG7u8sMnm8vH55mJK63+8+z9bP2Q8W5Yuk1hvSUXMQZfcv9fv8vuuNmzeLl2w4sNHD6Ks/zO/G5kPv22wy8uClZ62ng1u2xsxcgwepeduI7O/poyPffOnOHv9D2e7N+9n0GbDYHVUZ9LuVrzJLSHzczJSEBHpYqLqJaj5cABVaR91SvcPNZLsjgStzuDlbzabXsy6dhtXq1cyW0zPrtVq31bK+mt4Xz7F2TWbD4ojiFaMhUbZUy92UzccE8dzlQANI9ZxlstNx7QPELhKo0qdj+QgY5TBhsj2n5mpda+TJr8WzGUxtYdJGkiDhaJVbJu7oXeqFAtKDlmxZBy15DJgkBFTfVmXNZV1zIUOxQHkmYquaoyqFTHb2VDVZ13aadYOTeRKDImrMWZDFUE1mSREYg2++to4wL6Tj3qR4bO+6dfxvFwGpExClwJUvlyCzCCdmi71z5H2HnX2Hd/BeFhD1rmQ4RUrwhsnhr9cqUeVRlkh36PmjHelS9zfuPl35T9YfAgz/wvjwb43LXL69aXwQT+M4laWhICd7ZndLhxxfsuF1doW4QFZ1Uc3yPCtqz3FqRirhDZVcw7QNH3AmW/J6wn4BNUoU46z5VxI/Ml7KDylmYkZ9gQTM5VupFMczFh4fuFp4+vKNr87dpg5MytAJWIlTsqtYLmuK8Yf7HHax0pPikfwsWRq8ZuwE1p4d6afcdwShkTqp2bd+py4wk7BEdm2W7oOfAjhl/FBYBrnkImRBTTMB7/+pqHbc1hDGLKOi39UKwf6IKHiKdQLuq9IbmGIKlWsp+f+9VCdFCWCQyywnBb7aLlz1BGi0N2a2Rk9OGrPnfDRpDtl13ojfSvbidFzjnf8A</con:value></con:property><con:property><con:name>SAMLFAU1_3</con:name><con:value>pVZbc9o6EP4rjPvYMb5gKHgCM06gLYEkHEybnLxkhLw2So1kLNlAfv2RDDhASA5tnzxar7799qLdveBoHtuuxzmkgjBaWc1jyt1C2taylLoMccJdiubAXYFd37sZunbVdNHuilbpd9vaUxMhCyC0dXtqIt0xv3zRW9Cs6dNWq46QUw9aYUOqcp5Bn3KBqGhrtmnVdbOhW/WJ2XTNhluzq5bdeNQqPyHlEluqVE1tS2rF29pMiMQ1jOVyWV3WqiyNDNs0LePhZujjGcyR1rnYeFQYSjtbfVwNAEMc4ypmc+PCONC5CLjrk4gikaWwtRW8Z8s0zJYhdQJOok9aeReCPg1ZcbxClFGCUUxekIrPDYgZCypeHLGUiNn8XScsUwHrsMI6thz6STMOqZ0JdMAw5UjnM2RtscYQQgoUQ+XHuN/WPp2XteLqJEWUhyyd88Pj7/EBmkPMEgh0vnNrS+18wBOR6lwAdvsUxxknOdyqYk0QBr7NJuDzoSqjFEKyGhIuC3TFFTtjn97RcRONLomAiz9J0F5yNiA/UZxBZ9GcsKH3z83zWgTh9bfxcs79sPk5N0ZRuyCwr1wIytRujkdFWRbR5sajv/geD5pXg3jqDC7TdePXzePcdK4/3y0na/6vdxlGddQUntMaDfLAe1z6189RCNF17/vlILYWy6Dv9XxG7u8sMnm8vH55mJK63+8+z9bP2Q8W5Yuk1hvSUXMQZfcv9fv8vuuNmzeLl2w4sNHD6Ks/zO/G5kPv22wy8uClZ62ng1u2xsxcgwepeduI7O/poyPffOnOHv9D2e7N+9n0GbDYHVUZ9LuVrzJLSHzczJSEBHpYqLqJaj5cABVaR91SvcPNZLsjgStzuDlbzabXsy6dhtXq1cyW0zPrtVq31bK+mt4Xz7F2TWbD4ojiFaMhUbZUy92UzccE8dzlQANI9ZxlstNx7QPELhKo0qdj+QgY5TBhsj2n5mpda+TJr8WzGUxtYdJGkiDhaJVbJu7oXeqFAtKDlmxZBy15DJgkBFTfVmXNZV1zIUOxQHkmYquaoyqFTHb2VDVZ13aadYOTeRKDImrMWZDFUE1mSREYg2++to4wL6Tj3qR4bO+6dfxvFwGpExClwJUvlyCzCCdmi71z5H2HnX2Hd/BeFhD1rmQ4RUrwhsnhr9cqUeVRlkh36PmjHelS9zfuPl35T9YfAgz/wvjwb43LXL69aXwQT+M4laWhICd7ZndLhxxfsuF1doW4QFZ1Uc3yPCtqz3FqRirhDZVcw7QNH3AmW/J6wn4BNUoU46z5VxI/Ml7KDylmYkZ9gQTM5VupFMczFh4fuFp4+vKNr87dpg5MytAJWIlTsqtYLmuK8Yf7HHax0pPikfwsWRq8ZuwE1p4d6afcdwShkTqp2bd+py4wk7BEdm2W7oOfAjhl/FBYBrnkImRBTTMB7/+pqHbc1hDGLKOi39UKwf6IKHiKdQLuq9IbmGIKlWsp+f+9VCdFCWCQyywnBb7aLlz1BGi0N2a2Rk9OGrPnfDRpDtl13ojfSvbidFzjnf8A</con:value></con:property><con:property><con:name>SAMLFAU1_4</con:name><con:value>nVZdc9o6EP0rjPvIGNvYkOAJzJCSpG5C0waSpn25o8hrrMaWjCSbj19fyYCLacjl3ieP1quzZz90pAuB0qTtD4UALgmjjWWaUOGX1r6Rc+ozJIjwKUpB+BL7k+H4zm+3bB/tthiNYNQ3/kG4C+de9GKiNnJNr2tj86UTvpgudMHBtods11OuQuQQUCERlX2jbTsd0+6aTmdqn/v2md9pt1y3+9NoPAEXClu5tGxjS2op+kYsZeZb1mKxaC3cFuMzq23bjvU8vpvgGFJkDC42GZWB+GDrj1shYEgS3MIstS6sms9FKPwJmVEkcw7bWOGxWLZl9yzlEwoy+2BUeyEMaMTK5UdEGSUYJWSNdH3GIGMWNobJjHEi4/RoEo6tgU1YYhM7Hv1gWHVqJwLVGHKBTBEjZ4v1ABFwoBgajw9B3/hwWtfKrVOOqIgYT0V9+d/4AC0gYRmEptiltaV2OuAblRpcAPYDipNckAK+6GHNEAax7Sbg06EaXzlEZHlHhBrQpdDsrH16B8tNNUZkBkL+nwbtNWcD8oSSHAbj7PbTWdP6VvS+4d4PK7m8GX9Pbp4frovXfklg37k0VK3dLA+GshqiLXw8jOZu/JwvHO/sudl1eo9i7RWfrmc3v4bzu4n39SpOH8P18Go1+14Uj2mALG86po/eYvISxpMf6e3P5vOoexl/TtkNCMsdy5/BcB5bt/g+eoxHzkPzs5sW927eS66egH2ZvrbvE9R8WrVd3uPfV6/feDwP1z+ecjeDbOo6KJB3r5M59KK0+XqXNScCB81bdeardPb41227Mz/JX34BlrulHoNg1LhWXULyfTHTFhKaUenqZ1p8hAQqjYHepbXDz5XckdBXPdysnfPz4ZVzqY7M6Nq1e96V3XHdUa/nXNvDs6Hn7ERmw+KA4kdGI6JjacndjM37BHHqC6AhcLNguVI6YbyDOEISNQL6oA4BowKmTMmzQ9frlVucJ9l66Tk85h5b2QyiTmQ0vjB5T+/5MJLAa6LsODVRfgBMMgJaufVgCzXZQqpizFGRy8RpFahFIVfazrXM+m3vvGMJkmYJaKpWysI8gVYWZ2VpLLH5tk2ERWkt64o3R+5ocof/dnVQPiHRDkLncwmql/DGDePtkjmSdPfgJtrBD/OQ6NOliio5wRsm9V9/ZkUPSTUo26x2tCvvQ0MN2TpMqgoWFgRXE1/d20rOlQAMdm2ZI6c1b+VFkZed8DzX4gre0mladtuaAM6VRK2m7BWoVaFYJ90HFfGD4JW9TjGXMZ1IJCFVk9Molyc8ACYg9AMgUDO/PPV1UQupSidhKd+yfUzU40Uzfvd9g32s/ZT5q/osGA//dOwNrL04Kk91/0tCZ3ql74LVkdnATMESpWKM74O/BfBW8LqxKnLFRaqBesklHP/T0PLUNxDGLKcyGBmlYV8yS55ylYH/x+kvmFKVq2ca+fd3mknKEcCgHneClPj6tvX1EaCzPdndBj2ivFfvKW+d3eAv89+WvTodzvjgNw==</con:value></con:property><con:property><con:name>SAMLFAU1_5</con:name><con:value>nVZrb+o4EP0rKP0ckkCAEBUkWug2fRe497b9sjLOAIbEBtvh9evXDpASSrvsSkjIk/HMmZnjY18KFEclvyUEcEkYLaziiAo/tTaMhFOfIUGET1EMwpfY77UeH/xS0fbRfotRCNoN4++yZwN2HccMa27NdGueYyIv9Ew8cFCtZruoikvKVYgEAiokorJhlGynYtpV06n0bc9XP8cuViulD6PwG7hQsZVL0TZ2oFaiYYylnPmWtVwui8tykfGRVbJtx3p7fOjhMcTIaF5uK0oT8ebOHxdDwBBFuIhZbF1aOZ/LUPg9MqJIJhx2ucLvctmWXbeUTyjI6MLI9kIY0CFLl9eIMkowisgG6f48ghyzsNCKRowTOY6/LcKxdWATVtjEjksvDCsP7cxAOYRcIFOMkbOL1YUhcKAYCr+6QcO4OG9q6dY+R1QMGY9Ffvnf8ABdQMRmEJpiX9YO2vkBT3SqeQnYDyiOEkEW8KTJOkMYxG6agM8PVXjhMCSrByIUQVdCo7MO4R0tt91okxEI+X8GdDCcbZDfKEqgGTNxW4+q/O3j4RcLrYm4u7t5uIuF1X1tpAAOnVNDNtrt8oiUGYm2O/ht0OpMqy+/prcfmMOYDrzgd7i2b++9tYwSB26j9X39oTVNrmrIvYYleywzqxsPw3U56G/WMqDj4eh9LtvxZtm7r1j8aoCEG5L+XV8O/tRDsJ//4q+LUuW2/zKn9KODNk/sbSom/CYode5JJ2w5rkALb4K69ov7OhX3YrJ59t6e+mI9+fP+7tW6i6hGXkUjK+cAf962P/O9ZDABLPdLTYOgXbhRU0LyZzHTFhKaw9TVn2nxERKoNJp6l9YOP1FyR0JfzXC7djyv1XGu3Krdccp23e3YlXK5Xa87N3ar1nKdvchsURxBvGZ0SHQuLblb2vwMEMe+ABoCNxcsUUonjB8itpFEhYB21SFgVECfaXnGs9JmsppzHI0cXhlsJssanc5riVF4YvKZPvPWUALPabLj5DS5C5jMCGjh1rwWithCql7M0SKRkVNcoCKFREk71yrrl1yvYgkSzyLQSK2YhUkExdl4lnbGEtv/komwSK2YMR76eHvkvi3u+Nu+D8onJNpB6IKuQM0STtww9r6aL1VXT95E+/CtJCT6dKmmSk7wFkn+0ydXNEkyouzL2uPO3I8NudDWcVVZtnBBcEb57OJWeq4UoLkfzBw5xXkxWSySdBauW7a4Cm/pflh2yeoBTpRGrftsCtTKolhnXQgZ8KPkmT0PMZFj2pNIQqy4U0iXZ7wAeiD0CyBQpF+d+7zIpVStk7CSp2zXkXq9aMQ/PnCwj7WfMr+ov6Wa4ufETsQ6yKPqVA8ASehIr/RlsP6JHETJGOOHwU8FOJU8b8yanGGRilCDRML3XwpanxoGwpglVAZtIzUcamaKU65n4H86fQmTynL2TiP//lAzSUoBDOp1J0gaX1+3vj4CdHSgu7uk30iv/ZP05tE1v5i/Wg76dMzx5j8=</con:value></con:property><con:property><con:name>SAMLFAU2_1</con:name><con:value>pVZtd6I6EP4rHvbjPZiA0CKneo7W9tZda7vSl3v7pSeGAGkhIAli/fU3QaVqba+7+4mTYTLzzEuemTOOkth0e5yTXNCUNRZJzLhbSTtakTM3RZxyl6GEcFdg1+tdj1yzCV20uaI1hoOO9tx2rKAFTaJD67SlW4Fj6g62HR0FZts+mbbahg2lKucFGTIuEBMdzYSGLfV1s30HT13Ddlt203Hgk9Z4IDmXtqVKU95agVrwjhYJkbkAlGXZLFvNNA+BCaEB/rkeeTgiCdK6Z6uIKkd5d62Pmz7BJI5xE6cJOAM7Omc+dz0aMiSKnKx9+Z/5ggC2gdTxOQ2/afVd4g9ZkFbHc8RSRjGK6RKp/FwTEaV+oxeHaU5FlHwahAGVYZ0ssI4Ni33TwC60Iw3tIMw50nmEjLWtCQlIThgmjfvJsKN9O65q1dW7HDEepHnCd4+/hoewOYnTjPg634S1hna8wQOZ6p4R7A4ZjgtO52SsmjVDmPB1NQk+3lTjNicBXYwolw264Aod2Ia3d1xlY0BDwsXvFGirOCsjDyguSJeXMBxS/3ZiRU83ARt7ZMngZJFN7ftOBWBbuRLUpV0d95qybqLVjddl33Me/El5PSEvy/mLCBb5YNobYeBEL3i6nF1YTrsNLlj/6enx+7/Ok7jn1PxxFc3CH36ATv8K+/QnRnBsBMbfIL98bVE0AahMXgZsDl8GF9Y4bs0Kfl8mhjeyitR8vAHZFRTREz21+/bP8+z1IRuXj+Vjf3KFZ+HjiJ7EXgo9/y0KBuh7H5Mr79paOGmnDmcL/65s8+a9YvpCsNgcVRsMB41LWSUkviYzJaG+HlSqbqbIhwvChNZVtxR3uIWkO+q7soars2ENnHbftqFl2SeDk4sLaLeg3W4bl7BnOP3LDcmsUOxBPE9ZQJUvRbmrtvkaIE5cTphPcn2eFpLpuPaFxQESqDFkE/kIUsbJXSrpuZwvQ2MK7VOMA8N3QjgNrOh1sSRaY5yKG3aT9wJB8h1ONuAOJ08IphklirhVX3PZ2FzIXMzQvBCx0ZyjJiOFpPZcsaxrWo4NOE2ymCikIEn9IibNLMqqzAC++po6wrySTi7uqtf2aVz7/zYpkDo+VQpcxdInsozkwHAxN4F8HnBrO+CN+V7hU/WwZD5FTvEKye6v9zZR/VH3yGDU8243oGvdX7j7fO49G79pYPQHzkd/6lzW8uNN8EU+wX4pa0f+nG653Wwdcn5JxutuGnGGjOasWcznRdV7ltUCuTQPVHEBNIFHcCE5+e0ufSUM1FbAUQOwBr7nvJbvQixExDyBBEnkW2lUxyM2Ho9wtfEM5SNfHLtO7biUqRNkIQ7JzmO5rSnEXy502MVKT4pv5adMc/+9YgdsbfmRccqFR1AWqpMafm+f9AVOpVkqaTvNt40fMnDI+a6wTnKNRciGmhaCfP6nofi4oyGM04KJ4UCrBNszosIp3jLivit9MFONoXovpf+/mOq0agEs+VbqV/bVeuGqJ8DCrTmzdnpw1Bh986tRs4uu+0H8UbKVp/0e7/4H</con:value></con:property><con:property><con:name>SAMLFAU2_2</con:name><con:value>nVZpb+I6FP0rKPOxCllISogKEuuUKZ32AVO1/TIyzg1xSew0dljm148dIAW6PN6TkJBvrs89d/GxrzhKYttvcw6ZIIxW1klMuV9Ym1qeUZ8hTrhPUQLcF9iftG9Hvl01fbTfolWGvab223M88KBh6TVvVted0DV1FDQu9Tq4s1rDdGezWihdOc9hSLlAVDQ127Rc3azJ39Rs+Palb9eqnmk/a5UHyLjEli5VU9uRWvOmFgmR+oaxWq2qq1qVZXPDNk3LeLwdTXAECdJaV9uMikBZa+ePqwFgiGNcxSwxrowjn6uA+xMyp0jkGexiBZ/FMg2zYUifgJP5N63cC8GQhqxYdhFllGAUkz9I1ecWRMSCSjues4yIKPk0CctUwDqssY4th37TjGNqZwIdMcw40nmErB3WGELIgGKo/BoPm9q387pWbJ1miPKQZQk/Xv43PkCXELMUAp3v09pROx/wg0q1rgD7Q4rjnJMl/FTDmiIMfNdNwOdDVe4zCMl6RLgc0DVX7IxDeifLbTV6ZA5c/J8GHTRnC/KA4hxaUb/HrhN71u+/PN259Rv8DLdeZJh3q0WzIHDoXBjK1m6XJ0NZDtF2R1K3er++T80oZl0Dx318jV7T2gV14jSL3Aev/jIVi2e78+P2cfnjSdw4l9cX3c01S6IfNLkMv6fPrrWIcLS5JE+PA+7cPzQWnTnP2ul682jQrD1m1oYPjc5NBy76YfaY/1x2up1/eqvvsJ4OXwbdcR2oSYKHOoqfFiiqXYzJ4wOdxF56YY7mrHPjjKZhuH5aNct0Dvgf2/ZnfpLPXgCL/VKNwbBXGcguIfG1mCkLCfSwcPVTJT5cABVaS+1S2uHnUu5I4MsebteW6Q76bndguV2nbtcbfdOtmfVGwxqY7ctut78XmS2LE4pdRkOiYinJ3Y7N1wRx4nOgAWT6kuVS6bj2BWIPCVQZ0rE8BIxymDIpz5YdzNhr7rlr26Ev65eF53FWE3+IVvnJxB29y9qhgOxIky37SJPHgElKQAm3mmsuB5sLWYtXtMxFbFWXqEohl9KeKZX1bcdzDU6SNAbF1EhYkMdQTaO0qIzBt/+2jjAvrKNRe3L/uzv5bReH7tP0Tr/tKyF9AqIcuEqpA7Kb8MEdY+3z+SRv5+Qu2sO384Co8yXLKjKCt0yOP71NixqTclTeEtszLzecGo7AjdO8ynjBkuBy7MvLW2q6VIHWvjmvqPpazZfLvGhHXaldJuENlalh2sYEcC51ajNlC6BGiWKcdSmUxE+Cl/ZjirmI6EQgAYmcn0qxPOMVMAGuXgFDOfjrc58YRyFl6QSsxUe2bixfMIrxl48c7GPlJ8338m/FsuCtYx9gHcSRecpHgCB0rlbqQth8Mh6YSVgipYxlh+AfAXwU/NhYFrnkIuRAzXIBn3+pKI1qaghjllMx7GmF4VA3C55ik4L/5vQOppDm8q1G/v2xppNiBDDIFx4nBb66cn11BOj8QHt3Qd/Jb71tembHsRzbLeTX3crvwBy8nbQjdq135veWgzqdznjrLw==</con:value></con:property><con:property><con:name>SAMLFAU2_3</con:name><con:value>nVZrU+o6FP0rTP3IlD6gYDvCTAU5h3NQkXL06BcnpAGiJYEkfeivv0mBSkG93DvDDJPdnbXXfmQlFxwsI9vzOUdMYEoq2TIi3MutbS1mxKOAY+4RsETcE9AL/OuhZ9dMD+y2aJVBr609O/Wm7QD3XLcsaOmNmV3XwTmwdTSdQhdOIQybpnTlPEYDwgUgoq3ZpuXoZl3+Jqbr2S3PtGsNy33SKveIcYktXWpy14ZUxtvaQoiVZxhpmtbSeo2yuWGbpmX8vR4GcIGWQOtcbDLKA7HO1h/WQgRRFMEapEvjwij5XITcC/CcABEztI0VfhXLNEzXkD4hx/MzrdiLwgGZ0XzZBYQSDEGE34GqzzUSCxpW/GhOGRaL5ZdJWKYC1lEGdWg1yJlmlKmdCFRiyDjQ+QJYW6wxmiGGCESVP+NBWzs7rWv51gkDhM8oW/Ly8r/xQSRBEV2hUOe7tLbUTgf8pFKdCwS9AYFRzHGCbtSwrgBEfNtNBE+HqowYmuFsiLkc0IwrdsY+vYPlpho9PEdc/J8G7TVnA3IPohh1DF+MzevWZLnIwp+iO3ysEnnaplk6P2/nBPadc0PR2s3yYCiLIdrsWDWjeTIa2fAvFmnXnTjvT8ET6T6MXoLWoHcLqLiEZgrxZLZg1cug/pC4L9hHd3Rqjh/Eq/DHt91Rtd//NZmb1qMpXu/EnN4K9726Tq3w4b75EorfL+vBY188rKqTNAhtJ1un/jiZ/rhyfd8Z2z+uR/1FWn27aTXroZ9kdyPq8t8/W41Vf+wM7cUvMpjVLfanXaSzx79s2535IJ6+ICh2SzUGg16lL7sExPdipiw41Ge5q7dS4sMFIkLrqF1KO7xYyh0OPdnDzdoynf6V0+1bTrfRslvulenUzZbrWn3Tb3a7VzuR2bA4oNilZIZVLCW5m7H5niBcehyREDE9obFUOq59g9gDAlQGZCwPASUcTaiUZyt8Z7N1I3vnU7q2GpA1QBa66TxhWuWGiltyy/yZQKwkypZdEuUxgniFkVJuNdhcTjYXshhrkMQismoJqBEUS21nSmY9u3HuGBwvVxFSVI0lDeMI1VaLVV4ag2/+bR1Anlt7Qz8YPXeDZzs/dV/md/htVwrpE2LlwFVKl0i2Ex1dMk3P2eVzlHfz08toB+/HIVYHTNZVMAw3TMqfPsZFzUkxKx+J7ZgXGw4NJXDjMK8iXphgWMx9cXtLUZcy0Nk1Zw1q61qcJHHejpaSOybhDVURw7SNAMFYCtXbhL4iYhQoxkm3QkH8IHhhL1OMxYIEAgi0lPNTyZcnPAMCxNUzYCAnPzv1jVEKKUsnUCY+s3Uj+YRRjL995UAPKj9pHsm/lLLwo2OfYO3FkXnKV4DAZK5W6kZ4+2I8IJWwWGoZZfvgnwF8FrxsLIpccBFyoKaxQF9/qSiRamsAQhoTMehpuWFfOHOe4m2FvA+nI5hcm4vHGv7315qO8xGASD7xOM7x1Z3rqSNA5nviuw16pL8t3zw3LxtWw3Zy/XU2+ts3+x8nrcSuc2Q+tuzV6XDGO/8A</con:value></con:property><con:property><con:name>SAMLFAU2_4</con:name><con:value>nVZrb+o4EP0rKP1YQR4QCFFBSnl02Za2l1dv+2VlnAmYJg6NnZD21187QEpo6bIrISFPxjNnZo6PfcVQ4Bu2wxhEnIS0lAY+ZXZmbSlxRO0QMcJsigJgNsf22Bne2UZFs9F+i1IadFvKP1ZNq1Yts1E2vSYq12qWUUaa7pV108Nus2ppc9CEK2MxDCjjiPKWYmi6Wdaq4jfRmrbRsGvVitGovyilGURMxBYuFbFrCyplLWXJ+dpW1c1mU9lUK2G0UA1N09Xfw7sxXkKAlPbVtqIsUdTe+eOKCxh8H1dwGKhXasHnymX2mCwo4nEEu1zuqVyaqjVV4eMysrhQ8r3gDqgXZssOoiElGPnkA8n+DIEvQ7fk+IswInwZnCxC12TgMqS4jPUavVDUIrQzAxUQRgyV2RLpu1gj8CACiqE0HQ1aysV5U8u2TiJEmRdGASsu/xseoAn44RrcMtuXtYN2fsBvOtW+AmwPKPZjRhK4l2RdIwxsN03A54cqPUbgkfSOMEHQlEl06iG8o+W2G12yAMb/z4AOhrMNMkN+DO2nh+SvOpl6w19v7rP1fO0sNk5cX9xNN1YrA3DonBny0W6XR6TMSbTdkTZmm9nK/H1/W7uMsZs2Gw/P06Tz8vem9nELz/cxwtay1wle+Op+duOxYLyIEmP263H0OK01vUfzCVl3s7rqprrHYzKaL7vWcDHXumM2vGWayubsZeV13t6Cx+Sl4eFFI+1cWsnrBEf9tDtks1VvMps8d8m1p3rsw5zd3FxPr1lKrGB1S+bOZUd/chp96Ee7co/wF237Mz+O5yvAfL+UNBh0S30xJcR/FjNpIW7Zy1zttRQfxoFypS13Se2wYyF3xLXFDLdrXTP7vXqnqTVNq95znJ5mVrVGs6n3NcfRmr29yGxRHEHshNQjMpeU3C1tfgaIA5sBdSEqJ2EslI4pP0TsIo5KAzoShyCkDCahkGfi8hoJrIiFaKUn1QRSkcK30leldB/yB/oQOR6HqKDJulHQ5BFgsiYghVvymgliMy568YaSmPt6JUEVCrGQ9kiqrG3ULFNlJFj7IJGqQejGPlTWy3XWGZVt/4XgYJZZs7bi7Yk7Wdvxt30bhI9LpAOT9VyDGCV8c8FU98WcKLp2dBHtwzuxS+ThEj3lEcFbJMVPn1SRHMl5sqtqDzv3PjYUIqvHReXJ3ITgnPD5tS3UXJz/9n4sb6jyVomTJM4G0ZA6F4nwqixT1Qx1DDgWCvU+CV+BqnkU9azrIAd+lDy3FyHGfEnHHHEIBHNK2fKM+38MTN7/A0H59NzHRSGlaB2HlH9n6/ji7SIR//i8wTaWfsL8KP42YeR+TuybWAd5RJ3i+ueELuRKXgXvJ7iBQxGWCBELo8Pg3wX4LnnRmDc5x8IFoeYxh9NfSlKdWgrCOIwpH3SVzHComBlO/r4G+9PpS5hMlPNXGvn3Z1qZZBTAIN52jGTx5WVryyNAFwequ0v6RXjNTkevOmbDaOiHwls1zE9+FtC1v5i/Wg76dMzx9h8=</con:value></con:property><con:property><con:name>SAMLFAU2_5</con:name><con:value>nVZtb+I4EP4rKPuxCnmhCSQqSCnQbm77CnR32y8nxxnANHFC7ATaX392gCyhtMedhIQ8Gc88M/P4sS8YiiPT9RiDjJOENtZxRJlbWrtKnlE3QYwwl6IYmMuxO/Zub1yzqbtot0Vp+IOu8ncYdoIw0EPVDgKsnqMAqUHYMdQAHBvMoONMW0i4MpaDTxlHlHcVUzcsVW+J30R3XLPjmlbzvG2/KI2fkDERW7g0dWULas26ypzz1NW01WrVXLWaSTbTTF03tN+3N2M8hxgpvYtNRWWirLf1x80QMEQRbuIk1i60ms9FyNwxmVHE8wy2ucLPcuma7mjCJ2Rk9k2p9kLo02lSLvuIJpRgFJF3JPtzC3yehA0vmiUZ4fP40yIMXQZWYY1VbJzTb4pWh3ZioBrCjCGVzZGxjTWCKWRAMTSeRn5X+Xba1MqtkwxRNk2ymNWX/w0P0AKiJIVQZbuyttBOD3ikU70LwK5PcZQzUsCdJGuKMLDtNAGfHqrxkMGUrG8IEwRdM4lO24d3sNx0Y0BmwPj/GdDecDZBfqIoh95qcXcWzu3Cf5hMwPccxEb5VfI2npPnbglg37k0VKPdLA9IWZFos6PffvnrtmilNy/PttP6FTmPw2LoXdJObLERyQvn1n/CvwaPd+ny9WZ89Tb4rttP+pRet+/vZ63Yez176wwn13eMv7/m685zcAkwjPxs9Tt4uWY36PzMcuLv1227eBpeFnEWTTvh06I9Cuncn3rP13D52vJYPr16XqwGD8UiHv56DPTFWfAQ53yc/OxjM/9Brcf09bZblbOHv27bnflxHiwA891S0sAfNK7ElBD/WsykhYTqtHR1Uyk+jAPlSk/uktrh5kLuSOiKGW7Whm5dDe2+ozuWYw89b6hbLb3tOMaV7nm6M9yJzAbFAcR+QqdE5pKSu6HN1wBx7DKgIWRqkeRC6ZjyRcQB4qjh05E4BAllMEmEPBtpzJcpw+2Fs7SXnK6sWfJudQJbadwl/J7eZ96UQ1bTZMOsafIIMEkJSOGWvGaC2IyLXixRkfPIaBaoSSEX0p5JlXXN846lMRKnEUikWpyEeQTNdJ6WndHY5t9UEWalFSdJFrp4c+Q+Le7w264Pwick0oHJgi5BzBKO3DDGrpoPVdtHb6JdeC8PiTxdoqk8I3iDpP7pD1ckSSqi7Mra4a7cDw210NphVVW2sCC4onx1cQs9FwrQ2w1miZrLZl4UeTmKtlS6TITXZD803dTGgHOhUW+T5BWoVkXRTroQKuAHySt7HWLO53TMEYdYcKdRLk94AYyByReAL0i/PvV5UUspWsdhzY/Z+pF4vUjEXz5wsIulnzA/iL+VmOKfiR2JtZdH1CkeAJzQmVzJy+DtK3IQIWNJth/8WIBjyevGqskVFi4IFeQcPv/SkPrUVRDGSU65P1BKw75mljj5WwruH6cPYUpZrt5p5N8faiopKYBBvO4YKePL69aVR4DO9nR3m/SD9Fr9vtHy7LbZNvalt2VaetWUGrreB/NHy16fDjne+wc=</con:value></con:property><con:property><con:name>SAMLFULL</con:name><con:value>nVZrb+o4EP0rKP0ckkCAEBUkWug2fRe497b9sjLOAIbEBtvh9evXDpASSrvsSkjIk/HMmZnjY18KFEclvyUEcEkYLaziiAo/tTaMhFOfIUGET1EMwpfY77UeH/xS0fbRfotRCNoN4++yZwN2HccMa27NdGueYyIv9Ew8cFCtZruoikvKVYgEAiokorJhlGynYtpV06n0bc9XP8cuViulD6PwG7hQsZVL0TZ2oFaiYYylnPmWtVwui8tykfGRVbJtx3p7fOjhMcTIaF5uK0oT8ebOHxdDwBBFuIhZbF1aOZ/LUPg9MqJIJhx2ucLvctmWXbeUTyjI6MLI9kIY0CFLl9eIMkowisgG6f48ghyzsNCKRowTOY6/LcKxdWATVtjEjksvDCsP7cxAOYRcIFOMkbOL1YUhcKAYCr+6QcO4OG9q6dY+R1QMGY9Ffvnf8ABdQMRmEJpiX9YO2vkBT3SqeQnYDyiOEkEW8KTJOkMYxG6agM8PVXjhMCSrByIUQVdCo7MO4R0tt91okxEI+X8GdDCcbZDfKEqgGTNxW4+q/O3j4RcLrYm4u7t5uIuF1X1tpAAOnVNDNtrt8oiUGYm2O/ht0OpMqy+/prcfmMOYDrzgd7i2b++9tYwSB26j9X39oTVNrmrIvYYleywzqxsPw3U56G/WMqDj4eh9LtvxZtm7r1j8aoCEG5L+XV8O/tRDsJ//4q+LUuW2/zKn9KODNk/sbSom/CYode5JJ2w5rkALb4K69ov7OhX3YrJ59t6e+mI9+fP+7tW6i6hGXkUjK+cAf962P/O9ZDABLPdLTYOgXbhRU0LyZzHTFhKaw9TVn2nxERKoNJp6l9YOP1FyR0JfzXC7djyv1XGu3Krdccp23e3YlXK5Xa87N3ar1nKdvchsURxBvGZ0SHQuLblb2vwMEMe+ABoCNxcsUUonjB8itpFEhYB21SFgVECfaXnGs9JmsppzHI0cXhlsJssanc5riVF4YvKZPvPWUALPabLj5DS5C5jMCGjh1rwWithCql7M0SKRkVNcoCKFREk71yrrl1yvYgkSzyLQSK2YhUkExdl4lnbGEtv/komwSK2YMR76eHvkvi3u+Nu+D8onJNpB6IKuQM0STtww9r6aL1VXT95E+/CtJCT6dKmmSk7wFkn+0ydXNEkyouzL2uPO3I8NudDWcVVZtnBBcEb57OJWeq4UoLkfzBw5xXkxWSySdBauW7a4Cm/pflh2yeoBTpRGrftsCtTKolhnXQgZ8KPkmT0PMZFj2pNIQqy4U0iXZ7wAeiD0CyBQpF+d+7zIpVStk7CSp2zXkXq9aMQ/PnCwj7WfMr+ov6Wa4ufETsQ6yKPqVA8ASehIr/RlsP6JHETJGOOHwU8FOJU8b8yanGGRilCDRML3XwpanxoGwpglVAZtIzUcamaKU65n4H86fQmTynL2TiP//lAzSUoBDOp1J0gaX1+3vj4CdHSgu7uk30iv/ZP05tE1v5i/Wg76dMzx5j8=</con:value></con:property><con:property><con:name>SAMLSAU1_1</con:name><con:value>pVZbc9o6EP4rjPvYMb5gKHgCM06gLYEkHEybnLxkhLw2So1kLNlAfv2RDDhASA5tnzxar7799qLdveBoHtuuxzmkgjBaWc1jyt1C2taylLoMccJdiubAXYFd37sZunbVdNHuilbpd9vaUxMhCyC0dXtqIt0xv3zRW9Cs6dNWq46QUw9aYUOqcp5Bn3KBqGhrtmnVdbOhW/WJ2XTNhluzq5bdeNQqPyHlEluqVE1tS2rF29pMiMQ1jOVyWV3WqiyNDNs0LePhZujjGcyR1rnYeFQYSjtbfVwNAEMc4ypmc+PCONC5CLjrk4gikaWwtRW8Z8s0zJYhdQJOok9aeReCPg1ZcbxClFGCUUxekIrPDYgZCypeHLGUiNn8XScsUwHrsMI6thz6STMOqZ0JdMAw5UjnM2RtscYQQgoUQ+XHuN/WPp2XteLqJEWUhyyd88Pj7/EBmkPMEgh0vnNrS+18wBOR6lwAdvsUxxknOdyqYk0QBr7NJuDzoSqjFEKyGhIuC3TFFTtjn97RcRONLomAiz9J0F5yNiA/UZxBZ9GcsKH3z83zWgTh9bfxcs79sPk5N0ZRuyCwr1wIytRujkdFWRbR5sajv/geD5pXg3jqDC7TdePXzePcdK4/3y0na/6vdxlGddQUntMaDfLAe1z6189RCNF17/vlILYWy6Dv9XxG7u8sMnm8vH55mJK63+8+z9bP2Q8W5Yuk1hvSUXMQZfcv9fv8vuuNmzeLl2w4sNHD6Ks/zO/G5kPv22wy8uClZ62ng1u2xsxcgwepeduI7O/poyPffOnOHv9D2e7N+9n0GbDYHVUZ9LuVrzJLSHzczJSEBHpYqLqJaj5cABVaR91SvcPNZLsjgStzuDlbzabXsy6dhtXq1cyW0zPrtVq31bK+mt4Xz7F2TWbD4ojiFaMhUbZUy92UzccE8dzlQANI9ZxlstNx7QPELhKo0qdj+QgY5TBhsj2n5mpda+TJr8WzGUxtYdJGkiDhaJVbJu7oXeqFAtKDlmxZBy15DJgkBFTfVmXNZV1zIUOxQHkmYquaoyqFTHb2VDVZ13aadYOTeRKDImrMWZDFUE1mSREYg2++to4wL6Tj3qR4bO+6dfxvFwGpExClwJUvlyCzCCdmi71z5H2HnX2Hd/BeFhD1rmQ4RUrwhsnhr9cqUeVRlkh36PmjHelS9zfuPl35T9YfAgz/wvjwb43LXL69aXwQT+M4laWhICd7ZndLhxxfsuF1doW4QFZ1Uc3yPCtqz3FqRirhDZVcw7QNH3AmW/J6wn4BNUoU46z5VxI/Ml7KDylmYkZ9gQTM5VupFMczFh4fuFp4+vKNr87dpg5MytAJWIlTsqtYLmuK8Yf7HHax0pPikfwsWRq8ZuwE1p4d6afcdwShkTqp2bd+py4wk7BEdm2W7oOfAjhl/FBYBrnkImRBTTMB7/+pqHbc1hDGLKOi39UKwf6IKHiKdQLuq9IbmGIKlWsp+f+9VCdFCWCQyywnBb7aLlz1BGi0N2a2Rk9OGrPnfDRpDtl13ojfSvbidFzjnf8A</con:value></con:property><con:property><con:name>SAMLSAU1_2</con:name><con:value>pVZbc9o6EP4rjPvYMb5gKHgCM06gLYEkHEybnLxkhLw2So1kLNlAfv2RDDhASA5tnzxar7799qLdveBoHtuuxzmkgjBaWc1jyt1C2taylLoMccJdiubAXYFd37sZunbVdNHuilbpd9vaUxMhCyC0dXtqIt0xv3zRW9Cs6dNWq46QUw9aYUOqcp5Bn3KBqGhrtmnVdbOhW/WJ2XTNhluzq5bdeNQqPyHlEluqVE1tS2rF29pMiMQ1jOVyWV3WqiyNDNs0LePhZujjGcyR1rnYeFQYSjtbfVwNAEMc4ypmc+PCONC5CLjrk4gikaWwtRW8Z8s0zJYhdQJOok9aeReCPg1ZcbxClFGCUUxekIrPDYgZCypeHLGUiNn8XScsUwHrsMI6thz6STMOqZ0JdMAw5UjnM2RtscYQQgoUQ+XHuN/WPp2XteLqJEWUhyyd88Pj7/EBmkPMEgh0vnNrS+18wBOR6lwAdvsUxxknOdyqYk0QBr7NJuDzoSqjFEKyGhIuC3TFFTtjn97RcRONLomAiz9J0F5yNiA/UZxBZ9GcsKH3z83zWgTh9bfxcs79sPk5N0ZRuyCwr1wIytRujkdFWRbR5sajv/geD5pXg3jqDC7TdePXzePcdK4/3y0na/6vdxlGddQUntMaDfLAe1z6189RCNF17/vlILYWy6Dv9XxG7u8sMnm8vH55mJK63+8+z9bP2Q8W5Yuk1hvSUXMQZfcv9fv8vuuNmzeLl2w4sNHD6Ks/zO/G5kPv22wy8uClZ62ng1u2xsxcgwepeduI7O/poyPffOnOHv9D2e7N+9n0GbDYHVUZ9LuVrzJLSHzczJSEBHpYqLqJaj5cABVaR91SvcPNZLsjgStzuDlbzabXsy6dhtXq1cyW0zPrtVq31bK+mt4Xz7F2TWbD4ojiFaMhUbZUy92UzccE8dzlQANI9ZxlstNx7QPELhKo0qdj+QgY5TBhsj2n5mpda+TJr8WzGUxtYdJGkiDhaJVbJu7oXeqFAtKDlmxZBy15DJgkBFTfVmXNZV1zIUOxQHkmYquaoyqFTHb2VDVZ13aadYOTeRKDImrMWZDFUE1mSREYg2++to4wL6Tj3qR4bO+6dfxvFwGpExClwJUvlyCzCCdmi71z5H2HnX2Hd/BeFhD1rmQ4RUrwhsnhr9cqUeVRlkh36PmjHelS9zfuPl35T9YfAgz/wvjwb43LXL69aXwQT+M4laWhICd7ZndLhxxfsuF1doW4QFZ1Uc3yPCtqz3FqRirhDZVcw7QNH3AmW/J6wn4BNUoU46z5VxI/Ml7KDylmYkZ9gQTM5VupFMczFh4fuFp4+vKNr87dpg5MytAJWIlTsqtYLmuK8Yf7HHax0pPikfwsWRq8ZuwE1p4d6afcdwShkTqp2bd+py4wk7BEdm2W7oOfAjhl/FBYBrnkImRBTTMB7/+pqHbc1hDGLKOi39UKwf6IKHiKdQLuq9IbmGIKlWsp+f+9VCdFCWCQyywnBb7aLlz1BGi0N2a2Rk9OGrPnfDRpDtl13ojfSvbidFzjnf8A</con:value></con:property><con:property><con:name>SAMLSAU1_3</con:name><con:value>pVZbc9o6EP4rjPvYMb5gKHgCM06gLYEkHEybnLxkhLw2So1kLNlAfv2RDDhASA5tnzxar7799qLdveBoHtuuxzmkgjBaWc1jyt1C2taylLoMccJdiubAXYFd37sZunbVdNHuilbpd9vaUxMhCyC0dXtqIt0xv3zRW9Cs6dNWq46QUw9aYUOqcp5Bn3KBqGhrtmnVdbOhW/WJ2XTNhluzq5bdeNQqPyHlEluqVE1tS2rF29pMiMQ1jOVyWV3WqiyNDNs0LePhZujjGcyR1rnYeFQYSjtbfVwNAEMc4ypmc+PCONC5CLjrk4gikaWwtRW8Z8s0zJYhdQJOok9aeReCPg1ZcbxClFGCUUxekIrPDYgZCypeHLGUiNn8XScsUwHrsMI6thz6STMOqZ0JdMAw5UjnM2RtscYQQgoUQ+XHuN/WPp2XteLqJEWUhyyd88Pj7/EBmkPMEgh0vnNrS+18wBOR6lwAdvsUxxknOdyqYk0QBr7NJuDzoSqjFEKyGhIuC3TFFTtjn97RcRONLomAiz9J0F5yNiA/UZxBZ9GcsKH3z83zWgTh9bfxcs79sPk5N0ZRuyCwr1wIytRujkdFWRbR5sajv/geD5pXg3jqDC7TdePXzePcdK4/3y0na/6vdxlGddQUntMaDfLAe1z6189RCNF17/vlILYWy6Dv9XxG7u8sMnm8vH55mJK63+8+z9bP2Q8W5Yuk1hvSUXMQZfcv9fv8vuuNmzeLl2w4sNHD6Ks/zO/G5kPv22wy8uClZ62ng1u2xsxcgwepeduI7O/poyPffOnOHv9D2e7N+9n0GbDYHVUZ9LuVrzJLSHzczJSEBHpYqLqJaj5cABVaR91SvcPNZLsjgStzuDlbzabXsy6dhtXq1cyW0zPrtVq31bK+mt4Xz7F2TWbD4ojiFaMhUbZUy92UzccE8dzlQANI9ZxlstNx7QPELhKo0qdj+QgY5TBhsj2n5mpda+TJr8WzGUxtYdJGkiDhaJVbJu7oXeqFAtKDlmxZBy15DJgkBFTfVmXNZV1zIUOxQHkmYquaoyqFTHb2VDVZ13aadYOTeRKDImrMWZDFUE1mSREYg2++to4wL6Tj3qR4bO+6dfxvFwGpExClwJUvlyCzCCdmi71z5H2HnX2Hd/BeFhD1rmQ4RUrwhsnhr9cqUeVRlkh36PmjHelS9zfuPl35T9YfAgz/wvjwb43LXL69aXwQT+M4laWhICd7ZndLhxxfsuF1doW4QFZ1Uc3yPCtqz3FqRirhDZVcw7QNH3AmW/J6wn4BNUoU46z5VxI/Ml7KDylmYkZ9gQTM5VupFMczFh4fuFp4+vKNr87dpg5MytAJWIlTsqtYLmuK8Yf7HHax0pPikfwsWRq8ZuwE1p4d6afcdwShkTqp2bd+py4wk7BEdm2W7oOfAjhl/FBYBrnkImRBTTMB7/+pqHbc1hDGLKOi39UKwf6IKHiKdQLuq9IbmGIKlWsp+f+9VCdFCWCQyywnBb7aLlz1BGi0N2a2Rk9OGrPnfDRpDtl13ojfSvbidFzjnf8A</con:value></con:property><con:property><con:name>SAMLSAU1_4</con:name><con:value>nVZrb+o4EP0rKPdjFZJAeCQqSGnpg71QWqCP7ZeV40zANHHAdoD21187QEoo7bIrISFPxjNnZo6Pfc5RHFVcj3NggiS0tI4jyt3M2tJSRt0EccJdimLgrsDuyOv33ErZdNFui1bqdlraP42aFToN39cBQke3K1DXnabf1KvIwUEQWGYtcKQr5yl0KReIipZWMa2abtZ1qzY2m676WWWz3njVSk/AuIwtXcqmtgW15i1tKsTcNYzValVeVcsJmxgV07SMl35vhKcQI619vqkoS8TaW39cDgBDFOEyTmLj3Cj4nAfcHZEJRSJlsM0VfJfLNEzHkD4BJ5NfWr4Xgi4Nk2x5iWhCCUYR+UCqP30Q0yQoedEkYURM42+LsEwVWIc11rFl01+aUYR2YqACQsaRzqfI2sYaQggMKIbS47Db0n6dNrVs65ghysOExby4/G94gC4hSuYQ6HxX1hba6QGPdKp9DtjtUhylnCzhTpF1jjDw7TQBnx6qdM8gJOse4ZKga67QGfvwDpabbnTIBLj4PwPaG84myBOKUmizhY/uKLaX9X5S/W2F9Rdx059fnc28v1sZgH3nzJCPdrM8IGVOos2O+5vB4neCp5SlfXZBe70H88a26ZkT1mZ983mR1m6GQ693+zRzJq+PQ29db3T/QvXlw+P7bQWL/uPr6Ozj9fptfDsbvJ09fDyNI+7f0bvopT968Tv8iXgTdvU8XJhR8+Wt+RpeLkdWjGz0YK+eF7f95mN9dj03aCzuak58P6Tv3u3b2aQxGH8Yc47v+8y4XPmD/kCyNC9nD3/Rtjvzo9SfARa7paJBt1O6llNC4mcxUxYS6GHm6s6V+HABVGhttUtph5tKuSOBK2e4WVvNpndlXdh1y7momo59Zdaq1Y7jWNem1/BsaycyGxQHEC8TGhKVS0nuhjY/A8Sxy4EGwPRlkkql49oPETtIoFKXDuUhSCiHcSLl2QpX1ep0UonFAjUWoT/1k4Bj34+10l0iBnTAvFAAK2iyZRU0eQiYzAko4Va85pLYXMheLNAyFZFVXqIyhVRKO1Mq61bsZs3gJJ5HoJAacRKkEZTn03nWGYNv/is6wjyzZm3FmxP3bW2H33ZtkD4BUQ5c1XMBcpTw5YJpuLVdMd8UXT+4iHbhvTQg6nDJngpG8AZJ8dMnVRRHcp5sq9rBzr0PDYXIxmFRebJgSXBO+Pzalmouz397N5YFssqLcrpcptkkbLtqMBneUGUaZsUYAU6lQr2PkzegRh7FOOk6yIEfJM/tRYipmNKRQAJiyZxStjzh/h8BV/d/V1J+ferjopBStk7AWhyzXUby7aIQ//i8wS5WftJ8L/9WCQs+J3Yk1l4eWae8/gWhE7VSV8H7N9zAiQxLpIglbD/4sQDHkheNeZNzLEISyk8FfP+lpNSppSGMk5SKbkfLDPuKmeEU73NwP52+hMlEOX+lkX9/pukkowAG+bbjJIuvLltXHQE62VPdbdKjwmt2rn4S3iK69hfzV8tenw453v4D</con:value></con:property><con:property><con:name>SAMLSAU1_5</con:name><con:value>nVZtb+I4EP4rKPuxColDgCQqSDS0t+n7Atvb2y8n1xnA28SG2Am0v/7sAFlCaY87CQl5Mp55ZubxY58LnCZOMBACMkk5a6zThImgtPaMPGMBx4KKgOEURCBJMB7c3QZO0w7wbovRiIY94+/WtBN3we2a2Il90/U8x/R93zafMWp3/S547rOtXIXIIWJCYiZ7hmOjtml3TNSe2F6gfo7TbCP002g8QSZUbOXSVLs2oNaiZ8ylXASWtVqtmqtWk2czy7FtZP24ux2TOaTY6J9vKioTZf2tP2nGQCBJSJPw1Dq3aj7nsQjGdMawzDPY5oo/ymVbtm8pn1jQ2Rej2gtxxKa8XIaYcUYJTugb1v25AznncWOQzHhG5Tz9sAhk68AmrIlJkMu+GFYd2omBaggzgU0xx2gbawRTyIARaHwfRT3jy2lTK7dOMszElGepqC//Gx5gBSR8AbEpdmVtoZ0e8Ein+udAgoiRJBe0gHtN1gUmILbTBHJ6qMZjBlO6vqVCEXQtNDprH97BctONIZ2BkP9nQHvD2QR5wkkOfWTx8P7h21nxdezBddT6JdyJDC9G3Qe3VwLYdy4N1Wg3ywNSViTa7JBR8c2LqWMtyGvrBXzuXr5duuxH/mNI5jejR76e57/eXpaD5eBbcUOuF7NO+/Iu81z7drJ8I2FnFk5frr5P5tGjl91dvPCv6c18GRLs/pXHhbdeLaOpP7q5DVeT9OcfV2f33jVa/vHIFk+0G07O8gv/KZukL9ZT+BWTlff68NZhTnghLH5222Lfr/mT00bXf0aPxbbcA/x12+7Mj/PnX0DkbqlpEA0bV2pKWH4uZtpCY3NaugYLLT5CApNGX+/S2hHkSu5oHKgZbtbI8waX6MLtID9s2b57abdbraHvoyt70B24aCcyGxQHEEPOplTn0pK7oc3nAEkaCGAxZGbBc6V0wvgk4hBL3IjYSB0CzgRMuJJnlC0RAH4l3lpyZq877qoAtISl0bjn8oE9ZIOphKymyQjVNHkEhC4oaOHWvBaK2EKqXixxkcsENQvcZJArac+0ygaO67UtQdNFAhqplfI4T6C5mC/Kzlhi8++YmIjSSjjP4oBsjtyHxR1+2/VB+cRUOwhd0AWoWcKRGwbtqnlXdefoTbQLP8hjqk+XaqrMKNkgqX/6zRVNkooou7J2uCv3Q0MttHVYVZUtLiipKF9d3ErPlQL0d4NZYtRcNvOiyMtZuG7LylR4S/fDsh1rDCRXGvU64S/ArCqKddKFUAE/SF7Z6xBzOWdjiSWkijuNcnnCC2AMQr8AIkX69anPi1pK1ToJa3nMFibq9aIRf/rAIQHRfsr8qP5Waoq/J3Yk1l4eVad6AEjKZnqlL4PXz8hBlYzxbD/4sQDHkteNVZMrLFIR6jmX8PGXhtannoEJ4TmT0dAoDfuaWeKUrwsIfju9C1PKcvVOo//+UDNpSQEC6nUnaBlfX7eBPgJstqe726RHpde+tD+T3jq6/jvze8tenw453v8H</con:value></con:property><con:property><con:name>SAMLSAU2_1</con:name><con:value>pVZtd6I6EP4rHvbjPZiA0CKneo7W9tZda7vSl3v7pSeGAGkhIAli/fU3QaVqba+7+4mTYTLzzEuemTOOkth0e5yTXNCUNRZJzLhbSTtakTM3RZxyl6GEcFdg1+tdj1yzCV20uaI1hoOO9tx2rKAFTaJD67SlW4Fj6g62HR0FZts+mbbahg2lKucFGTIuEBMdzYSGLfV1s30HT13Ddlt203Hgk9Z4IDmXtqVKU95agVrwjhYJkbkAlGXZLFvNNA+BCaEB/rkeeTgiCdK6Z6uIKkd5d62Pmz7BJI5xE6cJOAM7Omc+dz0aMiSKnKx9+Z/5ggC2gdTxOQ2/afVd4g9ZkFbHc8RSRjGK6RKp/FwTEaV+oxeHaU5FlHwahAGVYZ0ssI4Ni33TwC60Iw3tIMw50nmEjLWtCQlIThgmjfvJsKN9O65q1dW7HDEepHnCd4+/hoewOYnTjPg634S1hna8wQOZ6p4R7A4ZjgtO52SsmjVDmPB1NQk+3lTjNicBXYwolw264Aod2Ia3d1xlY0BDwsXvFGirOCsjDyguSJeXMBxS/3ZiRU83ARt7ZMngZJFN7ftOBWBbuRLUpV0d95qybqLVjddl33Me/El5PSEvy/mLCBb5YNobYeBEL3i6nF1YTrsNLlj/6enx+7/Ok7jn1PxxFc3CH36ATv8K+/QnRnBsBMbfIL98bVE0AahMXgZsDl8GF9Y4bs0Kfl8mhjeyitR8vAHZFRTREz21+/bP8+z1IRuXj+Vjf3KFZ+HjiJ7EXgo9/y0KBuh7H5Mr79paOGmnDmcL/65s8+a9YvpCsNgcVRsMB41LWSUkviYzJaG+HlSqbqbIhwvChNZVtxR3uIWkO+q7soars2ENnHbftqFl2SeDk4sLaLeg3W4bl7BnOP3LDcmsUOxBPE9ZQJUvRbmrtvkaIE5cTphPcn2eFpLpuPaFxQESqDFkE/kIUsbJXSrpuZwvQ2MK7VOMA8N3QjgNrOh1sSRaY5yKG3aT9wJB8h1ONuAOJ08IphklirhVX3PZ2FzIXMzQvBCx0ZyjJiOFpPZcsaxrWo4NOE2ymCikIEn9IibNLMqqzAC++po6wrySTi7uqtf2aVz7/zYpkDo+VQpcxdInsozkwHAxN4F8HnBrO+CN+V7hU/WwZD5FTvEKye6v9zZR/VH3yGDU8243oGvdX7j7fO49G79pYPQHzkd/6lzW8uNN8EU+wX4pa0f+nG653Wwdcn5JxutuGnGGjOasWcznRdV7ltUCuTQPVHEBNIFHcCE5+e0ufSUM1FbAUQOwBr7nvJbvQixExDyBBEnkW2lUxyM2Ho9wtfEM5SNfHLtO7biUqRNkIQ7JzmO5rSnEXy502MVKT4pv5adMc/+9YgdsbfmRccqFR1AWqpMafm+f9AVOpVkqaTvNt40fMnDI+a6wTnKNRciGmhaCfP6nofi4oyGM04KJ4UCrBNszosIp3jLivit9MFONoXovpf+/mOq0agEs+VbqV/bVeuGqJ8DCrTmzdnpw1Bh986tRs4uu+0H8UbKVp/0e7/4H</con:value></con:property><con:property><con:name>SAMLSAU2_2</con:name><con:value>nVZrb+I6EP0rKPvxCuIEKCQqSBRKN1267TYsfXxZGXsAl8QJscOjv37tACmhj8u9EhLyZHzmzMPHPhc4DGy3IwQkkkW8tA4DLtzM2jLShLsRFky4HIcgXElcv3MzcO0KcvF+i1Hyei3jj9VsTGjTxuWqM5mUa3SMy7jZIGVUtWiT0kljjIhyFSIFjwuJuWwZNrLqykH9hshx7TO3Wq0gVH02SiNIhMJWLhVk7EitRcuYSRm7prlarSqraiVKpqaNkGU+3gx8MoMQG+3zbUZZoKS98ycVCgSCgFRIFJrnZsHnnArXZ1OOZZrALhb9LBYykWMqHyrY9JuR7wXq8UmULbuYR5wRHLBXrOtzA3IW0VInmEYJk7Pw0yQspIHLsCZlYtX4N8MsUjsRqMAwEbgsZtjaYd3DBBLgBEq/772W8e20rmVbhwnmYhIloSgu/xsf4EsIohhoWezT2lE7HfCDSrXPgbgeJ0Eq2BJ+6mGNMQGx6yaQ06FKdwlM2HrAhBrQtdDszEN6R8ttNXpsCkL+nwYdNGcLMsJBCu0fA+G/jgIfd0xTUBheWf5Nn97N/f68lRE4dM4MeWu3y6OhzIdou+NqeX35/cd0NIo3ndB5WS7rt879wHw15VmDreIHgiL2eOXfDas+f7r6fe3xePNCN+F1rWdWr7sPF/VY1mpz/Dq7GOPFJhnWvp+dPTyPQ//19wjfgg2Tu/nVZGFbK6jPn4Tzy1vEMOqr+jzHg8fF7dUTvrkYXY7PlgjNrz3nn14/iMTsJaS/bjbOc9R58LwIra6TX608nQP+Rdv+zPvp+AWI3C/1GHi9Ul91CcuvxUxbGC1PMlc31uIjJHBptPUurR1uquSOUVf1cLu2UL1/We9eWl3bbtiN6iWqV1HDcaw+6jTqqLsXmS2LI4rdiE+YjqUldzs2XxMkoSuAU0jKyyhVSieMLxB7WOKSx+/VIYi4gGGk5HnTdGxnU6sysaY2pdYcnLMVr4FR+hnJW36bdCYSkoIkW3ZBku+BsJiB1m091kLNtZCqFAu8TGVgVZa4wiFVyp5okXXtWrNuChbGAWiiZhjRNIBKPIuzwphi+2+XMRGZdTDo+Hd/uv4fOztzn2Z3/G1fCOVDmXYQOqULUM2ED64Ye5/PJ3nXjq6iPXwnpUwfL1VVmTCyZVL89DYsekrySXlLbM8833BsKICbx3nl8eiSkXzq87tbSboSgfa+OQtcWVTS5TLN2tHQYpcoeFNnaiLb9IGkSqY2w2gO3MxRzJPuhJz4UfDcXqSYyhn3JZYQqvkpZcsTHgE+CP0I8NTcr099YRRCqtJJWMuPbN1APWA04y/fOMQl2k+Z79TfKkroW8c+wDqIo/JUbwDJ+FSv9H2w+WQ8SKRgmVKyKDkE/wjgo+BFY17knItUAzVOJXz+paQlqmVgQqKUS69nZIZD2cx4yk0M7pvTO5hMmfOnGvv3t1qZZSNAlAYp/wxf37iuPgJ8eiC9u6Dv1LfRQU10UbNqdj1T3/pWffuo/3bSCuza78zvLQd1Op7x9l8=</con:value></con:property><con:property><con:name>SAMLSAU2_3</con:name><con:value>nVbbbuo6EP0VlP0McQIhEBUkCqWl90JbsftSGWdCTBObxg63rz92gBQo7eEcCQl5Ml6z5uJlnwkcR7bXEgISSTkrLOKICS+zNow0YR7HggqP4RiEJ4k3aN3denYJeXi7xSj0Og3jHbBjjep2uVgORnaxAo5VrJUrbnFkQRVcxw1QvaxchUihx4TETDYMG1lOEZXV7xnVPdv1LKvkVtGbUXiFRChs5VJCxobUQjSMUMqpZ5rz+bw0L5d4MjZthCxzeHc7ICHE2GierTPKAiXNjT8p+UAgikiJ8Ng8M/d8znzhDeiYYZkmsInl/xQLmahuKh9f0PEfI98Lfo8FPFu2MeOMEhzRFdb1uQMZcr/QisY8oTKMf0zCQhq4CAtSJFaF/THMfWonAu0xTAQuihBbG6w+BJAAI1B46fcaxp/TupZtfU4wEwFPYrG//G98gM0g4lPwi2Kb1oba6YBHKtU8A+L1GIlSQWdwr4d1igmITTeBnA5VeEwgoItbKtSALoRmZ+7SO1iuq9GhYxDy/zRopzlrkFccpdDktfO3ee08tu5rD3Jopu7Sf+18Pt23by4aGYFd58yQt3a9PBjKfIjWO/rpsD5bPTk9dxV8PF2Z8jx8iGyrPSV9YVnVctwdo8VoeD2sW6swjCaXUJ/fRMFl6nxO63PWfnl5mlQHwyXq3fT9tyv/6i+6vu4Pru8fbx/P0ap/HXy+vXQqFb7EF/Hda80nT683bBVePdywKk9cfrkKFxemEoFXEaCQPvH+cDyZ31eiWt/8i166+IW44+f2Q/zRyNPZ4b9v2575QTqaAJHbpR6DXqfQVV3C8ncx0xbqF4PM1Ztq8RESmDSaepfWDi9Vckd9T/VwvbaQ071w2hdW27Zd2y1fIKeM3Hrd6qKW66D2VmTWLA4otjkLqI6lJXc9Nr8TJLEngPmQFGc8VUonjF8QO1jiQo/11SHgTMAzV/IsrFDEEz5ZfrCRVf6o+ima0Ki2mBmFey4f2EPSCiQke5ps2Xua3AdCpxS0cOu5FmqwhVS1+MSzVEZWaYZLDFIl7YlWWc+u1BxT0HgagWZqxtxPIyhNw2lWGVOs/+0iJiKzdm5bg8f39uDdzg7dj+kdfttWQvn4VDsIndI5qG7CkTsGbfP5lnf16F20hW+lPtXnS5VVJpSsmex/+poWPSb5qHwltmWebzg07IGbh3nl8fwZJfnY55e30nSlAs1tcz5x6bOUzmZp1g5Xq12i4E1dERPZ5gBIqnRq+cw/gJk5innSpZATPwie2/cppjJkA4klxGp+CtnyhFfAAIR+BfTU4C9OfWLshVSlk7CQx2ztSL1gNONfHznEI9pPmR/V35wn/lfHjmDtxFF5qkeApGysV/pCWP4wHoQrWKqkjCe74McAjgXfN+ZFzrlINVCjVMLPXwpaoxoGJoSnTPY6RmbY1c2Mp1xOwfty+gaTSXP+VqP//lgr0mwECKgXnqAZvr5yPX0E2HhHezdBv8mv20I1dF6xKraTya+zlt8u6n6dtD12zW/m75adOh3OePMf</con:value></con:property><con:property><con:name>SAMLSAU2_4</con:name><con:value>nVZtb+I4EP4rKPtxBXmBlCYqSCmUa9pCu8C2t3w5GWcA08QJtsPbr187QEpY2uNOQkKejGeemXn82DccRaHlepwDEySmpXUUUu5m1oaWMurGiBPuUhQBdwV2B173ybUqhosOW7SS325o/zgBuqrbDiobVWNcriHHLDu24ZSRPbZM67pWhYkhXTlPwadcICoammWYtvSXv6HhuFbdtWuVatUeaaVXYFzGli4VuWsHas0b2kyIxNX11WpVWVUrMZvqlmGY+t/dpwGeQYS05s2uoiwRa+79cSUADGGIKziO9Bu94HMTcHdAphSJlME+V/BZLkM3HF36BJxMv2n5Xgh8OomzZQvRmBKMQrJFqj9dELM4KHnhNGZEzKJPizANFbgMa1zGZo1+0/QitAsDFRAyjsp8hsx9rD5MgAHFUPrZ9xvat8umlm0dMkT5JGYRLy7/Gx6gSwjjBIIyP5S1h3Z5wDOdat4Adn2Kw5STJfQUWROEge+nCfjyUKUXBhOyfiJcEnTNFTr9GN7JcteNNpkCF/9nQEfD2QV5RWEKzfYmNedPKO49tJ57WyzAf/cj/67+OPIaGYBj58yQj3a3PCFlTqLdjmQRRVPcEQPz4cfSGW5n837/r96v9Vtv+j6axdu30XrsjcX66i2p3w9Xt4/bodeu98izF9Tuh9DvLqqPjAkI6PZ11Z6CpeM3uJ+OrobOm4OR8+C/49b9z19pF7bdfmc8v2obkHrd7gOw6hR53987C6JfR4/d+cioPzxGxtB++TUIyZJtNuGPeWxYotX9/jpqx428nCP8RdvhzA/S8RywOCwVDfx2qSOnhMTXYqYsJChPMlc3UeLDBVChNdUupR1uKuWOBK6c4W5tGnbnzm51qte3Vt2q394ZdtWoO47ZMTyz7t0dRGaH4gRiK6YTonIpyd3R5muAOHI50ABYeRmnUum49kXENhKo5NO+PAQx5TCMpTybyWzBQ1KH+fuqZlo0gQ2KEpIQppV6sXimz8ybCGAFUTatgij3AcsNoJRbEZtLZnMhm7FAy1SEZmWJKhRSqe1Myaxr1a5tnZMoCUFB1aM4SEOoJLMka43Od/9WGWGeWbO+4t2R+7S402+HPkifgCgHruq5BTlLOHPD1A7FfFJ07eQmOoT30oCo0yWbKhjBOyTFTx9cUSTJibKv6gA79z41FCLrp0XlyYIlwTnj83tbyrkUgOZhLAtUWVTS5TLNBlFXQsdkeF2VqRuWPgCcSonaDON3oHoeRb/oPsiBnyTP7UWIqZjRgUACIsmcUra84AEwAK4eAL7k/PrS10UhpWydgLU4Z2uF8vGiEH/5vsEuVn7S/CL/VjELPiZ2JtZRHlmnvP8FoVO1UnfB5hNu4FiGJVLFYnYc/FyAc8mLxrzJORYhCTVOBXz+paTkqaEhjOOUCr+tZYZjycxwik0C7ofTH2EyVc6faeTf32llklEAg3zccZLFV7etq44AnR7J7j7pGeVtmVXPlsprHitv1bI/+FlA1/zD/KflqE+nHG/+Bg==</con:value></con:property><con:property><con:name>SAMLSAU2_5</con:name><con:value>nVZrb+I6EP0rKPtxFewkPKOCxKMs7PK6QFu2X66MY8CQ2BA7QPfXXztASijt5V4JCXkynjkzc3zsB4EC33ZrQpBQUs4yh8Bnwo2tFSMKmcuRoMJlKCDCldgd13pd185CF523GJlOs2L8De0yLMAZMe2SUzZzHsqZZasMzaLj2F6+mMOwXFKuQkSkw4RETFYMG1p5EzrqN4Fl1y65Ti5bsguvRuaZhELFVi5ZaJxAHUTFWEq5cQHY7/fZvZPl4QLYEFpg2uuO8ZIEyKg+HCuKE4XVkz/OegQT38dZzAPwAFI+D55wx3TBkIxCcsrlfZYLAlgGyscTdPHNSPYSr8PmPF42EOOMYuTTP0j3p0fkknuZmr/gIZXL4NMiLKgDm+SATWzl2DcDpKHdGSiFMBTIFEtknWKNyJyEhGGSeRp1Ksa3+6YWb52EiIk5DwORXv43PITtiM83xDPFuawTtPsD3uhU9YFgt8OwHwm6I31N1g3CRJymSfD9oTLDkMzpoUuFIuhBaHTgEt7V8tiNJl0QIf/PgC6GcwzyjPyIVEfdeo6Oe3+J1W8QWPwwD9aDfa9hvfRrlRjApXNsSEZ7XF6RMiHRcUfIBy+FbvMQBvVXIPL+KqgPobP++eeFPA0H9Wkt/8uZ76dBuVjnhVK/Xd6t/J+iK/C+8+SMG4Nx//lHb7DrN9h2PXmePs390nf8g7NuWF+D2rAORPC9H+TBoj2Yq8zOLr/qTdjranKASzGW/rTZBu3iyBl6b7mXdn3b+t15LbW2eF9qbArwpT1cznLOs5g+rnglKecCf9p2PvPjaLYiWJ6XmgadZqalpoTk12KmLdQz57Gru9HiIyRh0qjqXVo73EjJHfVcNcPj2oL51mO+0XJKdadoF+uPMO/AYrlstWDNKtYezyJzRHEFscHZnOpcWnKPtPkaIA5cQZhHQnPHI6V0wvgiYhNJlOmwkToEnAky4UqeZyvKnNKyBPHSscK32WEdCeTgg2Nk+lwO2CCszSUJU5ps2SlNHhFMN5Ro4da8ForYQqpebNEukr6V3aEsI5GS9lCrrGvnSnkgaLDxiUYKAu5FPslulpu4M0Ac/20TYRFbMeeh5+Ljkfu0uOtv5z4oH49qB6ELqhM1S3LjhrHP1XyounDzJjqHr0Ue1adLNVWGFB+RpD+9c0WTJCHKuawz7sT92pAKDa6rSrJ5O4oTyicXt9JzpQDV82C2KLvNRrtdFI+iqJUuVOGB7geANhgTHCmNepvwNWEgiQLuuhAS4FfJE3saYiSXbCyRJIHiTiZe3vECGBOhXwAdRfrDvc+LVErVOkkO8pat4avXi0b85QMHu1j7KfNQ/e3VFN8ndiPWRR5Vp3oASMoWeqUvg7evyEGVjPHwMvitALeSp41JkxMsUhFqFkny+ZeM1qeKgTDmEZOdphEbLjUzxinfNsR9d/oQJpbl5J1G//2hZtKYApio152gcXx93br6CLDFhe6ekt6Q3obl1ApKeq1L6XXsPEyakkJX/WD+aLno0zXHq/8A</con:value></con:property><con:property><con:name>SchemaNameSpace</con:name><con:value>http://www.decellc.org/schema/2012/12/coordinator</con:value></con:property><con:property><con:name>scriptsPath_Linux</con:name><con:value>/opt/dece/scripts</con:value></con:property><con:property><con:name>scriptsPath_Windows</con:name><con:value>C:\Scripts</con:value></con:property><con:property><con:name>StreamCreateCount</con:name><con:value>8</con:value></con:property><con:property><con:name>StreamDeleteCount</con:name><con:value>2</con:value></con:property><con:property><con:name>StreamDeleteList</con:name><con:value>urn:dece:streamhandleid:org:dece:DF928D8519CE4B3084488B6708AABA4F;urn:dece:streamhandleid:org:dece:1DA93627A3544A20B55C1ABE868144DF;</con:value></con:property><con:property><con:name>streamlimit</con:name><con:value>12</con:value></con:property><con:property><con:name>streamMaxCreateExpireTimeDiffhours</con:name><con:value>24</con:value></con:property><con:property><con:name>streamMaxDisplayCount</con:name><con:value>30</con:value></con:property><con:property><con:name>streamRenewTimeHours</con:name><con:value>6</con:value></con:property><con:property><con:name>Streams_ALID</con:name><con:value>urn:dece:alid:file:EXAMPLE_ALID_Version_368915851.txt</con:value></con:property><con:property><con:name>Streams_APID</con:name><con:value>urn:dece:apid:file:AUDIO_MetadataDigitalCreate.txt%3A487811501</con:value></con:property><con:property><con:name>Streams_CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_596034053.txt</con:value></con:property><con:property><con:name>targerHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetDeviceDomain</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targethost</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostB</con:name><con:value>qa1.b.uvvu.com</con:value></con:property><con:property><con:name>targetHostC</con:name><con:value>qa1.c.uvvu.com</con:value></con:property><con:property><con:name>targetHostd</con:name><con:value>qa.d.uvvu.com</con:value></con:property><con:property><con:name>targetHostP</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetHostq</con:name><con:value>qa1.q.uvvu.com</con:value></con:property><con:property><con:name>targetHostS</con:name><con:value>qa1.s.uvvu.com</con:value></con:property><con:property><con:name>targetjdbc</con:name><con:value>jdbc:oracle:thin:deqa1/dec2010@10.31.153.5:2115/stdecqpdb_stdecqa.neustar.com</con:value></con:property><con:property><con:name>targetport</con:name><con:value>443</con:value></con:property><con:property><con:name>targetPortd</con:name><con:value>7001</con:value></con:property><con:property><con:name>targetPortq</con:name><con:value>443</con:value></con:property><con:property><con:name>targetSystem</con:name><con:value>LP1</con:value></con:property><con:property><con:name>targetURL</con:name><con:value>qa1.p.uvvu.com</con:value></con:property><con:property><con:name>targetUrlSHost</con:name><con:value>qa1.s.uvvu.com</con:value></con:property><con:property><con:name>tester</con:name><con:value>pjg</con:value></con:property><con:property><con:name>tokentype</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>TOU</con:name><con:value>qa.c.uvvu.com</con:value></con:property><con:property><con:name>TOUUrl</con:name><con:value>qa1.c.uvvu.com</con:value></con:property><con:property><con:name>TOU_US</con:name><con:value>20140811</con:value></con:property><con:property><con:name>URLEncode</con:name><con:value>NO</con:value></con:property><con:property><con:name>urnaccount</con:name><con:value>urn:dece:accountid:org:dece:</con:value></con:property><con:property><con:name>urnError</con:name><con:value>urn:dece:errorid:org:dece:</con:value></con:property><con:property><con:name>urnGenericRightsToken</con:name><con:value>urn:dece:stream:generic</con:value></con:property><con:property><con:name>urnLocker</con:name><con:value>urn:dece:rightslockerid:org:dece:</con:value></con:property><con:property><con:name>urnNode</con:name><con:value>urn:dece:org:org:dece:</con:value></con:property><con:property><con:name>urnParentalControlAllowAdult</con:name><con:value>urn:dece:type:policy:ParentalControl:AllowAdult</con:value></con:property><con:property><con:name>urnParentalControlBlockUnratedContent</con:name><con:value>urn:dece:type:policy:ParentalControl:BlockUnratedContent</con:value></con:property><con:property><con:name>urnParentalControlRating</con:name><con:value>urn:dece:type:policy:ParentalControl:RatingPolicy</con:value></con:property><con:property><con:name>urnPolicy</con:name><con:value>urn:dece:type:policy:</con:value></con:property><con:property><con:name>urnPolicyID</con:name><con:value>urn:dece:policyid:org:dece:</con:value></con:property><con:property><con:name>urnRating</con:name><con:value>urn:dece:type:rating:</con:value></con:property><con:property><con:name>urnRightsLocker</con:name><con:value/></con:property><con:property><con:name>urnRightsToken</con:name><con:value>urn:dece:rightstokenid:org:dece:</con:value></con:property><con:property><con:name>urnstream</con:name><con:value>urn:dece:streamhandleid:org:dece:</con:value></con:property><con:property><con:name>urntokenType_userpassword</con:name><con:value>urn:dece:type:tokentype:usernamepassword</con:value></con:property><con:property><con:name>urnUser</con:name><con:value>urn:dece:userid:org:dece:</con:value></con:property><con:property><con:name>userBasic1Org1Name</con:name><con:value>pjgOrg1Basic1</con:value></con:property><con:property><con:name>userBasic1Org1Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>USERID</con:name><con:value>188AE1B4619C3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDBAU1_1</con:name><con:value>FC70C6FEAC4778F7E0401F0A07992160</con:value></con:property><con:property><con:name>USERIDBAU2_1</con:name><con:value>FC70C6E5A6DD4BE4E0401F0A05995347</con:value></con:property><con:property><con:name>USERIDFAU1_1</con:name><con:value>188AE1B460E53094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDFAU2_1</con:name><con:value>14D895DF377A5C99E05305991F0A5780</con:value></con:property><con:property><con:name>USERIDFULL</con:name><con:value>urn:dece:userid:org:dece:188AE1B460E53094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDSAU1_1</con:name><con:value>188AE1B4619E3094E0533D991F0A7A41</con:value></con:property><con:property><con:name>USERIDSAU2_1</con:name><con:value>14D898B6C1196DACE05307991F0A42C7</con:value></con:property><con:property><con:name>userIndex</con:name><con:value>0</con:value></con:property><con:property><con:name>UserName</con:name><con:value>stream_list_view_20150615_013955</con:value></con:property><con:property><con:name>UserName_BAU1</con:name><con:value>stream_list_view_20150615_013952</con:value></con:property><con:property><con:name>UserName_BAU2</con:name><con:value>stream_list_view_20150615_013955</con:value></con:property><con:property><con:name>UserName_FAU1</con:name><con:value>stream_list_view_20150615_013950</con:value></con:property><con:property><con:name>UserName_FAU2</con:name><con:value>stream_list_view_20150615_013953</con:value></con:property><con:property><con:name>UserName_SAU1</con:name><con:value>stream_list_view_20150615_013951</con:value></con:property><con:property><con:name>UserName_SAU2</con:name><con:value>stream_list_view_20150615_013954</con:value></con:property><con:property><con:name>userPropertyNameArray</con:name><con:value>UserName_FAU1,UserName_SAU1,UserName_FAU2,UserName_SAU2,UserName_BAU1,UserName_BAU2</con:value></con:property><con:property><con:name>userStandard1Org1Name</con:name><con:value>pjgOrg1Standard1</con:value></con:property><con:property><con:name>userStandard1Org1Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>userStandard2Org1Name</con:name><con:value>pjgorg1standard1</con:value></con:property><con:property><con:name>userStandard2Org1Password</con:name><con:value>testing</con:value></con:property><con:property><con:name>V1</con:name><con:value>1</con:value></con:property><con:property><con:name>V2</con:name><con:value>11</con:value></con:property><con:property><con:name>versionMajor</con:name><con:value>2015</con:value></con:property><con:property><con:name>versionMinor</con:name><con:value>02</con:value></con:property><con:property><con:name>versionUrlEncode</con:name><con:value>06</con:value></con:property><con:property><con:name>ï»¿CID</con:name><con:value>urn:dece:cid:file:A_File_Name_with_NUMBERS_729880294.txt</con:value></con:property><con:property><con:name>expectHTTPcontenttype</con:name><con:value>application/xml; charset=UTF-8</con:value></con:property><con:property><con:name>FLAKYSELECTOR</con:name><con:value>without_flaky</con:value></con:property></con:properties><con:wssContainer><con:crypto><con:source>C:/Code_Repo/uv-coordinator-api-regression/Certs/QALP1/LLASP_concat.pem</con:source><con:password>123</con:password><con:type>KEYSTORE</con:type></con:crypto></con:wssContainer><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script disabled="true">if(testStepResult.getTestStep().config.type.toString() == "restrequest")
{
                byte [] tempByteArrRequest = testStepResult.getRawRequestData();
                String tempRequest = new String(tempByteArrRequest);

                log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Request>--------------------------------");
                log.info(tempRequest);
                log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Request>--------------------------------");

                byte [] tempByteArrResponse = testStepResult.getRawResponseData();
                String tempResponse = new String(tempByteArrResponse);


                log.info("-----------------------------&lt;" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
                log.info(tempResponse);
                log.info("-----------------------------&lt;/" + testStepResult.getTestStep().getName() + " Response>--------------------------------");
}
</con:script></con:eventHandlers><con:eventHandlers type="TestSuiteRunListener.afterTestCase" name="TestSuiteRunListener.afterTestCase"><con:script>log.info "#####################    Listener Started ######################################"

import com.eviware.soapui.model.testsuite.TestRunner.Status

def tS = testRunner.getTestSuite();
def tP = tS.getProject();



def myTC = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamListView tear down")

//myTC.setPropertyValue("tName",tC.getName());
//myTC.setPropertyValue("sName",tS.getName());

def runnerTC = myTC.run( null , false )

log.info "          Listner StreamListview callled               "

def activeCount=myTC.getPropertyValue("ActiveStreamCountList");
assert runnerTC.status == Status.FINISHED;

int StreamCreateCount=Integer.parseInt(tP.getPropertyValue("StreamCreateCount"));

log.info "  listner StreamCreateCount   :  $StreamCreateCount   "  

if(StreamCreateCount>0)
{
def myTC1 = tP.getTestSuiteByName("Test Cases Containing APIs").getTestCaseByName("StreamDelete for TearDown")

//	myTC1.setPropertyValue("tName",tC.getName());
//	myTC1.setPropertyValue("sName",tS.getName());


	def runnerTC1 = myTC1.run( null , false );

	assert runnerTC1.status == Status.FINISHED;
	
}
log.info "#####################    Listener Finished ######################################"

</con:script></con:eventHandlers><con:sensitiveInformation/></con:soapui-project>